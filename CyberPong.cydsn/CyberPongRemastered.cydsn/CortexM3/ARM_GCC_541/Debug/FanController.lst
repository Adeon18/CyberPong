ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"FanController.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.FanController_TachOutDMA_DmaRelease,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	FanController_TachOutDMA_DmaRelease, %function
  24              	FanController_TachOutDMA_DmaRelease:
  25              	.LFB22:
  26              		.file 1 "Generated_Source\\PSoC5\\FanController.c"
   1:Generated_Source\PSoC5/FanController.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/FanController.c **** * File Name: FanController.c
   3:Generated_Source\PSoC5/FanController.c **** * Version 4.10
   4:Generated_Source\PSoC5/FanController.c **** *
   5:Generated_Source\PSoC5/FanController.c **** * Description:
   6:Generated_Source\PSoC5/FanController.c **** *  This file contains the API files for the FanController component.
   7:Generated_Source\PSoC5/FanController.c **** *  The FanController component supports up to 16 pulse width modulator (PWM)
   8:Generated_Source\PSoC5/FanController.c **** *  controlled 4-wire fans and through an intuitive graphical interface,
   9:Generated_Source\PSoC5/FanController.c **** *  enabling designers to quickly configure the number of fans, their electro-
  10:Generated_Source\PSoC5/FanController.c **** *  mechanical properties, organization into banks (if desired) and the control
  11:Generated_Source\PSoC5/FanController.c **** *  algorithm type: firmware or hardware based.
  12:Generated_Source\PSoC5/FanController.c **** *
  13:Generated_Source\PSoC5/FanController.c **** *  Refer to AN66627 "PSoC(R) 3 and PSoC 5 - Intelligent Fan Controller" for
  14:Generated_Source\PSoC5/FanController.c **** *  more details and example projects.
  15:Generated_Source\PSoC5/FanController.c **** *
  16:Generated_Source\PSoC5/FanController.c **** * Note:
  17:Generated_Source\PSoC5/FanController.c **** *
  18:Generated_Source\PSoC5/FanController.c **** *******************************************************************************
  19:Generated_Source\PSoC5/FanController.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  20:Generated_Source\PSoC5/FanController.c **** * You may use this file only in accordance with the license, terms, conditions,
  21:Generated_Source\PSoC5/FanController.c **** * disclaimers, and limitations in the end user license agreement accompanying
  22:Generated_Source\PSoC5/FanController.c **** * the software package with which this file was provided.
  23:Generated_Source\PSoC5/FanController.c **** ********************************************************************************/
  24:Generated_Source\PSoC5/FanController.c **** 
  25:Generated_Source\PSoC5/FanController.c **** #include "FanController.h"
  26:Generated_Source\PSoC5/FanController.c **** #include "CyLib.h"
  27:Generated_Source\PSoC5/FanController.c **** 
  28:Generated_Source\PSoC5/FanController.c **** #if(CY_PSOC4)
  29:Generated_Source\PSoC5/FanController.c ****     #include "FanController_DataSend.h"
  30:Generated_Source\PSoC5/FanController.c **** 
  31:Generated_Source\PSoC5/FanController.c ****     #if(FanController_NUMBER_OF_FAN_OUTPUTS == 1u)
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 2


  32:Generated_Source\PSoC5/FanController.c ****         #include "FanController_FW_PWM1.h"
  33:Generated_Source\PSoC5/FanController.c ****     #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 2u)
  34:Generated_Source\PSoC5/FanController.c ****         #include "FanController_FW_PWM1.h"
  35:Generated_Source\PSoC5/FanController.c ****         #include "FanController_FW_PWM2.h"
  36:Generated_Source\PSoC5/FanController.c ****     #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 3u)
  37:Generated_Source\PSoC5/FanController.c ****         #include "FanController_FW_PWM1.h"
  38:Generated_Source\PSoC5/FanController.c ****         #include "FanController_FW_PWM2.h"
  39:Generated_Source\PSoC5/FanController.c ****         #include "FanController_FW_PWM3.h"
  40:Generated_Source\PSoC5/FanController.c ****     #else
  41:Generated_Source\PSoC5/FanController.c ****         #include "FanController_FW_PWM1.h"
  42:Generated_Source\PSoC5/FanController.c ****         #include "FanController_FW_PWM2.h"
  43:Generated_Source\PSoC5/FanController.c ****         #include "FanController_FW_PWM3.h"
  44:Generated_Source\PSoC5/FanController.c ****         #include "FanController_FW_PWM4.h"
  45:Generated_Source\PSoC5/FanController.c ****     #endif /* (FanController_NUMBER_OF_FAN_OUTPUTS == 1u) */
  46:Generated_Source\PSoC5/FanController.c **** 
  47:Generated_Source\PSoC5/FanController.c **** #endif /* (CY_PSOC4) */
  48:Generated_Source\PSoC5/FanController.c **** 
  49:Generated_Source\PSoC5/FanController.c **** #if(FanController_IS_AUTO_FIRMWARE_MODE)
  50:Generated_Source\PSoC5/FanController.c ****     #include "FanController_PID_ISR.h"
  51:Generated_Source\PSoC5/FanController.c **** #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
  52:Generated_Source\PSoC5/FanController.c **** 
  53:Generated_Source\PSoC5/FanController.c **** 
  54:Generated_Source\PSoC5/FanController.c **** /*******************************************************************************
  55:Generated_Source\PSoC5/FanController.c **** * Variables
  56:Generated_Source\PSoC5/FanController.c **** *
  57:Generated_Source\PSoC5/FanController.c **** * Fan Control Data Structure declaration and initialization can be found at the
  58:Generated_Source\PSoC5/FanController.c **** * end of this file due to its large size.
  59:Generated_Source\PSoC5/FanController.c **** ********************************************************************************/
  60:Generated_Source\PSoC5/FanController.c **** uint8   FanController_initVar = 0u;
  61:Generated_Source\PSoC5/FanController.c **** 
  62:Generated_Source\PSoC5/FanController.c **** #if (CY_PSOC4)
  63:Generated_Source\PSoC5/FanController.c ****     uint16 FanController_alertMask = 0u;
  64:Generated_Source\PSoC5/FanController.c ****     uint16 FanController_stallStatus = 0u;
  65:Generated_Source\PSoC5/FanController.c **** #else
  66:Generated_Source\PSoC5/FanController.c ****     
  67:Generated_Source\PSoC5/FanController.c ****     /* Stores channel number of Tachometer out DMA */
  68:Generated_Source\PSoC5/FanController.c ****     static uint8 FanController_TachOutDMA_channel = 0u;
  69:Generated_Source\PSoC5/FanController.c **** 
  70:Generated_Source\PSoC5/FanController.c ****     #if(FanController_IS_AUTO_HARDWARE_MODE)
  71:Generated_Source\PSoC5/FanController.c ****         
  72:Generated_Source\PSoC5/FanController.c ****         /* Stores channel number of Tachometer in DMA */
  73:Generated_Source\PSoC5/FanController.c ****         static uint8 FanController_TachInDMA_channel = 0u;
  74:Generated_Source\PSoC5/FanController.c **** 
  75:Generated_Source\PSoC5/FanController.c ****     #endif /* FanController_IS_AUTO_HARDWARE_MODE */
  76:Generated_Source\PSoC5/FanController.c **** 
  77:Generated_Source\PSoC5/FanController.c **** #endif /* (CY_PSOC4) */
  78:Generated_Source\PSoC5/FanController.c **** 
  79:Generated_Source\PSoC5/FanController.c **** /* Arrays for storing PID parameters and saturation ranges */
  80:Generated_Source\PSoC5/FanController.c **** #if(FanController_IS_AUTO_FIRMWARE_MODE)
  81:Generated_Source\PSoC5/FanController.c ****     int16 FanController_pidA1[FanController_NUMBER_OF_FANS];
  82:Generated_Source\PSoC5/FanController.c ****     int16 FanController_pidA2[FanController_NUMBER_OF_FANS];
  83:Generated_Source\PSoC5/FanController.c ****     int16 FanController_pidA3[FanController_NUMBER_OF_FANS];
  84:Generated_Source\PSoC5/FanController.c **** 
  85:Generated_Source\PSoC5/FanController.c ****     uint32 FanController_outputSatL[FanController_NUMBER_OF_FANS];
  86:Generated_Source\PSoC5/FanController.c ****     uint32 FanController_outputSatH[FanController_NUMBER_OF_FANS];
  87:Generated_Source\PSoC5/FanController.c **** #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
  88:Generated_Source\PSoC5/FanController.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 3


  89:Generated_Source\PSoC5/FanController.c **** #if(!FanController_IS_MANUAL_MODE)
  90:Generated_Source\PSoC5/FanController.c ****     /* An array to store desired fans speeds */
  91:Generated_Source\PSoC5/FanController.c ****     uint16 FanController_desiredFansSpeed[FanController_NUMBER_OF_FANS];
  92:Generated_Source\PSoC5/FanController.c **** #endif /* (!FanController_IS_MANUAL_MODE) */
  93:Generated_Source\PSoC5/FanController.c **** 
  94:Generated_Source\PSoC5/FanController.c **** 
  95:Generated_Source\PSoC5/FanController.c **** /*******************************************************************************
  96:Generated_Source\PSoC5/FanController.c **** * Private API Prototypes
  97:Generated_Source\PSoC5/FanController.c **** ********************************************************************************/
  98:Generated_Source\PSoC5/FanController.c **** #if (!CY_PSOC4)
  99:Generated_Source\PSoC5/FanController.c ****     static void  FanController_SetupDMA(void) CYREENTRANT;
 100:Generated_Source\PSoC5/FanController.c ****     static uint8 FanController_TachOutDMA_DmaInitialize(uint8 burstCount, uint8 requestPerBurst,
 101:Generated_Source\PSoC5/FanController.c ****                                                     uint16 upperSrcAddress, uint16 upperDestAddress
 102:Generated_Source\PSoC5/FanController.c ****     static void  FanController_TachOutDMA_DmaRelease(void) CYREENTRANT;
 103:Generated_Source\PSoC5/FanController.c **** 
 104:Generated_Source\PSoC5/FanController.c ****     #if(FanController_IS_AUTO_HARDWARE_MODE)
 105:Generated_Source\PSoC5/FanController.c **** 
 106:Generated_Source\PSoC5/FanController.c ****         static uint8 FanController_TachInDMA_DmaInitialize(uint8 burstCount, uint8 requestPerBurst,
 107:Generated_Source\PSoC5/FanController.c ****                                                         uint16 upperSrcAddress, uint16 upperDestAdd
 108:Generated_Source\PSoC5/FanController.c ****         static void  FanController_TachInDMA_DmaRelease(void) CYREENTRANT;
 109:Generated_Source\PSoC5/FanController.c **** 
 110:Generated_Source\PSoC5/FanController.c ****     #endif /* FanController_IS_AUTO_HARDWARE_MODE */
 111:Generated_Source\PSoC5/FanController.c **** 
 112:Generated_Source\PSoC5/FanController.c **** #endif /* (!CY_PSOC4) */
 113:Generated_Source\PSoC5/FanController.c **** 
 114:Generated_Source\PSoC5/FanController.c **** 
 115:Generated_Source\PSoC5/FanController.c **** /******************************************************************************
 116:Generated_Source\PSoC5/FanController.c **** * Function Name: FanController_Start
 117:Generated_Source\PSoC5/FanController.c **** *******************************************************************************
 118:Generated_Source\PSoC5/FanController.c **** *
 119:Generated_Source\PSoC5/FanController.c **** * Summary:
 120:Generated_Source\PSoC5/FanController.c **** *  Initializes component if not already initialized, then re-enables it.
 121:Generated_Source\PSoC5/FanController.c **** *
 122:Generated_Source\PSoC5/FanController.c **** * Parameters:
 123:Generated_Source\PSoC5/FanController.c **** *  None
 124:Generated_Source\PSoC5/FanController.c **** *
 125:Generated_Source\PSoC5/FanController.c **** * Return:
 126:Generated_Source\PSoC5/FanController.c **** *  None
 127:Generated_Source\PSoC5/FanController.c **** *
 128:Generated_Source\PSoC5/FanController.c **** * Side Effects:
 129:Generated_Source\PSoC5/FanController.c **** *  None
 130:Generated_Source\PSoC5/FanController.c **** *
 131:Generated_Source\PSoC5/FanController.c **** ****************************************************************************/
 132:Generated_Source\PSoC5/FanController.c **** void FanController_Start(void) 
 133:Generated_Source\PSoC5/FanController.c **** {
 134:Generated_Source\PSoC5/FanController.c ****     /* If not already initialized, then initialize hardware and variables */
 135:Generated_Source\PSoC5/FanController.c ****     if(FanController_initVar == 0u)
 136:Generated_Source\PSoC5/FanController.c ****     {
 137:Generated_Source\PSoC5/FanController.c ****         FanController_Init();
 138:Generated_Source\PSoC5/FanController.c ****         FanController_initVar = 1u;
 139:Generated_Source\PSoC5/FanController.c ****     }
 140:Generated_Source\PSoC5/FanController.c ****     FanController_Enable();
 141:Generated_Source\PSoC5/FanController.c **** }
 142:Generated_Source\PSoC5/FanController.c **** 
 143:Generated_Source\PSoC5/FanController.c **** 
 144:Generated_Source\PSoC5/FanController.c **** /******************************************************************************
 145:Generated_Source\PSoC5/FanController.c **** * Function Name: FanController_Stop
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 4


 146:Generated_Source\PSoC5/FanController.c **** *******************************************************************************
 147:Generated_Source\PSoC5/FanController.c **** *
 148:Generated_Source\PSoC5/FanController.c **** * Summary:
 149:Generated_Source\PSoC5/FanController.c **** *  Stop the fan controller component.  Disables all hardware sub-components,
 150:Generated_Source\PSoC5/FanController.c **** *  drives fan outputs high and de-asserts the alert pin.
 151:Generated_Source\PSoC5/FanController.c **** *
 152:Generated_Source\PSoC5/FanController.c **** * Parameters:
 153:Generated_Source\PSoC5/FanController.c **** *  None
 154:Generated_Source\PSoC5/FanController.c **** *
 155:Generated_Source\PSoC5/FanController.c **** * Return:
 156:Generated_Source\PSoC5/FanController.c **** *  None
 157:Generated_Source\PSoC5/FanController.c **** *
 158:Generated_Source\PSoC5/FanController.c **** * Side Effects:
 159:Generated_Source\PSoC5/FanController.c **** *  All PWM outputs to fans will be driven high (100% duty cycle).
 160:Generated_Source\PSoC5/FanController.c **** *  Alert output de-asserted.
 161:Generated_Source\PSoC5/FanController.c **** *
 162:Generated_Source\PSoC5/FanController.c **** ******************************************************************************/
 163:Generated_Source\PSoC5/FanController.c **** void FanController_Stop(void) 
 164:Generated_Source\PSoC5/FanController.c **** {
 165:Generated_Source\PSoC5/FanController.c ****     /* Turn off the hardware sub-components */
 166:Generated_Source\PSoC5/FanController.c ****     FanController_GLOBAL_CONTROL_REG = 0u;
 167:Generated_Source\PSoC5/FanController.c **** 
 168:Generated_Source\PSoC5/FanController.c ****     /* De-assert the alert pin */
 169:Generated_Source\PSoC5/FanController.c ****     FanController_DisableAlert();
 170:Generated_Source\PSoC5/FanController.c **** 
 171:Generated_Source\PSoC5/FanController.c ****     #if (!CY_PSOC4)
 172:Generated_Source\PSoC5/FanController.c **** 
 173:Generated_Source\PSoC5/FanController.c ****         /* Release DMA resources */
 174:Generated_Source\PSoC5/FanController.c ****         FanController_TachOutDMA_DmaRelease();
 175:Generated_Source\PSoC5/FanController.c **** 
 176:Generated_Source\PSoC5/FanController.c ****         #if(FanController_IS_AUTO_HARDWARE_MODE)
 177:Generated_Source\PSoC5/FanController.c ****             FanController_TachInDMA_DmaRelease();
 178:Generated_Source\PSoC5/FanController.c ****         #endif /* FanController_IS_AUTO_HARDWARE_MODE */
 179:Generated_Source\PSoC5/FanController.c **** 
 180:Generated_Source\PSoC5/FanController.c ****     #else
 181:Generated_Source\PSoC5/FanController.c **** 
 182:Generated_Source\PSoC5/FanController.c ****         /* Disable PWMs */
 183:Generated_Source\PSoC5/FanController.c ****         #if(FanController_NUMBER_OF_FAN_OUTPUTS == 1u)
 184:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM1_Stop();
 185:Generated_Source\PSoC5/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 2u)
 186:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM1_Stop();
 187:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM2_Stop();
 188:Generated_Source\PSoC5/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 3u)
 189:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM1_Stop();
 190:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM2_Stop();
 191:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM3_Stop();
 192:Generated_Source\PSoC5/FanController.c ****         #else
 193:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM1_Stop();
 194:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM2_Stop();
 195:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM3_Stop();
 196:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM4_Stop();
 197:Generated_Source\PSoC5/FanController.c ****         #endif /* (FanController_NUMBER_OF_FAN_OUTPUTS == 1u) */
 198:Generated_Source\PSoC5/FanController.c **** 
 199:Generated_Source\PSoC5/FanController.c ****     #endif /* (!CY_PSOC4) */
 200:Generated_Source\PSoC5/FanController.c **** }
 201:Generated_Source\PSoC5/FanController.c **** 
 202:Generated_Source\PSoC5/FanController.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 5


 203:Generated_Source\PSoC5/FanController.c **** /******************************************************************************
 204:Generated_Source\PSoC5/FanController.c **** * Function Name: FanController_Init
 205:Generated_Source\PSoC5/FanController.c **** *******************************************************************************
 206:Generated_Source\PSoC5/FanController.c **** *
 207:Generated_Source\PSoC5/FanController.c **** * Summary:
 208:Generated_Source\PSoC5/FanController.c **** *  Sets up DMA channels and transaction descriptors. Configures PWMs and
 209:Generated_Source\PSoC5/FanController.c **** *  Tachometer hardware blocks. Also it configures interrupts if they are used
 210:Generated_Source\PSoC5/FanController.c **** *  in the component.
 211:Generated_Source\PSoC5/FanController.c **** *
 212:Generated_Source\PSoC5/FanController.c **** * Parameters:
 213:Generated_Source\PSoC5/FanController.c **** *  None
 214:Generated_Source\PSoC5/FanController.c **** *
 215:Generated_Source\PSoC5/FanController.c **** * Return:
 216:Generated_Source\PSoC5/FanController.c **** *  None
 217:Generated_Source\PSoC5/FanController.c **** *
 218:Generated_Source\PSoC5/FanController.c **** * Side Effects:
 219:Generated_Source\PSoC5/FanController.c **** *  Allocates DMA channels and transaction descriptors (TDs).
 220:Generated_Source\PSoC5/FanController.c **** *
 221:Generated_Source\PSoC5/FanController.c **** ******************************************************************************/
 222:Generated_Source\PSoC5/FanController.c **** void FanController_Init(void) 
 223:Generated_Source\PSoC5/FanController.c **** {
 224:Generated_Source\PSoC5/FanController.c ****     uint8 counti;
 225:Generated_Source\PSoC5/FanController.c ****     uint8 interruptState;
 226:Generated_Source\PSoC5/FanController.c **** 
 227:Generated_Source\PSoC5/FanController.c ****     #if (!CY_PSOC4)
 228:Generated_Source\PSoC5/FanController.c ****         
 229:Generated_Source\PSoC5/FanController.c ****         /* Performs configuration of DMA used in the component */
 230:Generated_Source\PSoC5/FanController.c ****         FanController_SetupDMA();
 231:Generated_Source\PSoC5/FanController.c **** 
 232:Generated_Source\PSoC5/FanController.c ****         /***********************************************************************
 233:Generated_Source\PSoC5/FanController.c ****         * Initialize the PWMs
 234:Generated_Source\PSoC5/FanController.c ****         ***********************************************************************/
 235:Generated_Source\PSoC5/FanController.c ****         #if(FanController_IS_AUTO_HARDWARE_MODE)
 236:Generated_Source\PSoC5/FanController.c **** 
 237:Generated_Source\PSoC5/FanController.c ****             /* Configure hardware controlled PWMs */
 238:Generated_Source\PSoC5/FanController.c ****             for (counti = 0u; counti < FanController_NUMBER_OF_FANS; counti++)
 239:Generated_Source\PSoC5/FanController.c ****             {
 240:Generated_Source\PSoC5/FanController.c ****                 /* 8-bit hardware controlled PWM */
 241:Generated_Source\PSoC5/FanController.c ****                 #if(FanController_PWMRES == FanController_PWMRES_EIGHTBIT)
 242:Generated_Source\PSoC5/FanController.c ****                     /* Set max PWM period */
 243:Generated_Source\PSoC5/FanController.c ****                     CY_SET_REG8(FanController_fanDriverRegs[counti].pwmPeriodReg, FanController_PWM
 244:Generated_Source\PSoC5/FanController.c ****                     /* Set max PWM duty cycle (must be <= PWM period) */
 245:Generated_Source\PSoC5/FanController.c ****                     CY_SET_REG8(FanController_fanDriverRegs[counti].pwmMaxDutyReg, FanController_PW
 246:Generated_Source\PSoC5/FanController.c ****                 /* 10-bit hardware controlled PWM */
 247:Generated_Source\PSoC5/FanController.c ****                 #else
 248:Generated_Source\PSoC5/FanController.c ****                     /* Set max PWM period */
 249:Generated_Source\PSoC5/FanController.c ****                     CY_SET_REG16(FanController_fanDriverRegs[counti].pwmPeriodReg, FanController_PW
 250:Generated_Source\PSoC5/FanController.c ****                     /* Set max PWM duty cycle (must be <= PWM period) */
 251:Generated_Source\PSoC5/FanController.c ****                     CY_SET_REG16(FanController_fanDriverRegs[counti].pwmMaxDutyReg, FanController_P
 252:Generated_Source\PSoC5/FanController.c ****                 #endif /* FanController_PWMRES == FanController_PWMRES_EIGHTBIT */
 253:Generated_Source\PSoC5/FanController.c **** 
 254:Generated_Source\PSoC5/FanController.c ****                 /* Set initial duty cycle */
 255:Generated_Source\PSoC5/FanController.c ****                 FanController_SetDutyCycle((counti + 1u), FanController_fanProperties[counti].initD
 256:Generated_Source\PSoC5/FanController.c ****                 /* Set initial speed */
 257:Generated_Source\PSoC5/FanController.c ****                 FanController_SetDesiredSpeed((counti + 1u), FanController_fanProperties[counti].in
 258:Generated_Source\PSoC5/FanController.c **** 
 259:Generated_Source\PSoC5/FanController.c ****                 /* Enable cnt7 to track speed regulation errors */
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 6


 260:Generated_Source\PSoC5/FanController.c ****                 CY_SET_REG8(FanController_fanDriverRegs[counti].errorCountReg,
 261:Generated_Source\PSoC5/FanController.c ****                     CY_GET_REG8(FanController_fanDriverRegs[counti].errorCountReg) | FanController_
 262:Generated_Source\PSoC5/FanController.c ****             }
 263:Generated_Source\PSoC5/FanController.c **** 
 264:Generated_Source\PSoC5/FanController.c ****         #else
 265:Generated_Source\PSoC5/FanController.c **** 
 266:Generated_Source\PSoC5/FanController.c ****             /* Configure firmware controlled PWMs */
 267:Generated_Source\PSoC5/FanController.c ****             for (counti = 0u; counti < FanController_FANPWM_COUNT; counti++)
 268:Generated_Source\PSoC5/FanController.c ****             {
 269:Generated_Source\PSoC5/FanController.c ****                 /* 8-bit firmware controlled PWM */
 270:Generated_Source\PSoC5/FanController.c ****                 #if (FanController_PWMRES == FanController_PWMRES_EIGHTBIT)
 271:Generated_Source\PSoC5/FanController.c ****                     CY_SET_REG8(FanController_fanPwmInitRegs[counti].pwmPeriodReg, FanController_PW
 272:Generated_Source\PSoC5/FanController.c **** 
 273:Generated_Source\PSoC5/FanController.c ****                     interruptState = CyEnterCriticalSection();
 274:Generated_Source\PSoC5/FanController.c **** 
 275:Generated_Source\PSoC5/FanController.c ****                     CY_SET_REG8(FanController_fanPwmInitRegs[counti].pwmAuxControlReg,
 276:Generated_Source\PSoC5/FanController.c ****                         CY_GET_REG8(FanController_fanPwmInitRegs[counti].pwmAuxControlReg) |
 277:Generated_Source\PSoC5/FanController.c ****                             FanController_FANPWM_AUX_CTRL_FIFO0_CLR_8);
 278:Generated_Source\PSoC5/FanController.c **** 
 279:Generated_Source\PSoC5/FanController.c ****                     CyExitCriticalSection(interruptState);
 280:Generated_Source\PSoC5/FanController.c **** 
 281:Generated_Source\PSoC5/FanController.c ****                 /* 10-bit firmware controlled PWM */
 282:Generated_Source\PSoC5/FanController.c ****                 #else
 283:Generated_Source\PSoC5/FanController.c ****                     CY_SET_REG16(FanController_fanPwmInitRegs[counti].pwmPeriodReg, FanController_P
 284:Generated_Source\PSoC5/FanController.c **** 
 285:Generated_Source\PSoC5/FanController.c ****                     interruptState = CyEnterCriticalSection();
 286:Generated_Source\PSoC5/FanController.c **** 
 287:Generated_Source\PSoC5/FanController.c ****                     CY_SET_REG16(FanController_fanPwmInitRegs[counti].pwmAuxControlReg,
 288:Generated_Source\PSoC5/FanController.c ****                         CY_GET_REG16(FanController_fanPwmInitRegs[counti].pwmAuxControlReg) |
 289:Generated_Source\PSoC5/FanController.c ****                             FanController_FANPWM_AUX_CTRL_FIFO0_CLR_10);
 290:Generated_Source\PSoC5/FanController.c **** 
 291:Generated_Source\PSoC5/FanController.c ****                     CyExitCriticalSection(interruptState);
 292:Generated_Source\PSoC5/FanController.c **** 
 293:Generated_Source\PSoC5/FanController.c ****                 #endif /* FanController_PWMRES == FanController_PWMRES_EIGHTBIT */
 294:Generated_Source\PSoC5/FanController.c ****             }
 295:Generated_Source\PSoC5/FanController.c **** 
 296:Generated_Source\PSoC5/FanController.c ****             for (counti = 0u; counti < FanController_NUMBER_OF_FAN_OUTPUTS; counti++)
 297:Generated_Source\PSoC5/FanController.c ****             {
 298:Generated_Source\PSoC5/FanController.c ****                 /* Set Desired speed to initial RPM from the customizer */
 299:Generated_Source\PSoC5/FanController.c ****                 FanController_SetDesiredSpeed((counti + 1u), FanController_fanProperties[counti].in
 300:Generated_Source\PSoC5/FanController.c ****             }
 301:Generated_Source\PSoC5/FanController.c **** 
 302:Generated_Source\PSoC5/FanController.c ****         #endif /* ((FanController_IS_AUTO_HARDWARE_MODE) || (FanController_IS_AUTO_FIRMWARE_MODE)) 
 303:Generated_Source\PSoC5/FanController.c **** 
 304:Generated_Source\PSoC5/FanController.c ****     #else
 305:Generated_Source\PSoC5/FanController.c **** 
 306:Generated_Source\PSoC5/FanController.c ****         /***********************************************************************
 307:Generated_Source\PSoC5/FanController.c ****         * Configure the PWMs (TCPWMs)
 308:Generated_Source\PSoC5/FanController.c ****         ***********************************************************************/
 309:Generated_Source\PSoC5/FanController.c **** 
 310:Generated_Source\PSoC5/FanController.c ****         /* Initialize PWMs */
 311:Generated_Source\PSoC5/FanController.c ****         #if(FanController_NUMBER_OF_FAN_OUTPUTS == 1u)
 312:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM1_Init();
 313:Generated_Source\PSoC5/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 2u)
 314:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM1_Init();
 315:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM2_Init();
 316:Generated_Source\PSoC5/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 3u)
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 7


 317:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM1_Init();
 318:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM2_Init();
 319:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM3_Init();
 320:Generated_Source\PSoC5/FanController.c ****         #else
 321:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM1_Init();
 322:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM2_Init();
 323:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM3_Init();
 324:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM4_Init();
 325:Generated_Source\PSoC5/FanController.c ****         #endif /* (FanController_NUMBER_OF_FAN_OUTPUTS == 1u) */
 326:Generated_Source\PSoC5/FanController.c **** 
 327:Generated_Source\PSoC5/FanController.c ****         for (counti = 0u; counti < FanController_NUMBER_OF_FAN_OUTPUTS; counti++)
 328:Generated_Source\PSoC5/FanController.c ****         {
 329:Generated_Source\PSoC5/FanController.c ****             /* Set the hard-coded PWM period */
 330:Generated_Source\PSoC5/FanController.c ****             CY_SET_REG32(FanController_fanPwmInitRegs[counti].pwmPeriodReg, FanController_PWM_PERIO
 331:Generated_Source\PSoC5/FanController.c **** 
 332:Generated_Source\PSoC5/FanController.c ****             #if(FanController_IS_AUTO_FIRMWARE_MODE)
 333:Generated_Source\PSoC5/FanController.c ****                 /* In Auto Firmware Mode it is required to set duty cycle directly on the
 334:Generated_Source\PSoC5/FanController.c ****                 * start.
 335:Generated_Source\PSoC5/FanController.c ****                 */
 336:Generated_Source\PSoC5/FanController.c ****                 FanController_SetDutyCycle((counti + 1u), FanController_fanProperties[counti].initD
 337:Generated_Source\PSoC5/FanController.c ****             #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
 338:Generated_Source\PSoC5/FanController.c **** 
 339:Generated_Source\PSoC5/FanController.c ****             /* Set Desired speed to initial RPM from the customizer */
 340:Generated_Source\PSoC5/FanController.c ****             FanController_SetDesiredSpeed((counti + 1u), FanController_fanProperties[counti].initRp
 341:Generated_Source\PSoC5/FanController.c ****         }
 342:Generated_Source\PSoC5/FanController.c **** 
 343:Generated_Source\PSoC5/FanController.c ****     #endif /* (!CY_PSOC4) */
 344:Generated_Source\PSoC5/FanController.c **** 
 345:Generated_Source\PSoC5/FanController.c ****     /***********************************************************************
 346:Generated_Source\PSoC5/FanController.c ****     * Initialize the Tachometer
 347:Generated_Source\PSoC5/FanController.c ****     ***********************************************************************/
 348:Generated_Source\PSoC5/FanController.c **** 
 349:Generated_Source\PSoC5/FanController.c ****     interruptState = CyEnterCriticalSection();
 350:Generated_Source\PSoC5/FanController.c ****     #if (CY_PSOC4)
 351:Generated_Source\PSoC5/FanController.c ****         /* Clear the tachometer FIFO */
 352:Generated_Source\PSoC5/FanController.c ****         FanController_TACH_CUNTER_AUX_CTL_REG |= FanController_TACH_COUNTER_FIFO_CLR;
 353:Generated_Source\PSoC5/FanController.c ****         FanController_TACH_CUNTER_AUX_CTL_REG &= ((uint8) ~FanController_TACH_COUNTER_FIFO_CLR);
 354:Generated_Source\PSoC5/FanController.c ****     #else
 355:Generated_Source\PSoC5/FanController.c ****         /* Enable count7 hardware block to drive fan address */
 356:Generated_Source\PSoC5/FanController.c ****         FanController_TACH_FAN_COUNTR_AUX_CTL_REG |= FanController_COUNT7_ENABLE;
 357:Generated_Source\PSoC5/FanController.c ****     #endif /* (!CY_PSOC4) */
 358:Generated_Source\PSoC5/FanController.c ****     (void)CyExitCriticalSection(interruptState);
 359:Generated_Source\PSoC5/FanController.c ****     
 360:Generated_Source\PSoC5/FanController.c ****     /* Initialize glitch filter counter */
 361:Generated_Source\PSoC5/FanController.c ****     FanController_TACH_GLITCH_FILTER_PERIOD_REG = FanController_GLITCH_FILTER_VAL;
 362:Generated_Source\PSoC5/FanController.c **** 
 363:Generated_Source\PSoC5/FanController.c ****     #if((!FanController_IS_MANUAL_MODE) && (FanController_DAMPING_FACTOR > 0u))
 364:Generated_Source\PSoC5/FanController.c **** 
 365:Generated_Source\PSoC5/FanController.c ****         /* Set the divider by 10 */
 366:Generated_Source\PSoC5/FanController.c ****         FanController_DAMPING_COUNTER_DIVIDER_REG = FanController_DAMPING_FACTOR_DIVIDER_VAL;
 367:Generated_Source\PSoC5/FanController.c **** 
 368:Generated_Source\PSoC5/FanController.c ****         /* Init lower 8 bits of 16-bit Damping Factor Counter */
 369:Generated_Source\PSoC5/FanController.c ****          FanController_TACH_DAMPING_PERIOD_LOW_LSB_REG = FanController_DAMPING_FACTOR_PERIOD_LOW;
 370:Generated_Source\PSoC5/FanController.c **** 
 371:Generated_Source\PSoC5/FanController.c ****         /* Init high 8 bits of 16-bit Damping Factor Counter */
 372:Generated_Source\PSoC5/FanController.c ****         FanController_TACH_DAMPING_PERIOD_HIGH_LSB_REG = FanController_DAMPING_FACTOR_PERIOD_HIGH;
 373:Generated_Source\PSoC5/FanController.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 8


 374:Generated_Source\PSoC5/FanController.c ****     #endif /* ((!FanController_IS_MANUAL_MODE) && (FanController_DAMPING_FACTOR > 0u)) */
 375:Generated_Source\PSoC5/FanController.c **** 
 376:Generated_Source\PSoC5/FanController.c ****     /***********************************************************************
 377:Generated_Source\PSoC5/FanController.c ****     * Initialize the Alert Mask Register based on customizer defaults
 378:Generated_Source\PSoC5/FanController.c ****     ***********************************************************************/
 379:Generated_Source\PSoC5/FanController.c ****     FanController_SetAlertMask(FanController_INIT_ALERT_MASK);
 380:Generated_Source\PSoC5/FanController.c **** 
 381:Generated_Source\PSoC5/FanController.c ****     #if(FanController_IS_AUTO_FIRMWARE_MODE)
 382:Generated_Source\PSoC5/FanController.c ****         /***********************************************************************
 383:Generated_Source\PSoC5/FanController.c ****         * Set PID coefficients for fans
 384:Generated_Source\PSoC5/FanController.c ****         ***********************************************************************/
 385:Generated_Source\PSoC5/FanController.c ****         for(counti = 0u; counti < FanController_NUMBER_OF_FANS; counti++)
 386:Generated_Source\PSoC5/FanController.c ****         {
 387:Generated_Source\PSoC5/FanController.c ****             /* Disable interrupts while updating PID constants */
 388:Generated_Source\PSoC5/FanController.c ****             interruptState = CyEnterCriticalSection();
 389:Generated_Source\PSoC5/FanController.c **** 
 390:Generated_Source\PSoC5/FanController.c ****             /* Initialize both PID parameters and output saturation with
 391:Generated_Source\PSoC5/FanController.c ****             * default values from the customizer.
 392:Generated_Source\PSoC5/FanController.c ****             */
 393:Generated_Source\PSoC5/FanController.c ****             FanController_pidA1[counti] = FanController_PID_A1;
 394:Generated_Source\PSoC5/FanController.c ****             FanController_pidA2[counti] = FanController_PID_A2;
 395:Generated_Source\PSoC5/FanController.c ****             FanController_pidA3[counti] = FanController_PID_A3;
 396:Generated_Source\PSoC5/FanController.c **** 
 397:Generated_Source\PSoC5/FanController.c ****             FanController_outputSatL[counti] = FanController_PID_OUTPUT_SAT_L;
 398:Generated_Source\PSoC5/FanController.c ****             FanController_outputSatH[counti] = FanController_PID_OUTPUT_SAT_H;
 399:Generated_Source\PSoC5/FanController.c ****             CyExitCriticalSection(interruptState);
 400:Generated_Source\PSoC5/FanController.c ****         }
 401:Generated_Source\PSoC5/FanController.c ****     #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
 402:Generated_Source\PSoC5/FanController.c **** 
 403:Generated_Source\PSoC5/FanController.c ****     /***********************************************************************
 404:Generated_Source\PSoC5/FanController.c ****     * Set up required interrupts
 405:Generated_Source\PSoC5/FanController.c ****     ***********************************************************************/
 406:Generated_Source\PSoC5/FanController.c ****     #if(CY_PSOC4)
 407:Generated_Source\PSoC5/FanController.c ****         FanController_DataSend_StartEx(&FanController_DATA_SEND_ISR);
 408:Generated_Source\PSoC5/FanController.c ****     #endif /* (CY_PSOC4) */
 409:Generated_Source\PSoC5/FanController.c **** 
 410:Generated_Source\PSoC5/FanController.c ****     #if(FanController_IS_AUTO_FIRMWARE_MODE)
 411:Generated_Source\PSoC5/FanController.c ****         FanController_PID_ISR_StartEx(&FanController_PID_CONTROL_ISR);
 412:Generated_Source\PSoC5/FanController.c ****     #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
 413:Generated_Source\PSoC5/FanController.c **** }
 414:Generated_Source\PSoC5/FanController.c **** 
 415:Generated_Source\PSoC5/FanController.c **** 
 416:Generated_Source\PSoC5/FanController.c **** /******************************************************************************
 417:Generated_Source\PSoC5/FanController.c **** * Function Name: FanController_Enable
 418:Generated_Source\PSoC5/FanController.c **** *******************************************************************************
 419:Generated_Source\PSoC5/FanController.c **** *
 420:Generated_Source\PSoC5/FanController.c **** * Summary:
 421:Generated_Source\PSoC5/FanController.c **** *  Enables hardware blocks in the component.
 422:Generated_Source\PSoC5/FanController.c **** *
 423:Generated_Source\PSoC5/FanController.c **** * Parameters:
 424:Generated_Source\PSoC5/FanController.c **** *  None
 425:Generated_Source\PSoC5/FanController.c **** *
 426:Generated_Source\PSoC5/FanController.c **** * Return:
 427:Generated_Source\PSoC5/FanController.c **** *  None
 428:Generated_Source\PSoC5/FanController.c **** *
 429:Generated_Source\PSoC5/FanController.c **** * Side Effects:
 430:Generated_Source\PSoC5/FanController.c **** *  None
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 9


 431:Generated_Source\PSoC5/FanController.c **** *
 432:Generated_Source\PSoC5/FanController.c **** ****************************************************************************/
 433:Generated_Source\PSoC5/FanController.c **** void FanController_Enable(void) 
 434:Generated_Source\PSoC5/FanController.c **** {
 435:Generated_Source\PSoC5/FanController.c ****     uint8 interruptState;
 436:Generated_Source\PSoC5/FanController.c **** 
 437:Generated_Source\PSoC5/FanController.c ****     #if(CY_PSOC4)
 438:Generated_Source\PSoC5/FanController.c ****         /* Ehable PWMs */
 439:Generated_Source\PSoC5/FanController.c ****         #if(FanController_NUMBER_OF_FAN_OUTPUTS == 1u)
 440:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM1_Enable();
 441:Generated_Source\PSoC5/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 2u)
 442:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM1_Enable();
 443:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM2_Enable();
 444:Generated_Source\PSoC5/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 3u)
 445:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM1_Enable();
 446:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM2_Enable();
 447:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM3_Enable();
 448:Generated_Source\PSoC5/FanController.c ****         #else
 449:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM1_Enable();
 450:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM2_Enable();
 451:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM3_Enable();
 452:Generated_Source\PSoC5/FanController.c ****             FanController_FW_PWM4_Enable();
 453:Generated_Source\PSoC5/FanController.c ****         #endif /*(FanController_NUMBER_OF_FAN_OUTPUTS == 1u) */
 454:Generated_Source\PSoC5/FanController.c **** 
 455:Generated_Source\PSoC5/FanController.c ****     #endif /* (CY_PSOC4) */
 456:Generated_Source\PSoC5/FanController.c **** 
 457:Generated_Source\PSoC5/FanController.c ****     /* Write to control register based on customizer defaults */
 458:Generated_Source\PSoC5/FanController.c ****     FanController_GLOBAL_CONTROL_REG = FanController_ENABLE | FanController_ALERT_PIN_ENABLE |
 459:Generated_Source\PSoC5/FanController.c ****         ((uint8) (FanController_INIT_ALERT_ENABLE << FanController_ALERT_ENABLE_SHIFT));
 460:Generated_Source\PSoC5/FanController.c **** 
 461:Generated_Source\PSoC5/FanController.c ****     interruptState = CyEnterCriticalSection();
 462:Generated_Source\PSoC5/FanController.c **** 
 463:Generated_Source\PSoC5/FanController.c ****     /* Enable alerts from the Alert Status register */
 464:Generated_Source\PSoC5/FanController.c ****     FanController_STATUS_ALERT_AUX_CTL_REG |= FanController_STATUS_ALERT_ENABLE;
 465:Generated_Source\PSoC5/FanController.c ****     
 466:Generated_Source\PSoC5/FanController.c ****     #if(!CY_PSOC4)
 467:Generated_Source\PSoC5/FanController.c ****         
 468:Generated_Source\PSoC5/FanController.c ****         /* Enable DMA channels for operation */
 469:Generated_Source\PSoC5/FanController.c ****         (void) CyDmaChEnable(FanController_TachOutDMA_channel, 1u);
 470:Generated_Source\PSoC5/FanController.c ****         
 471:Generated_Source\PSoC5/FanController.c ****         #if(FanController_IS_AUTO_HARDWARE_MODE)
 472:Generated_Source\PSoC5/FanController.c ****             (void) CyDmaChEnable(FanController_TachInDMA_channel, 1u);
 473:Generated_Source\PSoC5/FanController.c **** 
 474:Generated_Source\PSoC5/FanController.c ****         #endif /* FanController_IS_AUTO_HARDWARE_MODE */
 475:Generated_Source\PSoC5/FanController.c ****     #endif /* !CY_PSOC4 */
 476:Generated_Source\PSoC5/FanController.c ****         
 477:Generated_Source\PSoC5/FanController.c ****     (void) CyExitCriticalSection(interruptState);
 478:Generated_Source\PSoC5/FanController.c **** }
 479:Generated_Source\PSoC5/FanController.c **** 
 480:Generated_Source\PSoC5/FanController.c **** 
 481:Generated_Source\PSoC5/FanController.c **** /******************************************************************************
 482:Generated_Source\PSoC5/FanController.c **** * Function Name: FanController_EnableAlert
 483:Generated_Source\PSoC5/FanController.c **** *******************************************************************************
 484:Generated_Source\PSoC5/FanController.c **** *
 485:Generated_Source\PSoC5/FanController.c **** * Summary:
 486:Generated_Source\PSoC5/FanController.c **** *  Enables alerts from this component. Specifically which alert sources are
 487:Generated_Source\PSoC5/FanController.c **** *  enabled is configured using SetAlertMode() API.  This API only
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 10


 488:Generated_Source\PSoC5/FanController.c **** *  enables alert conditions to propagate to the Fan Controller component
 489:Generated_Source\PSoC5/FanController.c **** *  Alert output pin.
 490:Generated_Source\PSoC5/FanController.c **** *
 491:Generated_Source\PSoC5/FanController.c **** * Parameters:
 492:Generated_Source\PSoC5/FanController.c **** *  None
 493:Generated_Source\PSoC5/FanController.c **** *
 494:Generated_Source\PSoC5/FanController.c **** * Return:
 495:Generated_Source\PSoC5/FanController.c **** *  None
 496:Generated_Source\PSoC5/FanController.c **** *
 497:Generated_Source\PSoC5/FanController.c **** * Side Effects:
 498:Generated_Source\PSoC5/FanController.c **** *  None
 499:Generated_Source\PSoC5/FanController.c **** *
 500:Generated_Source\PSoC5/FanController.c **** ****************************************************************************/
 501:Generated_Source\PSoC5/FanController.c **** void FanController_EnableAlert(void) 
 502:Generated_Source\PSoC5/FanController.c **** {
 503:Generated_Source\PSoC5/FanController.c ****     uint8 interruptState = CyEnterCriticalSection();
 504:Generated_Source\PSoC5/FanController.c **** 
 505:Generated_Source\PSoC5/FanController.c ****     FanController_GLOBAL_CONTROL_REG |= FanController_ALERT_PIN_ENABLE;
 506:Generated_Source\PSoC5/FanController.c **** 
 507:Generated_Source\PSoC5/FanController.c ****     (void) CyExitCriticalSection(interruptState);
 508:Generated_Source\PSoC5/FanController.c **** }
 509:Generated_Source\PSoC5/FanController.c **** 
 510:Generated_Source\PSoC5/FanController.c **** 
 511:Generated_Source\PSoC5/FanController.c **** /******************************************************************************
 512:Generated_Source\PSoC5/FanController.c **** * Function Name: FanController_DisableAlert
 513:Generated_Source\PSoC5/FanController.c **** *******************************************************************************
 514:Generated_Source\PSoC5/FanController.c **** *
 515:Generated_Source\PSoC5/FanController.c **** * Summary:
 516:Generated_Source\PSoC5/FanController.c **** *  Disables alerts from this component. This API only disables alert
 517:Generated_Source\PSoC5/FanController.c **** *  conditions from propagating to the fan controller component Alert output/pin
 518:Generated_Source\PSoC5/FanController.c **** *
 519:Generated_Source\PSoC5/FanController.c **** * Parameters:
 520:Generated_Source\PSoC5/FanController.c **** *  None
 521:Generated_Source\PSoC5/FanController.c **** *
 522:Generated_Source\PSoC5/FanController.c **** * Return:
 523:Generated_Source\PSoC5/FanController.c **** *  None
 524:Generated_Source\PSoC5/FanController.c **** *
 525:Generated_Source\PSoC5/FanController.c **** * Side Effects:
 526:Generated_Source\PSoC5/FanController.c **** *  None
 527:Generated_Source\PSoC5/FanController.c **** *
 528:Generated_Source\PSoC5/FanController.c **** ****************************************************************************/
 529:Generated_Source\PSoC5/FanController.c **** void FanController_DisableAlert(void) 
 530:Generated_Source\PSoC5/FanController.c **** {
 531:Generated_Source\PSoC5/FanController.c ****     uint8 interruptState = CyEnterCriticalSection();
 532:Generated_Source\PSoC5/FanController.c **** 
 533:Generated_Source\PSoC5/FanController.c ****     FanController_GLOBAL_CONTROL_REG &= (uint8) ~FanController_ALERT_PIN_ENABLE;
 534:Generated_Source\PSoC5/FanController.c **** 
 535:Generated_Source\PSoC5/FanController.c ****     (void) CyExitCriticalSection(interruptState);
 536:Generated_Source\PSoC5/FanController.c **** }
 537:Generated_Source\PSoC5/FanController.c **** 
 538:Generated_Source\PSoC5/FanController.c **** 
 539:Generated_Source\PSoC5/FanController.c **** /******************************************************************************
 540:Generated_Source\PSoC5/FanController.c **** * Function Name: FanController_SetAlertMode
 541:Generated_Source\PSoC5/FanController.c **** *******************************************************************************
 542:Generated_Source\PSoC5/FanController.c **** *
 543:Generated_Source\PSoC5/FanController.c **** * Summary:
 544:Generated_Source\PSoC5/FanController.c **** *  Enables alert sources from the component.
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 11


 545:Generated_Source\PSoC5/FanController.c **** *
 546:Generated_Source\PSoC5/FanController.c **** * Parameters:
 547:Generated_Source\PSoC5/FanController.c **** *  alertMode:
 548:Generated_Source\PSoC5/FanController.c **** *   b0:   STALL_ALERT_ENABLE (1==Enable, 0==Disable)
 549:Generated_Source\PSoC5/FanController.c **** *   b1:   SPEED_ALERT_ENABLE (1==Enable, 0==Disable)
 550:Generated_Source\PSoC5/FanController.c **** *   b7-2: RESERVED (write with zeroes)
 551:Generated_Source\PSoC5/FanController.c **** *
 552:Generated_Source\PSoC5/FanController.c **** * Return:
 553:Generated_Source\PSoC5/FanController.c **** *  None
 554:Generated_Source\PSoC5/FanController.c **** *
 555:Generated_Source\PSoC5/FanController.c **** * Side Effects:
 556:Generated_Source\PSoC5/FanController.c **** *  None
 557:Generated_Source\PSoC5/FanController.c **** *
 558:Generated_Source\PSoC5/FanController.c **** ****************************************************************************/
 559:Generated_Source\PSoC5/FanController.c **** void FanController_SetAlertMode(uint8 alertMode) 
 560:Generated_Source\PSoC5/FanController.c **** {
 561:Generated_Source\PSoC5/FanController.c ****     uint8 interruptState = CyEnterCriticalSection();
 562:Generated_Source\PSoC5/FanController.c **** 
 563:Generated_Source\PSoC5/FanController.c ****     FanController_GLOBAL_CONTROL_REG = (FanController_GLOBAL_CONTROL_REG &
 564:Generated_Source\PSoC5/FanController.c ****             (uint8) ~FanController_ALERT_ENABLE_MASK) |
 565:Generated_Source\PSoC5/FanController.c ****                ((uint8) (alertMode << FanController_ALERT_ENABLE_SHIFT) & FanController_ALERT_ENABL
 566:Generated_Source\PSoC5/FanController.c **** 
 567:Generated_Source\PSoC5/FanController.c ****     (void) CyExitCriticalSection(interruptState);
 568:Generated_Source\PSoC5/FanController.c **** }
 569:Generated_Source\PSoC5/FanController.c **** 
 570:Generated_Source\PSoC5/FanController.c **** 
 571:Generated_Source\PSoC5/FanController.c **** /******************************************************************************
 572:Generated_Source\PSoC5/FanController.c **** * Function Name: FanController_GetAlertMode
 573:Generated_Source\PSoC5/FanController.c **** *******************************************************************************
 574:Generated_Source\PSoC5/FanController.c **** *
 575:Generated_Source\PSoC5/FanController.c **** * Summary:
 576:Generated_Source\PSoC5/FanController.c **** * Returns enabled alert sources from this component.
 577:Generated_Source\PSoC5/FanController.c **** *
 578:Generated_Source\PSoC5/FanController.c **** * Parameters:
 579:Generated_Source\PSoC5/FanController.c **** *  None
 580:Generated_Source\PSoC5/FanController.c **** *
 581:Generated_Source\PSoC5/FanController.c **** * Return:
 582:Generated_Source\PSoC5/FanController.c **** *  alertMode:
 583:Generated_Source\PSoC5/FanController.c **** *   b0:   STALL_ALERT_ENABLE (1==Enable, 0==Disable)
 584:Generated_Source\PSoC5/FanController.c **** *   b1:   SPEED_ALERT_ENABLE (1==Enable, 0==Disable)
 585:Generated_Source\PSoC5/FanController.c **** *   b7-2: RESERVED (write with zeroes)
 586:Generated_Source\PSoC5/FanController.c **** *
 587:Generated_Source\PSoC5/FanController.c **** * Side Effects:
 588:Generated_Source\PSoC5/FanController.c **** *  None
 589:Generated_Source\PSoC5/FanController.c **** *
 590:Generated_Source\PSoC5/FanController.c **** ****************************************************************************/
 591:Generated_Source\PSoC5/FanController.c **** uint8 FanController_GetAlertMode(void) 
 592:Generated_Source\PSoC5/FanController.c **** {
 593:Generated_Source\PSoC5/FanController.c ****     return((FanController_GLOBAL_CONTROL_REG & FanController_ALERT_ENABLE_MASK) >>
 594:Generated_Source\PSoC5/FanController.c ****                 FanController_ALERT_ENABLE_SHIFT);
 595:Generated_Source\PSoC5/FanController.c **** }
 596:Generated_Source\PSoC5/FanController.c **** 
 597:Generated_Source\PSoC5/FanController.c **** 
 598:Generated_Source\PSoC5/FanController.c **** /******************************************************************************
 599:Generated_Source\PSoC5/FanController.c **** * Function Name: FanController_SetAlertMask
 600:Generated_Source\PSoC5/FanController.c **** *******************************************************************************
 601:Generated_Source\PSoC5/FanController.c **** *
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 12


 602:Generated_Source\PSoC5/FanController.c **** * Summary:
 603:Generated_Source\PSoC5/FanController.c **** *  Sets the per fan Alert Mask for both Stall and Speed errors.
 604:Generated_Source\PSoC5/FanController.c **** *
 605:Generated_Source\PSoC5/FanController.c **** * Parameters:
 606:Generated_Source\PSoC5/FanController.c **** *  alertMask (1==Enable Alert, 0==Disable Alert)
 607:Generated_Source\PSoC5/FanController.c **** *   b0:   FAN1 ALERT ENABLE/DISABLE
 608:Generated_Source\PSoC5/FanController.c **** *   b1:   FAN2 ALERT ENABLE/DISABLE
 609:Generated_Source\PSoC5/FanController.c **** *   ...
 610:Generated_Source\PSoC5/FanController.c **** *   b15:  FAN16 ALERT ENABLE/DISABLE
 611:Generated_Source\PSoC5/FanController.c **** *
 612:Generated_Source\PSoC5/FanController.c **** * Return:
 613:Generated_Source\PSoC5/FanController.c **** *  None
 614:Generated_Source\PSoC5/FanController.c **** *
 615:Generated_Source\PSoC5/FanController.c **** * Side Effects:
 616:Generated_Source\PSoC5/FanController.c **** *  None
 617:Generated_Source\PSoC5/FanController.c **** *
 618:Generated_Source\PSoC5/FanController.c **** ****************************************************************************/
 619:Generated_Source\PSoC5/FanController.c **** void FanController_SetAlertMask(uint16 alertMask) 
 620:Generated_Source\PSoC5/FanController.c **** {
 621:Generated_Source\PSoC5/FanController.c ****     #if (CY_PSOC4)
 622:Generated_Source\PSoC5/FanController.c ****         FanController_alertMask = alertMask;
 623:Generated_Source\PSoC5/FanController.c ****     #else
 624:Generated_Source\PSoC5/FanController.c ****         FanController_ALERT_MASK_LSB_CONTROL_REG = LO8(alertMask);
 625:Generated_Source\PSoC5/FanController.c **** 
 626:Generated_Source\PSoC5/FanController.c ****         #if(FanController_NUMBER_OF_FANS > 8u)
 627:Generated_Source\PSoC5/FanController.c ****             FanController_ALERT_MASK_MSB_CONTROL_REG = HI8(alertMask);
 628:Generated_Source\PSoC5/FanController.c ****         #endif /* FanController_NUMBER_OF_FANS > 8u */
 629:Generated_Source\PSoC5/FanController.c ****     #endif /* (CY_PSOC4) */
 630:Generated_Source\PSoC5/FanController.c **** }
 631:Generated_Source\PSoC5/FanController.c **** 
 632:Generated_Source\PSoC5/FanController.c **** 
 633:Generated_Source\PSoC5/FanController.c **** /******************************************************************************
 634:Generated_Source\PSoC5/FanController.c **** * Function Name: FanController_GetAlertMask
 635:Generated_Source\PSoC5/FanController.c **** *******************************************************************************
 636:Generated_Source\PSoC5/FanController.c **** *
 637:Generated_Source\PSoC5/FanController.c **** * Summary:
 638:Generated_Source\PSoC5/FanController.c **** *  Gets the current per fan Alert Mask for both Stall and Speed errors.
 639:Generated_Source\PSoC5/FanController.c **** *
 640:Generated_Source\PSoC5/FanController.c **** * Parameters:
 641:Generated_Source\PSoC5/FanController.c **** *  None
 642:Generated_Source\PSoC5/FanController.c **** *
 643:Generated_Source\PSoC5/FanController.c **** * Return:
 644:Generated_Source\PSoC5/FanController.c **** *  alertMask (1==Alert Enabled, 0==Alert Disabled)
 645:Generated_Source\PSoC5/FanController.c **** *   b0:   FAN1 ALERT ENABLE/DISABLE
 646:Generated_Source\PSoC5/FanController.c **** *   b1:   FAN2 ALERT ENABLE/DISABLE
 647:Generated_Source\PSoC5/FanController.c **** *   ...
 648:Generated_Source\PSoC5/FanController.c **** *   b15:  FAN16 ALERT ENABLE/DISABLE
 649:Generated_Source\PSoC5/FanController.c **** *
 650:Generated_Source\PSoC5/FanController.c **** * Side Effects:
 651:Generated_Source\PSoC5/FanController.c **** *  None
 652:Generated_Source\PSoC5/FanController.c **** *
 653:Generated_Source\PSoC5/FanController.c **** ****************************************************************************/
 654:Generated_Source\PSoC5/FanController.c **** uint16 FanController_GetAlertMask(void) 
 655:Generated_Source\PSoC5/FanController.c **** {
 656:Generated_Source\PSoC5/FanController.c ****     uint16 alertMask;
 657:Generated_Source\PSoC5/FanController.c **** 
 658:Generated_Source\PSoC5/FanController.c ****     #if (CY_PSOC4)
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 13


 659:Generated_Source\PSoC5/FanController.c ****         alertMask = FanController_alertMask;
 660:Generated_Source\PSoC5/FanController.c ****     #else
 661:Generated_Source\PSoC5/FanController.c ****         #if(FanController_NUMBER_OF_FANS > 8u)
 662:Generated_Source\PSoC5/FanController.c ****             alertMask = (uint16)FanController_ALERT_MASK_LSB_CONTROL_REG |
 663:Generated_Source\PSoC5/FanController.c ****                 (uint16)((uint16)FanController_ALERT_MASK_MSB_CONTROL_REG << 8u);
 664:Generated_Source\PSoC5/FanController.c ****         #else
 665:Generated_Source\PSoC5/FanController.c ****             alertMask = (uint16)FanController_ALERT_MASK_LSB_CONTROL_REG;
 666:Generated_Source\PSoC5/FanController.c ****         #endif /* FanController_NUMBER_OF_FANS > 8u */
 667:Generated_Source\PSoC5/FanController.c ****     #endif /* (CY_PSOC4) */
 668:Generated_Source\PSoC5/FanController.c **** 
 669:Generated_Source\PSoC5/FanController.c ****     return(alertMask);
 670:Generated_Source\PSoC5/FanController.c **** }
 671:Generated_Source\PSoC5/FanController.c **** 
 672:Generated_Source\PSoC5/FanController.c **** 
 673:Generated_Source\PSoC5/FanController.c **** /******************************************************************************
 674:Generated_Source\PSoC5/FanController.c **** * Function Name: FanController_GetAlertSource
 675:Generated_Source\PSoC5/FanController.c **** *******************************************************************************
 676:Generated_Source\PSoC5/FanController.c **** *
 677:Generated_Source\PSoC5/FanController.c **** * Summary:
 678:Generated_Source\PSoC5/FanController.c **** *  Returns pending alert sources. The alert pin is not de-asserted through
 679:Generated_Source\PSoC5/FanController.c **** *  this API call. If this API call returns a non-zero value, call the
 680:Generated_Source\PSoC5/FanController.c **** *  GetFanStallStatus() or GetFanSpeedStatus() APIs to determine the exact
 681:Generated_Source\PSoC5/FanController.c **** *  source of the alert and simultaneously de-assert the pending alert and
 682:Generated_Source\PSoC5/FanController.c **** *  alert pin.
 683:Generated_Source\PSoC5/FanController.c **** *
 684:Generated_Source\PSoC5/FanController.c **** * Parameters:
 685:Generated_Source\PSoC5/FanController.c **** *  None
 686:Generated_Source\PSoC5/FanController.c **** *
 687:Generated_Source\PSoC5/FanController.c **** * Return:
 688:Generated_Source\PSoC5/FanController.c **** *  alertSource:
 689:Generated_Source\PSoC5/FanController.c **** *   b0:   STALL_ALERT (1==Present, 0==Not Present)
 690:Generated_Source\PSoC5/FanController.c **** *   b1:   SPEED_ALERT (1==Present, 0==Not Present)
 691:Generated_Source\PSoC5/FanController.c **** *   b7-2: RESERVED (returns all zeroes)
 692:Generated_Source\PSoC5/FanController.c **** *
 693:Generated_Source\PSoC5/FanController.c **** * Side Effects:
 694:Generated_Source\PSoC5/FanController.c **** *  None
 695:Generated_Source\PSoC5/FanController.c **** *
 696:Generated_Source\PSoC5/FanController.c **** ****************************************************************************/
 697:Generated_Source\PSoC5/FanController.c **** uint8 FanController_GetAlertSource(void) 
 698:Generated_Source\PSoC5/FanController.c **** {
 699:Generated_Source\PSoC5/FanController.c ****     return ((FanController_ALERT_STATUS_REG & FanController_ALERT_STATUS_MASK));
 700:Generated_Source\PSoC5/FanController.c **** }
 701:Generated_Source\PSoC5/FanController.c **** 
 702:Generated_Source\PSoC5/FanController.c **** 
 703:Generated_Source\PSoC5/FanController.c **** /******************************************************************************
 704:Generated_Source\PSoC5/FanController.c **** * Function Name: FanController_GetFanStallStatus
 705:Generated_Source\PSoC5/FanController.c **** *******************************************************************************
 706:Generated_Source\PSoC5/FanController.c **** *
 707:Generated_Source\PSoC5/FanController.c **** * Summary:
 708:Generated_Source\PSoC5/FanController.c **** *  Returns the stall status of all fans
 709:Generated_Source\PSoC5/FanController.c **** *
 710:Generated_Source\PSoC5/FanController.c **** * Parameters:
 711:Generated_Source\PSoC5/FanController.c **** *  None
 712:Generated_Source\PSoC5/FanController.c **** *
 713:Generated_Source\PSoC5/FanController.c **** * Return:
 714:Generated_Source\PSoC5/FanController.c **** *  stallStatus (1==Fan Stalled, 0=Fan OK)
 715:Generated_Source\PSoC5/FanController.c **** *   b0:   FAN1 STALL
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 14


 716:Generated_Source\PSoC5/FanController.c **** *   b1:   FAN2 STALL
 717:Generated_Source\PSoC5/FanController.c **** *   ...
 718:Generated_Source\PSoC5/FanController.c **** *   b15:  FAN16 STALL
 719:Generated_Source\PSoC5/FanController.c **** *
 720:Generated_Source\PSoC5/FanController.c **** * Side Effects:
 721:Generated_Source\PSoC5/FanController.c **** *  Calling this API de-asserts the alert pin and clears all pending stall
 722:Generated_Source\PSoC5/FanController.c **** *  status alerts.
 723:Generated_Source\PSoC5/FanController.c **** *
 724:Generated_Source\PSoC5/FanController.c **** ******************************************************************************/
 725:Generated_Source\PSoC5/FanController.c **** uint16 FanController_GetFanStallStatus(void) 
 726:Generated_Source\PSoC5/FanController.c **** {
 727:Generated_Source\PSoC5/FanController.c ****     uint16 stallStatus;
 728:Generated_Source\PSoC5/FanController.c **** 
 729:Generated_Source\PSoC5/FanController.c ****     #if (CY_PSOC4)
 730:Generated_Source\PSoC5/FanController.c ****         stallStatus = FanController_stallStatus;
 731:Generated_Source\PSoC5/FanController.c **** 
 732:Generated_Source\PSoC5/FanController.c ****         /* Clear stall status for individual fans */
 733:Generated_Source\PSoC5/FanController.c ****         FanController_stallStatus = 0u;
 734:Generated_Source\PSoC5/FanController.c **** 
 735:Generated_Source\PSoC5/FanController.c ****         /* Clear the common SW stall signal on the control register */
 736:Generated_Source\PSoC5/FanController.c ****         FanController_GLOBAL_CONTROL_REG &= ((uint8) ~FanController_SW_STALL);
 737:Generated_Source\PSoC5/FanController.c ****     #else
 738:Generated_Source\PSoC5/FanController.c ****         
 739:Generated_Source\PSoC5/FanController.c ****         #if(FanController_NUMBER_OF_FANS > 8u)
 740:Generated_Source\PSoC5/FanController.c ****             stallStatus = (uint16)FanController_STALL_ERROR_LSB_STATUS_REG |
 741:Generated_Source\PSoC5/FanController.c ****                 (uint16)((uint16)FanController_STALL_ERROR_MSB_STATUS_REG << 8u);
 742:Generated_Source\PSoC5/FanController.c ****         #else
 743:Generated_Source\PSoC5/FanController.c ****             stallStatus = (uint16)FanController_STALL_ERROR_LSB_STATUS_REG;
 744:Generated_Source\PSoC5/FanController.c ****         #endif /* FanController_NUMBER_OF_FANS > 8u */
 745:Generated_Source\PSoC5/FanController.c ****     #endif /* (CY_PSOC4) */
 746:Generated_Source\PSoC5/FanController.c ****         
 747:Generated_Source\PSoC5/FanController.c ****     return(stallStatus);
 748:Generated_Source\PSoC5/FanController.c **** }
 749:Generated_Source\PSoC5/FanController.c **** 
 750:Generated_Source\PSoC5/FanController.c **** 
 751:Generated_Source\PSoC5/FanController.c **** #if (!FanController_IS_MANUAL_MODE)
 752:Generated_Source\PSoC5/FanController.c ****     /******************************************************************************
 753:Generated_Source\PSoC5/FanController.c ****     * Function Name: FanController_GetFanSpeedStatus
 754:Generated_Source\PSoC5/FanController.c ****     *******************************************************************************
 755:Generated_Source\PSoC5/FanController.c ****     *
 756:Generated_Source\PSoC5/FanController.c ****     * Summary:
 757:Generated_Source\PSoC5/FanController.c ****     *  Returns the speed regulation status of all fans.
 758:Generated_Source\PSoC5/FanController.c ****     *  This API is not available if Firmware Controller fan control method is
 759:Generated_Source\PSoC5/FanController.c ****     *  selected.
 760:Generated_Source\PSoC5/FanController.c ****     *
 761:Generated_Source\PSoC5/FanController.c ****     * Parameters:
 762:Generated_Source\PSoC5/FanController.c ****     *  None
 763:Generated_Source\PSoC5/FanController.c ****     *
 764:Generated_Source\PSoC5/FanController.c ****     * Return:
 765:Generated_Source\PSoC5/FanController.c ****     *  speedStatus (1==Fan Speed Failure, 0=Fan OK)
 766:Generated_Source\PSoC5/FanController.c ****     *   b0:   FAN1 SPEED REGULATION FAIL
 767:Generated_Source\PSoC5/FanController.c ****     *   b1:   FAN2 SPEED REGULATION FAIL
 768:Generated_Source\PSoC5/FanController.c ****     *   ...
 769:Generated_Source\PSoC5/FanController.c ****     *   b15:  FAN16 SPEED REGULATION FAIL
 770:Generated_Source\PSoC5/FanController.c ****     *
 771:Generated_Source\PSoC5/FanController.c ****     * Side Effects:
 772:Generated_Source\PSoC5/FanController.c ****     *  Calling this API de-asserts the alert pin and clears all pending speed
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 15


 773:Generated_Source\PSoC5/FanController.c ****     *  regulation failure status alerts.
 774:Generated_Source\PSoC5/FanController.c ****     *
 775:Generated_Source\PSoC5/FanController.c ****     ******************************************************************************/
 776:Generated_Source\PSoC5/FanController.c ****     uint16 FanController_GetFanSpeedStatus(void) 
 777:Generated_Source\PSoC5/FanController.c ****     {
 778:Generated_Source\PSoC5/FanController.c ****         uint16 speedStatus;
 779:Generated_Source\PSoC5/FanController.c **** 
 780:Generated_Source\PSoC5/FanController.c ****         /* In case of Auto Hardware mode speed status is received from hardware
 781:Generated_Source\PSoC5/FanController.c ****         * status register...
 782:Generated_Source\PSoC5/FanController.c ****         */
 783:Generated_Source\PSoC5/FanController.c ****         #if (FanController_IS_AUTO_HARDWARE_MODE)
 784:Generated_Source\PSoC5/FanController.c ****             #if (FanController_NUMBER_OF_FANS > 8u)
 785:Generated_Source\PSoC5/FanController.c ****                 speedStatus = (uint16)FanController_SPEED_ERROR_LSB_STATUS_REG |
 786:Generated_Source\PSoC5/FanController.c ****                     (uint16)((uint16)FanController_SPEED_ERROR_MSB_STATUS_REG << 8u);
 787:Generated_Source\PSoC5/FanController.c ****             #else
 788:Generated_Source\PSoC5/FanController.c ****                 speedStatus = (uint16)FanController_SPEED_ERROR_LSB_STATUS_REG;
 789:Generated_Source\PSoC5/FanController.c ****             #endif /* FanController_NUMBER_OF_FANS > 8u */
 790:Generated_Source\PSoC5/FanController.c ****         #endif /* FanController_IS_AUTO_HARDWARE_MODE */
 791:Generated_Source\PSoC5/FanController.c **** 
 792:Generated_Source\PSoC5/FanController.c ****         /* ... in case of Auto Firmware mode the software status is used. */
 793:Generated_Source\PSoC5/FanController.c ****         #if (FanController_IS_AUTO_FIRMWARE_MODE)
 794:Generated_Source\PSoC5/FanController.c **** 
 795:Generated_Source\PSoC5/FanController.c ****             speedStatus = FanController_speedStatus;
 796:Generated_Source\PSoC5/FanController.c **** 
 797:Generated_Source\PSoC5/FanController.c ****             /* Simulate clear-on-read status */
 798:Generated_Source\PSoC5/FanController.c ****             FanController_speedStatus = 0u;
 799:Generated_Source\PSoC5/FanController.c ****         #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
 800:Generated_Source\PSoC5/FanController.c **** 
 801:Generated_Source\PSoC5/FanController.c ****         return(speedStatus);
 802:Generated_Source\PSoC5/FanController.c ****     }
 803:Generated_Source\PSoC5/FanController.c **** 
 804:Generated_Source\PSoC5/FanController.c **** #endif /* (!FanController_IS_MANUAL_MODE) */
 805:Generated_Source\PSoC5/FanController.c **** 
 806:Generated_Source\PSoC5/FanController.c **** 
 807:Generated_Source\PSoC5/FanController.c **** /******************************************************************************
 808:Generated_Source\PSoC5/FanController.c **** * Function Name: FanController_SetDutyCycle
 809:Generated_Source\PSoC5/FanController.c **** *******************************************************************************
 810:Generated_Source\PSoC5/FanController.c **** *
 811:Generated_Source\PSoC5/FanController.c **** * Summary:
 812:Generated_Source\PSoC5/FanController.c **** *  Sets the duty cycle of selected fan or bank in hundredths of a percent,
 813:Generated_Source\PSoC5/FanController.c **** *  i.e. 5000=50% duty cycle. In hardware controlled fan mode, if manual duty
 814:Generated_Source\PSoC5/FanController.c **** *  cycle control is desirable, call the OverrideAutomaticControl(true) API 
 815:Generated_Source\PSoC5/FanController.c **** *  prior to calling this API.
 816:Generated_Source\PSoC5/FanController.c **** *
 817:Generated_Source\PSoC5/FanController.c **** * Parameters:
 818:Generated_Source\PSoC5/FanController.c **** *  uint8 fanOrBankNumber
 819:Generated_Source\PSoC5/FanController.c **** *   Valid range is 1-16 and should not exceed the number of fans or banks in the
 820:Generated_Source\PSoC5/FanController.c **** *   system.
 821:Generated_Source\PSoC5/FanController.c **** *
 822:Generated_Source\PSoC5/FanController.c **** *  uint16 dutyCycle
 823:Generated_Source\PSoC5/FanController.c **** *   dutyCycle is entered in hundredths of a percent, i.e. 5000=50% duty cycle
 824:Generated_Source\PSoC5/FanController.c **** *   Valid range is 0 to 10000.
 825:Generated_Source\PSoC5/FanController.c **** *
 826:Generated_Source\PSoC5/FanController.c **** * Return:
 827:Generated_Source\PSoC5/FanController.c **** *  None
 828:Generated_Source\PSoC5/FanController.c **** *
 829:Generated_Source\PSoC5/FanController.c **** * Side Effects:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 16


 830:Generated_Source\PSoC5/FanController.c **** *  None
 831:Generated_Source\PSoC5/FanController.c **** *
 832:Generated_Source\PSoC5/FanController.c **** ****************************************************************************/
 833:Generated_Source\PSoC5/FanController.c **** void FanController_SetDutyCycle(uint8 fanOrBankNumber, uint16 dutyCycle)
 834:Generated_Source\PSoC5/FanController.c ****         
 835:Generated_Source\PSoC5/FanController.c **** {
 836:Generated_Source\PSoC5/FanController.c ****     uint32 newCompare;      /* Needs to be 32-bit to allow for overflow during the math calculation
 837:Generated_Source\PSoC5/FanController.c **** 
 838:Generated_Source\PSoC5/FanController.c ****     /* Make sure the Fan/Bank number is valid */
 839:Generated_Source\PSoC5/FanController.c ****     if(fanOrBankNumber <= FanController_NUMBER_OF_FAN_OUTPUTS)
 840:Generated_Source\PSoC5/FanController.c ****     {
 841:Generated_Source\PSoC5/FanController.c ****         newCompare = (FanController_PWM_PERIOD * (uint32) dutyCycle) / FanController_PWM_DUTY_DIVID
 842:Generated_Source\PSoC5/FanController.c **** 
 843:Generated_Source\PSoC5/FanController.c ****         /* Make sure the Compare value is in range (user entered a valid duty
 844:Generated_Source\PSoC5/FanController.c ****         * cycle value).
 845:Generated_Source\PSoC5/FanController.c ****         */
 846:Generated_Source\PSoC5/FanController.c ****         if(newCompare <= FanController_PWM_PERIOD)
 847:Generated_Source\PSoC5/FanController.c ****         {
 848:Generated_Source\PSoC5/FanController.c ****             #if (!CY_PSOC4)
 849:Generated_Source\PSoC5/FanController.c ****                 #if(FanController_PWMRES == FanController_PWMRES_EIGHTBIT)
 850:Generated_Source\PSoC5/FanController.c ****                     CY_SET_REG8(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSetDutyReg, (u
 851:Generated_Source\PSoC5/FanController.c ****                 #else
 852:Generated_Source\PSoC5/FanController.c ****                     CY_SET_REG16(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSetDutyReg, (
 853:Generated_Source\PSoC5/FanController.c ****                 #endif /* FanController_PWMRES == FanController_PWMRES_EIGHTBIT */
 854:Generated_Source\PSoC5/FanController.c ****             #else
 855:Generated_Source\PSoC5/FanController.c ****                 CY_SET_REG32(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSetDutyReg, newCo
 856:Generated_Source\PSoC5/FanController.c ****             #endif /* (!CY_PSOC4) */
 857:Generated_Source\PSoC5/FanController.c ****         }
 858:Generated_Source\PSoC5/FanController.c ****     }
 859:Generated_Source\PSoC5/FanController.c **** }
 860:Generated_Source\PSoC5/FanController.c **** 
 861:Generated_Source\PSoC5/FanController.c **** 
 862:Generated_Source\PSoC5/FanController.c **** /******************************************************************************
 863:Generated_Source\PSoC5/FanController.c **** * Function Name: FanController_GetDutyCycle
 864:Generated_Source\PSoC5/FanController.c **** *******************************************************************************
 865:Generated_Source\PSoC5/FanController.c **** *
 866:Generated_Source\PSoC5/FanController.c **** * Summary:
 867:Generated_Source\PSoC5/FanController.c **** *  Returns the current duty cycle of the selected fan or bank in hundredths
 868:Generated_Source\PSoC5/FanController.c **** *  of a percent, i.e. 5000=50% duty cycle.
 869:Generated_Source\PSoC5/FanController.c **** *
 870:Generated_Source\PSoC5/FanController.c **** * Parameters:
 871:Generated_Source\PSoC5/FanController.c **** *  uint8 fanOrBankNumber
 872:Generated_Source\PSoC5/FanController.c **** *  Valid range is 1-16 and should not exceed the number of fans or banks in
 873:Generated_Source\PSoC5/FanController.c **** *  the system.
 874:Generated_Source\PSoC5/FanController.c **** *
 875:Generated_Source\PSoC5/FanController.c **** * Return:
 876:Generated_Source\PSoC5/FanController.c **** *  uint16 duyCycle
 877:Generated_Source\PSoC5/FanController.c **** *  Current duty cycle in hundredths of a percent.
 878:Generated_Source\PSoC5/FanController.c **** *
 879:Generated_Source\PSoC5/FanController.c **** * Side Effects:
 880:Generated_Source\PSoC5/FanController.c **** *  None
 881:Generated_Source\PSoC5/FanController.c **** *
 882:Generated_Source\PSoC5/FanController.c **** ****************************************************************************/
 883:Generated_Source\PSoC5/FanController.c **** uint16 FanController_GetDutyCycle(uint8 fanOrBankNumber) 
 884:Generated_Source\PSoC5/FanController.c **** {
 885:Generated_Source\PSoC5/FanController.c ****     uint16 duyCycle = 0u;
 886:Generated_Source\PSoC5/FanController.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 17


 887:Generated_Source\PSoC5/FanController.c ****     if(fanOrBankNumber <= FanController_NUMBER_OF_FAN_OUTPUTS)
 888:Generated_Source\PSoC5/FanController.c ****     {
 889:Generated_Source\PSoC5/FanController.c ****         #if (!CY_PSOC4)
 890:Generated_Source\PSoC5/FanController.c ****             #if(FanController_PWMRES == FanController_PWMRES_EIGHTBIT)
 891:Generated_Source\PSoC5/FanController.c ****                 duyCycle = (uint16)
 892:Generated_Source\PSoC5/FanController.c ****                     ((((uint32) CY_GET_REG8(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSe
 893:Generated_Source\PSoC5/FanController.c ****                             * FanController_PWM_DUTY_DIVIDER) / FanController_PWM_PERIOD);
 894:Generated_Source\PSoC5/FanController.c ****             #else
 895:Generated_Source\PSoC5/FanController.c ****                 duyCycle = (uint16)
 896:Generated_Source\PSoC5/FanController.c ****                     (((uint32) CY_GET_REG16(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSe
 897:Generated_Source\PSoC5/FanController.c ****                                 * FanController_PWM_DUTY_DIVIDER) / FanController_PWM_PERIOD);
 898:Generated_Source\PSoC5/FanController.c ****             #endif /* FanController_PWMRES == FanController_PWMRES_EIGHTBIT */
 899:Generated_Source\PSoC5/FanController.c ****         #else
 900:Generated_Source\PSoC5/FanController.c ****             duyCycle = (uint16)
 901:Generated_Source\PSoC5/FanController.c ****                 (((uint32) CY_GET_REG32(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSetDut
 902:Generated_Source\PSoC5/FanController.c ****                         * FanController_PWM_DUTY_DIVIDER) / FanController_PWM_PERIOD);
 903:Generated_Source\PSoC5/FanController.c ****         #endif /* (!CY_PSOC4) */
 904:Generated_Source\PSoC5/FanController.c ****     }
 905:Generated_Source\PSoC5/FanController.c **** 
 906:Generated_Source\PSoC5/FanController.c ****     return(duyCycle);
 907:Generated_Source\PSoC5/FanController.c **** }
 908:Generated_Source\PSoC5/FanController.c **** 
 909:Generated_Source\PSoC5/FanController.c **** 
 910:Generated_Source\PSoC5/FanController.c **** /******************************************************************************
 911:Generated_Source\PSoC5/FanController.c **** * Function Name: FanController_SetDesiredSpeed
 912:Generated_Source\PSoC5/FanController.c **** *******************************************************************************
 913:Generated_Source\PSoC5/FanController.c **** *
 914:Generated_Source\PSoC5/FanController.c **** * Summary:
 915:Generated_Source\PSoC5/FanController.c **** *  Sets the desired RPM of specified fan. If the AcousticNoiseReduction
 916:Generated_Source\PSoC5/FanController.c **** *  parameter is true (enabled via the component customizer) in hardware
 917:Generated_Source\PSoC5/FanController.c **** *  controlled fan mode, the desired speed is converted to a fan rotation period
 918:Generated_Source\PSoC5/FanController.c **** *  and written to SRAM for subsequent DMA into the tachometer block. If the
 919:Generated_Source\PSoC5/FanController.c **** *  AcousticNoiseReduction parameter is false, the desired speed is converted to
 920:Generated_Source\PSoC5/FanController.c **** *  a duty cycle and written directly into the PWM register for the selected fan.
 921:Generated_Source\PSoC5/FanController.c **** *
 922:Generated_Source\PSoC5/FanController.c **** * Parameters:
 923:Generated_Source\PSoC5/FanController.c **** *  uint8 fanNumber
 924:Generated_Source\PSoC5/FanController.c **** *  Valid range is 1-16 and should not exceed the number of fans in the system.
 925:Generated_Source\PSoC5/FanController.c **** *
 926:Generated_Source\PSoC5/FanController.c **** * uint16 rpm
 927:Generated_Source\PSoC5/FanController.c **** *  Valid range is 500 to 25,000, but should not exceed the max RPM of the
 928:Generated_Source\PSoC5/FanController.c **** *  selected fan.
 929:Generated_Source\PSoC5/FanController.c **** *
 930:Generated_Source\PSoC5/FanController.c **** * Return:
 931:Generated_Source\PSoC5/FanController.c **** *  None
 932:Generated_Source\PSoC5/FanController.c **** *
 933:Generated_Source\PSoC5/FanController.c **** * Side Effects:
 934:Generated_Source\PSoC5/FanController.c **** *  None
 935:Generated_Source\PSoC5/FanController.c **** *
 936:Generated_Source\PSoC5/FanController.c **** ****************************************************************************/
 937:Generated_Source\PSoC5/FanController.c **** void FanController_SetDesiredSpeed(uint8 fanNumber, uint16 rpm) 
 938:Generated_Source\PSoC5/FanController.c **** {
 939:Generated_Source\PSoC5/FanController.c ****     uint32 overrideDuty;        /* Needs to be 32-bit to allow for overflow during the math calcula
 940:Generated_Source\PSoC5/FanController.c ****     uint16 currentSpeed;
 941:Generated_Source\PSoC5/FanController.c **** 
 942:Generated_Source\PSoC5/FanController.c ****     /* Check for valid Fan number */
 943:Generated_Source\PSoC5/FanController.c ****     if(fanNumber <= FanController_NUMBER_OF_FANS)
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 18


 944:Generated_Source\PSoC5/FanController.c ****     {
 945:Generated_Source\PSoC5/FanController.c ****         /* Get the actual speed */
 946:Generated_Source\PSoC5/FanController.c ****         currentSpeed = FanController_GetActualSpeed(fanNumber);
 947:Generated_Source\PSoC5/FanController.c **** 
 948:Generated_Source\PSoC5/FanController.c ****         /* 3 cases where we will directly write a new duty cycle in firmware: */
 949:Generated_Source\PSoC5/FanController.c ****             /* Case 1) Manual Control fan mode */
 950:Generated_Source\PSoC5/FanController.c ****         if((FanController_IS_MANUAL_MODE)   ||
 951:Generated_Source\PSoC5/FanController.c ****             /* Case 2) Auto controlled fan mode and noise reduction is off */
 952:Generated_Source\PSoC5/FanController.c ****             ((FanController_IS_AUTO_HARDWARE_MODE) &&
 953:Generated_Source\PSoC5/FanController.c ****                 (FanController_NOISE_REDUCTION_MODE == FanController_NOISE_REDUCTION_OFF)) ||
 954:Generated_Source\PSoC5/FanController.c ****             /* Case 3) hardware controlled fan mode and new rpm is slower than current */
 955:Generated_Source\PSoC5/FanController.c ****             ((FanController_IS_AUTO_HARDWARE_MODE) && (rpm < currentSpeed)))
 956:Generated_Source\PSoC5/FanController.c ****         {
 957:Generated_Source\PSoC5/FanController.c ****             /* Override hardware controlled fan mode temporarily to write new duty cycle */
 958:Generated_Source\PSoC5/FanController.c ****             #if(FanController_IS_AUTO_HARDWARE_MODE)
 959:Generated_Source\PSoC5/FanController.c ****                 FanController_OverrideAutomaticControl(1u);
 960:Generated_Source\PSoC5/FanController.c ****             #endif /* FanController_IS_AUTO_HARDWARE_MODE */
 961:Generated_Source\PSoC5/FanController.c **** 
 962:Generated_Source\PSoC5/FanController.c ****             /* Desired speed is slower than rpmA */
 963:Generated_Source\PSoC5/FanController.c ****             if(rpm < FanController_fanProperties[fanNumber - 1u].rpmA)
 964:Generated_Source\PSoC5/FanController.c ****             {
 965:Generated_Source\PSoC5/FanController.c ****                 overrideDuty =  (uint32)FanController_fanProperties[fanNumber - 1u].dutyA -
 966:Generated_Source\PSoC5/FanController.c ****                                 (((uint32)FanController_fanProperties[fanNumber - 1u].dutyRpmSlope 
 967:Generated_Source\PSoC5/FanController.c ****                                    ((uint32)FanController_fanProperties[fanNumber - 1u].rpmA - (uin
 968:Generated_Source\PSoC5/FanController.c **** 
 969:Generated_Source\PSoC5/FanController.c ****                 /* Check for math underflow */
 970:Generated_Source\PSoC5/FanController.c ****                 if(overrideDuty > 10000u)
 971:Generated_Source\PSoC5/FanController.c ****                 {
 972:Generated_Source\PSoC5/FanController.c ****                     overrideDuty = 0u;
 973:Generated_Source\PSoC5/FanController.c ****                 }
 974:Generated_Source\PSoC5/FanController.c ****             }
 975:Generated_Source\PSoC5/FanController.c **** 
 976:Generated_Source\PSoC5/FanController.c ****             /* Desired speed is faster than rpmA */
 977:Generated_Source\PSoC5/FanController.c ****             else
 978:Generated_Source\PSoC5/FanController.c ****             {
 979:Generated_Source\PSoC5/FanController.c ****                 overrideDuty =  (uint32)FanController_fanProperties[fanNumber - 1u].dutyA +
 980:Generated_Source\PSoC5/FanController.c ****                                 (((uint32)FanController_fanProperties[fanNumber - 1u].dutyRpmSlope 
 981:Generated_Source\PSoC5/FanController.c ****                                    ((uint32)rpm - (uint32)FanController_fanProperties[fanNumber - 1
 982:Generated_Source\PSoC5/FanController.c **** 
 983:Generated_Source\PSoC5/FanController.c ****                 /* Check for math overflow */
 984:Generated_Source\PSoC5/FanController.c ****                 if(overrideDuty > 10000u)
 985:Generated_Source\PSoC5/FanController.c ****                 {
 986:Generated_Source\PSoC5/FanController.c ****                     overrideDuty = 10000u;
 987:Generated_Source\PSoC5/FanController.c ****                 }
 988:Generated_Source\PSoC5/FanController.c ****             }
 989:Generated_Source\PSoC5/FanController.c **** 
 990:Generated_Source\PSoC5/FanController.c ****             /* Set the newly calculated duty cycle */
 991:Generated_Source\PSoC5/FanController.c ****             FanController_SetDutyCycle(fanNumber, (uint16) overrideDuty);
 992:Generated_Source\PSoC5/FanController.c ****         }
 993:Generated_Source\PSoC5/FanController.c **** 
 994:Generated_Source\PSoC5/FanController.c ****         /* Set newly requested desired rpm including tolerance calculation and store
 995:Generated_Source\PSoC5/FanController.c ****         * in SRAM for the tachometer block DMA controller.
 996:Generated_Source\PSoC5/FanController.c ****         */
 997:Generated_Source\PSoC5/FanController.c ****         #if(FanController_IS_AUTO_HARDWARE_MODE)
 998:Generated_Source\PSoC5/FanController.c **** 
 999:Generated_Source\PSoC5/FanController.c ****             FanController_fanControl.desiredPeriod[fanNumber - 1u] =
1000:Generated_Source\PSoC5/FanController.c ****                 (uint16) (FanController_RPM_PERIOD_CONV_FACTOR /
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 19


1001:Generated_Source\PSoC5/FanController.c ****                     (uint32) ((uint32) rpm + (((uint32) rpm * FanController_TOLERANCE) /
1002:Generated_Source\PSoC5/FanController.c ****                         FanController_TOLERANCE_DIVIDER)));
1003:Generated_Source\PSoC5/FanController.c **** 
1004:Generated_Source\PSoC5/FanController.c ****             if(rpm > 500u)
1005:Generated_Source\PSoC5/FanController.c ****             {
1006:Generated_Source\PSoC5/FanController.c ****                 FanController_fanControl.tolerance[fanNumber - 1u] =
1007:Generated_Source\PSoC5/FanController.c ****                     (uint16) (((FanController_RPM_PERIOD_CONV_FACTOR * FanController_TOLERANCE) /
1008:Generated_Source\PSoC5/FanController.c ****                         FanController_TOLERANCE_DIVIDER) / (uint32) rpm);
1009:Generated_Source\PSoC5/FanController.c ****             }
1010:Generated_Source\PSoC5/FanController.c ****             else
1011:Generated_Source\PSoC5/FanController.c ****             {
1012:Generated_Source\PSoC5/FanController.c ****                 FanController_fanControl.tolerance[fanNumber - 1u] = 100u;
1013:Generated_Source\PSoC5/FanController.c ****             }
1014:Generated_Source\PSoC5/FanController.c **** 
1015:Generated_Source\PSoC5/FanController.c ****             /* Go back to hardware controlled fan mode */
1016:Generated_Source\PSoC5/FanController.c ****             FanController_OverrideAutomaticControl(0u);
1017:Generated_Source\PSoC5/FanController.c **** 
1018:Generated_Source\PSoC5/FanController.c ****         #endif /* FanController_IS_AUTO_HARDWARE_MODE */
1019:Generated_Source\PSoC5/FanController.c ****         
1020:Generated_Source\PSoC5/FanController.c ****         /* Store the desired speed to RAM if we are in auto mode. It will be used by 
1021:Generated_Source\PSoC5/FanController.c ****         * FanController_GetDesiredSpeed() and PID algorithm.
1022:Generated_Source\PSoC5/FanController.c ****         */
1023:Generated_Source\PSoC5/FanController.c ****         #if((FanController_IS_AUTO_FIRMWARE_MODE) || (FanController_IS_AUTO_HARDWARE_MODE))
1024:Generated_Source\PSoC5/FanController.c ****             FanController_desiredFansSpeed[fanNumber - 1u] = rpm;
1025:Generated_Source\PSoC5/FanController.c ****         #endif /* (FanController_IS_AUTO_HARDWARE_MODE) */
1026:Generated_Source\PSoC5/FanController.c ****     }
1027:Generated_Source\PSoC5/FanController.c **** }
1028:Generated_Source\PSoC5/FanController.c **** 
1029:Generated_Source\PSoC5/FanController.c **** 
1030:Generated_Source\PSoC5/FanController.c **** #if (!FanController_IS_MANUAL_MODE)
1031:Generated_Source\PSoC5/FanController.c ****     /******************************************************************************
1032:Generated_Source\PSoC5/FanController.c ****     * Function Name: FanController_GetDesiredSpeed
1033:Generated_Source\PSoC5/FanController.c ****     *******************************************************************************
1034:Generated_Source\PSoC5/FanController.c ****     *
1035:Generated_Source\PSoC5/FanController.c ****     * Summary:
1036:Generated_Source\PSoC5/FanController.c ****     *  Returns the currently desired speed of the selected fan in RPMs in hardware
1037:Generated_Source\PSoC5/FanController.c ****     *  controlled fan mode. This API is not available if firmware controlled fan
1038:Generated_Source\PSoC5/FanController.c ****     *  mode is selected.
1039:Generated_Source\PSoC5/FanController.c ****     *
1040:Generated_Source\PSoC5/FanController.c ****     * Parameters:
1041:Generated_Source\PSoC5/FanController.c ****     *  uint8 fanNumber
1042:Generated_Source\PSoC5/FanController.c ****     *  Valid range is 1-16 and should not exceed the number of fans in the system.
1043:Generated_Source\PSoC5/FanController.c ****     *
1044:Generated_Source\PSoC5/FanController.c ****     * Return:
1045:Generated_Source\PSoC5/FanController.c ****     *  uint16 desiredSpeed: Current desired speed for selected fan.
1046:Generated_Source\PSoC5/FanController.c ****     *
1047:Generated_Source\PSoC5/FanController.c ****     * Side Effects:
1048:Generated_Source\PSoC5/FanController.c ****     *  None
1049:Generated_Source\PSoC5/FanController.c ****     *
1050:Generated_Source\PSoC5/FanController.c ****     ******************************************************************************/
1051:Generated_Source\PSoC5/FanController.c ****     uint16 FanController_GetDesiredSpeed(uint8 fanNumber) 
1052:Generated_Source\PSoC5/FanController.c ****     {
1053:Generated_Source\PSoC5/FanController.c ****         return(FanController_desiredFansSpeed[fanNumber - 1u]);
1054:Generated_Source\PSoC5/FanController.c ****     }
1055:Generated_Source\PSoC5/FanController.c **** 
1056:Generated_Source\PSoC5/FanController.c **** #endif /* (!FanController_IS_MANUAL_MODE) */
1057:Generated_Source\PSoC5/FanController.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 20


1058:Generated_Source\PSoC5/FanController.c **** 
1059:Generated_Source\PSoC5/FanController.c **** /******************************************************************************
1060:Generated_Source\PSoC5/FanController.c **** * Function Name: FanController_GetActualSpeed
1061:Generated_Source\PSoC5/FanController.c **** *******************************************************************************
1062:Generated_Source\PSoC5/FanController.c **** *
1063:Generated_Source\PSoC5/FanController.c **** * Summary:
1064:Generated_Source\PSoC5/FanController.c **** *  Returns the actual measured RPM of selected fan. This function should be 
1065:Generated_Source\PSoC5/FanController.c **** *  called first time in the design only after the requested fan is made a full
1066:Generated_Source\PSoC5/FanController.c **** *  rotation. This can be ensured by calling the function after End-of-Cycle 
1067:Generated_Source\PSoC5/FanController.c **** *  (eoc) pulse generation.
1068:Generated_Source\PSoC5/FanController.c **** *
1069:Generated_Source\PSoC5/FanController.c **** * Parameters:
1070:Generated_Source\PSoC5/FanController.c **** *  uint8 fanNumber
1071:Generated_Source\PSoC5/FanController.c **** *  Valid range is 1-16 and should not exceed the number of fans in the system.
1072:Generated_Source\PSoC5/FanController.c **** *
1073:Generated_Source\PSoC5/FanController.c **** * Return:
1074:Generated_Source\PSoC5/FanController.c **** *  uint16 actualSpeed: Actual measured RPM of target fan.
1075:Generated_Source\PSoC5/FanController.c **** *
1076:Generated_Source\PSoC5/FanController.c **** * Side Effects:
1077:Generated_Source\PSoC5/FanController.c **** *  None
1078:Generated_Source\PSoC5/FanController.c **** *
1079:Generated_Source\PSoC5/FanController.c **** ****************************************************************************/
1080:Generated_Source\PSoC5/FanController.c **** uint16 FanController_GetActualSpeed(uint8 fanNumber) 
1081:Generated_Source\PSoC5/FanController.c **** {
1082:Generated_Source\PSoC5/FanController.c ****     uint16 actualSpeed = 0u;
1083:Generated_Source\PSoC5/FanController.c **** 
1084:Generated_Source\PSoC5/FanController.c ****     if(fanNumber <= FanController_NUMBER_OF_FANS)
1085:Generated_Source\PSoC5/FanController.c ****     {
1086:Generated_Source\PSoC5/FanController.c ****         #if(CY_PSOC3)
1087:Generated_Source\PSoC5/FanController.c **** 
1088:Generated_Source\PSoC5/FanController.c ****             if(0u != (FanController_DMA_STATUS_REG & FanController_DMA1))
1089:Generated_Source\PSoC5/FanController.c ****             {
1090:Generated_Source\PSoC5/FanController.c ****                 /* If DMA writes to actualPeriodDma1 (DMA1 state) then read
1091:Generated_Source\PSoC5/FanController.c ****                 * actualPeriodDma2.
1092:Generated_Source\PSoC5/FanController.c ****                 */
1093:Generated_Source\PSoC5/FanController.c ****                 if(FanController_fanControl.actualPeriodDma2[fanNumber - 1u] != 0u)
1094:Generated_Source\PSoC5/FanController.c ****                 {
1095:Generated_Source\PSoC5/FanController.c ****                     /* Calculate RPM from value measured by tachometer counter */
1096:Generated_Source\PSoC5/FanController.c ****                     actualSpeed = (uint16) (FanController_RPM_PERIOD_CONV_FACTOR /
1097:Generated_Source\PSoC5/FanController.c ****                         (uint32) FanController_fanControl.actualPeriodDma2[fanNumber - 1u]);
1098:Generated_Source\PSoC5/FanController.c ****                 }
1099:Generated_Source\PSoC5/FanController.c ****             }
1100:Generated_Source\PSoC5/FanController.c ****             else
1101:Generated_Source\PSoC5/FanController.c ****             {
1102:Generated_Source\PSoC5/FanController.c ****                 /* If DMA writes to actualPeriodDma2 (DMA2 state) then read
1103:Generated_Source\PSoC5/FanController.c ****                 * actualPeriodDma1.
1104:Generated_Source\PSoC5/FanController.c ****                 */
1105:Generated_Source\PSoC5/FanController.c ****                 if(FanController_fanControl.actualPeriodDma1[fanNumber - 1u] != 0u)
1106:Generated_Source\PSoC5/FanController.c ****                 {
1107:Generated_Source\PSoC5/FanController.c ****                     /* Calculate RPM from value measured bu tachometer counter */
1108:Generated_Source\PSoC5/FanController.c ****                     actualSpeed = (uint16) (FanController_RPM_PERIOD_CONV_FACTOR /
1109:Generated_Source\PSoC5/FanController.c ****                         (uint32) FanController_fanControl.actualPeriodDma1[fanNumber - 1u]);
1110:Generated_Source\PSoC5/FanController.c ****                 }
1111:Generated_Source\PSoC5/FanController.c ****             }
1112:Generated_Source\PSoC5/FanController.c **** 
1113:Generated_Source\PSoC5/FanController.c ****         #else
1114:Generated_Source\PSoC5/FanController.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 21


1115:Generated_Source\PSoC5/FanController.c ****             if(FanController_fanControl.actualPeriod[fanNumber - 1u] != 0u)
1116:Generated_Source\PSoC5/FanController.c ****             {
1117:Generated_Source\PSoC5/FanController.c ****                 /* Calculate RPM from value measured by tachometer counter */
1118:Generated_Source\PSoC5/FanController.c ****                 actualSpeed = (uint16) (FanController_RPM_PERIOD_CONV_FACTOR /
1119:Generated_Source\PSoC5/FanController.c ****                     (uint32) FanController_fanControl.actualPeriod[fanNumber - 1u]);
1120:Generated_Source\PSoC5/FanController.c ****             }
1121:Generated_Source\PSoC5/FanController.c **** 
1122:Generated_Source\PSoC5/FanController.c ****         #endif /* (CY_PSOC3) */
1123:Generated_Source\PSoC5/FanController.c ****     }
1124:Generated_Source\PSoC5/FanController.c **** 
1125:Generated_Source\PSoC5/FanController.c ****     return(actualSpeed);
1126:Generated_Source\PSoC5/FanController.c **** }
1127:Generated_Source\PSoC5/FanController.c **** 
1128:Generated_Source\PSoC5/FanController.c **** 
1129:Generated_Source\PSoC5/FanController.c **** #if (FanController_IS_AUTO_HARDWARE_MODE)
1130:Generated_Source\PSoC5/FanController.c ****     /******************************************************************************
1131:Generated_Source\PSoC5/FanController.c ****     * Function Name: FanController_OverrideAutomaticControl
1132:Generated_Source\PSoC5/FanController.c ****     *******************************************************************************
1133:Generated_Source\PSoC5/FanController.c ****     *
1134:Generated_Source\PSoC5/FanController.c ****     * Summary:
1135:Generated_Source\PSoC5/FanController.c ****     *  Allows firmware to take over fan control when hardware controlled fan mode
1136:Generated_Source\PSoC5/FanController.c ****     *  is enabled. That is, directly control fan speed using the SetDutyCycle() API.
1137:Generated_Source\PSoC5/FanController.c ****     *  This API is not available if firmware controlled fan mode is selected.
1138:Generated_Source\PSoC5/FanController.c ****     *
1139:Generated_Source\PSoC5/FanController.c ****     * Parameters:
1140:Generated_Source\PSoC5/FanController.c ****     *  uint8 override
1141:Generated_Source\PSoC5/FanController.c ****     *   non-zero = firmware assumes control of fans
1142:Generated_Source\PSoC5/FanController.c ****     *   zero     = hardware assumes control of fans
1143:Generated_Source\PSoC5/FanController.c ****     *
1144:Generated_Source\PSoC5/FanController.c ****     * Return:
1145:Generated_Source\PSoC5/FanController.c ****     *  None
1146:Generated_Source\PSoC5/FanController.c ****     *
1147:Generated_Source\PSoC5/FanController.c ****     * Side Effects:
1148:Generated_Source\PSoC5/FanController.c ****     *  None
1149:Generated_Source\PSoC5/FanController.c ****     ******************************************************************************/
1150:Generated_Source\PSoC5/FanController.c **** 
1151:Generated_Source\PSoC5/FanController.c ****     void FanController_OverrideAutomaticControl(uint8 override)
1152:Generated_Source\PSoC5/FanController.c ****                                 
1153:Generated_Source\PSoC5/FanController.c ****     {
1154:Generated_Source\PSoC5/FanController.c ****         uint8 interruptState = CyEnterCriticalSection();
1155:Generated_Source\PSoC5/FanController.c **** 
1156:Generated_Source\PSoC5/FanController.c ****         if(override != 0u)
1157:Generated_Source\PSoC5/FanController.c ****         {
1158:Generated_Source\PSoC5/FanController.c ****             FanController_GLOBAL_CONTROL_REG |= FanController_OVERRIDE;
1159:Generated_Source\PSoC5/FanController.c ****         }
1160:Generated_Source\PSoC5/FanController.c ****         else
1161:Generated_Source\PSoC5/FanController.c ****         {
1162:Generated_Source\PSoC5/FanController.c ****             FanController_GLOBAL_CONTROL_REG &= ((uint8) ~FanController_OVERRIDE);
1163:Generated_Source\PSoC5/FanController.c ****         }
1164:Generated_Source\PSoC5/FanController.c **** 
1165:Generated_Source\PSoC5/FanController.c ****         CyExitCriticalSection(interruptState);
1166:Generated_Source\PSoC5/FanController.c ****     }
1167:Generated_Source\PSoC5/FanController.c **** 
1168:Generated_Source\PSoC5/FanController.c **** #endif /* (FanController_IS_AUTO_HARDWARE_MODE) */
1169:Generated_Source\PSoC5/FanController.c **** 
1170:Generated_Source\PSoC5/FanController.c **** 
1171:Generated_Source\PSoC5/FanController.c **** #if(FanController_IS_AUTO_FIRMWARE_MODE)
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 22


1172:Generated_Source\PSoC5/FanController.c ****     /******************************************************************************
1173:Generated_Source\PSoC5/FanController.c ****     * Function Name: FanController_SetSaturation
1174:Generated_Source\PSoC5/FanController.c ****     *******************************************************************************
1175:Generated_Source\PSoC5/FanController.c ****     *
1176:Generated_Source\PSoC5/FanController.c ****     * Summary:
1177:Generated_Source\PSoC5/FanController.c ****     *  Changes the PID controller output saturation. This bounds the output PWM to
1178:Generated_Source\PSoC5/FanController.c ****     *  the fan and prevents what is known as integrator windup.
1179:Generated_Source\PSoC5/FanController.c ****     *
1180:Generated_Source\PSoC5/FanController.c ****     * Parameters:
1181:Generated_Source\PSoC5/FanController.c ****     *  uint8 fanNum : Valid range is 1..16 but should not exceed the number of fans
1182:Generated_Source\PSoC5/FanController.c ****     *                 in the system.
1183:Generated_Source\PSoC5/FanController.c ****     *  uint16 satH  : The upper threshold for saturation. Valid range is 0 to
1184:Generated_Source\PSoC5/FanController.c ****     *                 65535. A value of 0 represents 0% of the duty cycle. A value
1185:Generated_Source\PSoC5/FanController.c ****     *                 of 65535 represents 100% duty cycle.
1186:Generated_Source\PSoC5/FanController.c ****     *
1187:Generated_Source\PSoC5/FanController.c ****     *  uint16 satL  : The lower threshold for saturation. Valid range is 0 to
1188:Generated_Source\PSoC5/FanController.c ****     *                 65535. A value of 0 represents 0% of the duty cycle. A value
1189:Generated_Source\PSoC5/FanController.c ****     *                 of 65535 represents 100% duty cycle.
1190:Generated_Source\PSoC5/FanController.c ****     *
1191:Generated_Source\PSoC5/FanController.c ****     * Return:
1192:Generated_Source\PSoC5/FanController.c ****     *  None
1193:Generated_Source\PSoC5/FanController.c ****     *
1194:Generated_Source\PSoC5/FanController.c ****     * Side Effects:
1195:Generated_Source\PSoC5/FanController.c ****     *  None
1196:Generated_Source\PSoC5/FanController.c ****     *
1197:Generated_Source\PSoC5/FanController.c ****     ****************************************************************************/
1198:Generated_Source\PSoC5/FanController.c ****     void FanController_SetSaturation(uint8 fanNum, uint16 satH, uint16 satL)
1199:Generated_Source\PSoC5/FanController.c ****                                                     
1200:Generated_Source\PSoC5/FanController.c ****     {
1201:Generated_Source\PSoC5/FanController.c ****         uint8 interruptState;
1202:Generated_Source\PSoC5/FanController.c ****         uint32 tmpOutL;
1203:Generated_Source\PSoC5/FanController.c ****         uint32 tmpOutH;
1204:Generated_Source\PSoC5/FanController.c **** 
1205:Generated_Source\PSoC5/FanController.c ****         if((fanNum - 1u) < FanController_NUMBER_OF_FANS)
1206:Generated_Source\PSoC5/FanController.c ****         {
1207:Generated_Source\PSoC5/FanController.c ****             /* Calculate PID Constants for fan and store them into temporary variables to
1208:Generated_Source\PSoC5/FanController.c ****             * be later written to PID vars. This is done so to not disable interrupt for a
1209:Generated_Source\PSoC5/FanController.c ****             * long time.
1210:Generated_Source\PSoC5/FanController.c ****             */
1211:Generated_Source\PSoC5/FanController.c ****             tmpOutH = ((FanController_PWM_PERIOD * ((uint32) (((uint32) 1u) << FanController_PID_PO
1212:Generated_Source\PSoC5/FanController.c ****                                            FanController_MAX_GAIN) * satH;
1213:Generated_Source\PSoC5/FanController.c ****             tmpOutL = ((FanController_PWM_PERIOD * ((uint32) (((uint32) 1u) << FanController_PID_PO
1214:Generated_Source\PSoC5/FanController.c ****                                            FanController_MAX_GAIN) * satL;
1215:Generated_Source\PSoC5/FanController.c **** 
1216:Generated_Source\PSoC5/FanController.c ****             /* Disable interrupts while updating PID constants */
1217:Generated_Source\PSoC5/FanController.c ****             interruptState = CyEnterCriticalSection();
1218:Generated_Source\PSoC5/FanController.c **** 
1219:Generated_Source\PSoC5/FanController.c ****             FanController_outputSatH[fanNum - 1u] = tmpOutH;
1220:Generated_Source\PSoC5/FanController.c ****             FanController_outputSatL[fanNum - 1u] = tmpOutL;
1221:Generated_Source\PSoC5/FanController.c **** 
1222:Generated_Source\PSoC5/FanController.c ****             CyExitCriticalSection(interruptState);
1223:Generated_Source\PSoC5/FanController.c ****         }
1224:Generated_Source\PSoC5/FanController.c ****     }
1225:Generated_Source\PSoC5/FanController.c **** 
1226:Generated_Source\PSoC5/FanController.c **** 
1227:Generated_Source\PSoC5/FanController.c ****     /******************************************************************************
1228:Generated_Source\PSoC5/FanController.c ****     * Function Name: FanController_SetPID
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 23


1229:Generated_Source\PSoC5/FanController.c ****     *******************************************************************************
1230:Generated_Source\PSoC5/FanController.c ****     *
1231:Generated_Source\PSoC5/FanController.c ****     * Summary:
1232:Generated_Source\PSoC5/FanController.c ****     *  Changes the PID controller coefficients for the controlled fan. The
1233:Generated_Source\PSoC5/FanController.c ****     *  coefficients are integers that are proportional to the gain.
1234:Generated_Source\PSoC5/FanController.c ****     *
1235:Generated_Source\PSoC5/FanController.c ****     * Parameters:
1236:Generated_Source\PSoC5/FanController.c ****     *  uint8 fanNum : Valid range is 1..16 but should not exceed the number of fans
1237:Generated_Source\PSoC5/FanController.c ****     *                 in the system.
1238:Generated_Source\PSoC5/FanController.c ****     *  uint16 kp    : Proportional gain. Valid range is 0 to 65535. A value of 0
1239:Generated_Source\PSoC5/FanController.c ****     *                 represents 0% gain. A value of 65535 represents 100% gain.
1240:Generated_Source\PSoC5/FanController.c ****     *
1241:Generated_Source\PSoC5/FanController.c ****     *  uint16 ki    : Integral gain. Valid range is 0 to 65535. A value of 0
1242:Generated_Source\PSoC5/FanController.c ****     *                 represents 0% gain. A value of 65535 represents 100% gain.
1243:Generated_Source\PSoC5/FanController.c ****     *
1244:Generated_Source\PSoC5/FanController.c ****     *  uint16 kd    : Derivative gain. Valid range is 0 to 65535. A value of 0
1245:Generated_Source\PSoC5/FanController.c ****     *                 represents 0% gain. A value of 65535 represents 100% gain.
1246:Generated_Source\PSoC5/FanController.c ****     *
1247:Generated_Source\PSoC5/FanController.c ****     * Return:
1248:Generated_Source\PSoC5/FanController.c ****     *  None
1249:Generated_Source\PSoC5/FanController.c ****     *
1250:Generated_Source\PSoC5/FanController.c ****     * Side Effects:
1251:Generated_Source\PSoC5/FanController.c ****     *  None
1252:Generated_Source\PSoC5/FanController.c ****     *
1253:Generated_Source\PSoC5/FanController.c ****     ****************************************************************************/
1254:Generated_Source\PSoC5/FanController.c ****     void FanController_SetPID(uint8 fanNum, uint16 kp, uint16 ki, uint16 kd)
1255:Generated_Source\PSoC5/FanController.c ****                                                                         
1256:Generated_Source\PSoC5/FanController.c ****     {
1257:Generated_Source\PSoC5/FanController.c ****         uint8 interruptState;
1258:Generated_Source\PSoC5/FanController.c ****         /* Variables for temporary storing of a calculated PID constants */
1259:Generated_Source\PSoC5/FanController.c ****         int16 tmpA1;
1260:Generated_Source\PSoC5/FanController.c ****         int16 tmpA2;
1261:Generated_Source\PSoC5/FanController.c ****         int16 tmpA3;
1262:Generated_Source\PSoC5/FanController.c **** 
1263:Generated_Source\PSoC5/FanController.c ****         if((fanNum - 1u) < FanController_NUMBER_OF_FANS)
1264:Generated_Source\PSoC5/FanController.c ****         {
1265:Generated_Source\PSoC5/FanController.c ****             /* Calculate PID Constants for fan and store them into temporary variables to
1266:Generated_Source\PSoC5/FanController.c ****             * be later written to PID vars. This is done so to not disable interrupt for a
1267:Generated_Source\PSoC5/FanController.c ****             * long time.
1268:Generated_Source\PSoC5/FanController.c ****             */
1269:Generated_Source\PSoC5/FanController.c ****             tmpA1 = (int16) ((((int32) kp + (int32) ki + (int32) kd) * ((int32) FanController_GAIN_
1270:Generated_Source\PSoC5/FanController.c ****                     (int32) FanController_MAX_GAIN);
1271:Generated_Source\PSoC5/FanController.c ****             tmpA2 = (int16) (((-((int32) kp + (2 * (int32) kd))) * ((int32) FanController_GAIN_MULT
1272:Generated_Source\PSoC5/FanController.c ****                     (int32) FanController_MAX_GAIN);
1273:Generated_Source\PSoC5/FanController.c ****             tmpA3 = (int16) ((((int32) kd) * ((int32) FanController_GAIN_MULTIPLIER )) /
1274:Generated_Source\PSoC5/FanController.c ****                     (int32) FanController_MAX_GAIN);
1275:Generated_Source\PSoC5/FanController.c **** 
1276:Generated_Source\PSoC5/FanController.c ****             /* Disable interrupts while updating PID constants */
1277:Generated_Source\PSoC5/FanController.c ****             interruptState = CyEnterCriticalSection();
1278:Generated_Source\PSoC5/FanController.c **** 
1279:Generated_Source\PSoC5/FanController.c ****             FanController_pidA1[fanNum - 1u] = tmpA1;
1280:Generated_Source\PSoC5/FanController.c ****             FanController_pidA2[fanNum - 1u] = tmpA2;
1281:Generated_Source\PSoC5/FanController.c ****             FanController_pidA3[fanNum - 1u] = tmpA3;
1282:Generated_Source\PSoC5/FanController.c **** 
1283:Generated_Source\PSoC5/FanController.c ****             CyExitCriticalSection(interruptState);
1284:Generated_Source\PSoC5/FanController.c ****         }
1285:Generated_Source\PSoC5/FanController.c ****     }
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 24


1286:Generated_Source\PSoC5/FanController.c **** 
1287:Generated_Source\PSoC5/FanController.c **** 
1288:Generated_Source\PSoC5/FanController.c **** #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
1289:Generated_Source\PSoC5/FanController.c **** 
1290:Generated_Source\PSoC5/FanController.c **** #if (!CY_PSOC4)
1291:Generated_Source\PSoC5/FanController.c **** 
1292:Generated_Source\PSoC5/FanController.c ****     /******************************************************************************
1293:Generated_Source\PSoC5/FanController.c ****     * Function Name: FanController_SetupDMA
1294:Generated_Source\PSoC5/FanController.c ****     *******************************************************************************
1295:Generated_Source\PSoC5/FanController.c ****     *
1296:Generated_Source\PSoC5/FanController.c ****     * Summary:
1297:Generated_Source\PSoC5/FanController.c ****     *  This is a private API not exposed to users.
1298:Generated_Source\PSoC5/FanController.c ****     *
1299:Generated_Source\PSoC5/FanController.c ****     *  Sets up the DMA controllers depending on firmware or hardware controlled fan
1300:Generated_Source\PSoC5/FanController.c ****     *  mode. The number and the sequence of the transaction descriptors depends on
1301:Generated_Source\PSoC5/FanController.c ****     *  the number of fans in the system.
1302:Generated_Source\PSoC5/FanController.c ****     *
1303:Generated_Source\PSoC5/FanController.c ****     *  The NRQ output of the DMA controllers is used in different ways depending
1304:Generated_Source\PSoC5/FanController.c ****     *  on the fan control mode:
1305:Generated_Source\PSoC5/FanController.c ****     *
1306:Generated_Source\PSoC5/FanController.c ****     *  1) In firmware controlled fan mode, the NRQ of the TachOutDMA is asserted
1307:Generated_Source\PSoC5/FanController.c ****     *     only once at the end of the TD chain. This is used to generate the
1308:Generated_Source\PSoC5/FanController.c ****     *     end-of-cylce (eoc) pulse for the component.
1309:Generated_Source\PSoC5/FanController.c ****     *
1310:Generated_Source\PSoC5/FanController.c ****     *  2) In hardware controlled fan mode, the NRQ of the TachOutDMA is asserted
1311:Generated_Source\PSoC5/FanController.c ****     *     after every TD and connects to the DRQ of the TachInDMA. This ensures
1312:Generated_Source\PSoC5/FanController.c ****     *     that reading desired speeds and hysteresis into the tachometer block
1313:Generated_Source\PSoC5/FanController.c ****     *     occurs automatically when the fan input is changed. In this
1314:Generated_Source\PSoC5/FanController.c ****     *     configuration, the NRQ output of the TachInDMA is used to generate the
1315:Generated_Source\PSoC5/FanController.c ****     *     end-of-cylce (eoc) pulse for the component.
1316:Generated_Source\PSoC5/FanController.c ****     *
1317:Generated_Source\PSoC5/FanController.c ****     * Parameters:
1318:Generated_Source\PSoC5/FanController.c ****     *  None
1319:Generated_Source\PSoC5/FanController.c ****     *
1320:Generated_Source\PSoC5/FanController.c ****     * Return:
1321:Generated_Source\PSoC5/FanController.c ****     *  None
1322:Generated_Source\PSoC5/FanController.c ****     *
1323:Generated_Source\PSoC5/FanController.c ****     * Side Effects:
1324:Generated_Source\PSoC5/FanController.c ****     *  None
1325:Generated_Source\PSoC5/FanController.c ****     *
1326:Generated_Source\PSoC5/FanController.c ****     ****************************************************************************/
1327:Generated_Source\PSoC5/FanController.c ****     static void FanController_SetupDMA(void) CYREENTRANT
1328:Generated_Source\PSoC5/FanController.c ****     {
1329:Generated_Source\PSoC5/FanController.c ****         uint8 counti;
1330:Generated_Source\PSoC5/FanController.c ****         uint8 fanNum;
1331:Generated_Source\PSoC5/FanController.c ****         
1332:Generated_Source\PSoC5/FanController.c ****         /* DMA transfer descriptors used by the tachometer block for fan speed 
1333:Generated_Source\PSoC5/FanController.c ****         * control/reporting.
1334:Generated_Source\PSoC5/FanController.c ****         */
1335:Generated_Source\PSoC5/FanController.c ****         static FanController_fanTdOutStruct FanController_fanOutTds[FanController_NUM_OUT_TDS];
1336:Generated_Source\PSoC5/FanController.c ****     
1337:Generated_Source\PSoC5/FanController.c ****         #if(FanController_IS_AUTO_HARDWARE_MODE)
1338:Generated_Source\PSoC5/FanController.c **** 
1339:Generated_Source\PSoC5/FanController.c ****             /* DMA transfer descriptors used by the tachometer block for fan speed 
1340:Generated_Source\PSoC5/FanController.c ****             * tunning. 
1341:Generated_Source\PSoC5/FanController.c ****             */
1342:Generated_Source\PSoC5/FanController.c ****             static FanController_fanTdInStruct FanController_fanInTds[FanController_NUMBER_OF_FANS]
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 25


1343:Generated_Source\PSoC5/FanController.c **** 
1344:Generated_Source\PSoC5/FanController.c ****         #endif /* FanController_IS_AUTO_HARDWARE_MODE */
1345:Generated_Source\PSoC5/FanController.c **** 
1346:Generated_Source\PSoC5/FanController.c ****         /* Get DMA controller channels allocated */
1347:Generated_Source\PSoC5/FanController.c ****         /* PSoC 3 family memory spaces */
1348:Generated_Source\PSoC5/FanController.c ****         #if defined(__C51__)
1349:Generated_Source\PSoC5/FanController.c **** 
1350:Generated_Source\PSoC5/FanController.c ****             FanController_TachOutDMA_channel =   FanController_TachOutDMA_DmaInitialize(
1351:Generated_Source\PSoC5/FanController.c ****                                                     2u,
1352:Generated_Source\PSoC5/FanController.c ****                                                     1u,
1353:Generated_Source\PSoC5/FanController.c ****                                                     HI16(CYDEV_PERIPH_BASE),
1354:Generated_Source\PSoC5/FanController.c ****                                                     HI16(CYDEV_SRAM_BASE));
1355:Generated_Source\PSoC5/FanController.c **** 
1356:Generated_Source\PSoC5/FanController.c ****             #if (FanController_IS_AUTO_HARDWARE_MODE)
1357:Generated_Source\PSoC5/FanController.c **** 
1358:Generated_Source\PSoC5/FanController.c ****                 FanController_TachInDMA_channel =    FanController_TachInDMA_DmaInitialize(
1359:Generated_Source\PSoC5/FanController.c ****                                                         2u,
1360:Generated_Source\PSoC5/FanController.c ****                                                         1u,
1361:Generated_Source\PSoC5/FanController.c ****                                                         HI16(CYDEV_SRAM_BASE),
1362:Generated_Source\PSoC5/FanController.c ****                                                         HI16(CYDEV_PERIPH_BASE));
1363:Generated_Source\PSoC5/FanController.c ****             #endif /* FanController_IS_AUTO_HARDWARE_MODE */
1364:Generated_Source\PSoC5/FanController.c **** 
1365:Generated_Source\PSoC5/FanController.c ****         /* PSoC 5 family memory spaces */
1366:Generated_Source\PSoC5/FanController.c ****         #else
1367:Generated_Source\PSoC5/FanController.c **** 
1368:Generated_Source\PSoC5/FanController.c ****             FanController_TachOutDMA_channel =   FanController_TachOutDMA_DmaInitialize(
1369:Generated_Source\PSoC5/FanController.c ****                                                     2u,
1370:Generated_Source\PSoC5/FanController.c ****                                                     1u,
1371:Generated_Source\PSoC5/FanController.c ****                                                     HI16(FanController_TACH_ACTUAL_PERIOD_PTR),
1372:Generated_Source\PSoC5/FanController.c ****                                                     HI16(((uint32)&FanController_fanControl.actualP
1373:Generated_Source\PSoC5/FanController.c **** 
1374:Generated_Source\PSoC5/FanController.c ****             #if (FanController_IS_AUTO_HARDWARE_MODE)
1375:Generated_Source\PSoC5/FanController.c **** 
1376:Generated_Source\PSoC5/FanController.c ****                 FanController_TachInDMA_channel =    FanController_TachInDMA_DmaInitialize(
1377:Generated_Source\PSoC5/FanController.c ****                                                         2u,
1378:Generated_Source\PSoC5/FanController.c ****                                                         1u,
1379:Generated_Source\PSoC5/FanController.c ****                                                         HI16(((uint32)&FanController_fanControl.des
1380:Generated_Source\PSoC5/FanController.c ****                                                         HI16(FanController_TACH_DESIRED_PERIOD_PTR)
1381:Generated_Source\PSoC5/FanController.c ****             #endif /* FanController_IS_AUTO_HARDWARE_MODE */
1382:Generated_Source\PSoC5/FanController.c ****         #endif /* __C51__ */
1383:Generated_Source\PSoC5/FanController.c **** 
1384:Generated_Source\PSoC5/FanController.c ****         /* Get transaction descriptors allocated */
1385:Generated_Source\PSoC5/FanController.c ****         for (counti = 0u; counti < FanController_NUMBER_OF_FANS; counti++)
1386:Generated_Source\PSoC5/FanController.c ****         {
1387:Generated_Source\PSoC5/FanController.c ****             #if (CY_PSOC3)
1388:Generated_Source\PSoC5/FanController.c ****                 /* For PSoC 3 it is required to allocate two times more TDs */
1389:Generated_Source\PSoC5/FanController.c ****                 FanController_fanOutTds[counti].setActualPeriodTD = CyDmaTdAllocate();
1390:Generated_Source\PSoC5/FanController.c ****                 FanController_fanOutTds[counti + FanController_NUMBER_OF_FANS].setActualPeriodTD =
1391:Generated_Source\PSoC5/FanController.c ****                         CyDmaTdAllocate();
1392:Generated_Source\PSoC5/FanController.c ****             #else
1393:Generated_Source\PSoC5/FanController.c ****                 FanController_fanOutTds[counti].setActualPeriodTD = CyDmaTdAllocate();
1394:Generated_Source\PSoC5/FanController.c ****             #endif /* (CY_PSOC3) */
1395:Generated_Source\PSoC5/FanController.c **** 
1396:Generated_Source\PSoC5/FanController.c ****             #if(FanController_IS_AUTO_HARDWARE_MODE)
1397:Generated_Source\PSoC5/FanController.c ****                 FanController_fanInTds[counti].getDesiredPeriodTD = CyDmaTdAllocate();
1398:Generated_Source\PSoC5/FanController.c ****                 FanController_fanInTds[counti].getToleranceTD = CyDmaTdAllocate();
1399:Generated_Source\PSoC5/FanController.c ****             #endif /* FanController_IS_AUTO_HARDWARE_MODE */
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 26


1400:Generated_Source\PSoC5/FanController.c ****         }
1401:Generated_Source\PSoC5/FanController.c **** 
1402:Generated_Source\PSoC5/FanController.c ****         /* Configure the transaction descriptors and sequence depending on fan control mode */
1403:Generated_Source\PSoC5/FanController.c ****         for (counti = 0u; counti < FanController_NUMBER_OF_FANS; counti++)
1404:Generated_Source\PSoC5/FanController.c ****         {
1405:Generated_Source\PSoC5/FanController.c ****             fanNum = FanController_NUMBER_OF_FANS - counti - 1u;
1406:Generated_Source\PSoC5/FanController.c **** 
1407:Generated_Source\PSoC5/FanController.c ****             /* Put current actual tachometer periods (hardware and firmware
1408:Generated_Source\PSoC5/FanController.c ****             * controlled fan modes) to SRAM for the GetActualSpeed API.
1409:Generated_Source\PSoC5/FanController.c ****             */
1410:Generated_Source\PSoC5/FanController.c ****             if(fanNum == 0u)
1411:Generated_Source\PSoC5/FanController.c ****             {
1412:Generated_Source\PSoC5/FanController.c ****                 /* TDs need to be sequenced in reverse to match the Tachometer hardware
1413:Generated_Source\PSoC5/FanController.c ****                 * block address bus sequence. Next TD after fan[0] is final fan:
1414:Generated_Source\PSoC5/FanController.c ****                 fan[NUMBER_OF_FANS-1].
1415:Generated_Source\PSoC5/FanController.c ****                 */
1416:Generated_Source\PSoC5/FanController.c ****                 #if (CY_PSOC3)
1417:Generated_Source\PSoC5/FanController.c **** 
1418:Generated_Source\PSoC5/FanController.c ****                     /* For PSoC 3 the DMA can write to two RAM locations and therefore it
1419:Generated_Source\PSoC5/FanController.c ****                     * uses two times more TDs. The configuration is a bit complex.
1420:Generated_Source\PSoC5/FanController.c ****                     * Short explanation is for a set of 16 fans the TD[0] will be chained to
1421:Generated_Source\PSoC5/FanController.c ****                     * TD[31] and TD[16] will be chained to TD[15]. It's because TD[0] to TD[15]
1422:Generated_Source\PSoC5/FanController.c ****                     * are used by DMA2 and TD[16] to TD[31] are used by DMA1. DMA1 will write
1423:Generated_Source\PSoC5/FanController.c ****                     * measured data to .actualPeriodDma1[] and DMA2 will write to
1424:Generated_Source\PSoC5/FanController.c ****                     * .actualPeriodDma2[].
1425:Generated_Source\PSoC5/FanController.c ****                     */
1426:Generated_Source\PSoC5/FanController.c ****                     (void) CyDmaTdSetConfiguration(FanController_fanOutTds[fanNum].setActualPeriodT
1427:Generated_Source\PSoC5/FanController.c ****                                             2u,
1428:Generated_Source\PSoC5/FanController.c ****                                             FanController_fanOutTds[
1429:Generated_Source\PSoC5/FanController.c ****                             (FanController_NUMBER_OF_FANS +FanController_NUMBER_OF_FANS) - 1u].setA
1430:Generated_Source\PSoC5/FanController.c ****                                             TD_INC_DST_ADR | FanController_TD_SWAP_ENDIAN_FLAG  |
1431:Generated_Source\PSoC5/FanController.c ****                                             /* Assert NRQ at final TD in hardware and firmware cont
1432:Generated_Source\PSoC5/FanController.c ****                                             FanController_TachOutDMA__TD_TERMOUT_EN);
1433:Generated_Source\PSoC5/FanController.c **** 
1434:Generated_Source\PSoC5/FanController.c ****                     (void) CyDmaTdSetConfiguration(
1435:Generated_Source\PSoC5/FanController.c ****                                 FanController_fanOutTds[FanController_NUMBER_OF_FANS].setActualPeri
1436:Generated_Source\PSoC5/FanController.c ****                                 2u,
1437:Generated_Source\PSoC5/FanController.c ****                                 FanController_fanOutTds[FanController_NUMBER_OF_FANS - 1u].setActua
1438:Generated_Source\PSoC5/FanController.c ****                                 TD_INC_DST_ADR | FanController_TD_SWAP_ENDIAN_FLAG  |
1439:Generated_Source\PSoC5/FanController.c ****                                 /* Assert NRQ at final TD in hardware and firmware controlled fan m
1440:Generated_Source\PSoC5/FanController.c ****                                 FanController_TachOutDMA__TD_TERMOUT_EN);
1441:Generated_Source\PSoC5/FanController.c **** 
1442:Generated_Source\PSoC5/FanController.c ****                 #else
1443:Generated_Source\PSoC5/FanController.c **** 
1444:Generated_Source\PSoC5/FanController.c ****                     /* For PSoC 5LP or PSoC 4 there is no need of two TD sets */
1445:Generated_Source\PSoC5/FanController.c ****                     (void) CyDmaTdSetConfiguration(FanController_fanOutTds[fanNum].setActualPeriodT
1446:Generated_Source\PSoC5/FanController.c ****                                     2u,
1447:Generated_Source\PSoC5/FanController.c ****                                     FanController_fanOutTds[FanController_NUMBER_OF_FANS - 1u].setA
1448:Generated_Source\PSoC5/FanController.c ****                                     TD_INC_DST_ADR | FanController_TD_SWAP_ENDIAN_FLAG  |
1449:Generated_Source\PSoC5/FanController.c ****                                     /* Assert NRQ at final TD in hardware and firmware controlled f
1450:Generated_Source\PSoC5/FanController.c ****                                     FanController_TachOutDMA__TD_TERMOUT_EN);
1451:Generated_Source\PSoC5/FanController.c **** 
1452:Generated_Source\PSoC5/FanController.c ****                 #endif /* (CY_PSOC3) */
1453:Generated_Source\PSoC5/FanController.c ****             }
1454:Generated_Source\PSoC5/FanController.c ****             else
1455:Generated_Source\PSoC5/FanController.c ****             {
1456:Generated_Source\PSoC5/FanController.c ****                 /* TDs need to be sequenced in reverse to match the Tachometer hardware
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 27


1457:Generated_Source\PSoC5/FanController.c ****                 * block address bus sequence. Next TD after fan[n] is fan[n-1].
1458:Generated_Source\PSoC5/FanController.c ****                 */
1459:Generated_Source\PSoC5/FanController.c ****                 #if (FanController_IS_AUTO_HARDWARE_MODE)
1460:Generated_Source\PSoC5/FanController.c ****                     #if (CY_PSOC3)
1461:Generated_Source\PSoC5/FanController.c **** 
1462:Generated_Source\PSoC5/FanController.c ****                         (void) CyDmaTdSetConfiguration(FanController_fanOutTds[fanNum].setActualPer
1463:Generated_Source\PSoC5/FanController.c ****                                     2u,
1464:Generated_Source\PSoC5/FanController.c ****                                     FanController_fanOutTds[fanNum - 1u].setActualPeriodTD,
1465:Generated_Source\PSoC5/FanController.c ****                                     TD_INC_DST_ADR | FanController_TD_SWAP_ENDIAN_FLAG  |
1466:Generated_Source\PSoC5/FanController.c ****                                     /* Also assert NRQ at end of each TD in hardware controlled fan
1467:Generated_Source\PSoC5/FanController.c ****                                     FanController_TachOutDMA__TD_TERMOUT_EN);
1468:Generated_Source\PSoC5/FanController.c **** 
1469:Generated_Source\PSoC5/FanController.c ****                         (void) CyDmaTdSetConfiguration(
1470:Generated_Source\PSoC5/FanController.c ****                             FanController_fanOutTds[FanController_NUMBER_OF_FANS + fanNum].setActua
1471:Generated_Source\PSoC5/FanController.c ****                             2u,
1472:Generated_Source\PSoC5/FanController.c ****                             FanController_fanOutTds[
1473:Generated_Source\PSoC5/FanController.c ****                                 (FanController_NUMBER_OF_FANS + fanNum) - 1u].setActualPeriodTD,
1474:Generated_Source\PSoC5/FanController.c ****                             TD_INC_DST_ADR | FanController_TD_SWAP_ENDIAN_FLAG  |
1475:Generated_Source\PSoC5/FanController.c ****                             /* Also assert NRQ at end of each TD in hardware controlled fan mode */
1476:Generated_Source\PSoC5/FanController.c ****                             FanController_TachOutDMA__TD_TERMOUT_EN);
1477:Generated_Source\PSoC5/FanController.c **** 
1478:Generated_Source\PSoC5/FanController.c ****                     #else
1479:Generated_Source\PSoC5/FanController.c **** 
1480:Generated_Source\PSoC5/FanController.c ****                         (void) CyDmaTdSetConfiguration(FanController_fanOutTds[fanNum].setActualPer
1481:Generated_Source\PSoC5/FanController.c ****                                     2u,
1482:Generated_Source\PSoC5/FanController.c ****                                     FanController_fanOutTds[fanNum - 1u].setActualPeriodTD,
1483:Generated_Source\PSoC5/FanController.c ****                                     TD_INC_DST_ADR | FanController_TD_SWAP_ENDIAN_FLAG  |
1484:Generated_Source\PSoC5/FanController.c ****                                     /* Also assert NRQ at end of each TD in hardware controlled fan
1485:Generated_Source\PSoC5/FanController.c ****                                     FanController_TachOutDMA__TD_TERMOUT_EN);
1486:Generated_Source\PSoC5/FanController.c **** 
1487:Generated_Source\PSoC5/FanController.c ****                     #endif /* (CY_PSOC3) */
1488:Generated_Source\PSoC5/FanController.c **** 
1489:Generated_Source\PSoC5/FanController.c ****                 #else
1490:Generated_Source\PSoC5/FanController.c ****                     #if (CY_PSOC3)
1491:Generated_Source\PSoC5/FanController.c **** 
1492:Generated_Source\PSoC5/FanController.c ****                         (void) CyDmaTdSetConfiguration(FanController_fanOutTds[fanNum].setActualPer
1493:Generated_Source\PSoC5/FanController.c ****                                     2u,
1494:Generated_Source\PSoC5/FanController.c ****                                     FanController_fanOutTds[fanNum - 1u].setActualPeriodTD,
1495:Generated_Source\PSoC5/FanController.c ****                                     TD_INC_DST_ADR |
1496:Generated_Source\PSoC5/FanController.c ****                                     /* Don't assert NRQ at end of each TD in firmware controlled fa
1497:Generated_Source\PSoC5/FanController.c ****                                     FanController_TD_SWAP_ENDIAN_FLAG);
1498:Generated_Source\PSoC5/FanController.c **** 
1499:Generated_Source\PSoC5/FanController.c ****                         (void) CyDmaTdSetConfiguration(
1500:Generated_Source\PSoC5/FanController.c ****                             FanController_fanOutTds[FanController_NUMBER_OF_FANS + fanNum].setActua
1501:Generated_Source\PSoC5/FanController.c ****                             2u,
1502:Generated_Source\PSoC5/FanController.c ****                             FanController_fanOutTds[
1503:Generated_Source\PSoC5/FanController.c ****                                 (FanController_NUMBER_OF_FANS + fanNum) - 1u].setActualPeriodTD,
1504:Generated_Source\PSoC5/FanController.c ****                             TD_INC_DST_ADR |
1505:Generated_Source\PSoC5/FanController.c ****                             /* Don't assert NRQ at end of each TD in firmware controlled fan mode *
1506:Generated_Source\PSoC5/FanController.c ****                             FanController_TD_SWAP_ENDIAN_FLAG);
1507:Generated_Source\PSoC5/FanController.c **** 
1508:Generated_Source\PSoC5/FanController.c ****                     #else
1509:Generated_Source\PSoC5/FanController.c **** 
1510:Generated_Source\PSoC5/FanController.c ****                         (void) CyDmaTdSetConfiguration(FanController_fanOutTds[fanNum].setActualPer
1511:Generated_Source\PSoC5/FanController.c ****                                     2u,
1512:Generated_Source\PSoC5/FanController.c ****                                     FanController_fanOutTds[fanNum - 1u].setActualPeriodTD,
1513:Generated_Source\PSoC5/FanController.c ****                                     TD_INC_DST_ADR |
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 28


1514:Generated_Source\PSoC5/FanController.c ****                                     /* Don't assert NRQ at end of each TD in firmware controlled fa
1515:Generated_Source\PSoC5/FanController.c ****                                     FanController_TD_SWAP_ENDIAN_FLAG);
1516:Generated_Source\PSoC5/FanController.c **** 
1517:Generated_Source\PSoC5/FanController.c ****                     #endif /* (CY_PSOC3) */
1518:Generated_Source\PSoC5/FanController.c ****                 #endif /* FanController_IS_AUTO_HARDWARE_MODE */
1519:Generated_Source\PSoC5/FanController.c ****             }
1520:Generated_Source\PSoC5/FanController.c **** 
1521:Generated_Source\PSoC5/FanController.c ****             /* Get desired tachometer periods and hysteresis (hardware controlled fan mode
1522:Generated_Source\PSoC5/FanController.c ****             * only) from SRAM from the SetActualSpeed API.
1523:Generated_Source\PSoC5/FanController.c ****             */
1524:Generated_Source\PSoC5/FanController.c ****             #if (FanController_IS_AUTO_HARDWARE_MODE)
1525:Generated_Source\PSoC5/FanController.c **** 
1526:Generated_Source\PSoC5/FanController.c ****                 /* Get desired tachometer periods */
1527:Generated_Source\PSoC5/FanController.c ****                 (void) CyDmaTdSetConfiguration(FanController_fanInTds[fanNum].getDesiredPeriodTD,
1528:Generated_Source\PSoC5/FanController.c ****                                     2u,
1529:Generated_Source\PSoC5/FanController.c ****                                     FanController_fanInTds[fanNum].getToleranceTD,
1530:Generated_Source\PSoC5/FanController.c ****                                     TD_INC_SRC_ADR | FanController_TD_SWAP_ENDIAN_FLAG | TD_AUTO_EX
1531:Generated_Source\PSoC5/FanController.c **** 
1532:Generated_Source\PSoC5/FanController.c ****                 /* And get tachometer tolerances - either chain to the next fan OR wrap around to t
1533:Generated_Source\PSoC5/FanController.c ****                 if(fanNum == 0u)
1534:Generated_Source\PSoC5/FanController.c ****                 {
1535:Generated_Source\PSoC5/FanController.c ****                     /* Next TD after fan[0] is final fan: fan[NUMBER_OF_FANS-1] */
1536:Generated_Source\PSoC5/FanController.c ****                     (void) CyDmaTdSetConfiguration(FanController_fanInTds[fanNum].getToleranceTD,
1537:Generated_Source\PSoC5/FanController.c ****                                     2u,
1538:Generated_Source\PSoC5/FanController.c ****                                     FanController_fanInTds[FanController_NUMBER_OF_FANS - 1u].getDe
1539:Generated_Source\PSoC5/FanController.c ****                                     TD_INC_SRC_ADR | FanController_TD_SWAP_ENDIAN_FLAG |
1540:Generated_Source\PSoC5/FanController.c ****                                     FanController_TachInDMA__TD_TERMOUT_EN);  /* Assert NRQ at end 
1541:Generated_Source\PSoC5/FanController.c ****                 }
1542:Generated_Source\PSoC5/FanController.c ****                 else
1543:Generated_Source\PSoC5/FanController.c ****                 {
1544:Generated_Source\PSoC5/FanController.c ****                     /* Next TD after fan[n] is fan[n-1] */
1545:Generated_Source\PSoC5/FanController.c ****                     (void) CyDmaTdSetConfiguration(FanController_fanInTds[fanNum].getToleranceTD,
1546:Generated_Source\PSoC5/FanController.c ****                                     2u,
1547:Generated_Source\PSoC5/FanController.c ****                                     FanController_fanInTds[fanNum - 1u].getDesiredPeriodTD,
1548:Generated_Source\PSoC5/FanController.c ****                                     TD_INC_SRC_ADR |
1549:Generated_Source\PSoC5/FanController.c ****                                     /* Don't assert NRQ on intermediate TDs */
1550:Generated_Source\PSoC5/FanController.c ****                                     FanController_TD_SWAP_ENDIAN_FLAG);
1551:Generated_Source\PSoC5/FanController.c ****                 }
1552:Generated_Source\PSoC5/FanController.c ****             #endif /* FanController_IS_AUTO_HARDWARE_MODE */
1553:Generated_Source\PSoC5/FanController.c ****         }
1554:Generated_Source\PSoC5/FanController.c **** 
1555:Generated_Source\PSoC5/FanController.c ****         /* Setup SRAM source/destination addresses and datapath register addresses */
1556:Generated_Source\PSoC5/FanController.c ****         for (counti = 0u; counti < FanController_NUMBER_OF_FANS; counti++)
1557:Generated_Source\PSoC5/FanController.c ****         {
1558:Generated_Source\PSoC5/FanController.c ****             /* TD for actual period to RAM */
1559:Generated_Source\PSoC5/FanController.c ****             #if (CY_PSOC3)
1560:Generated_Source\PSoC5/FanController.c **** 
1561:Generated_Source\PSoC5/FanController.c ****                 (void) CyDmaTdSetAddress(FanController_fanOutTds[counti].setActualPeriodTD,
1562:Generated_Source\PSoC5/FanController.c ****                                   LO16(FanController_TACH_ACTUAL_PERIOD_PTR),
1563:Generated_Source\PSoC5/FanController.c ****                                   LO16(((uint32) &FanController_fanControl.actualPeriodDma2[counti]
1564:Generated_Source\PSoC5/FanController.c **** 
1565:Generated_Source\PSoC5/FanController.c ****                 (void) CyDmaTdSetAddress(
1566:Generated_Source\PSoC5/FanController.c ****                                 FanController_fanOutTds[FanController_NUMBER_OF_FANS + counti].setA
1567:Generated_Source\PSoC5/FanController.c ****                                 LO16(FanController_TACH_ACTUAL_PERIOD_PTR),
1568:Generated_Source\PSoC5/FanController.c ****                                 LO16(((uint32) &FanController_fanControl.actualPeriodDma1[counti]))
1569:Generated_Source\PSoC5/FanController.c **** 
1570:Generated_Source\PSoC5/FanController.c ****             #else
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 29


1571:Generated_Source\PSoC5/FanController.c ****                 (void) CyDmaTdSetAddress(FanController_fanOutTds[counti].setActualPeriodTD,
1572:Generated_Source\PSoC5/FanController.c ****                                   LO16(FanController_TACH_ACTUAL_PERIOD_PTR),
1573:Generated_Source\PSoC5/FanController.c ****                                   LO16(((uint32) &FanController_fanControl.actualPeriod[counti])));
1574:Generated_Source\PSoC5/FanController.c ****             #endif /* (CY_PSOC3) */
1575:Generated_Source\PSoC5/FanController.c **** 
1576:Generated_Source\PSoC5/FanController.c ****             #if(FanController_IS_AUTO_HARDWARE_MODE)
1577:Generated_Source\PSoC5/FanController.c **** 
1578:Generated_Source\PSoC5/FanController.c ****                 /* TD for desired period to tachometer */
1579:Generated_Source\PSoC5/FanController.c ****                 (void) CyDmaTdSetAddress(FanController_fanInTds[counti].getDesiredPeriodTD,
1580:Generated_Source\PSoC5/FanController.c ****                                 LO16(((uint32) &FanController_fanControl.desiredPeriod[counti])),
1581:Generated_Source\PSoC5/FanController.c ****                                 LO16(FanController_TACH_DESIRED_PERIOD_PTR));
1582:Generated_Source\PSoC5/FanController.c **** 
1583:Generated_Source\PSoC5/FanController.c ****                 /* TD for tolerance to tachometer */
1584:Generated_Source\PSoC5/FanController.c ****                 (void) CyDmaTdSetAddress(FanController_fanInTds[counti].getToleranceTD,
1585:Generated_Source\PSoC5/FanController.c ****                                 LO16(((uint32) &FanController_fanControl.tolerance[counti])),
1586:Generated_Source\PSoC5/FanController.c ****                                 LO16(FanController_TACH_TOLERANCE_PTR));
1587:Generated_Source\PSoC5/FanController.c **** 
1588:Generated_Source\PSoC5/FanController.c ****             #endif /* FanController_IS_AUTO_HARDWARE_MODE */
1589:Generated_Source\PSoC5/FanController.c ****         }
1590:Generated_Source\PSoC5/FanController.c **** 
1591:Generated_Source\PSoC5/FanController.c ****         /* Set the initial transaction descriptor to kick things off */
1592:Generated_Source\PSoC5/FanController.c ****         (void) CyDmaChSetInitialTd(FanController_TachOutDMA_channel,
1593:Generated_Source\PSoC5/FanController.c ****                 FanController_fanOutTds[0u].setActualPeriodTD);
1594:Generated_Source\PSoC5/FanController.c ****                 
1595:Generated_Source\PSoC5/FanController.c ****         #if(FanController_IS_AUTO_HARDWARE_MODE)
1596:Generated_Source\PSoC5/FanController.c **** 
1597:Generated_Source\PSoC5/FanController.c ****             (void) CyDmaChSetInitialTd(FanController_TachInDMA_channel,
1598:Generated_Source\PSoC5/FanController.c ****                     FanController_fanInTds[0u].getDesiredPeriodTD);
1599:Generated_Source\PSoC5/FanController.c **** 
1600:Generated_Source\PSoC5/FanController.c ****         #endif /* FanController_IS_AUTO_HARDWARE_MODE */
1601:Generated_Source\PSoC5/FanController.c ****     }
1602:Generated_Source\PSoC5/FanController.c **** 
1603:Generated_Source\PSoC5/FanController.c **** 
1604:Generated_Source\PSoC5/FanController.c ****     /*********************************************************************
1605:Generated_Source\PSoC5/FanController.c ****     * Function Name: FanController_TachOutDMA_DmaInitalize
1606:Generated_Source\PSoC5/FanController.c ****     **********************************************************************
1607:Generated_Source\PSoC5/FanController.c ****     *
1608:Generated_Source\PSoC5/FanController.c ****     * Summary:
1609:Generated_Source\PSoC5/FanController.c ****     *  This is a private API not exposed to users.
1610:Generated_Source\PSoC5/FanController.c ****     *
1611:Generated_Source\PSoC5/FanController.c ****     *  Allocates and initializes a channel of the DMAC to be used by the
1612:Generated_Source\PSoC5/FanController.c ****     *  caller.
1613:Generated_Source\PSoC5/FanController.c ****     *
1614:Generated_Source\PSoC5/FanController.c ****     * Parameters:
1615:Generated_Source\PSoC5/FanController.c ****     *  uint8  burstCount
1616:Generated_Source\PSoC5/FanController.c ****     *  uint8  requestPerBurst
1617:Generated_Source\PSoC5/FanController.c ****     *  uint16 upperSrcAddress
1618:Generated_Source\PSoC5/FanController.c ****     *  uint16 upperDestAddress
1619:Generated_Source\PSoC5/FanController.c ****     *
1620:Generated_Source\PSoC5/FanController.c ****     * Return:
1621:Generated_Source\PSoC5/FanController.c ****     *  The channel that can be used by the caller for DMA activity.
1622:Generated_Source\PSoC5/FanController.c ****     *  DMA_INVALID_CHANNEL (0xFF) if there are no channels left.
1623:Generated_Source\PSoC5/FanController.c ****     *
1624:Generated_Source\PSoC5/FanController.c ****     * Side Effects:
1625:Generated_Source\PSoC5/FanController.c ****     *  None
1626:Generated_Source\PSoC5/FanController.c ****     *
1627:Generated_Source\PSoC5/FanController.c ****     *****************************************************************/
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 30


1628:Generated_Source\PSoC5/FanController.c ****     static uint8 FanController_TachOutDMA_DmaInitialize(uint8 burstCount, uint8 requestPerBurst,
1629:Generated_Source\PSoC5/FanController.c ****                                                         uint16 upperSrcAddress, uint16 upperDestAdd
1630:Generated_Source\PSoC5/FanController.c ****     {
1631:Generated_Source\PSoC5/FanController.c ****         /* Allocate a DMA channel */
1632:Generated_Source\PSoC5/FanController.c ****         uint8 tachOutDMA_dmaHandle = FanController_TachOutDMA__DRQ_NUMBER;
1633:Generated_Source\PSoC5/FanController.c **** 
1634:Generated_Source\PSoC5/FanController.c ****         if(tachOutDMA_dmaHandle != DMA_INVALID_CHANNEL)
1635:Generated_Source\PSoC5/FanController.c ****         {
1636:Generated_Source\PSoC5/FanController.c ****             /* Configure the channel */
1637:Generated_Source\PSoC5/FanController.c ****             (void) CyDmaChSetConfiguration(tachOutDMA_dmaHandle,
1638:Generated_Source\PSoC5/FanController.c ****                                     burstCount,
1639:Generated_Source\PSoC5/FanController.c ****                                     requestPerBurst,
1640:Generated_Source\PSoC5/FanController.c ****                                     FanController_TachOutDMA__TERMOUT0_SEL,
1641:Generated_Source\PSoC5/FanController.c ****                                     FanController_TachOutDMA__TERMOUT1_SEL,
1642:Generated_Source\PSoC5/FanController.c ****                                     FanController_TachOutDMA__TERMIN_SEL);
1643:Generated_Source\PSoC5/FanController.c **** 
1644:Generated_Source\PSoC5/FanController.c ****             /* Set the extended address for the transfers */
1645:Generated_Source\PSoC5/FanController.c ****             (void) CyDmaChSetExtendedAddress(tachOutDMA_dmaHandle, upperSrcAddress, upperDestAddres
1646:Generated_Source\PSoC5/FanController.c **** 
1647:Generated_Source\PSoC5/FanController.c ****             /* Set the priority for this channel */
1648:Generated_Source\PSoC5/FanController.c ****             (void) CyDmaChPriority(tachOutDMA_dmaHandle, FanController_TachOutDMA__PRIORITY);
1649:Generated_Source\PSoC5/FanController.c ****         }
1650:Generated_Source\PSoC5/FanController.c **** 
1651:Generated_Source\PSoC5/FanController.c ****         return(tachOutDMA_dmaHandle);
1652:Generated_Source\PSoC5/FanController.c ****     }
1653:Generated_Source\PSoC5/FanController.c **** 
1654:Generated_Source\PSoC5/FanController.c **** 
1655:Generated_Source\PSoC5/FanController.c ****     /*********************************************************************
1656:Generated_Source\PSoC5/FanController.c ****     * Function Name: void FanController_TachOutDMA_DmaRelease
1657:Generated_Source\PSoC5/FanController.c ****     **********************************************************************
1658:Generated_Source\PSoC5/FanController.c ****     *
1659:Generated_Source\PSoC5/FanController.c ****     * Summary:
1660:Generated_Source\PSoC5/FanController.c ****     *   Frees the channel associated with FanController_TachOutDMA and
1661:Generated_Source\PSoC5/FanController.c ****     *   also frees the TD descriptors.
1662:Generated_Source\PSoC5/FanController.c ****     *
1663:Generated_Source\PSoC5/FanController.c ****     * Parameters:
1664:Generated_Source\PSoC5/FanController.c ****     *   None
1665:Generated_Source\PSoC5/FanController.c ****     *
1666:Generated_Source\PSoC5/FanController.c ****     * Return:
1667:Generated_Source\PSoC5/FanController.c ****     *   None
1668:Generated_Source\PSoC5/FanController.c ****     *
1669:Generated_Source\PSoC5/FanController.c ****     * Side Effects:
1670:Generated_Source\PSoC5/FanController.c ****     *  None
1671:Generated_Source\PSoC5/FanController.c ****     *
1672:Generated_Source\PSoC5/FanController.c ****     *****************************************************************/
1673:Generated_Source\PSoC5/FanController.c ****     static void FanController_TachOutDMA_DmaRelease(void) CYREENTRANT
1674:Generated_Source\PSoC5/FanController.c ****     {
  27              		.loc 1 1674 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
1675:Generated_Source\PSoC5/FanController.c ****         /* Disable the channel, even if someone just did! */
1676:Generated_Source\PSoC5/FanController.c ****         (void) CyDmaChDisable(FanController_TachOutDMA_channel);
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 31


  35              		.loc 1 1676 0
  36 0002 024B     		ldr	r3, .L3
  37 0004 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
  38 0006 FFF7FEFF 		bl	CyDmaChDisable
  39              	.LVL0:
  40 000a 08BD     		pop	{r3, pc}
  41              	.L4:
  42              		.align	2
  43              	.L3:
  44 000c 00000000 		.word	.LANCHOR0
  45              		.cfi_endproc
  46              	.LFE22:
  47              		.size	FanController_TachOutDMA_DmaRelease, .-FanController_TachOutDMA_DmaRelease
  48              		.section	.text.FanController_TachOutDMA_DmaInitialize,"ax",%progbits
  49              		.align	2
  50              		.thumb
  51              		.thumb_func
  52              		.type	FanController_TachOutDMA_DmaInitialize, %function
  53              	FanController_TachOutDMA_DmaInitialize:
  54              	.LFB21:
1630:Generated_Source\PSoC5/FanController.c ****         /* Allocate a DMA channel */
  55              		.loc 1 1630 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              	.LVL1:
  60 0000 70B5     		push	{r4, r5, r6, lr}
  61              		.cfi_def_cfa_offset 16
  62              		.cfi_offset 4, -16
  63              		.cfi_offset 5, -12
  64              		.cfi_offset 6, -8
  65              		.cfi_offset 14, -4
  66 0002 82B0     		sub	sp, sp, #8
  67              		.cfi_def_cfa_offset 24
  68 0004 1546     		mov	r5, r2
  69 0006 1E46     		mov	r6, r3
  70              	.LVL2:
1637:Generated_Source\PSoC5/FanController.c ****                                     burstCount,
  71              		.loc 1 1637 0
  72 0008 0024     		movs	r4, #0
  73 000a 0194     		str	r4, [sp, #4]
  74 000c 0094     		str	r4, [sp]
  75 000e 2346     		mov	r3, r4
  76              	.LVL3:
  77 0010 0A46     		mov	r2, r1
  78              	.LVL4:
  79 0012 0146     		mov	r1, r0
  80              	.LVL5:
  81 0014 2046     		mov	r0, r4
  82              	.LVL6:
  83 0016 FFF7FEFF 		bl	CyDmaChSetConfiguration
  84              	.LVL7:
1645:Generated_Source\PSoC5/FanController.c **** 
  85              		.loc 1 1645 0
  86 001a 3246     		mov	r2, r6
  87 001c 2946     		mov	r1, r5
  88 001e 2046     		mov	r0, r4
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 32


  89 0020 FFF7FEFF 		bl	CyDmaChSetExtendedAddress
  90              	.LVL8:
1648:Generated_Source\PSoC5/FanController.c ****         }
  91              		.loc 1 1648 0
  92 0024 0221     		movs	r1, #2
  93 0026 2046     		mov	r0, r4
  94 0028 FFF7FEFF 		bl	CyDmaChPriority
  95              	.LVL9:
1652:Generated_Source\PSoC5/FanController.c **** 
  96              		.loc 1 1652 0
  97 002c 2046     		mov	r0, r4
  98 002e 02B0     		add	sp, sp, #8
  99              		.cfi_def_cfa_offset 16
 100              		@ sp needed
 101 0030 70BD     		pop	{r4, r5, r6, pc}
 102              		.cfi_endproc
 103              	.LFE21:
 104              		.size	FanController_TachOutDMA_DmaInitialize, .-FanController_TachOutDMA_DmaInitialize
 105 0032 00BF     		.section	.text.FanController_SetupDMA,"ax",%progbits
 106              		.align	2
 107              		.thumb
 108              		.thumb_func
 109              		.type	FanController_SetupDMA, %function
 110              	FanController_SetupDMA:
 111              	.LFB20:
1328:Generated_Source\PSoC5/FanController.c ****         uint8 counti;
 112              		.loc 1 1328 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116 0000 10B5     		push	{r4, lr}
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 4, -8
 119              		.cfi_offset 14, -4
1368:Generated_Source\PSoC5/FanController.c ****                                                     2u,
 120              		.loc 1 1368 0
 121 0002 254B     		ldr	r3, .L17
 122 0004 1B0C     		lsrs	r3, r3, #16
 123 0006 4FF48042 		mov	r2, #16384
 124 000a 0121     		movs	r1, #1
 125 000c 0220     		movs	r0, #2
 126 000e FFF7FEFF 		bl	FanController_TachOutDMA_DmaInitialize
 127              	.LVL10:
 128 0012 224B     		ldr	r3, .L17+4
 129 0014 1870     		strb	r0, [r3]
 130              	.LVL11:
1385:Generated_Source\PSoC5/FanController.c ****         {
 131              		.loc 1 1385 0
 132 0016 0024     		movs	r4, #0
 133 0018 06E0     		b	.L8
 134              	.LVL12:
 135              	.L9:
1393:Generated_Source\PSoC5/FanController.c ****             #endif /* (CY_PSOC3) */
 136              		.loc 1 1393 0 discriminator 3
 137 001a FFF7FEFF 		bl	CyDmaTdAllocate
 138              	.LVL13:
 139 001e 1F4B     		ldr	r3, .L17+4
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 33


 140 0020 2344     		add	r3, r3, r4
 141 0022 1871     		strb	r0, [r3, #4]
1385:Generated_Source\PSoC5/FanController.c ****         {
 142              		.loc 1 1385 0 discriminator 3
 143 0024 0134     		adds	r4, r4, #1
 144              	.LVL14:
 145 0026 E4B2     		uxtb	r4, r4
 146              	.LVL15:
 147              	.L8:
1385:Generated_Source\PSoC5/FanController.c ****         {
 148              		.loc 1 1385 0 is_stmt 0 discriminator 1
 149 0028 032C     		cmp	r4, #3
 150 002a F6D9     		bls	.L9
 151 002c 0024     		movs	r4, #0
 152              	.LVL16:
 153 002e 19E0     		b	.L10
 154              	.LVL17:
 155              	.L13:
1405:Generated_Source\PSoC5/FanController.c **** 
 156              		.loc 1 1405 0 is_stmt 1
 157 0030 C4F10303 		rsb	r3, r4, #3
 158              	.LVL18:
1410:Generated_Source\PSoC5/FanController.c ****             {
 159              		.loc 1 1410 0
 160 0034 13F0FF03 		ands	r3, r3, #255
 161              	.LVL19:
 162 0038 08D1     		bne	.L11
1445:Generated_Source\PSoC5/FanController.c ****                                     2u,
 163              		.loc 1 1445 0
 164 003a 184A     		ldr	r2, .L17+4
 165 003c D018     		adds	r0, r2, r3
 166 003e 0623     		movs	r3, #6
 167 0040 D279     		ldrb	r2, [r2, #7]	@ zero_extendqisi2
 168 0042 0221     		movs	r1, #2
 169 0044 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 170 0046 FFF7FEFF 		bl	CyDmaTdSetConfiguration
 171              	.LVL20:
 172 004a 09E0     		b	.L12
 173              	.L11:
1510:Generated_Source\PSoC5/FanController.c ****                                     2u,
 174              		.loc 1 1510 0
 175 004c 134A     		ldr	r2, .L17+4
 176 004e D018     		adds	r0, r2, r3
1512:Generated_Source\PSoC5/FanController.c ****                                     TD_INC_DST_ADR |
 177              		.loc 1 1512 0
 178 0050 013B     		subs	r3, r3, #1
1510:Generated_Source\PSoC5/FanController.c ****                                     2u,
 179              		.loc 1 1510 0
 180 0052 1A44     		add	r2, r2, r3
 181 0054 0223     		movs	r3, #2
 182 0056 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 183 0058 1946     		mov	r1, r3
 184 005a 0079     		ldrb	r0, [r0, #4]	@ zero_extendqisi2
 185 005c FFF7FEFF 		bl	CyDmaTdSetConfiguration
 186              	.LVL21:
 187              	.L12:
1403:Generated_Source\PSoC5/FanController.c ****         {
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 34


 188              		.loc 1 1403 0 discriminator 2
 189 0060 0134     		adds	r4, r4, #1
 190              	.LVL22:
 191 0062 E4B2     		uxtb	r4, r4
 192              	.LVL23:
 193              	.L10:
1403:Generated_Source\PSoC5/FanController.c ****         {
 194              		.loc 1 1403 0 is_stmt 0 discriminator 1
 195 0064 032C     		cmp	r4, #3
 196 0066 E3D9     		bls	.L13
 197 0068 0024     		movs	r4, #0
 198              	.LVL24:
 199 006a 0CE0     		b	.L14
 200              	.LVL25:
 201              	.L15:
1571:Generated_Source\PSoC5/FanController.c ****                                   LO16(FanController_TACH_ACTUAL_PERIOD_PTR),
 202              		.loc 1 1571 0 is_stmt 1 discriminator 3
 203 006c 0B4B     		ldr	r3, .L17+4
 204 006e 2344     		add	r3, r3, r4
1573:Generated_Source\PSoC5/FanController.c ****             #endif /* (CY_PSOC3) */
 205              		.loc 1 1573 0 discriminator 3
 206 0070 094A     		ldr	r2, .L17
 207 0072 02EB4402 		add	r2, r2, r4, lsl #1
1571:Generated_Source\PSoC5/FanController.c ****                                   LO16(FanController_TACH_ACTUAL_PERIOD_PTR),
 208              		.loc 1 1571 0 discriminator 3
 209 0076 92B2     		uxth	r2, r2
 210 0078 46F60401 		movw	r1, #26628
 211 007c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 212 007e FFF7FEFF 		bl	CyDmaTdSetAddress
 213              	.LVL26:
1556:Generated_Source\PSoC5/FanController.c ****         {
 214              		.loc 1 1556 0 discriminator 3
 215 0082 0134     		adds	r4, r4, #1
 216              	.LVL27:
 217 0084 E4B2     		uxtb	r4, r4
 218              	.LVL28:
 219              	.L14:
1556:Generated_Source\PSoC5/FanController.c ****         {
 220              		.loc 1 1556 0 is_stmt 0 discriminator 1
 221 0086 032C     		cmp	r4, #3
 222 0088 F0D9     		bls	.L15
1592:Generated_Source\PSoC5/FanController.c ****                 FanController_fanOutTds[0u].setActualPeriodTD);
 223              		.loc 1 1592 0 is_stmt 1
 224 008a 044B     		ldr	r3, .L17+4
 225 008c 1979     		ldrb	r1, [r3, #4]	@ zero_extendqisi2
 226 008e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 227 0090 FFF7FEFF 		bl	CyDmaChSetInitialTd
 228              	.LVL29:
 229 0094 10BD     		pop	{r4, pc}
 230              	.LVL30:
 231              	.L18:
 232 0096 00BF     		.align	2
 233              	.L17:
 234 0098 00000000 		.word	FanController_fanControl
 235 009c 00000000 		.word	.LANCHOR0
 236              		.cfi_endproc
 237              	.LFE20:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 35


 238              		.size	FanController_SetupDMA, .-FanController_SetupDMA
 239              		.section	.text.FanController_Enable,"ax",%progbits
 240              		.align	2
 241              		.global	FanController_Enable
 242              		.thumb
 243              		.thumb_func
 244              		.type	FanController_Enable, %function
 245              	FanController_Enable:
 246              	.LFB3:
 434:Generated_Source\PSoC5/FanController.c ****     uint8 interruptState;
 247              		.loc 1 434 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251 0000 10B5     		push	{r4, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 4, -8
 254              		.cfi_offset 14, -4
 458:Generated_Source\PSoC5/FanController.c ****         ((uint8) (FanController_INIT_ALERT_ENABLE << FanController_ALERT_ENABLE_SHIFT));
 255              		.loc 1 458 0
 256 0002 2122     		movs	r2, #33
 257 0004 094B     		ldr	r3, .L21
 258 0006 1A70     		strb	r2, [r3]
 461:Generated_Source\PSoC5/FanController.c **** 
 259              		.loc 1 461 0
 260 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 261              	.LVL31:
 262 000c 0446     		mov	r4, r0
 263              	.LVL32:
 464:Generated_Source\PSoC5/FanController.c ****     
 264              		.loc 1 464 0
 265 000e 084A     		ldr	r2, .L21+4
 266 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 267 0012 43F01003 		orr	r3, r3, #16
 268 0016 1370     		strb	r3, [r2]
 469:Generated_Source\PSoC5/FanController.c ****         
 269              		.loc 1 469 0
 270 0018 0121     		movs	r1, #1
 271 001a 064B     		ldr	r3, .L21+8
 272 001c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 273 001e FFF7FEFF 		bl	CyDmaChEnable
 274              	.LVL33:
 477:Generated_Source\PSoC5/FanController.c **** }
 275              		.loc 1 477 0
 276 0022 2046     		mov	r0, r4
 277 0024 FFF7FEFF 		bl	CyExitCriticalSection
 278              	.LVL34:
 279 0028 10BD     		pop	{r4, pc}
 280              	.LVL35:
 281              	.L22:
 282 002a 00BF     		.align	2
 283              	.L21:
 284 002c 74640040 		.word	1073767540
 285 0030 97650040 		.word	1073767831
 286 0034 00000000 		.word	.LANCHOR0
 287              		.cfi_endproc
 288              	.LFE3:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 36


 289              		.size	FanController_Enable, .-FanController_Enable
 290              		.section	.text.FanController_EnableAlert,"ax",%progbits
 291              		.align	2
 292              		.global	FanController_EnableAlert
 293              		.thumb
 294              		.thumb_func
 295              		.type	FanController_EnableAlert, %function
 296              	FanController_EnableAlert:
 297              	.LFB4:
 502:Generated_Source\PSoC5/FanController.c ****     uint8 interruptState = CyEnterCriticalSection();
 298              		.loc 1 502 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302 0000 08B5     		push	{r3, lr}
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 3, -8
 305              		.cfi_offset 14, -4
 503:Generated_Source\PSoC5/FanController.c **** 
 306              		.loc 1 503 0
 307 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 308              	.LVL36:
 505:Generated_Source\PSoC5/FanController.c **** 
 309              		.loc 1 505 0
 310 0006 044A     		ldr	r2, .L25
 311 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 312 000a 43F00103 		orr	r3, r3, #1
 313 000e 1370     		strb	r3, [r2]
 507:Generated_Source\PSoC5/FanController.c **** }
 314              		.loc 1 507 0
 315 0010 FFF7FEFF 		bl	CyExitCriticalSection
 316              	.LVL37:
 317 0014 08BD     		pop	{r3, pc}
 318              	.L26:
 319 0016 00BF     		.align	2
 320              	.L25:
 321 0018 74640040 		.word	1073767540
 322              		.cfi_endproc
 323              	.LFE4:
 324              		.size	FanController_EnableAlert, .-FanController_EnableAlert
 325              		.section	.text.FanController_DisableAlert,"ax",%progbits
 326              		.align	2
 327              		.global	FanController_DisableAlert
 328              		.thumb
 329              		.thumb_func
 330              		.type	FanController_DisableAlert, %function
 331              	FanController_DisableAlert:
 332              	.LFB5:
 530:Generated_Source\PSoC5/FanController.c ****     uint8 interruptState = CyEnterCriticalSection();
 333              		.loc 1 530 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337 0000 08B5     		push	{r3, lr}
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 3, -8
 340              		.cfi_offset 14, -4
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 37


 531:Generated_Source\PSoC5/FanController.c **** 
 341              		.loc 1 531 0
 342 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 343              	.LVL38:
 533:Generated_Source\PSoC5/FanController.c **** 
 344              		.loc 1 533 0
 345 0006 044A     		ldr	r2, .L29
 346 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 347 000a 03F0FE03 		and	r3, r3, #254
 348 000e 1370     		strb	r3, [r2]
 535:Generated_Source\PSoC5/FanController.c **** }
 349              		.loc 1 535 0
 350 0010 FFF7FEFF 		bl	CyExitCriticalSection
 351              	.LVL39:
 352 0014 08BD     		pop	{r3, pc}
 353              	.L30:
 354 0016 00BF     		.align	2
 355              	.L29:
 356 0018 74640040 		.word	1073767540
 357              		.cfi_endproc
 358              	.LFE5:
 359              		.size	FanController_DisableAlert, .-FanController_DisableAlert
 360              		.section	.text.FanController_Stop,"ax",%progbits
 361              		.align	2
 362              		.global	FanController_Stop
 363              		.thumb
 364              		.thumb_func
 365              		.type	FanController_Stop, %function
 366              	FanController_Stop:
 367              	.LFB1:
 164:Generated_Source\PSoC5/FanController.c ****     /* Turn off the hardware sub-components */
 368              		.loc 1 164 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372 0000 08B5     		push	{r3, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 3, -8
 375              		.cfi_offset 14, -4
 166:Generated_Source\PSoC5/FanController.c **** 
 376              		.loc 1 166 0
 377 0002 0022     		movs	r2, #0
 378 0004 034B     		ldr	r3, .L33
 379 0006 1A70     		strb	r2, [r3]
 169:Generated_Source\PSoC5/FanController.c **** 
 380              		.loc 1 169 0
 381 0008 FFF7FEFF 		bl	FanController_DisableAlert
 382              	.LVL40:
 174:Generated_Source\PSoC5/FanController.c **** 
 383              		.loc 1 174 0
 384 000c FFF7FEFF 		bl	FanController_TachOutDMA_DmaRelease
 385              	.LVL41:
 386 0010 08BD     		pop	{r3, pc}
 387              	.L34:
 388 0012 00BF     		.align	2
 389              	.L33:
 390 0014 74640040 		.word	1073767540
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 38


 391              		.cfi_endproc
 392              	.LFE1:
 393              		.size	FanController_Stop, .-FanController_Stop
 394              		.section	.text.FanController_SetAlertMode,"ax",%progbits
 395              		.align	2
 396              		.global	FanController_SetAlertMode
 397              		.thumb
 398              		.thumb_func
 399              		.type	FanController_SetAlertMode, %function
 400              	FanController_SetAlertMode:
 401              	.LFB6:
 560:Generated_Source\PSoC5/FanController.c ****     uint8 interruptState = CyEnterCriticalSection();
 402              		.loc 1 560 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              	.LVL42:
 407 0000 10B5     		push	{r4, lr}
 408              		.cfi_def_cfa_offset 8
 409              		.cfi_offset 4, -8
 410              		.cfi_offset 14, -4
 411 0002 0446     		mov	r4, r0
 561:Generated_Source\PSoC5/FanController.c **** 
 412              		.loc 1 561 0
 413 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 414              	.LVL43:
 563:Generated_Source\PSoC5/FanController.c ****             (uint8) ~FanController_ALERT_ENABLE_MASK) |
 415              		.loc 1 563 0
 416 0008 054A     		ldr	r2, .L37
 417 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 565:Generated_Source\PSoC5/FanController.c **** 
 418              		.loc 1 565 0
 419 000c 6400     		lsls	r4, r4, #1
 563:Generated_Source\PSoC5/FanController.c ****             (uint8) ~FanController_ALERT_ENABLE_MASK) |
 420              		.loc 1 563 0
 421 000e 03F0F903 		and	r3, r3, #249
 422 0012 04F00604 		and	r4, r4, #6
 423 0016 1C43     		orrs	r4, r4, r3
 424 0018 1470     		strb	r4, [r2]
 567:Generated_Source\PSoC5/FanController.c **** }
 425              		.loc 1 567 0
 426 001a FFF7FEFF 		bl	CyExitCriticalSection
 427              	.LVL44:
 428 001e 10BD     		pop	{r4, pc}
 429              	.L38:
 430              		.align	2
 431              	.L37:
 432 0020 74640040 		.word	1073767540
 433              		.cfi_endproc
 434              	.LFE6:
 435              		.size	FanController_SetAlertMode, .-FanController_SetAlertMode
 436              		.section	.text.FanController_GetAlertMode,"ax",%progbits
 437              		.align	2
 438              		.global	FanController_GetAlertMode
 439              		.thumb
 440              		.thumb_func
 441              		.type	FanController_GetAlertMode, %function
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 39


 442              	FanController_GetAlertMode:
 443              	.LFB7:
 592:Generated_Source\PSoC5/FanController.c ****     return((FanController_GLOBAL_CONTROL_REG & FanController_ALERT_ENABLE_MASK) >>
 444              		.loc 1 592 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448              		@ link register save eliminated.
 593:Generated_Source\PSoC5/FanController.c ****                 FanController_ALERT_ENABLE_SHIFT);
 449              		.loc 1 593 0
 450 0000 024B     		ldr	r3, .L40
 451 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 595:Generated_Source\PSoC5/FanController.c **** 
 452              		.loc 1 595 0
 453 0004 C0F34100 		ubfx	r0, r0, #1, #2
 454 0008 7047     		bx	lr
 455              	.L41:
 456 000a 00BF     		.align	2
 457              	.L40:
 458 000c 74640040 		.word	1073767540
 459              		.cfi_endproc
 460              	.LFE7:
 461              		.size	FanController_GetAlertMode, .-FanController_GetAlertMode
 462              		.section	.text.FanController_SetAlertMask,"ax",%progbits
 463              		.align	2
 464              		.global	FanController_SetAlertMask
 465              		.thumb
 466              		.thumb_func
 467              		.type	FanController_SetAlertMask, %function
 468              	FanController_SetAlertMask:
 469              	.LFB8:
 620:Generated_Source\PSoC5/FanController.c ****     #if (CY_PSOC4)
 470              		.loc 1 620 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 475              	.LVL45:
 624:Generated_Source\PSoC5/FanController.c **** 
 476              		.loc 1 624 0
 477 0000 C0B2     		uxtb	r0, r0
 478              	.LVL46:
 479 0002 014B     		ldr	r3, .L43
 480 0004 1870     		strb	r0, [r3]
 481 0006 7047     		bx	lr
 482              	.L44:
 483              		.align	2
 484              	.L43:
 485 0008 77640040 		.word	1073767543
 486              		.cfi_endproc
 487              	.LFE8:
 488              		.size	FanController_SetAlertMask, .-FanController_SetAlertMask
 489              		.section	.text.FanController_GetAlertMask,"ax",%progbits
 490              		.align	2
 491              		.global	FanController_GetAlertMask
 492              		.thumb
 493              		.thumb_func
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 40


 494              		.type	FanController_GetAlertMask, %function
 495              	FanController_GetAlertMask:
 496              	.LFB9:
 655:Generated_Source\PSoC5/FanController.c ****     uint16 alertMask;
 497              		.loc 1 655 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              		@ link register save eliminated.
 665:Generated_Source\PSoC5/FanController.c ****         #endif /* FanController_NUMBER_OF_FANS > 8u */
 502              		.loc 1 665 0
 503 0000 014B     		ldr	r3, .L46
 504 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 505              	.LVL47:
 670:Generated_Source\PSoC5/FanController.c **** 
 506              		.loc 1 670 0
 507 0004 7047     		bx	lr
 508              	.L47:
 509 0006 00BF     		.align	2
 510              	.L46:
 511 0008 77640040 		.word	1073767543
 512              		.cfi_endproc
 513              	.LFE9:
 514              		.size	FanController_GetAlertMask, .-FanController_GetAlertMask
 515              		.section	.text.FanController_GetAlertSource,"ax",%progbits
 516              		.align	2
 517              		.global	FanController_GetAlertSource
 518              		.thumb
 519              		.thumb_func
 520              		.type	FanController_GetAlertSource, %function
 521              	FanController_GetAlertSource:
 522              	.LFB10:
 698:Generated_Source\PSoC5/FanController.c ****     return ((FanController_ALERT_STATUS_REG & FanController_ALERT_STATUS_MASK));
 523              		.loc 1 698 0
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 0
 526              		@ frame_needed = 0, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 699:Generated_Source\PSoC5/FanController.c **** }
 528              		.loc 1 699 0
 529 0000 024B     		ldr	r3, .L49
 530 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 700:Generated_Source\PSoC5/FanController.c **** 
 531              		.loc 1 700 0
 532 0004 00F00300 		and	r0, r0, #3
 533 0008 7047     		bx	lr
 534              	.L50:
 535 000a 00BF     		.align	2
 536              	.L49:
 537 000c 67650040 		.word	1073767783
 538              		.cfi_endproc
 539              	.LFE10:
 540              		.size	FanController_GetAlertSource, .-FanController_GetAlertSource
 541              		.section	.text.FanController_GetFanStallStatus,"ax",%progbits
 542              		.align	2
 543              		.global	FanController_GetFanStallStatus
 544              		.thumb
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 41


 545              		.thumb_func
 546              		.type	FanController_GetFanStallStatus, %function
 547              	FanController_GetFanStallStatus:
 548              	.LFB11:
 726:Generated_Source\PSoC5/FanController.c ****     uint16 stallStatus;
 549              		.loc 1 726 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553              		@ link register save eliminated.
 743:Generated_Source\PSoC5/FanController.c ****         #endif /* FanController_NUMBER_OF_FANS > 8u */
 554              		.loc 1 743 0
 555 0000 014B     		ldr	r3, .L52
 556 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 557              	.LVL48:
 748:Generated_Source\PSoC5/FanController.c **** 
 558              		.loc 1 748 0
 559 0004 7047     		bx	lr
 560              	.L53:
 561 0006 00BF     		.align	2
 562              	.L52:
 563 0008 64640040 		.word	1073767524
 564              		.cfi_endproc
 565              	.LFE11:
 566              		.size	FanController_GetFanStallStatus, .-FanController_GetFanStallStatus
 567              		.section	.text.FanController_GetFanSpeedStatus,"ax",%progbits
 568              		.align	2
 569              		.global	FanController_GetFanSpeedStatus
 570              		.thumb
 571              		.thumb_func
 572              		.type	FanController_GetFanSpeedStatus, %function
 573              	FanController_GetFanSpeedStatus:
 574              	.LFB12:
 777:Generated_Source\PSoC5/FanController.c ****         uint16 speedStatus;
 575              		.loc 1 777 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 795:Generated_Source\PSoC5/FanController.c **** 
 580              		.loc 1 795 0
 581 0000 024B     		ldr	r3, .L55
 582 0002 1888     		ldrh	r0, [r3]
 583              	.LVL49:
 798:Generated_Source\PSoC5/FanController.c ****         #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
 584              		.loc 1 798 0
 585 0004 0022     		movs	r2, #0
 586 0006 1A80     		strh	r2, [r3]	@ movhi
 802:Generated_Source\PSoC5/FanController.c **** 
 587              		.loc 1 802 0
 588 0008 80B2     		uxth	r0, r0
 589 000a 7047     		bx	lr
 590              	.L56:
 591              		.align	2
 592              	.L55:
 593 000c 00000000 		.word	FanController_speedStatus
 594              		.cfi_endproc
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 42


 595              	.LFE12:
 596              		.size	FanController_GetFanSpeedStatus, .-FanController_GetFanSpeedStatus
 597              		.section	.text.FanController_SetDutyCycle,"ax",%progbits
 598              		.align	2
 599              		.global	FanController_SetDutyCycle
 600              		.thumb
 601              		.thumb_func
 602              		.type	FanController_SetDutyCycle, %function
 603              	FanController_SetDutyCycle:
 604              	.LFB13:
 835:Generated_Source\PSoC5/FanController.c ****     uint32 newCompare;      /* Needs to be 32-bit to allow for overflow during the math calculation
 605              		.loc 1 835 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              		@ link register save eliminated.
 610              	.LVL50:
 839:Generated_Source\PSoC5/FanController.c ****     {
 611              		.loc 1 839 0
 612 0000 0428     		cmp	r0, #4
 613 0002 0FD8     		bhi	.L57
 841:Generated_Source\PSoC5/FanController.c **** 
 614              		.loc 1 841 0
 615 0004 C1EB0111 		rsb	r1, r1, r1, lsl #4
 616              	.LVL51:
 617 0008 8B01     		lsls	r3, r1, #6
 618 000a 074A     		ldr	r2, .L59
 619 000c A2FB0323 		umull	r2, r3, r2, r3
 620 0010 5B0B     		lsrs	r3, r3, #13
 621              	.LVL52:
 846:Generated_Source\PSoC5/FanController.c ****         {
 622              		.loc 1 846 0
 623 0012 B3F5707F 		cmp	r3, #960
 624 0016 05D8     		bhi	.L57
 852:Generated_Source\PSoC5/FanController.c ****                 #endif /* FanController_PWMRES == FanController_PWMRES_EIGHTBIT */
 625              		.loc 1 852 0
 626 0018 0138     		subs	r0, r0, #1
 627              	.LVL53:
 628 001a 044A     		ldr	r2, .L59+4
 629 001c 52F82020 		ldr	r2, [r2, r0, lsl #2]
 630 0020 9BB2     		uxth	r3, r3
 631              	.LVL54:
 632 0022 1380     		strh	r3, [r2]	@ movhi
 633              	.LVL55:
 634              	.L57:
 635 0024 7047     		bx	lr
 636              	.L60:
 637 0026 00BF     		.align	2
 638              	.L59:
 639 0028 5917B7D1 		.word	-776530087
 640 002c 00000000 		.word	.LANCHOR1
 641              		.cfi_endproc
 642              	.LFE13:
 643              		.size	FanController_SetDutyCycle, .-FanController_SetDutyCycle
 644              		.section	.text.FanController_GetDutyCycle,"ax",%progbits
 645              		.align	2
 646              		.global	FanController_GetDutyCycle
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 43


 647              		.thumb
 648              		.thumb_func
 649              		.type	FanController_GetDutyCycle, %function
 650              	FanController_GetDutyCycle:
 651              	.LFB14:
 884:Generated_Source\PSoC5/FanController.c ****     uint16 duyCycle = 0u;
 652              		.loc 1 884 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 657              	.LVL56:
 887:Generated_Source\PSoC5/FanController.c ****     {
 658              		.loc 1 887 0
 659 0000 0428     		cmp	r0, #4
 660 0002 0FD8     		bhi	.L63
 896:Generated_Source\PSoC5/FanController.c ****                                 * FanController_PWM_DUTY_DIVIDER) / FanController_PWM_PERIOD);
 661              		.loc 1 896 0
 662 0004 0138     		subs	r0, r0, #1
 663              	.LVL57:
 664 0006 084B     		ldr	r3, .L64
 665 0008 53F82030 		ldr	r3, [r3, r0, lsl #2]
 666 000c 1888     		ldrh	r0, [r3]
 667 000e 80B2     		uxth	r0, r0
 897:Generated_Source\PSoC5/FanController.c ****             #endif /* FanController_PWMRES == FanController_PWMRES_EIGHTBIT */
 668              		.loc 1 897 0
 669 0010 42F21073 		movw	r3, #10000
 670 0014 03FB00F0 		mul	r0, r3, r0
 671 0018 044B     		ldr	r3, .L64+4
 672 001a A3FB0030 		umull	r3, r0, r3, r0
 895:Generated_Source\PSoC5/FanController.c ****                     (((uint32) CY_GET_REG16(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSe
 673              		.loc 1 895 0
 674 001e C0F34F20 		ubfx	r0, r0, #9, #16
 675              	.LVL58:
 676 0022 7047     		bx	lr
 677              	.LVL59:
 678              	.L63:
 885:Generated_Source\PSoC5/FanController.c **** 
 679              		.loc 1 885 0
 680 0024 0020     		movs	r0, #0
 681              	.LVL60:
 907:Generated_Source\PSoC5/FanController.c **** 
 682              		.loc 1 907 0
 683 0026 7047     		bx	lr
 684              	.L65:
 685              		.align	2
 686              	.L64:
 687 0028 00000000 		.word	.LANCHOR1
 688 002c 89888888 		.word	-2004318071
 689              		.cfi_endproc
 690              	.LFE14:
 691              		.size	FanController_GetDutyCycle, .-FanController_GetDutyCycle
 692              		.section	.text.FanController_SetDesiredSpeed,"ax",%progbits
 693              		.align	2
 694              		.global	FanController_SetDesiredSpeed
 695              		.thumb
 696              		.thumb_func
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 44


 697              		.type	FanController_SetDesiredSpeed, %function
 698              	FanController_SetDesiredSpeed:
 699              	.LFB15:
 938:Generated_Source\PSoC5/FanController.c ****     uint32 overrideDuty;        /* Needs to be 32-bit to allow for overflow during the math calcula
 700              		.loc 1 938 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              		@ link register save eliminated.
 705              	.LVL61:
 943:Generated_Source\PSoC5/FanController.c ****     {
 706              		.loc 1 943 0
 707 0000 0428     		cmp	r0, #4
 708 0002 03D8     		bhi	.L66
1024:Generated_Source\PSoC5/FanController.c ****         #endif /* (FanController_IS_AUTO_HARDWARE_MODE) */
 709              		.loc 1 1024 0
 710 0004 0138     		subs	r0, r0, #1
 711              	.LVL62:
 712 0006 024B     		ldr	r3, .L68
 713 0008 23F81010 		strh	r1, [r3, r0, lsl #1]	@ movhi
 714              	.L66:
 715 000c 7047     		bx	lr
 716              	.L69:
 717 000e 00BF     		.align	2
 718              	.L68:
 719 0010 00000000 		.word	FanController_desiredFansSpeed
 720              		.cfi_endproc
 721              	.LFE15:
 722              		.size	FanController_SetDesiredSpeed, .-FanController_SetDesiredSpeed
 723              		.section	.text.FanController_Init,"ax",%progbits
 724              		.align	2
 725              		.global	FanController_Init
 726              		.thumb
 727              		.thumb_func
 728              		.type	FanController_Init, %function
 729              	FanController_Init:
 730              	.LFB2:
 223:Generated_Source\PSoC5/FanController.c ****     uint8 counti;
 731              		.loc 1 223 0
 732              		.cfi_startproc
 733              		@ args = 0, pretend = 0, frame = 0
 734              		@ frame_needed = 0, uses_anonymous_args = 0
 735 0000 38B5     		push	{r3, r4, r5, lr}
 736              		.cfi_def_cfa_offset 16
 737              		.cfi_offset 3, -16
 738              		.cfi_offset 4, -12
 739              		.cfi_offset 5, -8
 740              		.cfi_offset 14, -4
 230:Generated_Source\PSoC5/FanController.c **** 
 741              		.loc 1 230 0
 742 0002 FFF7FEFF 		bl	FanController_SetupDMA
 743              	.LVL63:
 267:Generated_Source\PSoC5/FanController.c ****             {
 744              		.loc 1 267 0
 745 0006 0024     		movs	r4, #0
 746 0008 14E0     		b	.L71
 747              	.LVL64:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 45


 748              	.L72:
 283:Generated_Source\PSoC5/FanController.c **** 
 749              		.loc 1 283 0 discriminator 3
 750 000a 334D     		ldr	r5, .L78
 751 000c 05EBC405 		add	r5, r5, r4, lsl #3
 752 0010 2B69     		ldr	r3, [r5, #16]
 753 0012 4FF47072 		mov	r2, #960
 754 0016 1A80     		strh	r2, [r3]	@ movhi
 285:Generated_Source\PSoC5/FanController.c **** 
 755              		.loc 1 285 0 discriminator 3
 756 0018 FFF7FEFF 		bl	CyEnterCriticalSection
 757              	.LVL65:
 287:Generated_Source\PSoC5/FanController.c ****                         CY_GET_REG16(FanController_fanPwmInitRegs[counti].pwmAuxControlReg) |
 758              		.loc 1 287 0 discriminator 3
 759 001c 6A69     		ldr	r2, [r5, #20]
 760 001e 1388     		ldrh	r3, [r2]
 761 0020 9BB2     		uxth	r3, r3
 762 0022 43F44073 		orr	r3, r3, #768
 763 0026 43F00303 		orr	r3, r3, #3
 764 002a 1380     		strh	r3, [r2]	@ movhi
 291:Generated_Source\PSoC5/FanController.c **** 
 765              		.loc 1 291 0 discriminator 3
 766 002c FFF7FEFF 		bl	CyExitCriticalSection
 767              	.LVL66:
 267:Generated_Source\PSoC5/FanController.c ****             {
 768              		.loc 1 267 0 discriminator 3
 769 0030 0134     		adds	r4, r4, #1
 770              	.LVL67:
 771 0032 E4B2     		uxtb	r4, r4
 772              	.LVL68:
 773              	.L71:
 267:Generated_Source\PSoC5/FanController.c ****             {
 774              		.loc 1 267 0 is_stmt 0 discriminator 1
 775 0034 012C     		cmp	r4, #1
 776 0036 E8D9     		bls	.L72
 777 0038 0023     		movs	r3, #0
 778 003a 0BE0     		b	.L73
 779              	.LVL69:
 780              	.L74:
 299:Generated_Source\PSoC5/FanController.c ****             }
 781              		.loc 1 299 0 is_stmt 1 discriminator 3
 782 003c 5C1C     		adds	r4, r3, #1
 783 003e E4B2     		uxtb	r4, r4
 784 0040 C3EBC303 		rsb	r3, r3, r3, lsl #3
 785              	.LVL70:
 786 0044 5A00     		lsls	r2, r3, #1
 787 0046 254B     		ldr	r3, .L78+4
 788 0048 1A44     		add	r2, r2, r3
 789 004a 5189     		ldrh	r1, [r2, #10]
 790 004c 2046     		mov	r0, r4
 791 004e FFF7FEFF 		bl	FanController_SetDesiredSpeed
 792              	.LVL71:
 296:Generated_Source\PSoC5/FanController.c ****             {
 793              		.loc 1 296 0 discriminator 3
 794 0052 2346     		mov	r3, r4
 795              	.L73:
 796              	.LVL72:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 46


 296:Generated_Source\PSoC5/FanController.c ****             {
 797              		.loc 1 296 0 is_stmt 0 discriminator 1
 798 0054 032B     		cmp	r3, #3
 799 0056 F1D9     		bls	.L74
 349:Generated_Source\PSoC5/FanController.c ****     #if (CY_PSOC4)
 800              		.loc 1 349 0 is_stmt 1
 801 0058 FFF7FEFF 		bl	CyEnterCriticalSection
 802              	.LVL73:
 356:Generated_Source\PSoC5/FanController.c ****     #endif /* (!CY_PSOC4) */
 803              		.loc 1 356 0
 804 005c 204A     		ldr	r2, .L78+8
 805 005e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 806 0060 43F02003 		orr	r3, r3, #32
 807 0064 1370     		strb	r3, [r2]
 358:Generated_Source\PSoC5/FanController.c ****     
 808              		.loc 1 358 0
 809 0066 FFF7FEFF 		bl	CyExitCriticalSection
 810              	.LVL74:
 361:Generated_Source\PSoC5/FanController.c **** 
 811              		.loc 1 361 0
 812 006a 3C22     		movs	r2, #60
 813 006c 1D4B     		ldr	r3, .L78+12
 814 006e 1A70     		strb	r2, [r3]
 366:Generated_Source\PSoC5/FanController.c **** 
 815              		.loc 1 366 0
 816 0070 0A22     		movs	r2, #10
 817 0072 1033     		adds	r3, r3, #16
 818 0074 1A70     		strb	r2, [r3]
 369:Generated_Source\PSoC5/FanController.c **** 
 819              		.loc 1 369 0
 820 0076 FA22     		movs	r2, #250
 821 0078 A3F58873 		sub	r3, r3, #272
 822 007c 1A70     		strb	r2, [r3]
 372:Generated_Source\PSoC5/FanController.c **** 
 823              		.loc 1 372 0
 824 007e 0122     		movs	r2, #1
 825 0080 1033     		adds	r3, r3, #16
 826 0082 1A70     		strb	r2, [r3]
 379:Generated_Source\PSoC5/FanController.c **** 
 827              		.loc 1 379 0
 828 0084 0F20     		movs	r0, #15
 829 0086 FFF7FEFF 		bl	FanController_SetAlertMask
 830              	.LVL75:
 385:Generated_Source\PSoC5/FanController.c ****         {
 831              		.loc 1 385 0
 832 008a 0024     		movs	r4, #0
 833 008c 1EE0     		b	.L75
 834              	.LVL76:
 835              	.L76:
 388:Generated_Source\PSoC5/FanController.c **** 
 836              		.loc 1 388 0 discriminator 3
 837 008e FFF7FEFF 		bl	CyEnterCriticalSection
 838              	.LVL77:
 393:Generated_Source\PSoC5/FanController.c ****             FanController_pidA2[counti] = FanController_PID_A2;
 839              		.loc 1 393 0 discriminator 3
 840 0092 4FF40052 		mov	r2, #8192
 841 0096 144B     		ldr	r3, .L78+16
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 47


 842 0098 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 394:Generated_Source\PSoC5/FanController.c ****             FanController_pidA3[counti] = FanController_PID_A3;
 843              		.loc 1 394 0 discriminator 3
 844 009c 4EF69A12 		movw	r2, #59802
 845 00a0 124B     		ldr	r3, .L78+20
 846 00a2 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 395:Generated_Source\PSoC5/FanController.c **** 
 847              		.loc 1 395 0 discriminator 3
 848 00a6 40F23332 		movw	r2, #819
 849 00aa 114B     		ldr	r3, .L78+24
 850 00ac 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 397:Generated_Source\PSoC5/FanController.c ****             FanController_outputSatH[counti] = FanController_PID_OUTPUT_SAT_H;
 851              		.loc 1 397 0 discriminator 3
 852 00b0 4FF0C072 		mov	r2, #25165824
 853 00b4 0F4B     		ldr	r3, .L78+28
 854 00b6 43F82420 		str	r2, [r3, r4, lsl #2]
 398:Generated_Source\PSoC5/FanController.c ****             CyExitCriticalSection(interruptState);
 855              		.loc 1 398 0 discriminator 3
 856 00ba 4FF07072 		mov	r2, #62914560
 857 00be 0E4B     		ldr	r3, .L78+32
 858 00c0 43F82420 		str	r2, [r3, r4, lsl #2]
 399:Generated_Source\PSoC5/FanController.c ****         }
 859              		.loc 1 399 0 discriminator 3
 860 00c4 FFF7FEFF 		bl	CyExitCriticalSection
 861              	.LVL78:
 385:Generated_Source\PSoC5/FanController.c ****         {
 862              		.loc 1 385 0 discriminator 3
 863 00c8 0134     		adds	r4, r4, #1
 864              	.LVL79:
 865 00ca E4B2     		uxtb	r4, r4
 866              	.LVL80:
 867              	.L75:
 385:Generated_Source\PSoC5/FanController.c ****         {
 868              		.loc 1 385 0 is_stmt 0 discriminator 1
 869 00cc 032C     		cmp	r4, #3
 870 00ce DED9     		bls	.L76
 411:Generated_Source\PSoC5/FanController.c ****     #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
 871              		.loc 1 411 0 is_stmt 1
 872 00d0 0A48     		ldr	r0, .L78+36
 873 00d2 FFF7FEFF 		bl	FanController_PID_ISR_StartEx
 874              	.LVL81:
 875 00d6 38BD     		pop	{r3, r4, r5, pc}
 876              	.LVL82:
 877              	.L79:
 878              		.align	2
 879              	.L78:
 880 00d8 00000000 		.word	.LANCHOR1
 881 00dc 00000000 		.word	.LANCHOR2
 882 00e0 93640040 		.word	1073767571
 883 00e4 27650040 		.word	1073767719
 884 00e8 00000000 		.word	FanController_pidA1
 885 00ec 00000000 		.word	FanController_pidA2
 886 00f0 00000000 		.word	FanController_pidA3
 887 00f4 00000000 		.word	FanController_outputSatL
 888 00f8 00000000 		.word	FanController_outputSatH
 889 00fc 00000000 		.word	FanController_PID_CONTROL_ISR
 890              		.cfi_endproc
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 48


 891              	.LFE2:
 892              		.size	FanController_Init, .-FanController_Init
 893              		.section	.text.FanController_Start,"ax",%progbits
 894              		.align	2
 895              		.global	FanController_Start
 896              		.thumb
 897              		.thumb_func
 898              		.type	FanController_Start, %function
 899              	FanController_Start:
 900              	.LFB0:
 133:Generated_Source\PSoC5/FanController.c ****     /* If not already initialized, then initialize hardware and variables */
 901              		.loc 1 133 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905 0000 08B5     		push	{r3, lr}
 906              		.cfi_def_cfa_offset 8
 907              		.cfi_offset 3, -8
 908              		.cfi_offset 14, -4
 135:Generated_Source\PSoC5/FanController.c ****     {
 909              		.loc 1 135 0
 910 0002 054B     		ldr	r3, .L83
 911 0004 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 912 0006 23B9     		cbnz	r3, .L81
 137:Generated_Source\PSoC5/FanController.c ****         FanController_initVar = 1u;
 913              		.loc 1 137 0
 914 0008 FFF7FEFF 		bl	FanController_Init
 915              	.LVL83:
 138:Generated_Source\PSoC5/FanController.c ****     }
 916              		.loc 1 138 0
 917 000c 0122     		movs	r2, #1
 918 000e 024B     		ldr	r3, .L83
 919 0010 1A72     		strb	r2, [r3, #8]
 920              	.L81:
 140:Generated_Source\PSoC5/FanController.c **** }
 921              		.loc 1 140 0
 922 0012 FFF7FEFF 		bl	FanController_Enable
 923              	.LVL84:
 924 0016 08BD     		pop	{r3, pc}
 925              	.L84:
 926              		.align	2
 927              	.L83:
 928 0018 00000000 		.word	.LANCHOR0
 929              		.cfi_endproc
 930              	.LFE0:
 931              		.size	FanController_Start, .-FanController_Start
 932              		.section	.text.FanController_GetDesiredSpeed,"ax",%progbits
 933              		.align	2
 934              		.global	FanController_GetDesiredSpeed
 935              		.thumb
 936              		.thumb_func
 937              		.type	FanController_GetDesiredSpeed, %function
 938              	FanController_GetDesiredSpeed:
 939              	.LFB16:
1052:Generated_Source\PSoC5/FanController.c ****         return(FanController_desiredFansSpeed[fanNumber - 1u]);
 940              		.loc 1 1052 0
 941              		.cfi_startproc
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 49


 942              		@ args = 0, pretend = 0, frame = 0
 943              		@ frame_needed = 0, uses_anonymous_args = 0
 944              		@ link register save eliminated.
 945              	.LVL85:
1053:Generated_Source\PSoC5/FanController.c ****     }
 946              		.loc 1 1053 0
 947 0000 0138     		subs	r0, r0, #1
 948              	.LVL86:
1054:Generated_Source\PSoC5/FanController.c **** 
 949              		.loc 1 1054 0
 950 0002 024B     		ldr	r3, .L86
 951 0004 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 952 0008 7047     		bx	lr
 953              	.L87:
 954 000a 00BF     		.align	2
 955              	.L86:
 956 000c 00000000 		.word	FanController_desiredFansSpeed
 957              		.cfi_endproc
 958              	.LFE16:
 959              		.size	FanController_GetDesiredSpeed, .-FanController_GetDesiredSpeed
 960              		.section	.text.FanController_GetActualSpeed,"ax",%progbits
 961              		.align	2
 962              		.global	FanController_GetActualSpeed
 963              		.thumb
 964              		.thumb_func
 965              		.type	FanController_GetActualSpeed, %function
 966              	FanController_GetActualSpeed:
 967              	.LFB17:
1081:Generated_Source\PSoC5/FanController.c ****     uint16 actualSpeed = 0u;
 968              		.loc 1 1081 0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 0
 971              		@ frame_needed = 0, uses_anonymous_args = 0
 972              		@ link register save eliminated.
 973              	.LVL87:
1084:Generated_Source\PSoC5/FanController.c ****     {
 974              		.loc 1 1084 0
 975 0000 0428     		cmp	r0, #4
 976 0002 09D8     		bhi	.L90
1115:Generated_Source\PSoC5/FanController.c ****             {
 977              		.loc 1 1115 0
 978 0004 0138     		subs	r0, r0, #1
 979              	.LVL88:
 980 0006 064B     		ldr	r3, .L92
 981 0008 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 982 000c 30B1     		cbz	r0, .L91
1118:Generated_Source\PSoC5/FanController.c ****                     (uint32) FanController_fanControl.actualPeriod[fanNumber - 1u]);
 983              		.loc 1 1118 0
 984 000e 054B     		ldr	r3, .L92+4
 985 0010 B3FBF0F0 		udiv	r0, r3, r0
 986 0014 80B2     		uxth	r0, r0
 987              	.LVL89:
 988 0016 7047     		bx	lr
 989              	.LVL90:
 990              	.L90:
1082:Generated_Source\PSoC5/FanController.c **** 
 991              		.loc 1 1082 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 50


 992 0018 0020     		movs	r0, #0
 993              	.LVL91:
 994 001a 7047     		bx	lr
 995              	.L91:
 996 001c 0020     		movs	r0, #0
 997              	.LVL92:
1126:Generated_Source\PSoC5/FanController.c **** 
 998              		.loc 1 1126 0
 999 001e 7047     		bx	lr
 1000              	.L93:
 1001              		.align	2
 1002              	.L92:
 1003 0020 00000000 		.word	FanController_fanControl
 1004 0024 80C3C901 		.word	30000000
 1005              		.cfi_endproc
 1006              	.LFE17:
 1007              		.size	FanController_GetActualSpeed, .-FanController_GetActualSpeed
 1008              		.section	.text.FanController_SetSaturation,"ax",%progbits
 1009              		.align	2
 1010              		.global	FanController_SetSaturation
 1011              		.thumb
 1012              		.thumb_func
 1013              		.type	FanController_SetSaturation, %function
 1014              	FanController_SetSaturation:
 1015              	.LFB18:
1200:Generated_Source\PSoC5/FanController.c ****         uint8 interruptState;
 1016              		.loc 1 1200 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020              	.LVL93:
 1021 0000 70B5     		push	{r4, r5, r6, lr}
 1022              		.cfi_def_cfa_offset 16
 1023              		.cfi_offset 4, -16
 1024              		.cfi_offset 5, -12
 1025              		.cfi_offset 6, -8
 1026              		.cfi_offset 14, -4
1205:Generated_Source\PSoC5/FanController.c ****         {
 1027              		.loc 1 1205 0
 1028 0002 441E     		subs	r4, r0, #1
 1029 0004 032C     		cmp	r4, #3
 1030 0006 0FD8     		bhi	.L94
1211:Generated_Source\PSoC5/FanController.c ****                                            FanController_MAX_GAIN) * satH;
 1031              		.loc 1 1211 0
 1032 0008 C1EB0111 		rsb	r1, r1, r1, lsl #4
 1033              	.LVL94:
 1034 000c 8E01     		lsls	r6, r1, #6
 1035              	.LVL95:
1213:Generated_Source\PSoC5/FanController.c ****                                            FanController_MAX_GAIN) * satL;
 1036              		.loc 1 1213 0
 1037 000e C2EB0212 		rsb	r2, r2, r2, lsl #4
 1038              	.LVL96:
 1039 0012 9501     		lsls	r5, r2, #6
 1040              	.LVL97:
1217:Generated_Source\PSoC5/FanController.c **** 
 1041              		.loc 1 1217 0
 1042 0014 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 51


 1043              	.LVL98:
1219:Generated_Source\PSoC5/FanController.c ****             FanController_outputSatL[fanNum - 1u] = tmpOutL;
 1044              		.loc 1 1219 0
 1045 0018 044B     		ldr	r3, .L97
 1046 001a 43F82460 		str	r6, [r3, r4, lsl #2]
1220:Generated_Source\PSoC5/FanController.c **** 
 1047              		.loc 1 1220 0
 1048 001e 044B     		ldr	r3, .L97+4
 1049 0020 43F82450 		str	r5, [r3, r4, lsl #2]
1222:Generated_Source\PSoC5/FanController.c ****         }
 1050              		.loc 1 1222 0
 1051 0024 FFF7FEFF 		bl	CyExitCriticalSection
 1052              	.LVL99:
 1053              	.L94:
 1054 0028 70BD     		pop	{r4, r5, r6, pc}
 1055              	.L98:
 1056 002a 00BF     		.align	2
 1057              	.L97:
 1058 002c 00000000 		.word	FanController_outputSatH
 1059 0030 00000000 		.word	FanController_outputSatL
 1060              		.cfi_endproc
 1061              	.LFE18:
 1062              		.size	FanController_SetSaturation, .-FanController_SetSaturation
 1063              		.section	.text.FanController_SetPID,"ax",%progbits
 1064              		.align	2
 1065              		.global	FanController_SetPID
 1066              		.thumb
 1067              		.thumb_func
 1068              		.type	FanController_SetPID, %function
 1069              	FanController_SetPID:
 1070              	.LFB19:
1256:Generated_Source\PSoC5/FanController.c ****         uint8 interruptState;
 1071              		.loc 1 1256 0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 0
 1074              		@ frame_needed = 0, uses_anonymous_args = 0
 1075              	.LVL100:
 1076 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1077              		.cfi_def_cfa_offset 24
 1078              		.cfi_offset 3, -24
 1079              		.cfi_offset 4, -20
 1080              		.cfi_offset 5, -16
 1081              		.cfi_offset 6, -12
 1082              		.cfi_offset 7, -8
 1083              		.cfi_offset 14, -4
1263:Generated_Source\PSoC5/FanController.c ****         {
 1084              		.loc 1 1263 0
 1085 0002 451E     		subs	r5, r0, #1
 1086 0004 032D     		cmp	r5, #3
 1087 0006 29D8     		bhi	.L99
1269:Generated_Source\PSoC5/FanController.c ****                     (int32) FanController_MAX_GAIN);
 1088              		.loc 1 1269 0
 1089 0008 0A44     		add	r2, r2, r1
 1090              	.LVL101:
 1091 000a 1A44     		add	r2, r2, r3
 1092 000c 1203     		lsls	r2, r2, #12
 1093 000e 144E     		ldr	r6, .L102
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 52


 1094 0010 86FB0204 		smull	r0, r4, r6, r2
 1095              	.LVL102:
 1096 0014 1444     		add	r4, r4, r2
 1097 0016 D217     		asrs	r2, r2, #31
 1098 0018 C2EBE434 		rsb	r4, r2, r4, asr #15
 1099 001c 24B2     		sxth	r4, r4
 1100              	.LVL103:
1271:Generated_Source\PSoC5/FanController.c ****                     (int32) FanController_MAX_GAIN);
 1101              		.loc 1 1271 0
 1102 001e 01EB4301 		add	r1, r1, r3, lsl #1
 1103              	.LVL104:
 1104 0022 C1EB0151 		rsb	r1, r1, r1, lsl #20
 1105 0026 0A03     		lsls	r2, r1, #12
 1106 0028 86FB0217 		smull	r1, r7, r6, r2
 1107 002c 1744     		add	r7, r7, r2
 1108 002e D217     		asrs	r2, r2, #31
 1109 0030 C2EBE737 		rsb	r7, r2, r7, asr #15
 1110 0034 3FB2     		sxth	r7, r7
 1111              	.LVL105:
1273:Generated_Source\PSoC5/FanController.c ****                     (int32) FanController_MAX_GAIN);
 1112              		.loc 1 1273 0
 1113 0036 1B03     		lsls	r3, r3, #12
 1114              	.LVL106:
 1115 0038 86FB0326 		smull	r2, r6, r6, r3
 1116 003c 3344     		add	r3, r3, r6
 1117 003e 43F3CF36 		sbfx	r6, r3, #15, #16
 1118              	.LVL107:
1277:Generated_Source\PSoC5/FanController.c **** 
 1119              		.loc 1 1277 0
 1120 0042 FFF7FEFF 		bl	CyEnterCriticalSection
 1121              	.LVL108:
1279:Generated_Source\PSoC5/FanController.c ****             FanController_pidA2[fanNum - 1u] = tmpA2;
 1122              		.loc 1 1279 0
 1123 0046 074B     		ldr	r3, .L102+4
 1124 0048 23F81540 		strh	r4, [r3, r5, lsl #1]	@ movhi
1280:Generated_Source\PSoC5/FanController.c ****             FanController_pidA3[fanNum - 1u] = tmpA3;
 1125              		.loc 1 1280 0
 1126 004c 064B     		ldr	r3, .L102+8
 1127 004e 23F81570 		strh	r7, [r3, r5, lsl #1]	@ movhi
1281:Generated_Source\PSoC5/FanController.c **** 
 1128              		.loc 1 1281 0
 1129 0052 064B     		ldr	r3, .L102+12
 1130 0054 23F81560 		strh	r6, [r3, r5, lsl #1]	@ movhi
1283:Generated_Source\PSoC5/FanController.c ****         }
 1131              		.loc 1 1283 0
 1132 0058 FFF7FEFF 		bl	CyExitCriticalSection
 1133              	.LVL109:
 1134              	.L99:
 1135 005c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1136              	.L103:
 1137 005e 00BF     		.align	2
 1138              	.L102:
 1139 0060 01800080 		.word	-2147450879
 1140 0064 00000000 		.word	FanController_pidA1
 1141 0068 00000000 		.word	FanController_pidA2
 1142 006c 00000000 		.word	FanController_pidA3
 1143              		.cfi_endproc
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 53


 1144              	.LFE19:
 1145              		.size	FanController_SetPID, .-FanController_SetPID
 1146              		.global	FanController_fanProperties
 1147              		.comm	FanController_fanControl,8,4
 1148              		.global	FanController_fanPwmInitRegs
 1149              		.global	FanController_fanDriverRegs
 1150              		.comm	FanController_desiredFansSpeed,8,4
 1151              		.comm	FanController_outputSatH,16,4
 1152              		.comm	FanController_outputSatL,16,4
 1153              		.comm	FanController_pidA3,8,4
 1154              		.comm	FanController_pidA2,8,4
 1155              		.comm	FanController_pidA1,8,4
 1156              		.global	FanController_initVar
 1157              		.section	.rodata
 1158              		.align	2
 1159              		.set	.LANCHOR1,. + 0
 1160              		.type	FanController_fanDriverRegs, %object
 1161              		.size	FanController_fanDriverRegs, 16
 1162              	FanController_fanDriverRegs:
 1163 0000 44650040 		.word	1073767748
 1164 0004 54650040 		.word	1073767764
 1165 0008 40640040 		.word	1073767488
 1166 000c 50640040 		.word	1073767504
 1167              		.type	FanController_fanPwmInitRegs, %object
 1168              		.size	FanController_fanPwmInitRegs, 16
 1169              	FanController_fanPwmInitRegs:
 1170 0010 14650040 		.word	1073767700
 1171 0014 94650040 		.word	1073767828
 1172 0018 10640040 		.word	1073767440
 1173 001c 90640040 		.word	1073767568
 1174              		.data
 1175              		.align	2
 1176              		.set	.LANCHOR2,. + 0
 1177              		.type	FanController_fanProperties, %object
 1178              		.size	FanController_fanProperties, 56
 1179              	FanController_fanProperties:
 1180 0000 9808     		.short	2200
 1181 0002 C012     		.short	4800
 1182 0004 7C15     		.short	5500
 1183 0006 1027     		.short	10000
 1184 0008 AD00     		.short	173
 1185 000a A00F     		.short	4000
 1186 000c 9821     		.short	8600
 1187 000e 9808     		.short	2200
 1188 0010 C012     		.short	4800
 1189 0012 7C15     		.short	5500
 1190 0014 1027     		.short	10000
 1191 0016 AD00     		.short	173
 1192 0018 A00F     		.short	4000
 1193 001a 9821     		.short	8600
 1194 001c 9808     		.short	2200
 1195 001e C012     		.short	4800
 1196 0020 7C15     		.short	5500
 1197 0022 1027     		.short	10000
 1198 0024 AD00     		.short	173
 1199 0026 A00F     		.short	4000
 1200 0028 9821     		.short	8600
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 54


 1201 002a 9808     		.short	2200
 1202 002c C012     		.short	4800
 1203 002e 7C15     		.short	5500
 1204 0030 1027     		.short	10000
 1205 0032 AD00     		.short	173
 1206 0034 A00F     		.short	4000
 1207 0036 9821     		.short	8600
 1208              		.bss
 1209              		.align	2
 1210              		.set	.LANCHOR0,. + 0
 1211              		.type	FanController_TachOutDMA_channel, %object
 1212              		.size	FanController_TachOutDMA_channel, 1
 1213              	FanController_TachOutDMA_channel:
 1214 0000 00       		.space	1
 1215 0001 000000   		.space	3
 1216              		.type	FanController_fanOutTds.5252, %object
 1217              		.size	FanController_fanOutTds.5252, 4
 1218              	FanController_fanOutTds.5252:
 1219 0004 00000000 		.space	4
 1220              		.type	FanController_initVar, %object
 1221              		.size	FanController_initVar, 1
 1222              	FanController_initVar:
 1223 0008 00       		.space	1
 1224              		.text
 1225              	.Letext0:
 1226              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1227              		.file 3 "Generated_Source\\PSoC5\\FanController.h"
 1228              		.file 4 "Generated_Source\\PSoC5/CYDMAC.H"
 1229              		.file 5 "Generated_Source\\PSoC5/CyLib.h"
 1230              		.file 6 "Generated_Source\\PSoC5\\FanController_PID_ISR.h"
 1231              		.section	.debug_info,"",%progbits
 1232              	.Ldebug_info0:
 1233 0000 B80A0000 		.4byte	0xab8
 1234 0004 0400     		.2byte	0x4
 1235 0006 00000000 		.4byte	.Ldebug_abbrev0
 1236 000a 04       		.byte	0x4
 1237 000b 01       		.uleb128 0x1
 1238 000c 85070000 		.4byte	.LASF113
 1239 0010 0C       		.byte	0xc
 1240 0011 44060000 		.4byte	.LASF114
 1241 0015 03010000 		.4byte	.LASF115
 1242 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1243 001d 00000000 		.4byte	0
 1244 0021 00000000 		.4byte	.Ldebug_line0
 1245 0025 02       		.uleb128 0x2
 1246 0026 08       		.byte	0x8
 1247 0027 07       		.byte	0x7
 1248 0028 4E040000 		.4byte	.LASF0
 1249 002c 02       		.uleb128 0x2
 1250 002d 04       		.byte	0x4
 1251 002e 07       		.byte	0x7
 1252 002f A5040000 		.4byte	.LASF1
 1253 0033 02       		.uleb128 0x2
 1254 0034 01       		.byte	0x1
 1255 0035 06       		.byte	0x6
 1256 0036 30040000 		.4byte	.LASF2
 1257 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 55


 1258 003b 01       		.byte	0x1
 1259 003c 08       		.byte	0x8
 1260 003d F7030000 		.4byte	.LASF3
 1261 0041 02       		.uleb128 0x2
 1262 0042 02       		.byte	0x2
 1263 0043 05       		.byte	0x5
 1264 0044 D7000000 		.4byte	.LASF4
 1265 0048 02       		.uleb128 0x2
 1266 0049 02       		.byte	0x2
 1267 004a 07       		.byte	0x7
 1268 004b 26050000 		.4byte	.LASF5
 1269 004f 02       		.uleb128 0x2
 1270 0050 04       		.byte	0x4
 1271 0051 05       		.byte	0x5
 1272 0052 18030000 		.4byte	.LASF6
 1273 0056 02       		.uleb128 0x2
 1274 0057 04       		.byte	0x4
 1275 0058 07       		.byte	0x7
 1276 0059 40030000 		.4byte	.LASF7
 1277 005d 02       		.uleb128 0x2
 1278 005e 08       		.byte	0x8
 1279 005f 05       		.byte	0x5
 1280 0060 D4020000 		.4byte	.LASF8
 1281 0064 03       		.uleb128 0x3
 1282 0065 04       		.byte	0x4
 1283 0066 05       		.byte	0x5
 1284 0067 696E7400 		.ascii	"int\000"
 1285 006b 04       		.uleb128 0x4
 1286 006c 4A020000 		.4byte	.LASF9
 1287 0070 02       		.byte	0x2
 1288 0071 E801     		.2byte	0x1e8
 1289 0073 3A000000 		.4byte	0x3a
 1290 0077 04       		.uleb128 0x4
 1291 0078 F3010000 		.4byte	.LASF10
 1292 007c 02       		.byte	0x2
 1293 007d E901     		.2byte	0x1e9
 1294 007f 48000000 		.4byte	0x48
 1295 0083 04       		.uleb128 0x4
 1296 0084 12060000 		.4byte	.LASF11
 1297 0088 02       		.byte	0x2
 1298 0089 EA01     		.2byte	0x1ea
 1299 008b 56000000 		.4byte	0x56
 1300 008f 04       		.uleb128 0x4
 1301 0090 1D020000 		.4byte	.LASF12
 1302 0094 02       		.byte	0x2
 1303 0095 EC01     		.2byte	0x1ec
 1304 0097 41000000 		.4byte	0x41
 1305 009b 04       		.uleb128 0x4
 1306 009c 37060000 		.4byte	.LASF13
 1307 00a0 02       		.byte	0x2
 1308 00a1 ED01     		.2byte	0x1ed
 1309 00a3 4F000000 		.4byte	0x4f
 1310 00a7 02       		.uleb128 0x2
 1311 00a8 04       		.byte	0x4
 1312 00a9 04       		.byte	0x4
 1313 00aa 9A020000 		.4byte	.LASF14
 1314 00ae 02       		.uleb128 0x2
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 56


 1315 00af 08       		.byte	0x8
 1316 00b0 04       		.byte	0x4
 1317 00b1 3D060000 		.4byte	.LASF15
 1318 00b5 02       		.uleb128 0x2
 1319 00b6 01       		.byte	0x1
 1320 00b7 08       		.byte	0x8
 1321 00b8 91050000 		.4byte	.LASF16
 1322 00bc 04       		.uleb128 0x4
 1323 00bd 19060000 		.4byte	.LASF17
 1324 00c1 02       		.byte	0x2
 1325 00c2 9202     		.2byte	0x292
 1326 00c4 C8000000 		.4byte	0xc8
 1327 00c8 05       		.uleb128 0x5
 1328 00c9 6B000000 		.4byte	0x6b
 1329 00cd 04       		.uleb128 0x4
 1330 00ce 9B000000 		.4byte	.LASF18
 1331 00d2 02       		.byte	0x2
 1332 00d3 9302     		.2byte	0x293
 1333 00d5 D9000000 		.4byte	0xd9
 1334 00d9 05       		.uleb128 0x5
 1335 00da 77000000 		.4byte	0x77
 1336 00de 02       		.uleb128 0x2
 1337 00df 08       		.byte	0x8
 1338 00e0 04       		.byte	0x4
 1339 00e1 D1030000 		.4byte	.LASF19
 1340 00e5 02       		.uleb128 0x2
 1341 00e6 04       		.byte	0x4
 1342 00e7 07       		.byte	0x7
 1343 00e8 2B070000 		.4byte	.LASF20
 1344 00ec 06       		.uleb128 0x6
 1345 00ed 01       		.byte	0x1
 1346 00ee 03       		.byte	0x3
 1347 00ef CE       		.byte	0xce
 1348 00f0 01010000 		.4byte	0x101
 1349 00f4 07       		.uleb128 0x7
 1350 00f5 3C040000 		.4byte	.LASF22
 1351 00f9 03       		.byte	0x3
 1352 00fa D0       		.byte	0xd0
 1353 00fb 6B000000 		.4byte	0x6b
 1354 00ff 00       		.byte	0
 1355 0100 00       		.byte	0
 1356 0101 08       		.uleb128 0x8
 1357 0102 88040000 		.4byte	.LASF21
 1358 0106 03       		.byte	0x3
 1359 0107 D1       		.byte	0xd1
 1360 0108 EC000000 		.4byte	0xec
 1361 010c 06       		.uleb128 0x6
 1362 010d 08       		.byte	0x8
 1363 010e 03       		.byte	0x3
 1364 010f DD       		.byte	0xdd
 1365 0110 21010000 		.4byte	0x121
 1366 0114 07       		.uleb128 0x7
 1367 0115 58000000 		.4byte	.LASF23
 1368 0119 03       		.byte	0x3
 1369 011a E8       		.byte	0xe8
 1370 011b 21010000 		.4byte	0x121
 1371 011f 00       		.byte	0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 57


 1372 0120 00       		.byte	0
 1373 0121 09       		.uleb128 0x9
 1374 0122 77000000 		.4byte	0x77
 1375 0126 31010000 		.4byte	0x131
 1376 012a 0A       		.uleb128 0xa
 1377 012b E5000000 		.4byte	0xe5
 1378 012f 03       		.byte	0x3
 1379 0130 00       		.byte	0
 1380 0131 08       		.uleb128 0x8
 1381 0132 63030000 		.4byte	.LASF24
 1382 0136 03       		.byte	0x3
 1383 0137 EB       		.byte	0xeb
 1384 0138 0C010000 		.4byte	0x10c
 1385 013c 06       		.uleb128 0x6
 1386 013d 0E       		.byte	0xe
 1387 013e 03       		.byte	0x3
 1388 013f EE       		.byte	0xee
 1389 0140 99010000 		.4byte	0x199
 1390 0144 07       		.uleb128 0x7
 1391 0145 51010000 		.4byte	.LASF25
 1392 0149 03       		.byte	0x3
 1393 014a F0       		.byte	0xf0
 1394 014b 77000000 		.4byte	0x77
 1395 014f 00       		.byte	0
 1396 0150 07       		.uleb128 0x7
 1397 0151 56010000 		.4byte	.LASF26
 1398 0155 03       		.byte	0x3
 1399 0156 F1       		.byte	0xf1
 1400 0157 77000000 		.4byte	0x77
 1401 015b 02       		.byte	0x2
 1402 015c 07       		.uleb128 0x7
 1403 015d DF040000 		.4byte	.LASF27
 1404 0161 03       		.byte	0x3
 1405 0162 F2       		.byte	0xf2
 1406 0163 77000000 		.4byte	0x77
 1407 0167 04       		.byte	0x4
 1408 0168 07       		.uleb128 0x7
 1409 0169 17020000 		.4byte	.LASF28
 1410 016d 03       		.byte	0x3
 1411 016e F3       		.byte	0xf3
 1412 016f 77000000 		.4byte	0x77
 1413 0173 06       		.byte	0x6
 1414 0174 07       		.uleb128 0x7
 1415 0175 19050000 		.4byte	.LASF29
 1416 0179 03       		.byte	0x3
 1417 017a F4       		.byte	0xf4
 1418 017b 77000000 		.4byte	0x77
 1419 017f 08       		.byte	0x8
 1420 0180 07       		.uleb128 0x7
 1421 0181 B5030000 		.4byte	.LASF30
 1422 0185 03       		.byte	0x3
 1423 0186 F5       		.byte	0xf5
 1424 0187 77000000 		.4byte	0x77
 1425 018b 0A       		.byte	0xa
 1426 018c 07       		.uleb128 0x7
 1427 018d AC030000 		.4byte	.LASF31
 1428 0191 03       		.byte	0x3
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 58


 1429 0192 F6       		.byte	0xf6
 1430 0193 77000000 		.4byte	0x77
 1431 0197 0C       		.byte	0xc
 1432 0198 00       		.byte	0
 1433 0199 08       		.uleb128 0x8
 1434 019a 36000000 		.4byte	.LASF32
 1435 019e 03       		.byte	0x3
 1436 019f F7       		.byte	0xf7
 1437 01a0 3C010000 		.4byte	0x13c
 1438 01a4 0B       		.uleb128 0xb
 1439 01a5 04       		.byte	0x4
 1440 01a6 03       		.byte	0x3
 1441 01a7 0C01     		.2byte	0x10c
 1442 01a9 BB010000 		.4byte	0x1bb
 1443 01ad 0C       		.uleb128 0xc
 1444 01ae 5E070000 		.4byte	.LASF33
 1445 01b2 03       		.byte	0x3
 1446 01b3 0E01     		.2byte	0x10e
 1447 01b5 83000000 		.4byte	0x83
 1448 01b9 00       		.byte	0
 1449 01ba 00       		.byte	0
 1450 01bb 04       		.uleb128 0x4
 1451 01bc C9060000 		.4byte	.LASF34
 1452 01c0 03       		.byte	0x3
 1453 01c1 0F01     		.2byte	0x10f
 1454 01c3 A4010000 		.4byte	0x1a4
 1455 01c7 0B       		.uleb128 0xb
 1456 01c8 08       		.byte	0x8
 1457 01c9 03       		.byte	0x3
 1458 01ca 1101     		.2byte	0x111
 1459 01cc EB010000 		.4byte	0x1eb
 1460 01d0 0C       		.uleb128 0xc
 1461 01d1 E2020000 		.4byte	.LASF35
 1462 01d5 03       		.byte	0x3
 1463 01d6 1301     		.2byte	0x113
 1464 01d8 83000000 		.4byte	0x83
 1465 01dc 00       		.byte	0
 1466 01dd 0C       		.uleb128 0xc
 1467 01de F4040000 		.4byte	.LASF36
 1468 01e2 03       		.byte	0x3
 1469 01e3 1401     		.2byte	0x114
 1470 01e5 83000000 		.4byte	0x83
 1471 01e9 04       		.byte	0x4
 1472 01ea 00       		.byte	0
 1473 01eb 04       		.uleb128 0x4
 1474 01ec 65040000 		.4byte	.LASF37
 1475 01f0 03       		.byte	0x3
 1476 01f1 1501     		.2byte	0x115
 1477 01f3 C7010000 		.4byte	0x1c7
 1478 01f7 0D       		.uleb128 0xd
 1479 01f8 A0020000 		.4byte	.LASF42
 1480 01fc 01       		.byte	0x1
 1481 01fd 8906     		.2byte	0x689
 1482 01ff 00000000 		.4byte	.LFB22
 1483 0203 10000000 		.4byte	.LFE22-.LFB22
 1484 0207 01       		.uleb128 0x1
 1485 0208 9C       		.byte	0x9c
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 59


 1486 0209 17020000 		.4byte	0x217
 1487 020d 0E       		.uleb128 0xe
 1488 020e 0A000000 		.4byte	.LVL0
 1489 0212 370A0000 		.4byte	0xa37
 1490 0216 00       		.byte	0
 1491 0217 0F       		.uleb128 0xf
 1492 0218 23020000 		.4byte	.LASF116
 1493 021c 01       		.byte	0x1
 1494 021d 5C06     		.2byte	0x65c
 1495 021f 6B000000 		.4byte	0x6b
 1496 0223 00000000 		.4byte	.LFB21
 1497 0227 32000000 		.4byte	.LFE21-.LFB21
 1498 022b 01       		.uleb128 0x1
 1499 022c 9C       		.byte	0x9c
 1500 022d DC020000 		.4byte	0x2dc
 1501 0231 10       		.uleb128 0x10
 1502 0232 5B010000 		.4byte	.LASF38
 1503 0236 01       		.byte	0x1
 1504 0237 5C06     		.2byte	0x65c
 1505 0239 6B000000 		.4byte	0x6b
 1506 023d 00000000 		.4byte	.LLST0
 1507 0241 10       		.uleb128 0x10
 1508 0242 C4020000 		.4byte	.LASF39
 1509 0246 01       		.byte	0x1
 1510 0247 5C06     		.2byte	0x65c
 1511 0249 6B000000 		.4byte	0x6b
 1512 024d 21000000 		.4byte	.LLST1
 1513 0251 10       		.uleb128 0x10
 1514 0252 CF010000 		.4byte	.LASF40
 1515 0256 01       		.byte	0x1
 1516 0257 5D06     		.2byte	0x65d
 1517 0259 77000000 		.4byte	0x77
 1518 025d 42000000 		.4byte	.LLST2
 1519 0261 10       		.uleb128 0x10
 1520 0262 52030000 		.4byte	.LASF41
 1521 0266 01       		.byte	0x1
 1522 0267 5D06     		.2byte	0x65d
 1523 0269 77000000 		.4byte	0x77
 1524 026d 63000000 		.4byte	.LLST3
 1525 0271 11       		.uleb128 0x11
 1526 0272 15000000 		.4byte	.LASF44
 1527 0276 01       		.byte	0x1
 1528 0277 6006     		.2byte	0x660
 1529 0279 6B000000 		.4byte	0x6b
 1530 027d 00       		.byte	0
 1531 027e 12       		.uleb128 0x12
 1532 027f 1A000000 		.4byte	.LVL7
 1533 0283 420A0000 		.4byte	0xa42
 1534 0287 A6020000 		.4byte	0x2a6
 1535 028b 13       		.uleb128 0x13
 1536 028c 01       		.uleb128 0x1
 1537 028d 50       		.byte	0x50
 1538 028e 02       		.uleb128 0x2
 1539 028f 74       		.byte	0x74
 1540 0290 00       		.sleb128 0
 1541 0291 13       		.uleb128 0x13
 1542 0292 01       		.uleb128 0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 60


 1543 0293 53       		.byte	0x53
 1544 0294 02       		.uleb128 0x2
 1545 0295 74       		.byte	0x74
 1546 0296 00       		.sleb128 0
 1547 0297 13       		.uleb128 0x13
 1548 0298 02       		.uleb128 0x2
 1549 0299 7D       		.byte	0x7d
 1550 029a 00       		.sleb128 0
 1551 029b 02       		.uleb128 0x2
 1552 029c 74       		.byte	0x74
 1553 029d 00       		.sleb128 0
 1554 029e 13       		.uleb128 0x13
 1555 029f 02       		.uleb128 0x2
 1556 02a0 7D       		.byte	0x7d
 1557 02a1 04       		.sleb128 4
 1558 02a2 02       		.uleb128 0x2
 1559 02a3 74       		.byte	0x74
 1560 02a4 00       		.sleb128 0
 1561 02a5 00       		.byte	0
 1562 02a6 12       		.uleb128 0x12
 1563 02a7 24000000 		.4byte	.LVL8
 1564 02ab 4D0A0000 		.4byte	0xa4d
 1565 02af C6020000 		.4byte	0x2c6
 1566 02b3 13       		.uleb128 0x13
 1567 02b4 01       		.uleb128 0x1
 1568 02b5 50       		.byte	0x50
 1569 02b6 02       		.uleb128 0x2
 1570 02b7 74       		.byte	0x74
 1571 02b8 00       		.sleb128 0
 1572 02b9 13       		.uleb128 0x13
 1573 02ba 01       		.uleb128 0x1
 1574 02bb 51       		.byte	0x51
 1575 02bc 02       		.uleb128 0x2
 1576 02bd 75       		.byte	0x75
 1577 02be 00       		.sleb128 0
 1578 02bf 13       		.uleb128 0x13
 1579 02c0 01       		.uleb128 0x1
 1580 02c1 52       		.byte	0x52
 1581 02c2 02       		.uleb128 0x2
 1582 02c3 76       		.byte	0x76
 1583 02c4 00       		.sleb128 0
 1584 02c5 00       		.byte	0
 1585 02c6 14       		.uleb128 0x14
 1586 02c7 2C000000 		.4byte	.LVL9
 1587 02cb 580A0000 		.4byte	0xa58
 1588 02cf 13       		.uleb128 0x13
 1589 02d0 01       		.uleb128 0x1
 1590 02d1 50       		.byte	0x50
 1591 02d2 02       		.uleb128 0x2
 1592 02d3 74       		.byte	0x74
 1593 02d4 00       		.sleb128 0
 1594 02d5 13       		.uleb128 0x13
 1595 02d6 01       		.uleb128 0x1
 1596 02d7 51       		.byte	0x51
 1597 02d8 01       		.uleb128 0x1
 1598 02d9 32       		.byte	0x32
 1599 02da 00       		.byte	0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 61


 1600 02db 00       		.byte	0
 1601 02dc 0D       		.uleb128 0xd
 1602 02dd 72010000 		.4byte	.LASF43
 1603 02e1 01       		.byte	0x1
 1604 02e2 2F05     		.2byte	0x52f
 1605 02e4 00000000 		.4byte	.LFB20
 1606 02e8 A0000000 		.4byte	.LFE20-.LFB20
 1607 02ec 01       		.uleb128 0x1
 1608 02ed 9C       		.byte	0x9c
 1609 02ee B4030000 		.4byte	0x3b4
 1610 02f2 15       		.uleb128 0x15
 1611 02f3 2F000000 		.4byte	.LASF45
 1612 02f7 01       		.byte	0x1
 1613 02f8 3105     		.2byte	0x531
 1614 02fa 6B000000 		.4byte	0x6b
 1615 02fe 84000000 		.4byte	.LLST4
 1616 0302 15       		.uleb128 0x15
 1617 0303 D0000000 		.4byte	.LASF46
 1618 0307 01       		.byte	0x1
 1619 0308 3205     		.2byte	0x532
 1620 030a 6B000000 		.4byte	0x6b
 1621 030e DA000000 		.4byte	.LLST5
 1622 0312 16       		.uleb128 0x16
 1623 0313 13070000 		.4byte	.LASF47
 1624 0317 01       		.byte	0x1
 1625 0318 3705     		.2byte	0x537
 1626 031a B4030000 		.4byte	0x3b4
 1627 031e 05       		.uleb128 0x5
 1628 031f 03       		.byte	0x3
 1629 0320 04000000 		.4byte	FanController_fanOutTds.5252
 1630 0324 12       		.uleb128 0x12
 1631 0325 12000000 		.4byte	.LVL10
 1632 0329 17020000 		.4byte	0x217
 1633 032d 4E030000 		.4byte	0x34e
 1634 0331 13       		.uleb128 0x13
 1635 0332 01       		.uleb128 0x1
 1636 0333 50       		.byte	0x50
 1637 0334 01       		.uleb128 0x1
 1638 0335 32       		.byte	0x32
 1639 0336 13       		.uleb128 0x13
 1640 0337 01       		.uleb128 0x1
 1641 0338 51       		.byte	0x51
 1642 0339 01       		.uleb128 0x1
 1643 033a 31       		.byte	0x31
 1644 033b 13       		.uleb128 0x13
 1645 033c 01       		.uleb128 0x1
 1646 033d 52       		.byte	0x52
 1647 033e 03       		.uleb128 0x3
 1648 033f 0A       		.byte	0xa
 1649 0340 0040     		.2byte	0x4000
 1650 0342 13       		.uleb128 0x13
 1651 0343 01       		.uleb128 0x1
 1652 0344 53       		.byte	0x53
 1653 0345 07       		.uleb128 0x7
 1654 0346 03       		.byte	0x3
 1655 0347 00000000 		.4byte	FanController_fanControl
 1656 034b 40       		.byte	0x40
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 62


 1657 034c 25       		.byte	0x25
 1658 034d 00       		.byte	0
 1659 034e 0E       		.uleb128 0xe
 1660 034f 1E000000 		.4byte	.LVL13
 1661 0353 630A0000 		.4byte	0xa63
 1662 0357 12       		.uleb128 0x12
 1663 0358 4A000000 		.4byte	.LVL20
 1664 035c 6E0A0000 		.4byte	0xa6e
 1665 0360 6F030000 		.4byte	0x36f
 1666 0364 13       		.uleb128 0x13
 1667 0365 01       		.uleb128 0x1
 1668 0366 51       		.byte	0x51
 1669 0367 01       		.uleb128 0x1
 1670 0368 32       		.byte	0x32
 1671 0369 13       		.uleb128 0x13
 1672 036a 01       		.uleb128 0x1
 1673 036b 53       		.byte	0x53
 1674 036c 01       		.uleb128 0x1
 1675 036d 36       		.byte	0x36
 1676 036e 00       		.byte	0
 1677 036f 12       		.uleb128 0x12
 1678 0370 60000000 		.4byte	.LVL21
 1679 0374 6E0A0000 		.4byte	0xa6e
 1680 0378 87030000 		.4byte	0x387
 1681 037c 13       		.uleb128 0x13
 1682 037d 01       		.uleb128 0x1
 1683 037e 51       		.byte	0x51
 1684 037f 01       		.uleb128 0x1
 1685 0380 32       		.byte	0x32
 1686 0381 13       		.uleb128 0x13
 1687 0382 01       		.uleb128 0x1
 1688 0383 53       		.byte	0x53
 1689 0384 01       		.uleb128 0x1
 1690 0385 32       		.byte	0x32
 1691 0386 00       		.byte	0
 1692 0387 12       		.uleb128 0x12
 1693 0388 82000000 		.4byte	.LVL26
 1694 038c 790A0000 		.4byte	0xa79
 1695 0390 AA030000 		.4byte	0x3aa
 1696 0394 13       		.uleb128 0x13
 1697 0395 01       		.uleb128 0x1
 1698 0396 51       		.byte	0x51
 1699 0397 03       		.uleb128 0x3
 1700 0398 0A       		.byte	0xa
 1701 0399 0468     		.2byte	0x6804
 1702 039b 13       		.uleb128 0x13
 1703 039c 01       		.uleb128 0x1
 1704 039d 52       		.byte	0x52
 1705 039e 0A       		.uleb128 0xa
 1706 039f 74       		.byte	0x74
 1707 03a0 00       		.sleb128 0
 1708 03a1 31       		.byte	0x31
 1709 03a2 24       		.byte	0x24
 1710 03a3 03       		.byte	0x3
 1711 03a4 00000000 		.4byte	FanController_fanControl
 1712 03a8 22       		.byte	0x22
 1713 03a9 00       		.byte	0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 63


 1714 03aa 0E       		.uleb128 0xe
 1715 03ab 94000000 		.4byte	.LVL29
 1716 03af 840A0000 		.4byte	0xa84
 1717 03b3 00       		.byte	0
 1718 03b4 09       		.uleb128 0x9
 1719 03b5 01010000 		.4byte	0x101
 1720 03b9 C4030000 		.4byte	0x3c4
 1721 03bd 0A       		.uleb128 0xa
 1722 03be E5000000 		.4byte	0xe5
 1723 03c2 03       		.byte	0x3
 1724 03c3 00       		.byte	0
 1725 03c4 17       		.uleb128 0x17
 1726 03c5 D5080000 		.4byte	.LASF49
 1727 03c9 01       		.byte	0x1
 1728 03ca B101     		.2byte	0x1b1
 1729 03cc 00000000 		.4byte	.LFB3
 1730 03d0 38000000 		.4byte	.LFE3-.LFB3
 1731 03d4 01       		.uleb128 0x1
 1732 03d5 9C       		.byte	0x9c
 1733 03d6 17040000 		.4byte	0x417
 1734 03da 15       		.uleb128 0x15
 1735 03db 03060000 		.4byte	.LASF48
 1736 03df 01       		.byte	0x1
 1737 03e0 B301     		.2byte	0x1b3
 1738 03e2 6B000000 		.4byte	0x6b
 1739 03e6 0B010000 		.4byte	.LLST6
 1740 03ea 0E       		.uleb128 0xe
 1741 03eb 0C000000 		.4byte	.LVL31
 1742 03ef 8F0A0000 		.4byte	0xa8f
 1743 03f3 12       		.uleb128 0x12
 1744 03f4 22000000 		.4byte	.LVL33
 1745 03f8 9A0A0000 		.4byte	0xa9a
 1746 03fc 06040000 		.4byte	0x406
 1747 0400 13       		.uleb128 0x13
 1748 0401 01       		.uleb128 0x1
 1749 0402 51       		.byte	0x51
 1750 0403 01       		.uleb128 0x1
 1751 0404 31       		.byte	0x31
 1752 0405 00       		.byte	0
 1753 0406 14       		.uleb128 0x14
 1754 0407 28000000 		.4byte	.LVL34
 1755 040b A50A0000 		.4byte	0xaa5
 1756 040f 13       		.uleb128 0x13
 1757 0410 01       		.uleb128 0x1
 1758 0411 50       		.byte	0x50
 1759 0412 02       		.uleb128 0x2
 1760 0413 74       		.byte	0x74
 1761 0414 00       		.sleb128 0
 1762 0415 00       		.byte	0
 1763 0416 00       		.byte	0
 1764 0417 17       		.uleb128 0x17
 1765 0418 44070000 		.4byte	.LASF50
 1766 041c 01       		.byte	0x1
 1767 041d F501     		.2byte	0x1f5
 1768 041f 00000000 		.4byte	.LFB4
 1769 0423 1C000000 		.4byte	.LFE4-.LFB4
 1770 0427 01       		.uleb128 0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 64


 1771 0428 9C       		.byte	0x9c
 1772 0429 50040000 		.4byte	0x450
 1773 042d 15       		.uleb128 0x15
 1774 042e 03060000 		.4byte	.LASF48
 1775 0432 01       		.byte	0x1
 1776 0433 F701     		.2byte	0x1f7
 1777 0435 6B000000 		.4byte	0x6b
 1778 0439 1E010000 		.4byte	.LLST7
 1779 043d 0E       		.uleb128 0xe
 1780 043e 06000000 		.4byte	.LVL36
 1781 0442 8F0A0000 		.4byte	0xa8f
 1782 0446 0E       		.uleb128 0xe
 1783 0447 14000000 		.4byte	.LVL37
 1784 044b A50A0000 		.4byte	0xaa5
 1785 044f 00       		.byte	0
 1786 0450 17       		.uleb128 0x17
 1787 0451 6D080000 		.4byte	.LASF51
 1788 0455 01       		.byte	0x1
 1789 0456 1102     		.2byte	0x211
 1790 0458 00000000 		.4byte	.LFB5
 1791 045c 1C000000 		.4byte	.LFE5-.LFB5
 1792 0460 01       		.uleb128 0x1
 1793 0461 9C       		.byte	0x9c
 1794 0462 89040000 		.4byte	0x489
 1795 0466 15       		.uleb128 0x15
 1796 0467 03060000 		.4byte	.LASF48
 1797 046b 01       		.byte	0x1
 1798 046c 1302     		.2byte	0x213
 1799 046e 6B000000 		.4byte	0x6b
 1800 0472 31010000 		.4byte	.LLST8
 1801 0476 0E       		.uleb128 0xe
 1802 0477 06000000 		.4byte	.LVL38
 1803 047b 8F0A0000 		.4byte	0xa8f
 1804 047f 0E       		.uleb128 0xe
 1805 0480 14000000 		.4byte	.LVL39
 1806 0484 A50A0000 		.4byte	0xaa5
 1807 0488 00       		.byte	0
 1808 0489 18       		.uleb128 0x18
 1809 048a 05040000 		.4byte	.LASF52
 1810 048e 01       		.byte	0x1
 1811 048f A3       		.byte	0xa3
 1812 0490 00000000 		.4byte	.LFB1
 1813 0494 18000000 		.4byte	.LFE1-.LFB1
 1814 0498 01       		.uleb128 0x1
 1815 0499 9C       		.byte	0x9c
 1816 049a B1040000 		.4byte	0x4b1
 1817 049e 0E       		.uleb128 0xe
 1818 049f 0C000000 		.4byte	.LVL40
 1819 04a3 50040000 		.4byte	0x450
 1820 04a7 0E       		.uleb128 0xe
 1821 04a8 10000000 		.4byte	.LVL41
 1822 04ac F7010000 		.4byte	0x1f7
 1823 04b0 00       		.byte	0
 1824 04b1 17       		.uleb128 0x17
 1825 04b2 C4040000 		.4byte	.LASF53
 1826 04b6 01       		.byte	0x1
 1827 04b7 2F02     		.2byte	0x22f
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 65


 1828 04b9 00000000 		.4byte	.LFB6
 1829 04bd 24000000 		.4byte	.LFE6-.LFB6
 1830 04c1 01       		.uleb128 0x1
 1831 04c2 9C       		.byte	0x9c
 1832 04c3 FA040000 		.4byte	0x4fa
 1833 04c7 10       		.uleb128 0x10
 1834 04c8 87050000 		.4byte	.LASF54
 1835 04cc 01       		.byte	0x1
 1836 04cd 2F02     		.2byte	0x22f
 1837 04cf 6B000000 		.4byte	0x6b
 1838 04d3 44010000 		.4byte	.LLST9
 1839 04d7 15       		.uleb128 0x15
 1840 04d8 03060000 		.4byte	.LASF48
 1841 04dc 01       		.byte	0x1
 1842 04dd 3102     		.2byte	0x231
 1843 04df 6B000000 		.4byte	0x6b
 1844 04e3 65010000 		.4byte	.LLST10
 1845 04e7 0E       		.uleb128 0xe
 1846 04e8 08000000 		.4byte	.LVL43
 1847 04ec 8F0A0000 		.4byte	0xa8f
 1848 04f0 0E       		.uleb128 0xe
 1849 04f1 1E000000 		.4byte	.LVL44
 1850 04f5 A50A0000 		.4byte	0xaa5
 1851 04f9 00       		.byte	0
 1852 04fa 19       		.uleb128 0x19
 1853 04fb 65020000 		.4byte	.LASF57
 1854 04ff 01       		.byte	0x1
 1855 0500 4F02     		.2byte	0x24f
 1856 0502 6B000000 		.4byte	0x6b
 1857 0506 00000000 		.4byte	.LFB7
 1858 050a 10000000 		.4byte	.LFE7-.LFB7
 1859 050e 01       		.uleb128 0x1
 1860 050f 9C       		.byte	0x9c
 1861 0510 17       		.uleb128 0x17
 1862 0511 B4010000 		.4byte	.LASF55
 1863 0515 01       		.byte	0x1
 1864 0516 6B02     		.2byte	0x26b
 1865 0518 00000000 		.4byte	.LFB8
 1866 051c 0C000000 		.4byte	.LFE8-.LFB8
 1867 0520 01       		.uleb128 0x1
 1868 0521 9C       		.byte	0x9c
 1869 0522 37050000 		.4byte	0x537
 1870 0526 10       		.uleb128 0x10
 1871 0527 80020000 		.4byte	.LASF56
 1872 052b 01       		.byte	0x1
 1873 052c 6B02     		.2byte	0x26b
 1874 052e 77000000 		.4byte	0x77
 1875 0532 78010000 		.4byte	.LLST11
 1876 0536 00       		.byte	0
 1877 0537 1A       		.uleb128 0x1a
 1878 0538 84060000 		.4byte	.LASF59
 1879 053c 01       		.byte	0x1
 1880 053d 8E02     		.2byte	0x28e
 1881 053f 77000000 		.4byte	0x77
 1882 0543 00000000 		.4byte	.LFB9
 1883 0547 0C000000 		.4byte	.LFE9-.LFB9
 1884 054b 01       		.uleb128 0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 66


 1885 054c 9C       		.byte	0x9c
 1886 054d 60050000 		.4byte	0x560
 1887 0551 16       		.uleb128 0x16
 1888 0552 80020000 		.4byte	.LASF56
 1889 0556 01       		.byte	0x1
 1890 0557 9002     		.2byte	0x290
 1891 0559 77000000 		.4byte	0x77
 1892 055d 01       		.uleb128 0x1
 1893 055e 50       		.byte	0x50
 1894 055f 00       		.byte	0
 1895 0560 19       		.uleb128 0x19
 1896 0561 8F030000 		.4byte	.LASF58
 1897 0565 01       		.byte	0x1
 1898 0566 B902     		.2byte	0x2b9
 1899 0568 6B000000 		.4byte	0x6b
 1900 056c 00000000 		.4byte	.LFB10
 1901 0570 10000000 		.4byte	.LFE10-.LFB10
 1902 0574 01       		.uleb128 0x1
 1903 0575 9C       		.byte	0x9c
 1904 0576 1A       		.uleb128 0x1a
 1905 0577 A0050000 		.4byte	.LASF60
 1906 057b 01       		.byte	0x1
 1907 057c D502     		.2byte	0x2d5
 1908 057e 77000000 		.4byte	0x77
 1909 0582 00000000 		.4byte	.LFB11
 1910 0586 0C000000 		.4byte	.LFE11-.LFB11
 1911 058a 01       		.uleb128 0x1
 1912 058b 9C       		.byte	0x9c
 1913 058c 9F050000 		.4byte	0x59f
 1914 0590 16       		.uleb128 0x16
 1915 0591 07070000 		.4byte	.LASF61
 1916 0595 01       		.byte	0x1
 1917 0596 D702     		.2byte	0x2d7
 1918 0598 77000000 		.4byte	0x77
 1919 059c 01       		.uleb128 0x1
 1920 059d 50       		.byte	0x50
 1921 059e 00       		.byte	0
 1922 059f 1A       		.uleb128 0x1a
 1923 05a0 2F080000 		.4byte	.LASF62
 1924 05a4 01       		.byte	0x1
 1925 05a5 0803     		.2byte	0x308
 1926 05a7 77000000 		.4byte	0x77
 1927 05ab 00000000 		.4byte	.LFB12
 1928 05af 10000000 		.4byte	.LFE12-.LFB12
 1929 05b3 01       		.uleb128 0x1
 1930 05b4 9C       		.byte	0x9c
 1931 05b5 C8050000 		.4byte	0x5c8
 1932 05b9 16       		.uleb128 0x16
 1933 05ba 66010000 		.4byte	.LASF63
 1934 05be 01       		.byte	0x1
 1935 05bf 0A03     		.2byte	0x30a
 1936 05c1 77000000 		.4byte	0x77
 1937 05c5 01       		.uleb128 0x1
 1938 05c6 50       		.byte	0x50
 1939 05c7 00       		.byte	0
 1940 05c8 17       		.uleb128 0x17
 1941 05c9 B5000000 		.4byte	.LASF64
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 67


 1942 05cd 01       		.byte	0x1
 1943 05ce 4103     		.2byte	0x341
 1944 05d0 00000000 		.4byte	.LFB13
 1945 05d4 30000000 		.4byte	.LFE13-.LFB13
 1946 05d8 01       		.uleb128 0x1
 1947 05d9 9C       		.byte	0x9c
 1948 05da 0F060000 		.4byte	0x60f
 1949 05de 10       		.uleb128 0x10
 1950 05df 34070000 		.4byte	.LASF65
 1951 05e3 01       		.byte	0x1
 1952 05e4 4103     		.2byte	0x341
 1953 05e6 6B000000 		.4byte	0x6b
 1954 05ea 99010000 		.4byte	.LLST12
 1955 05ee 10       		.uleb128 0x10
 1956 05ef 96050000 		.4byte	.LASF66
 1957 05f3 01       		.byte	0x1
 1958 05f4 4103     		.2byte	0x341
 1959 05f6 77000000 		.4byte	0x77
 1960 05fa BA010000 		.4byte	.LLST13
 1961 05fe 15       		.uleb128 0x15
 1962 05ff 6C070000 		.4byte	.LASF67
 1963 0603 01       		.byte	0x1
 1964 0604 4403     		.2byte	0x344
 1965 0606 83000000 		.4byte	0x83
 1966 060a DB010000 		.4byte	.LLST14
 1967 060e 00       		.byte	0
 1968 060f 1A       		.uleb128 0x1a
 1969 0610 A1080000 		.4byte	.LASF68
 1970 0614 01       		.byte	0x1
 1971 0615 7303     		.2byte	0x373
 1972 0617 77000000 		.4byte	0x77
 1973 061b 00000000 		.4byte	.LFB14
 1974 061f 30000000 		.4byte	.LFE14-.LFB14
 1975 0623 01       		.uleb128 0x1
 1976 0624 9C       		.byte	0x9c
 1977 0625 4A060000 		.4byte	0x64a
 1978 0629 10       		.uleb128 0x10
 1979 062a 34070000 		.4byte	.LASF65
 1980 062e 01       		.byte	0x1
 1981 062f 7303     		.2byte	0x373
 1982 0631 6B000000 		.4byte	0x6b
 1983 0635 16020000 		.4byte	.LLST15
 1984 0639 15       		.uleb128 0x15
 1985 063a C0060000 		.4byte	.LASF69
 1986 063e 01       		.byte	0x1
 1987 063f 7503     		.2byte	0x375
 1988 0641 77000000 		.4byte	0x77
 1989 0645 50020000 		.4byte	.LLST16
 1990 0649 00       		.byte	0
 1991 064a 17       		.uleb128 0x17
 1992 064b 96010000 		.4byte	.LASF70
 1993 064f 01       		.byte	0x1
 1994 0650 A903     		.2byte	0x3a9
 1995 0652 00000000 		.4byte	.LFB15
 1996 0656 14000000 		.4byte	.LFE15-.LFB15
 1997 065a 01       		.uleb128 0x1
 1998 065b 9C       		.byte	0x9c
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 68


 1999 065c 97060000 		.4byte	0x697
 2000 0660 10       		.uleb128 0x10
 2001 0661 F9000000 		.4byte	.LASF71
 2002 0665 01       		.byte	0x1
 2003 0666 A903     		.2byte	0x3a9
 2004 0668 6B000000 		.4byte	0x6b
 2005 066c 86020000 		.4byte	.LLST17
 2006 0670 1B       		.uleb128 0x1b
 2007 0671 72706D00 		.ascii	"rpm\000"
 2008 0675 01       		.byte	0x1
 2009 0676 A903     		.2byte	0x3a9
 2010 0678 77000000 		.4byte	0x77
 2011 067c 01       		.uleb128 0x1
 2012 067d 51       		.byte	0x51
 2013 067e 1C       		.uleb128 0x1c
 2014 067f 82030000 		.4byte	.LASF72
 2015 0683 01       		.byte	0x1
 2016 0684 AB03     		.2byte	0x3ab
 2017 0686 83000000 		.4byte	0x83
 2018 068a 1C       		.uleb128 0x1c
 2019 068b 89010000 		.4byte	.LASF73
 2020 068f 01       		.byte	0x1
 2021 0690 AC03     		.2byte	0x3ac
 2022 0692 77000000 		.4byte	0x77
 2023 0696 00       		.byte	0
 2024 0697 18       		.uleb128 0x18
 2025 0698 71060000 		.4byte	.LASF74
 2026 069c 01       		.byte	0x1
 2027 069d DE       		.byte	0xde
 2028 069e 00000000 		.4byte	.LFB2
 2029 06a2 00010000 		.4byte	.LFE2-.LFB2
 2030 06a6 01       		.uleb128 0x1
 2031 06a7 9C       		.byte	0x9c
 2032 06a8 3A070000 		.4byte	0x73a
 2033 06ac 1D       		.uleb128 0x1d
 2034 06ad 2F000000 		.4byte	.LASF45
 2035 06b1 01       		.byte	0x1
 2036 06b2 E0       		.byte	0xe0
 2037 06b3 6B000000 		.4byte	0x6b
 2038 06b7 A7020000 		.4byte	.LLST18
 2039 06bb 1D       		.uleb128 0x1d
 2040 06bc 03060000 		.4byte	.LASF48
 2041 06c0 01       		.byte	0x1
 2042 06c1 E1       		.byte	0xe1
 2043 06c2 6B000000 		.4byte	0x6b
 2044 06c6 14030000 		.4byte	.LLST19
 2045 06ca 0E       		.uleb128 0xe
 2046 06cb 06000000 		.4byte	.LVL63
 2047 06cf DC020000 		.4byte	0x2dc
 2048 06d3 0E       		.uleb128 0xe
 2049 06d4 1C000000 		.4byte	.LVL65
 2050 06d8 8F0A0000 		.4byte	0xa8f
 2051 06dc 0E       		.uleb128 0xe
 2052 06dd 30000000 		.4byte	.LVL66
 2053 06e1 A50A0000 		.4byte	0xaa5
 2054 06e5 12       		.uleb128 0x12
 2055 06e6 52000000 		.4byte	.LVL71
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 69


 2056 06ea 4A060000 		.4byte	0x64a
 2057 06ee F9060000 		.4byte	0x6f9
 2058 06f2 13       		.uleb128 0x13
 2059 06f3 01       		.uleb128 0x1
 2060 06f4 50       		.byte	0x50
 2061 06f5 02       		.uleb128 0x2
 2062 06f6 74       		.byte	0x74
 2063 06f7 00       		.sleb128 0
 2064 06f8 00       		.byte	0
 2065 06f9 0E       		.uleb128 0xe
 2066 06fa 5C000000 		.4byte	.LVL73
 2067 06fe 8F0A0000 		.4byte	0xa8f
 2068 0702 0E       		.uleb128 0xe
 2069 0703 6A000000 		.4byte	.LVL74
 2070 0707 A50A0000 		.4byte	0xaa5
 2071 070b 12       		.uleb128 0x12
 2072 070c 8A000000 		.4byte	.LVL75
 2073 0710 10050000 		.4byte	0x510
 2074 0714 1E070000 		.4byte	0x71e
 2075 0718 13       		.uleb128 0x13
 2076 0719 01       		.uleb128 0x1
 2077 071a 50       		.byte	0x50
 2078 071b 01       		.uleb128 0x1
 2079 071c 3F       		.byte	0x3f
 2080 071d 00       		.byte	0
 2081 071e 0E       		.uleb128 0xe
 2082 071f 92000000 		.4byte	.LVL77
 2083 0723 8F0A0000 		.4byte	0xa8f
 2084 0727 0E       		.uleb128 0xe
 2085 0728 C8000000 		.4byte	.LVL78
 2086 072c A50A0000 		.4byte	0xaa5
 2087 0730 0E       		.uleb128 0xe
 2088 0731 D6000000 		.4byte	.LVL81
 2089 0735 B00A0000 		.4byte	0xab0
 2090 0739 00       		.byte	0
 2091 073a 18       		.uleb128 0x18
 2092 073b BD030000 		.4byte	.LASF75
 2093 073f 01       		.byte	0x1
 2094 0740 84       		.byte	0x84
 2095 0741 00000000 		.4byte	.LFB0
 2096 0745 1C000000 		.4byte	.LFE0-.LFB0
 2097 0749 01       		.uleb128 0x1
 2098 074a 9C       		.byte	0x9c
 2099 074b 62070000 		.4byte	0x762
 2100 074f 0E       		.uleb128 0xe
 2101 0750 0C000000 		.4byte	.LVL83
 2102 0754 97060000 		.4byte	0x697
 2103 0758 0E       		.uleb128 0xe
 2104 0759 16000000 		.4byte	.LVL84
 2105 075d C4030000 		.4byte	0x3c4
 2106 0761 00       		.byte	0
 2107 0762 1A       		.uleb128 0x1a
 2108 0763 39050000 		.4byte	.LASF76
 2109 0767 01       		.byte	0x1
 2110 0768 1B04     		.2byte	0x41b
 2111 076a 77000000 		.4byte	0x77
 2112 076e 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 70


 2113 0772 10000000 		.4byte	.LFE16-.LFB16
 2114 0776 01       		.uleb128 0x1
 2115 0777 9C       		.byte	0x9c
 2116 0778 8D070000 		.4byte	0x78d
 2117 077c 10       		.uleb128 0x10
 2118 077d F9000000 		.4byte	.LASF71
 2119 0781 01       		.byte	0x1
 2120 0782 1B04     		.2byte	0x41b
 2121 0784 6B000000 		.4byte	0x6b
 2122 0788 3D030000 		.4byte	.LLST20
 2123 078c 00       		.byte	0
 2124 078d 1A       		.uleb128 0x1a
 2125 078e EF020000 		.4byte	.LASF77
 2126 0792 01       		.byte	0x1
 2127 0793 3804     		.2byte	0x438
 2128 0795 77000000 		.4byte	0x77
 2129 0799 00000000 		.4byte	.LFB17
 2130 079d 28000000 		.4byte	.LFE17-.LFB17
 2131 07a1 01       		.uleb128 0x1
 2132 07a2 9C       		.byte	0x9c
 2133 07a3 C8070000 		.4byte	0x7c8
 2134 07a7 10       		.uleb128 0x10
 2135 07a8 F9000000 		.4byte	.LASF71
 2136 07ac 01       		.byte	0x1
 2137 07ad 3804     		.2byte	0x438
 2138 07af 6B000000 		.4byte	0x6b
 2139 07b3 5E030000 		.4byte	.LLST21
 2140 07b7 15       		.uleb128 0x15
 2141 07b8 0C030000 		.4byte	.LASF78
 2142 07bc 01       		.byte	0x1
 2143 07bd 3A04     		.2byte	0x43a
 2144 07bf 77000000 		.4byte	0x77
 2145 07c3 98030000 		.4byte	.LLST22
 2146 07c7 00       		.byte	0
 2147 07c8 17       		.uleb128 0x17
 2148 07c9 13080000 		.4byte	.LASF79
 2149 07cd 01       		.byte	0x1
 2150 07ce AE04     		.2byte	0x4ae
 2151 07d0 00000000 		.4byte	.LFB18
 2152 07d4 34000000 		.4byte	.LFE18-.LFB18
 2153 07d8 01       		.uleb128 0x1
 2154 07d9 9C       		.byte	0x9c
 2155 07da 51080000 		.4byte	0x851
 2156 07de 10       		.uleb128 0x10
 2157 07df D0000000 		.4byte	.LASF46
 2158 07e3 01       		.byte	0x1
 2159 07e4 AE04     		.2byte	0x4ae
 2160 07e6 6B000000 		.4byte	0x6b
 2161 07ea CE030000 		.4byte	.LLST23
 2162 07ee 10       		.uleb128 0x10
 2163 07ef 10000000 		.4byte	.LASF80
 2164 07f3 01       		.byte	0x1
 2165 07f4 AE04     		.2byte	0x4ae
 2166 07f6 77000000 		.4byte	0x77
 2167 07fa EF030000 		.4byte	.LLST24
 2168 07fe 10       		.uleb128 0x10
 2169 07ff 2A000000 		.4byte	.LASF81
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 71


 2170 0803 01       		.byte	0x1
 2171 0804 AE04     		.2byte	0x4ae
 2172 0806 77000000 		.4byte	0x77
 2173 080a 10040000 		.4byte	.LLST25
 2174 080e 15       		.uleb128 0x15
 2175 080f 03060000 		.4byte	.LASF48
 2176 0813 01       		.byte	0x1
 2177 0814 B104     		.2byte	0x4b1
 2178 0816 6B000000 		.4byte	0x6b
 2179 081a 31040000 		.4byte	.LLST26
 2180 081e 15       		.uleb128 0x15
 2181 081f FB050000 		.4byte	.LASF82
 2182 0823 01       		.byte	0x1
 2183 0824 B204     		.2byte	0x4b2
 2184 0826 83000000 		.4byte	0x83
 2185 082a 44040000 		.4byte	.LLST27
 2186 082e 15       		.uleb128 0x15
 2187 082f D7050000 		.4byte	.LASF83
 2188 0833 01       		.byte	0x1
 2189 0834 B304     		.2byte	0x4b3
 2190 0836 83000000 		.4byte	0x83
 2191 083a 57040000 		.4byte	.LLST28
 2192 083e 0E       		.uleb128 0xe
 2193 083f 18000000 		.4byte	.LVL98
 2194 0843 8F0A0000 		.4byte	0xa8f
 2195 0847 0E       		.uleb128 0xe
 2196 0848 28000000 		.4byte	.LVL99
 2197 084c A50A0000 		.4byte	0xaa5
 2198 0850 00       		.byte	0
 2199 0851 17       		.uleb128 0x17
 2200 0852 50020000 		.4byte	.LASF84
 2201 0856 01       		.byte	0x1
 2202 0857 E604     		.2byte	0x4e6
 2203 0859 00000000 		.4byte	.LFB19
 2204 085d 70000000 		.4byte	.LFE19-.LFB19
 2205 0861 01       		.uleb128 0x1
 2206 0862 9C       		.byte	0x9c
 2207 0863 F7080000 		.4byte	0x8f7
 2208 0867 10       		.uleb128 0x10
 2209 0868 D0000000 		.4byte	.LASF46
 2210 086c 01       		.byte	0x1
 2211 086d E604     		.2byte	0x4e6
 2212 086f 6B000000 		.4byte	0x6b
 2213 0873 6A040000 		.4byte	.LLST29
 2214 0877 1E       		.uleb128 0x1e
 2215 0878 6B7000   		.ascii	"kp\000"
 2216 087b 01       		.byte	0x1
 2217 087c E604     		.2byte	0x4e6
 2218 087e 77000000 		.4byte	0x77
 2219 0882 8B040000 		.4byte	.LLST30
 2220 0886 1E       		.uleb128 0x1e
 2221 0887 6B6900   		.ascii	"ki\000"
 2222 088a 01       		.byte	0x1
 2223 088b E604     		.2byte	0x4e6
 2224 088d 77000000 		.4byte	0x77
 2225 0891 AC040000 		.4byte	.LLST31
 2226 0895 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 72


 2227 0896 6B6400   		.ascii	"kd\000"
 2228 0899 01       		.byte	0x1
 2229 089a E604     		.2byte	0x4e6
 2230 089c 77000000 		.4byte	0x77
 2231 08a0 CD040000 		.4byte	.LLST32
 2232 08a4 15       		.uleb128 0x15
 2233 08a5 03060000 		.4byte	.LASF48
 2234 08a9 01       		.byte	0x1
 2235 08aa E904     		.2byte	0x4e9
 2236 08ac 6B000000 		.4byte	0x6b
 2237 08b0 EE040000 		.4byte	.LLST33
 2238 08b4 15       		.uleb128 0x15
 2239 08b5 65000000 		.4byte	.LASF85
 2240 08b9 01       		.byte	0x1
 2241 08ba EB04     		.2byte	0x4eb
 2242 08bc 8F000000 		.4byte	0x8f
 2243 08c0 01050000 		.4byte	.LLST34
 2244 08c4 15       		.uleb128 0x15
 2245 08c5 6B060000 		.4byte	.LASF86
 2246 08c9 01       		.byte	0x1
 2247 08ca EC04     		.2byte	0x4ec
 2248 08cc 8F000000 		.4byte	0x8f
 2249 08d0 14050000 		.4byte	.LLST35
 2250 08d4 15       		.uleb128 0x15
 2251 08d5 81000000 		.4byte	.LASF87
 2252 08d9 01       		.byte	0x1
 2253 08da ED04     		.2byte	0x4ed
 2254 08dc 8F000000 		.4byte	0x8f
 2255 08e0 27050000 		.4byte	.LLST36
 2256 08e4 0E       		.uleb128 0xe
 2257 08e5 46000000 		.4byte	.LVL108
 2258 08e9 8F0A0000 		.4byte	0xa8f
 2259 08ed 0E       		.uleb128 0xe
 2260 08ee 5C000000 		.4byte	.LVL109
 2261 08f2 A50A0000 		.4byte	0xaa5
 2262 08f6 00       		.byte	0
 2263 08f7 1F       		.uleb128 0x1f
 2264 08f8 9F060000 		.4byte	.LASF88
 2265 08fc 01       		.byte	0x1
 2266 08fd 44       		.byte	0x44
 2267 08fe 6B000000 		.4byte	0x6b
 2268 0902 05       		.uleb128 0x5
 2269 0903 03       		.byte	0x3
 2270 0904 00000000 		.4byte	FanController_TachOutDMA_channel
 2271 0908 09       		.uleb128 0x9
 2272 0909 18090000 		.4byte	0x918
 2273 090d 18090000 		.4byte	0x918
 2274 0911 0A       		.uleb128 0xa
 2275 0912 E5000000 		.4byte	0xe5
 2276 0916 01       		.byte	0x1
 2277 0917 00       		.byte	0
 2278 0918 20       		.uleb128 0x20
 2279 0919 EB010000 		.4byte	0x1eb
 2280 091d 21       		.uleb128 0x21
 2281 091e FA010000 		.4byte	.LASF89
 2282 0922 01       		.byte	0x1
 2283 0923 2909     		.2byte	0x929
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 73


 2284 0925 2F090000 		.4byte	0x92f
 2285 0929 05       		.uleb128 0x5
 2286 092a 03       		.byte	0x3
 2287 092b 00000000 		.4byte	FanController_fanPwmInitRegs
 2288 092f 20       		.uleb128 0x20
 2289 0930 08090000 		.4byte	0x908
 2290 0934 22       		.uleb128 0x22
 2291 0935 71050000 		.4byte	.LASF90
 2292 0939 01       		.byte	0x1
 2293 093a 3C       		.byte	0x3c
 2294 093b 6B000000 		.4byte	0x6b
 2295 093f 05       		.uleb128 0x5
 2296 0940 03       		.byte	0x3
 2297 0941 00000000 		.4byte	FanController_initVar
 2298 0945 21       		.uleb128 0x21
 2299 0946 1E060000 		.4byte	.LASF91
 2300 094a 01       		.byte	0x1
 2301 094b A609     		.2byte	0x9a6
 2302 094d 31010000 		.4byte	0x131
 2303 0951 05       		.uleb128 0x5
 2304 0952 03       		.byte	0x3
 2305 0953 00000000 		.4byte	FanController_fanControl
 2306 0957 22       		.uleb128 0x22
 2307 0958 21030000 		.4byte	.LASF92
 2308 095c 01       		.byte	0x1
 2309 095d 5B       		.byte	0x5b
 2310 095e 21010000 		.4byte	0x121
 2311 0962 05       		.uleb128 0x5
 2312 0963 03       		.byte	0x3
 2313 0964 00000000 		.4byte	FanController_desiredFansSpeed
 2314 0968 09       		.uleb128 0x9
 2315 0969 8F000000 		.4byte	0x8f
 2316 096d 78090000 		.4byte	0x978
 2317 0971 0A       		.uleb128 0xa
 2318 0972 E5000000 		.4byte	0xe5
 2319 0976 03       		.byte	0x3
 2320 0977 00       		.byte	0
 2321 0978 22       		.uleb128 0x22
 2322 0979 87000000 		.4byte	.LASF93
 2323 097d 01       		.byte	0x1
 2324 097e 51       		.byte	0x51
 2325 097f 68090000 		.4byte	0x968
 2326 0983 05       		.uleb128 0x5
 2327 0984 03       		.byte	0x3
 2328 0985 00000000 		.4byte	FanController_pidA1
 2329 0989 22       		.uleb128 0x22
 2330 098a 05050000 		.4byte	.LASF94
 2331 098e 01       		.byte	0x1
 2332 098f 52       		.byte	0x52
 2333 0990 68090000 		.4byte	0x968
 2334 0994 05       		.uleb128 0x5
 2335 0995 03       		.byte	0x3
 2336 0996 00000000 		.4byte	FanController_pidA2
 2337 099a 22       		.uleb128 0x22
 2338 099b A1000000 		.4byte	.LASF95
 2339 099f 01       		.byte	0x1
 2340 09a0 53       		.byte	0x53
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 74


 2341 09a1 68090000 		.4byte	0x968
 2342 09a5 05       		.uleb128 0x5
 2343 09a6 03       		.byte	0x3
 2344 09a7 00000000 		.4byte	FanController_pidA3
 2345 09ab 09       		.uleb128 0x9
 2346 09ac 83000000 		.4byte	0x83
 2347 09b0 BB090000 		.4byte	0x9bb
 2348 09b4 0A       		.uleb128 0xa
 2349 09b5 E5000000 		.4byte	0xe5
 2350 09b9 03       		.byte	0x3
 2351 09ba 00       		.byte	0
 2352 09bb 22       		.uleb128 0x22
 2353 09bc BC080000 		.4byte	.LASF96
 2354 09c0 01       		.byte	0x1
 2355 09c1 55       		.byte	0x55
 2356 09c2 AB090000 		.4byte	0x9ab
 2357 09c6 05       		.uleb128 0x5
 2358 09c7 03       		.byte	0x3
 2359 09c8 00000000 		.4byte	FanController_outputSatL
 2360 09cc 22       		.uleb128 0x22
 2361 09cd 88080000 		.4byte	.LASF97
 2362 09d1 01       		.byte	0x1
 2363 09d2 56       		.byte	0x56
 2364 09d3 AB090000 		.4byte	0x9ab
 2365 09d7 05       		.uleb128 0x5
 2366 09d8 03       		.byte	0x3
 2367 09d9 00000000 		.4byte	FanController_outputSatH
 2368 09dd 23       		.uleb128 0x23
 2369 09de DD030000 		.4byte	.LASF98
 2370 09e2 03       		.byte	0x3
 2371 09e3 4401     		.2byte	0x144
 2372 09e5 D9000000 		.4byte	0xd9
 2373 09e9 09       		.uleb128 0x9
 2374 09ea F9090000 		.4byte	0x9f9
 2375 09ee F9090000 		.4byte	0x9f9
 2376 09f2 0A       		.uleb128 0xa
 2377 09f3 E5000000 		.4byte	0xe5
 2378 09f7 03       		.byte	0x3
 2379 09f8 00       		.byte	0
 2380 09f9 20       		.uleb128 0x20
 2381 09fa BB010000 		.4byte	0x1bb
 2382 09fe 21       		.uleb128 0x21
 2383 09ff EB060000 		.4byte	.LASF99
 2384 0a03 01       		.byte	0x1
 2385 0a04 C508     		.2byte	0x8c5
 2386 0a06 100A0000 		.4byte	0xa10
 2387 0a0a 05       		.uleb128 0x5
 2388 0a0b 03       		.byte	0x3
 2389 0a0c 00000000 		.4byte	FanController_fanDriverRegs
 2390 0a10 20       		.uleb128 0x20
 2391 0a11 E9090000 		.4byte	0x9e9
 2392 0a15 09       		.uleb128 0x9
 2393 0a16 99010000 		.4byte	0x199
 2394 0a1a 250A0000 		.4byte	0xa25
 2395 0a1e 0A       		.uleb128 0xa
 2396 0a1f E5000000 		.4byte	0xe5
 2397 0a23 03       		.byte	0x3
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 75


 2398 0a24 00       		.byte	0
 2399 0a25 21       		.uleb128 0x21
 2400 0a26 DF050000 		.4byte	.LASF100
 2401 0a2a 01       		.byte	0x1
 2402 0a2b 550A     		.2byte	0xa55
 2403 0a2d 150A0000 		.4byte	0xa15
 2404 0a31 05       		.uleb128 0x5
 2405 0a32 03       		.byte	0x3
 2406 0a33 00000000 		.4byte	FanController_fanProperties
 2407 0a37 24       		.uleb128 0x24
 2408 0a38 E5040000 		.4byte	.LASF101
 2409 0a3c E5040000 		.4byte	.LASF101
 2410 0a40 04       		.byte	0x4
 2411 0a41 2A       		.byte	0x2a
 2412 0a42 24       		.uleb128 0x24
 2413 0a43 18040000 		.4byte	.LASF102
 2414 0a47 18040000 		.4byte	.LASF102
 2415 0a4b 04       		.byte	0x4
 2416 0a4c 33       		.byte	0x33
 2417 0a4d 24       		.uleb128 0x24
 2418 0a4e 57050000 		.4byte	.LASF103
 2419 0a52 57050000 		.4byte	.LASF103
 2420 0a56 04       		.byte	0x4
 2421 0a57 2D       		.byte	0x2d
 2422 0a58 24       		.uleb128 0x24
 2423 0a59 8A020000 		.4byte	.LASF104
 2424 0a5d 8A020000 		.4byte	.LASF104
 2425 0a61 04       		.byte	0x4
 2426 0a62 2C       		.byte	0x2c
 2427 0a63 24       		.uleb128 0x24
 2428 0a64 00000000 		.4byte	.LASF105
 2429 0a68 00000000 		.4byte	.LASF105
 2430 0a6c 04       		.byte	0x4
 2431 0a6d 38       		.byte	0x38
 2432 0a6e 24       		.uleb128 0x24
 2433 0a6f E1000000 		.4byte	.LASF106
 2434 0a73 E1000000 		.4byte	.LASF106
 2435 0a77 04       		.byte	0x4
 2436 0a78 3B       		.byte	0x3b
 2437 0a79 24       		.uleb128 0x24
 2438 0a7a B2040000 		.4byte	.LASF107
 2439 0a7e B2040000 		.4byte	.LASF107
 2440 0a82 04       		.byte	0x4
 2441 0a83 3F       		.byte	0x3f
 2442 0a84 24       		.uleb128 0x24
 2443 0a85 DF010000 		.4byte	.LASF108
 2444 0a89 DF010000 		.4byte	.LASF108
 2445 0a8d 04       		.byte	0x4
 2446 0a8e 2F       		.byte	0x2f
 2447 0a8f 24       		.uleb128 0x24
 2448 0a90 C0050000 		.4byte	.LASF109
 2449 0a94 C0050000 		.4byte	.LASF109
 2450 0a98 05       		.byte	0x5
 2451 0a99 7D       		.byte	0x7d
 2452 0a9a 24       		.uleb128 0x24
 2453 0a9b 77070000 		.4byte	.LASF110
 2454 0a9f 77070000 		.4byte	.LASF110
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 76


 2455 0aa3 04       		.byte	0x4
 2456 0aa4 29       		.byte	0x29
 2457 0aa5 24       		.uleb128 0x24
 2458 0aa6 6B000000 		.4byte	.LASF111
 2459 0aaa 6B000000 		.4byte	.LASF111
 2460 0aae 05       		.byte	0x5
 2461 0aaf 7E       		.byte	0x7e
 2462 0ab0 24       		.uleb128 0x24
 2463 0ab1 4F080000 		.4byte	.LASF112
 2464 0ab5 4F080000 		.4byte	.LASF112
 2465 0ab9 06       		.byte	0x6
 2466 0aba 18       		.byte	0x18
 2467 0abb 00       		.byte	0
 2468              		.section	.debug_abbrev,"",%progbits
 2469              	.Ldebug_abbrev0:
 2470 0000 01       		.uleb128 0x1
 2471 0001 11       		.uleb128 0x11
 2472 0002 01       		.byte	0x1
 2473 0003 25       		.uleb128 0x25
 2474 0004 0E       		.uleb128 0xe
 2475 0005 13       		.uleb128 0x13
 2476 0006 0B       		.uleb128 0xb
 2477 0007 03       		.uleb128 0x3
 2478 0008 0E       		.uleb128 0xe
 2479 0009 1B       		.uleb128 0x1b
 2480 000a 0E       		.uleb128 0xe
 2481 000b 55       		.uleb128 0x55
 2482 000c 17       		.uleb128 0x17
 2483 000d 11       		.uleb128 0x11
 2484 000e 01       		.uleb128 0x1
 2485 000f 10       		.uleb128 0x10
 2486 0010 17       		.uleb128 0x17
 2487 0011 00       		.byte	0
 2488 0012 00       		.byte	0
 2489 0013 02       		.uleb128 0x2
 2490 0014 24       		.uleb128 0x24
 2491 0015 00       		.byte	0
 2492 0016 0B       		.uleb128 0xb
 2493 0017 0B       		.uleb128 0xb
 2494 0018 3E       		.uleb128 0x3e
 2495 0019 0B       		.uleb128 0xb
 2496 001a 03       		.uleb128 0x3
 2497 001b 0E       		.uleb128 0xe
 2498 001c 00       		.byte	0
 2499 001d 00       		.byte	0
 2500 001e 03       		.uleb128 0x3
 2501 001f 24       		.uleb128 0x24
 2502 0020 00       		.byte	0
 2503 0021 0B       		.uleb128 0xb
 2504 0022 0B       		.uleb128 0xb
 2505 0023 3E       		.uleb128 0x3e
 2506 0024 0B       		.uleb128 0xb
 2507 0025 03       		.uleb128 0x3
 2508 0026 08       		.uleb128 0x8
 2509 0027 00       		.byte	0
 2510 0028 00       		.byte	0
 2511 0029 04       		.uleb128 0x4
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 77


 2512 002a 16       		.uleb128 0x16
 2513 002b 00       		.byte	0
 2514 002c 03       		.uleb128 0x3
 2515 002d 0E       		.uleb128 0xe
 2516 002e 3A       		.uleb128 0x3a
 2517 002f 0B       		.uleb128 0xb
 2518 0030 3B       		.uleb128 0x3b
 2519 0031 05       		.uleb128 0x5
 2520 0032 49       		.uleb128 0x49
 2521 0033 13       		.uleb128 0x13
 2522 0034 00       		.byte	0
 2523 0035 00       		.byte	0
 2524 0036 05       		.uleb128 0x5
 2525 0037 35       		.uleb128 0x35
 2526 0038 00       		.byte	0
 2527 0039 49       		.uleb128 0x49
 2528 003a 13       		.uleb128 0x13
 2529 003b 00       		.byte	0
 2530 003c 00       		.byte	0
 2531 003d 06       		.uleb128 0x6
 2532 003e 13       		.uleb128 0x13
 2533 003f 01       		.byte	0x1
 2534 0040 0B       		.uleb128 0xb
 2535 0041 0B       		.uleb128 0xb
 2536 0042 3A       		.uleb128 0x3a
 2537 0043 0B       		.uleb128 0xb
 2538 0044 3B       		.uleb128 0x3b
 2539 0045 0B       		.uleb128 0xb
 2540 0046 01       		.uleb128 0x1
 2541 0047 13       		.uleb128 0x13
 2542 0048 00       		.byte	0
 2543 0049 00       		.byte	0
 2544 004a 07       		.uleb128 0x7
 2545 004b 0D       		.uleb128 0xd
 2546 004c 00       		.byte	0
 2547 004d 03       		.uleb128 0x3
 2548 004e 0E       		.uleb128 0xe
 2549 004f 3A       		.uleb128 0x3a
 2550 0050 0B       		.uleb128 0xb
 2551 0051 3B       		.uleb128 0x3b
 2552 0052 0B       		.uleb128 0xb
 2553 0053 49       		.uleb128 0x49
 2554 0054 13       		.uleb128 0x13
 2555 0055 38       		.uleb128 0x38
 2556 0056 0B       		.uleb128 0xb
 2557 0057 00       		.byte	0
 2558 0058 00       		.byte	0
 2559 0059 08       		.uleb128 0x8
 2560 005a 16       		.uleb128 0x16
 2561 005b 00       		.byte	0
 2562 005c 03       		.uleb128 0x3
 2563 005d 0E       		.uleb128 0xe
 2564 005e 3A       		.uleb128 0x3a
 2565 005f 0B       		.uleb128 0xb
 2566 0060 3B       		.uleb128 0x3b
 2567 0061 0B       		.uleb128 0xb
 2568 0062 49       		.uleb128 0x49
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 78


 2569 0063 13       		.uleb128 0x13
 2570 0064 00       		.byte	0
 2571 0065 00       		.byte	0
 2572 0066 09       		.uleb128 0x9
 2573 0067 01       		.uleb128 0x1
 2574 0068 01       		.byte	0x1
 2575 0069 49       		.uleb128 0x49
 2576 006a 13       		.uleb128 0x13
 2577 006b 01       		.uleb128 0x1
 2578 006c 13       		.uleb128 0x13
 2579 006d 00       		.byte	0
 2580 006e 00       		.byte	0
 2581 006f 0A       		.uleb128 0xa
 2582 0070 21       		.uleb128 0x21
 2583 0071 00       		.byte	0
 2584 0072 49       		.uleb128 0x49
 2585 0073 13       		.uleb128 0x13
 2586 0074 2F       		.uleb128 0x2f
 2587 0075 0B       		.uleb128 0xb
 2588 0076 00       		.byte	0
 2589 0077 00       		.byte	0
 2590 0078 0B       		.uleb128 0xb
 2591 0079 13       		.uleb128 0x13
 2592 007a 01       		.byte	0x1
 2593 007b 0B       		.uleb128 0xb
 2594 007c 0B       		.uleb128 0xb
 2595 007d 3A       		.uleb128 0x3a
 2596 007e 0B       		.uleb128 0xb
 2597 007f 3B       		.uleb128 0x3b
 2598 0080 05       		.uleb128 0x5
 2599 0081 01       		.uleb128 0x1
 2600 0082 13       		.uleb128 0x13
 2601 0083 00       		.byte	0
 2602 0084 00       		.byte	0
 2603 0085 0C       		.uleb128 0xc
 2604 0086 0D       		.uleb128 0xd
 2605 0087 00       		.byte	0
 2606 0088 03       		.uleb128 0x3
 2607 0089 0E       		.uleb128 0xe
 2608 008a 3A       		.uleb128 0x3a
 2609 008b 0B       		.uleb128 0xb
 2610 008c 3B       		.uleb128 0x3b
 2611 008d 05       		.uleb128 0x5
 2612 008e 49       		.uleb128 0x49
 2613 008f 13       		.uleb128 0x13
 2614 0090 38       		.uleb128 0x38
 2615 0091 0B       		.uleb128 0xb
 2616 0092 00       		.byte	0
 2617 0093 00       		.byte	0
 2618 0094 0D       		.uleb128 0xd
 2619 0095 2E       		.uleb128 0x2e
 2620 0096 01       		.byte	0x1
 2621 0097 03       		.uleb128 0x3
 2622 0098 0E       		.uleb128 0xe
 2623 0099 3A       		.uleb128 0x3a
 2624 009a 0B       		.uleb128 0xb
 2625 009b 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 79


 2626 009c 05       		.uleb128 0x5
 2627 009d 27       		.uleb128 0x27
 2628 009e 19       		.uleb128 0x19
 2629 009f 11       		.uleb128 0x11
 2630 00a0 01       		.uleb128 0x1
 2631 00a1 12       		.uleb128 0x12
 2632 00a2 06       		.uleb128 0x6
 2633 00a3 40       		.uleb128 0x40
 2634 00a4 18       		.uleb128 0x18
 2635 00a5 9742     		.uleb128 0x2117
 2636 00a7 19       		.uleb128 0x19
 2637 00a8 01       		.uleb128 0x1
 2638 00a9 13       		.uleb128 0x13
 2639 00aa 00       		.byte	0
 2640 00ab 00       		.byte	0
 2641 00ac 0E       		.uleb128 0xe
 2642 00ad 898201   		.uleb128 0x4109
 2643 00b0 00       		.byte	0
 2644 00b1 11       		.uleb128 0x11
 2645 00b2 01       		.uleb128 0x1
 2646 00b3 31       		.uleb128 0x31
 2647 00b4 13       		.uleb128 0x13
 2648 00b5 00       		.byte	0
 2649 00b6 00       		.byte	0
 2650 00b7 0F       		.uleb128 0xf
 2651 00b8 2E       		.uleb128 0x2e
 2652 00b9 01       		.byte	0x1
 2653 00ba 03       		.uleb128 0x3
 2654 00bb 0E       		.uleb128 0xe
 2655 00bc 3A       		.uleb128 0x3a
 2656 00bd 0B       		.uleb128 0xb
 2657 00be 3B       		.uleb128 0x3b
 2658 00bf 05       		.uleb128 0x5
 2659 00c0 27       		.uleb128 0x27
 2660 00c1 19       		.uleb128 0x19
 2661 00c2 49       		.uleb128 0x49
 2662 00c3 13       		.uleb128 0x13
 2663 00c4 11       		.uleb128 0x11
 2664 00c5 01       		.uleb128 0x1
 2665 00c6 12       		.uleb128 0x12
 2666 00c7 06       		.uleb128 0x6
 2667 00c8 40       		.uleb128 0x40
 2668 00c9 18       		.uleb128 0x18
 2669 00ca 9742     		.uleb128 0x2117
 2670 00cc 19       		.uleb128 0x19
 2671 00cd 01       		.uleb128 0x1
 2672 00ce 13       		.uleb128 0x13
 2673 00cf 00       		.byte	0
 2674 00d0 00       		.byte	0
 2675 00d1 10       		.uleb128 0x10
 2676 00d2 05       		.uleb128 0x5
 2677 00d3 00       		.byte	0
 2678 00d4 03       		.uleb128 0x3
 2679 00d5 0E       		.uleb128 0xe
 2680 00d6 3A       		.uleb128 0x3a
 2681 00d7 0B       		.uleb128 0xb
 2682 00d8 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 80


 2683 00d9 05       		.uleb128 0x5
 2684 00da 49       		.uleb128 0x49
 2685 00db 13       		.uleb128 0x13
 2686 00dc 02       		.uleb128 0x2
 2687 00dd 17       		.uleb128 0x17
 2688 00de 00       		.byte	0
 2689 00df 00       		.byte	0
 2690 00e0 11       		.uleb128 0x11
 2691 00e1 34       		.uleb128 0x34
 2692 00e2 00       		.byte	0
 2693 00e3 03       		.uleb128 0x3
 2694 00e4 0E       		.uleb128 0xe
 2695 00e5 3A       		.uleb128 0x3a
 2696 00e6 0B       		.uleb128 0xb
 2697 00e7 3B       		.uleb128 0x3b
 2698 00e8 05       		.uleb128 0x5
 2699 00e9 49       		.uleb128 0x49
 2700 00ea 13       		.uleb128 0x13
 2701 00eb 1C       		.uleb128 0x1c
 2702 00ec 0B       		.uleb128 0xb
 2703 00ed 00       		.byte	0
 2704 00ee 00       		.byte	0
 2705 00ef 12       		.uleb128 0x12
 2706 00f0 898201   		.uleb128 0x4109
 2707 00f3 01       		.byte	0x1
 2708 00f4 11       		.uleb128 0x11
 2709 00f5 01       		.uleb128 0x1
 2710 00f6 31       		.uleb128 0x31
 2711 00f7 13       		.uleb128 0x13
 2712 00f8 01       		.uleb128 0x1
 2713 00f9 13       		.uleb128 0x13
 2714 00fa 00       		.byte	0
 2715 00fb 00       		.byte	0
 2716 00fc 13       		.uleb128 0x13
 2717 00fd 8A8201   		.uleb128 0x410a
 2718 0100 00       		.byte	0
 2719 0101 02       		.uleb128 0x2
 2720 0102 18       		.uleb128 0x18
 2721 0103 9142     		.uleb128 0x2111
 2722 0105 18       		.uleb128 0x18
 2723 0106 00       		.byte	0
 2724 0107 00       		.byte	0
 2725 0108 14       		.uleb128 0x14
 2726 0109 898201   		.uleb128 0x4109
 2727 010c 01       		.byte	0x1
 2728 010d 11       		.uleb128 0x11
 2729 010e 01       		.uleb128 0x1
 2730 010f 31       		.uleb128 0x31
 2731 0110 13       		.uleb128 0x13
 2732 0111 00       		.byte	0
 2733 0112 00       		.byte	0
 2734 0113 15       		.uleb128 0x15
 2735 0114 34       		.uleb128 0x34
 2736 0115 00       		.byte	0
 2737 0116 03       		.uleb128 0x3
 2738 0117 0E       		.uleb128 0xe
 2739 0118 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 81


 2740 0119 0B       		.uleb128 0xb
 2741 011a 3B       		.uleb128 0x3b
 2742 011b 05       		.uleb128 0x5
 2743 011c 49       		.uleb128 0x49
 2744 011d 13       		.uleb128 0x13
 2745 011e 02       		.uleb128 0x2
 2746 011f 17       		.uleb128 0x17
 2747 0120 00       		.byte	0
 2748 0121 00       		.byte	0
 2749 0122 16       		.uleb128 0x16
 2750 0123 34       		.uleb128 0x34
 2751 0124 00       		.byte	0
 2752 0125 03       		.uleb128 0x3
 2753 0126 0E       		.uleb128 0xe
 2754 0127 3A       		.uleb128 0x3a
 2755 0128 0B       		.uleb128 0xb
 2756 0129 3B       		.uleb128 0x3b
 2757 012a 05       		.uleb128 0x5
 2758 012b 49       		.uleb128 0x49
 2759 012c 13       		.uleb128 0x13
 2760 012d 02       		.uleb128 0x2
 2761 012e 18       		.uleb128 0x18
 2762 012f 00       		.byte	0
 2763 0130 00       		.byte	0
 2764 0131 17       		.uleb128 0x17
 2765 0132 2E       		.uleb128 0x2e
 2766 0133 01       		.byte	0x1
 2767 0134 3F       		.uleb128 0x3f
 2768 0135 19       		.uleb128 0x19
 2769 0136 03       		.uleb128 0x3
 2770 0137 0E       		.uleb128 0xe
 2771 0138 3A       		.uleb128 0x3a
 2772 0139 0B       		.uleb128 0xb
 2773 013a 3B       		.uleb128 0x3b
 2774 013b 05       		.uleb128 0x5
 2775 013c 27       		.uleb128 0x27
 2776 013d 19       		.uleb128 0x19
 2777 013e 11       		.uleb128 0x11
 2778 013f 01       		.uleb128 0x1
 2779 0140 12       		.uleb128 0x12
 2780 0141 06       		.uleb128 0x6
 2781 0142 40       		.uleb128 0x40
 2782 0143 18       		.uleb128 0x18
 2783 0144 9742     		.uleb128 0x2117
 2784 0146 19       		.uleb128 0x19
 2785 0147 01       		.uleb128 0x1
 2786 0148 13       		.uleb128 0x13
 2787 0149 00       		.byte	0
 2788 014a 00       		.byte	0
 2789 014b 18       		.uleb128 0x18
 2790 014c 2E       		.uleb128 0x2e
 2791 014d 01       		.byte	0x1
 2792 014e 3F       		.uleb128 0x3f
 2793 014f 19       		.uleb128 0x19
 2794 0150 03       		.uleb128 0x3
 2795 0151 0E       		.uleb128 0xe
 2796 0152 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 82


 2797 0153 0B       		.uleb128 0xb
 2798 0154 3B       		.uleb128 0x3b
 2799 0155 0B       		.uleb128 0xb
 2800 0156 27       		.uleb128 0x27
 2801 0157 19       		.uleb128 0x19
 2802 0158 11       		.uleb128 0x11
 2803 0159 01       		.uleb128 0x1
 2804 015a 12       		.uleb128 0x12
 2805 015b 06       		.uleb128 0x6
 2806 015c 40       		.uleb128 0x40
 2807 015d 18       		.uleb128 0x18
 2808 015e 9742     		.uleb128 0x2117
 2809 0160 19       		.uleb128 0x19
 2810 0161 01       		.uleb128 0x1
 2811 0162 13       		.uleb128 0x13
 2812 0163 00       		.byte	0
 2813 0164 00       		.byte	0
 2814 0165 19       		.uleb128 0x19
 2815 0166 2E       		.uleb128 0x2e
 2816 0167 00       		.byte	0
 2817 0168 3F       		.uleb128 0x3f
 2818 0169 19       		.uleb128 0x19
 2819 016a 03       		.uleb128 0x3
 2820 016b 0E       		.uleb128 0xe
 2821 016c 3A       		.uleb128 0x3a
 2822 016d 0B       		.uleb128 0xb
 2823 016e 3B       		.uleb128 0x3b
 2824 016f 05       		.uleb128 0x5
 2825 0170 27       		.uleb128 0x27
 2826 0171 19       		.uleb128 0x19
 2827 0172 49       		.uleb128 0x49
 2828 0173 13       		.uleb128 0x13
 2829 0174 11       		.uleb128 0x11
 2830 0175 01       		.uleb128 0x1
 2831 0176 12       		.uleb128 0x12
 2832 0177 06       		.uleb128 0x6
 2833 0178 40       		.uleb128 0x40
 2834 0179 18       		.uleb128 0x18
 2835 017a 9742     		.uleb128 0x2117
 2836 017c 19       		.uleb128 0x19
 2837 017d 00       		.byte	0
 2838 017e 00       		.byte	0
 2839 017f 1A       		.uleb128 0x1a
 2840 0180 2E       		.uleb128 0x2e
 2841 0181 01       		.byte	0x1
 2842 0182 3F       		.uleb128 0x3f
 2843 0183 19       		.uleb128 0x19
 2844 0184 03       		.uleb128 0x3
 2845 0185 0E       		.uleb128 0xe
 2846 0186 3A       		.uleb128 0x3a
 2847 0187 0B       		.uleb128 0xb
 2848 0188 3B       		.uleb128 0x3b
 2849 0189 05       		.uleb128 0x5
 2850 018a 27       		.uleb128 0x27
 2851 018b 19       		.uleb128 0x19
 2852 018c 49       		.uleb128 0x49
 2853 018d 13       		.uleb128 0x13
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 83


 2854 018e 11       		.uleb128 0x11
 2855 018f 01       		.uleb128 0x1
 2856 0190 12       		.uleb128 0x12
 2857 0191 06       		.uleb128 0x6
 2858 0192 40       		.uleb128 0x40
 2859 0193 18       		.uleb128 0x18
 2860 0194 9742     		.uleb128 0x2117
 2861 0196 19       		.uleb128 0x19
 2862 0197 01       		.uleb128 0x1
 2863 0198 13       		.uleb128 0x13
 2864 0199 00       		.byte	0
 2865 019a 00       		.byte	0
 2866 019b 1B       		.uleb128 0x1b
 2867 019c 05       		.uleb128 0x5
 2868 019d 00       		.byte	0
 2869 019e 03       		.uleb128 0x3
 2870 019f 08       		.uleb128 0x8
 2871 01a0 3A       		.uleb128 0x3a
 2872 01a1 0B       		.uleb128 0xb
 2873 01a2 3B       		.uleb128 0x3b
 2874 01a3 05       		.uleb128 0x5
 2875 01a4 49       		.uleb128 0x49
 2876 01a5 13       		.uleb128 0x13
 2877 01a6 02       		.uleb128 0x2
 2878 01a7 18       		.uleb128 0x18
 2879 01a8 00       		.byte	0
 2880 01a9 00       		.byte	0
 2881 01aa 1C       		.uleb128 0x1c
 2882 01ab 34       		.uleb128 0x34
 2883 01ac 00       		.byte	0
 2884 01ad 03       		.uleb128 0x3
 2885 01ae 0E       		.uleb128 0xe
 2886 01af 3A       		.uleb128 0x3a
 2887 01b0 0B       		.uleb128 0xb
 2888 01b1 3B       		.uleb128 0x3b
 2889 01b2 05       		.uleb128 0x5
 2890 01b3 49       		.uleb128 0x49
 2891 01b4 13       		.uleb128 0x13
 2892 01b5 00       		.byte	0
 2893 01b6 00       		.byte	0
 2894 01b7 1D       		.uleb128 0x1d
 2895 01b8 34       		.uleb128 0x34
 2896 01b9 00       		.byte	0
 2897 01ba 03       		.uleb128 0x3
 2898 01bb 0E       		.uleb128 0xe
 2899 01bc 3A       		.uleb128 0x3a
 2900 01bd 0B       		.uleb128 0xb
 2901 01be 3B       		.uleb128 0x3b
 2902 01bf 0B       		.uleb128 0xb
 2903 01c0 49       		.uleb128 0x49
 2904 01c1 13       		.uleb128 0x13
 2905 01c2 02       		.uleb128 0x2
 2906 01c3 17       		.uleb128 0x17
 2907 01c4 00       		.byte	0
 2908 01c5 00       		.byte	0
 2909 01c6 1E       		.uleb128 0x1e
 2910 01c7 05       		.uleb128 0x5
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 84


 2911 01c8 00       		.byte	0
 2912 01c9 03       		.uleb128 0x3
 2913 01ca 08       		.uleb128 0x8
 2914 01cb 3A       		.uleb128 0x3a
 2915 01cc 0B       		.uleb128 0xb
 2916 01cd 3B       		.uleb128 0x3b
 2917 01ce 05       		.uleb128 0x5
 2918 01cf 49       		.uleb128 0x49
 2919 01d0 13       		.uleb128 0x13
 2920 01d1 02       		.uleb128 0x2
 2921 01d2 17       		.uleb128 0x17
 2922 01d3 00       		.byte	0
 2923 01d4 00       		.byte	0
 2924 01d5 1F       		.uleb128 0x1f
 2925 01d6 34       		.uleb128 0x34
 2926 01d7 00       		.byte	0
 2927 01d8 03       		.uleb128 0x3
 2928 01d9 0E       		.uleb128 0xe
 2929 01da 3A       		.uleb128 0x3a
 2930 01db 0B       		.uleb128 0xb
 2931 01dc 3B       		.uleb128 0x3b
 2932 01dd 0B       		.uleb128 0xb
 2933 01de 49       		.uleb128 0x49
 2934 01df 13       		.uleb128 0x13
 2935 01e0 02       		.uleb128 0x2
 2936 01e1 18       		.uleb128 0x18
 2937 01e2 00       		.byte	0
 2938 01e3 00       		.byte	0
 2939 01e4 20       		.uleb128 0x20
 2940 01e5 26       		.uleb128 0x26
 2941 01e6 00       		.byte	0
 2942 01e7 49       		.uleb128 0x49
 2943 01e8 13       		.uleb128 0x13
 2944 01e9 00       		.byte	0
 2945 01ea 00       		.byte	0
 2946 01eb 21       		.uleb128 0x21
 2947 01ec 34       		.uleb128 0x34
 2948 01ed 00       		.byte	0
 2949 01ee 03       		.uleb128 0x3
 2950 01ef 0E       		.uleb128 0xe
 2951 01f0 3A       		.uleb128 0x3a
 2952 01f1 0B       		.uleb128 0xb
 2953 01f2 3B       		.uleb128 0x3b
 2954 01f3 05       		.uleb128 0x5
 2955 01f4 49       		.uleb128 0x49
 2956 01f5 13       		.uleb128 0x13
 2957 01f6 3F       		.uleb128 0x3f
 2958 01f7 19       		.uleb128 0x19
 2959 01f8 02       		.uleb128 0x2
 2960 01f9 18       		.uleb128 0x18
 2961 01fa 00       		.byte	0
 2962 01fb 00       		.byte	0
 2963 01fc 22       		.uleb128 0x22
 2964 01fd 34       		.uleb128 0x34
 2965 01fe 00       		.byte	0
 2966 01ff 03       		.uleb128 0x3
 2967 0200 0E       		.uleb128 0xe
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 85


 2968 0201 3A       		.uleb128 0x3a
 2969 0202 0B       		.uleb128 0xb
 2970 0203 3B       		.uleb128 0x3b
 2971 0204 0B       		.uleb128 0xb
 2972 0205 49       		.uleb128 0x49
 2973 0206 13       		.uleb128 0x13
 2974 0207 3F       		.uleb128 0x3f
 2975 0208 19       		.uleb128 0x19
 2976 0209 02       		.uleb128 0x2
 2977 020a 18       		.uleb128 0x18
 2978 020b 00       		.byte	0
 2979 020c 00       		.byte	0
 2980 020d 23       		.uleb128 0x23
 2981 020e 34       		.uleb128 0x34
 2982 020f 00       		.byte	0
 2983 0210 03       		.uleb128 0x3
 2984 0211 0E       		.uleb128 0xe
 2985 0212 3A       		.uleb128 0x3a
 2986 0213 0B       		.uleb128 0xb
 2987 0214 3B       		.uleb128 0x3b
 2988 0215 05       		.uleb128 0x5
 2989 0216 49       		.uleb128 0x49
 2990 0217 13       		.uleb128 0x13
 2991 0218 3F       		.uleb128 0x3f
 2992 0219 19       		.uleb128 0x19
 2993 021a 3C       		.uleb128 0x3c
 2994 021b 19       		.uleb128 0x19
 2995 021c 00       		.byte	0
 2996 021d 00       		.byte	0
 2997 021e 24       		.uleb128 0x24
 2998 021f 2E       		.uleb128 0x2e
 2999 0220 00       		.byte	0
 3000 0221 3F       		.uleb128 0x3f
 3001 0222 19       		.uleb128 0x19
 3002 0223 3C       		.uleb128 0x3c
 3003 0224 19       		.uleb128 0x19
 3004 0225 6E       		.uleb128 0x6e
 3005 0226 0E       		.uleb128 0xe
 3006 0227 03       		.uleb128 0x3
 3007 0228 0E       		.uleb128 0xe
 3008 0229 3A       		.uleb128 0x3a
 3009 022a 0B       		.uleb128 0xb
 3010 022b 3B       		.uleb128 0x3b
 3011 022c 0B       		.uleb128 0xb
 3012 022d 00       		.byte	0
 3013 022e 00       		.byte	0
 3014 022f 00       		.byte	0
 3015              		.section	.debug_loc,"",%progbits
 3016              	.Ldebug_loc0:
 3017              	.LLST0:
 3018 0000 00000000 		.4byte	.LVL1
 3019 0004 16000000 		.4byte	.LVL6
 3020 0008 0100     		.2byte	0x1
 3021 000a 50       		.byte	0x50
 3022 000b 16000000 		.4byte	.LVL6
 3023 000f 32000000 		.4byte	.LFE21
 3024 0013 0400     		.2byte	0x4
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 86


 3025 0015 F3       		.byte	0xf3
 3026 0016 01       		.uleb128 0x1
 3027 0017 50       		.byte	0x50
 3028 0018 9F       		.byte	0x9f
 3029 0019 00000000 		.4byte	0
 3030 001d 00000000 		.4byte	0
 3031              	.LLST1:
 3032 0021 00000000 		.4byte	.LVL1
 3033 0025 14000000 		.4byte	.LVL5
 3034 0029 0100     		.2byte	0x1
 3035 002b 51       		.byte	0x51
 3036 002c 14000000 		.4byte	.LVL5
 3037 0030 32000000 		.4byte	.LFE21
 3038 0034 0400     		.2byte	0x4
 3039 0036 F3       		.byte	0xf3
 3040 0037 01       		.uleb128 0x1
 3041 0038 51       		.byte	0x51
 3042 0039 9F       		.byte	0x9f
 3043 003a 00000000 		.4byte	0
 3044 003e 00000000 		.4byte	0
 3045              	.LLST2:
 3046 0042 00000000 		.4byte	.LVL1
 3047 0046 12000000 		.4byte	.LVL4
 3048 004a 0100     		.2byte	0x1
 3049 004c 52       		.byte	0x52
 3050 004d 12000000 		.4byte	.LVL4
 3051 0051 32000000 		.4byte	.LFE21
 3052 0055 0400     		.2byte	0x4
 3053 0057 F3       		.byte	0xf3
 3054 0058 01       		.uleb128 0x1
 3055 0059 52       		.byte	0x52
 3056 005a 9F       		.byte	0x9f
 3057 005b 00000000 		.4byte	0
 3058 005f 00000000 		.4byte	0
 3059              	.LLST3:
 3060 0063 00000000 		.4byte	.LVL1
 3061 0067 10000000 		.4byte	.LVL3
 3062 006b 0100     		.2byte	0x1
 3063 006d 53       		.byte	0x53
 3064 006e 10000000 		.4byte	.LVL3
 3065 0072 32000000 		.4byte	.LFE21
 3066 0076 0400     		.2byte	0x4
 3067 0078 F3       		.byte	0xf3
 3068 0079 01       		.uleb128 0x1
 3069 007a 53       		.byte	0x53
 3070 007b 9F       		.byte	0x9f
 3071 007c 00000000 		.4byte	0
 3072 0080 00000000 		.4byte	0
 3073              	.LLST4:
 3074 0084 16000000 		.4byte	.LVL11
 3075 0088 1A000000 		.4byte	.LVL12
 3076 008c 0200     		.2byte	0x2
 3077 008e 30       		.byte	0x30
 3078 008f 9F       		.byte	0x9f
 3079 0090 1A000000 		.4byte	.LVL12
 3080 0094 26000000 		.4byte	.LVL14
 3081 0098 0100     		.2byte	0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 87


 3082 009a 54       		.byte	0x54
 3083 009b 28000000 		.4byte	.LVL15
 3084 009f 2E000000 		.4byte	.LVL16
 3085 00a3 0100     		.2byte	0x1
 3086 00a5 54       		.byte	0x54
 3087 00a6 30000000 		.4byte	.LVL17
 3088 00aa 62000000 		.4byte	.LVL22
 3089 00ae 0100     		.2byte	0x1
 3090 00b0 54       		.byte	0x54
 3091 00b1 64000000 		.4byte	.LVL23
 3092 00b5 6A000000 		.4byte	.LVL24
 3093 00b9 0100     		.2byte	0x1
 3094 00bb 54       		.byte	0x54
 3095 00bc 6C000000 		.4byte	.LVL25
 3096 00c0 84000000 		.4byte	.LVL27
 3097 00c4 0100     		.2byte	0x1
 3098 00c6 54       		.byte	0x54
 3099 00c7 86000000 		.4byte	.LVL28
 3100 00cb 96000000 		.4byte	.LVL30
 3101 00cf 0100     		.2byte	0x1
 3102 00d1 54       		.byte	0x54
 3103 00d2 00000000 		.4byte	0
 3104 00d6 00000000 		.4byte	0
 3105              	.LLST5:
 3106 00da 34000000 		.4byte	.LVL18
 3107 00de 38000000 		.4byte	.LVL19
 3108 00e2 0100     		.2byte	0x1
 3109 00e4 53       		.byte	0x53
 3110 00e5 38000000 		.4byte	.LVL19
 3111 00e9 62000000 		.4byte	.LVL22
 3112 00ed 0500     		.2byte	0x5
 3113 00ef 33       		.byte	0x33
 3114 00f0 74       		.byte	0x74
 3115 00f1 00       		.sleb128 0
 3116 00f2 1C       		.byte	0x1c
 3117 00f3 9F       		.byte	0x9f
 3118 00f4 62000000 		.4byte	.LVL22
 3119 00f8 64000000 		.4byte	.LVL23
 3120 00fc 0500     		.2byte	0x5
 3121 00fe 34       		.byte	0x34
 3122 00ff 74       		.byte	0x74
 3123 0100 00       		.sleb128 0
 3124 0101 1C       		.byte	0x1c
 3125 0102 9F       		.byte	0x9f
 3126 0103 00000000 		.4byte	0
 3127 0107 00000000 		.4byte	0
 3128              	.LLST6:
 3129 010b 0E000000 		.4byte	.LVL32
 3130 010f 2A000000 		.4byte	.LVL35
 3131 0113 0100     		.2byte	0x1
 3132 0115 54       		.byte	0x54
 3133 0116 00000000 		.4byte	0
 3134 011a 00000000 		.4byte	0
 3135              	.LLST7:
 3136 011e 06000000 		.4byte	.LVL36
 3137 0122 13000000 		.4byte	.LVL37-1
 3138 0126 0100     		.2byte	0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 88


 3139 0128 50       		.byte	0x50
 3140 0129 00000000 		.4byte	0
 3141 012d 00000000 		.4byte	0
 3142              	.LLST8:
 3143 0131 06000000 		.4byte	.LVL38
 3144 0135 13000000 		.4byte	.LVL39-1
 3145 0139 0100     		.2byte	0x1
 3146 013b 50       		.byte	0x50
 3147 013c 00000000 		.4byte	0
 3148 0140 00000000 		.4byte	0
 3149              	.LLST9:
 3150 0144 00000000 		.4byte	.LVL42
 3151 0148 07000000 		.4byte	.LVL43-1
 3152 014c 0100     		.2byte	0x1
 3153 014e 50       		.byte	0x50
 3154 014f 07000000 		.4byte	.LVL43-1
 3155 0153 24000000 		.4byte	.LFE6
 3156 0157 0400     		.2byte	0x4
 3157 0159 F3       		.byte	0xf3
 3158 015a 01       		.uleb128 0x1
 3159 015b 50       		.byte	0x50
 3160 015c 9F       		.byte	0x9f
 3161 015d 00000000 		.4byte	0
 3162 0161 00000000 		.4byte	0
 3163              	.LLST10:
 3164 0165 08000000 		.4byte	.LVL43
 3165 0169 1D000000 		.4byte	.LVL44-1
 3166 016d 0100     		.2byte	0x1
 3167 016f 50       		.byte	0x50
 3168 0170 00000000 		.4byte	0
 3169 0174 00000000 		.4byte	0
 3170              	.LLST11:
 3171 0178 00000000 		.4byte	.LVL45
 3172 017c 02000000 		.4byte	.LVL46
 3173 0180 0100     		.2byte	0x1
 3174 0182 50       		.byte	0x50
 3175 0183 02000000 		.4byte	.LVL46
 3176 0187 0C000000 		.4byte	.LFE8
 3177 018b 0400     		.2byte	0x4
 3178 018d F3       		.byte	0xf3
 3179 018e 01       		.uleb128 0x1
 3180 018f 50       		.byte	0x50
 3181 0190 9F       		.byte	0x9f
 3182 0191 00000000 		.4byte	0
 3183 0195 00000000 		.4byte	0
 3184              	.LLST12:
 3185 0199 00000000 		.4byte	.LVL50
 3186 019d 1A000000 		.4byte	.LVL53
 3187 01a1 0100     		.2byte	0x1
 3188 01a3 50       		.byte	0x50
 3189 01a4 1A000000 		.4byte	.LVL53
 3190 01a8 30000000 		.4byte	.LFE13
 3191 01ac 0400     		.2byte	0x4
 3192 01ae F3       		.byte	0xf3
 3193 01af 01       		.uleb128 0x1
 3194 01b0 50       		.byte	0x50
 3195 01b1 9F       		.byte	0x9f
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 89


 3196 01b2 00000000 		.4byte	0
 3197 01b6 00000000 		.4byte	0
 3198              	.LLST13:
 3199 01ba 00000000 		.4byte	.LVL50
 3200 01be 08000000 		.4byte	.LVL51
 3201 01c2 0100     		.2byte	0x1
 3202 01c4 51       		.byte	0x51
 3203 01c5 08000000 		.4byte	.LVL51
 3204 01c9 30000000 		.4byte	.LFE13
 3205 01cd 0400     		.2byte	0x4
 3206 01cf F3       		.byte	0xf3
 3207 01d0 01       		.uleb128 0x1
 3208 01d1 51       		.byte	0x51
 3209 01d2 9F       		.byte	0x9f
 3210 01d3 00000000 		.4byte	0
 3211 01d7 00000000 		.4byte	0
 3212              	.LLST14:
 3213 01db 12000000 		.4byte	.LVL52
 3214 01df 22000000 		.4byte	.LVL54
 3215 01e3 0100     		.2byte	0x1
 3216 01e5 53       		.byte	0x53
 3217 01e6 22000000 		.4byte	.LVL54
 3218 01ea 24000000 		.4byte	.LVL55
 3219 01ee 1E00     		.2byte	0x1e
 3220 01f0 71       		.byte	0x71
 3221 01f1 00       		.sleb128 0
 3222 01f2 36       		.byte	0x36
 3223 01f3 24       		.byte	0x24
 3224 01f4 F7       		.byte	0xf7
 3225 01f5 2C       		.uleb128 0x2c
 3226 01f6 F7       		.byte	0xf7
 3227 01f7 25       		.uleb128 0x25
 3228 01f8 F4       		.byte	0xf4
 3229 01f9 25       		.uleb128 0x25
 3230 01fa 08       		.byte	0x8
 3231 01fb 5917B7D1 		.8byte	0xd1b71759
 3231      00000000 
 3232 0203 1E       		.byte	0x1e
 3233 0204 08       		.byte	0x8
 3234 0205 20       		.byte	0x20
 3235 0206 F7       		.byte	0xf7
 3236 0207 25       		.uleb128 0x25
 3237 0208 25       		.byte	0x25
 3238 0209 F7       		.byte	0xf7
 3239 020a 2C       		.uleb128 0x2c
 3240 020b 3D       		.byte	0x3d
 3241 020c 25       		.byte	0x25
 3242 020d 9F       		.byte	0x9f
 3243 020e 00000000 		.4byte	0
 3244 0212 00000000 		.4byte	0
 3245              	.LLST15:
 3246 0216 00000000 		.4byte	.LVL56
 3247 021a 06000000 		.4byte	.LVL57
 3248 021e 0100     		.2byte	0x1
 3249 0220 50       		.byte	0x50
 3250 0221 06000000 		.4byte	.LVL57
 3251 0225 24000000 		.4byte	.LVL59
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 90


 3252 0229 0400     		.2byte	0x4
 3253 022b F3       		.byte	0xf3
 3254 022c 01       		.uleb128 0x1
 3255 022d 50       		.byte	0x50
 3256 022e 9F       		.byte	0x9f
 3257 022f 24000000 		.4byte	.LVL59
 3258 0233 26000000 		.4byte	.LVL60
 3259 0237 0100     		.2byte	0x1
 3260 0239 50       		.byte	0x50
 3261 023a 26000000 		.4byte	.LVL60
 3262 023e 30000000 		.4byte	.LFE14
 3263 0242 0400     		.2byte	0x4
 3264 0244 F3       		.byte	0xf3
 3265 0245 01       		.uleb128 0x1
 3266 0246 50       		.byte	0x50
 3267 0247 9F       		.byte	0x9f
 3268 0248 00000000 		.4byte	0
 3269 024c 00000000 		.4byte	0
 3270              	.LLST16:
 3271 0250 00000000 		.4byte	.LVL56
 3272 0254 22000000 		.4byte	.LVL58
 3273 0258 0200     		.2byte	0x2
 3274 025a 30       		.byte	0x30
 3275 025b 9F       		.byte	0x9f
 3276 025c 22000000 		.4byte	.LVL58
 3277 0260 24000000 		.4byte	.LVL59
 3278 0264 0100     		.2byte	0x1
 3279 0266 50       		.byte	0x50
 3280 0267 24000000 		.4byte	.LVL59
 3281 026b 26000000 		.4byte	.LVL60
 3282 026f 0200     		.2byte	0x2
 3283 0271 30       		.byte	0x30
 3284 0272 9F       		.byte	0x9f
 3285 0273 26000000 		.4byte	.LVL60
 3286 0277 30000000 		.4byte	.LFE14
 3287 027b 0100     		.2byte	0x1
 3288 027d 50       		.byte	0x50
 3289 027e 00000000 		.4byte	0
 3290 0282 00000000 		.4byte	0
 3291              	.LLST17:
 3292 0286 00000000 		.4byte	.LVL61
 3293 028a 06000000 		.4byte	.LVL62
 3294 028e 0100     		.2byte	0x1
 3295 0290 50       		.byte	0x50
 3296 0291 06000000 		.4byte	.LVL62
 3297 0295 14000000 		.4byte	.LFE15
 3298 0299 0400     		.2byte	0x4
 3299 029b F3       		.byte	0xf3
 3300 029c 01       		.uleb128 0x1
 3301 029d 50       		.byte	0x50
 3302 029e 9F       		.byte	0x9f
 3303 029f 00000000 		.4byte	0
 3304 02a3 00000000 		.4byte	0
 3305              	.LLST18:
 3306 02a7 06000000 		.4byte	.LVL63
 3307 02ab 0A000000 		.4byte	.LVL64
 3308 02af 0200     		.2byte	0x2
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 91


 3309 02b1 30       		.byte	0x30
 3310 02b2 9F       		.byte	0x9f
 3311 02b3 0A000000 		.4byte	.LVL64
 3312 02b7 32000000 		.4byte	.LVL67
 3313 02bb 0100     		.2byte	0x1
 3314 02bd 54       		.byte	0x54
 3315 02be 34000000 		.4byte	.LVL68
 3316 02c2 3C000000 		.4byte	.LVL69
 3317 02c6 0100     		.2byte	0x1
 3318 02c8 54       		.byte	0x54
 3319 02c9 3C000000 		.4byte	.LVL69
 3320 02cd 44000000 		.4byte	.LVL70
 3321 02d1 0100     		.2byte	0x1
 3322 02d3 53       		.byte	0x53
 3323 02d4 52000000 		.4byte	.LVL71
 3324 02d8 54000000 		.4byte	.LVL72
 3325 02dc 0100     		.2byte	0x1
 3326 02de 54       		.byte	0x54
 3327 02df 54000000 		.4byte	.LVL72
 3328 02e3 5B000000 		.4byte	.LVL73-1
 3329 02e7 0100     		.2byte	0x1
 3330 02e9 53       		.byte	0x53
 3331 02ea 8A000000 		.4byte	.LVL75
 3332 02ee 8E000000 		.4byte	.LVL76
 3333 02f2 0200     		.2byte	0x2
 3334 02f4 30       		.byte	0x30
 3335 02f5 9F       		.byte	0x9f
 3336 02f6 8E000000 		.4byte	.LVL76
 3337 02fa CA000000 		.4byte	.LVL79
 3338 02fe 0100     		.2byte	0x1
 3339 0300 54       		.byte	0x54
 3340 0301 CC000000 		.4byte	.LVL80
 3341 0305 D8000000 		.4byte	.LVL82
 3342 0309 0100     		.2byte	0x1
 3343 030b 54       		.byte	0x54
 3344 030c 00000000 		.4byte	0
 3345 0310 00000000 		.4byte	0
 3346              	.LLST19:
 3347 0314 1C000000 		.4byte	.LVL65
 3348 0318 2F000000 		.4byte	.LVL66-1
 3349 031c 0100     		.2byte	0x1
 3350 031e 50       		.byte	0x50
 3351 031f 5C000000 		.4byte	.LVL73
 3352 0323 69000000 		.4byte	.LVL74-1
 3353 0327 0100     		.2byte	0x1
 3354 0329 50       		.byte	0x50
 3355 032a 92000000 		.4byte	.LVL77
 3356 032e C7000000 		.4byte	.LVL78-1
 3357 0332 0100     		.2byte	0x1
 3358 0334 50       		.byte	0x50
 3359 0335 00000000 		.4byte	0
 3360 0339 00000000 		.4byte	0
 3361              	.LLST20:
 3362 033d 00000000 		.4byte	.LVL85
 3363 0341 02000000 		.4byte	.LVL86
 3364 0345 0100     		.2byte	0x1
 3365 0347 50       		.byte	0x50
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 92


 3366 0348 02000000 		.4byte	.LVL86
 3367 034c 10000000 		.4byte	.LFE16
 3368 0350 0400     		.2byte	0x4
 3369 0352 F3       		.byte	0xf3
 3370 0353 01       		.uleb128 0x1
 3371 0354 50       		.byte	0x50
 3372 0355 9F       		.byte	0x9f
 3373 0356 00000000 		.4byte	0
 3374 035a 00000000 		.4byte	0
 3375              	.LLST21:
 3376 035e 00000000 		.4byte	.LVL87
 3377 0362 06000000 		.4byte	.LVL88
 3378 0366 0100     		.2byte	0x1
 3379 0368 50       		.byte	0x50
 3380 0369 06000000 		.4byte	.LVL88
 3381 036d 18000000 		.4byte	.LVL90
 3382 0371 0400     		.2byte	0x4
 3383 0373 F3       		.byte	0xf3
 3384 0374 01       		.uleb128 0x1
 3385 0375 50       		.byte	0x50
 3386 0376 9F       		.byte	0x9f
 3387 0377 18000000 		.4byte	.LVL90
 3388 037b 1A000000 		.4byte	.LVL91
 3389 037f 0100     		.2byte	0x1
 3390 0381 50       		.byte	0x50
 3391 0382 1A000000 		.4byte	.LVL91
 3392 0386 28000000 		.4byte	.LFE17
 3393 038a 0400     		.2byte	0x4
 3394 038c F3       		.byte	0xf3
 3395 038d 01       		.uleb128 0x1
 3396 038e 50       		.byte	0x50
 3397 038f 9F       		.byte	0x9f
 3398 0390 00000000 		.4byte	0
 3399 0394 00000000 		.4byte	0
 3400              	.LLST22:
 3401 0398 00000000 		.4byte	.LVL87
 3402 039c 16000000 		.4byte	.LVL89
 3403 03a0 0200     		.2byte	0x2
 3404 03a2 30       		.byte	0x30
 3405 03a3 9F       		.byte	0x9f
 3406 03a4 16000000 		.4byte	.LVL89
 3407 03a8 18000000 		.4byte	.LVL90
 3408 03ac 0100     		.2byte	0x1
 3409 03ae 50       		.byte	0x50
 3410 03af 18000000 		.4byte	.LVL90
 3411 03b3 1E000000 		.4byte	.LVL92
 3412 03b7 0200     		.2byte	0x2
 3413 03b9 30       		.byte	0x30
 3414 03ba 9F       		.byte	0x9f
 3415 03bb 1E000000 		.4byte	.LVL92
 3416 03bf 28000000 		.4byte	.LFE17
 3417 03c3 0100     		.2byte	0x1
 3418 03c5 50       		.byte	0x50
 3419 03c6 00000000 		.4byte	0
 3420 03ca 00000000 		.4byte	0
 3421              	.LLST23:
 3422 03ce 00000000 		.4byte	.LVL93
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 93


 3423 03d2 17000000 		.4byte	.LVL98-1
 3424 03d6 0100     		.2byte	0x1
 3425 03d8 50       		.byte	0x50
 3426 03d9 17000000 		.4byte	.LVL98-1
 3427 03dd 34000000 		.4byte	.LFE18
 3428 03e1 0400     		.2byte	0x4
 3429 03e3 F3       		.byte	0xf3
 3430 03e4 01       		.uleb128 0x1
 3431 03e5 50       		.byte	0x50
 3432 03e6 9F       		.byte	0x9f
 3433 03e7 00000000 		.4byte	0
 3434 03eb 00000000 		.4byte	0
 3435              	.LLST24:
 3436 03ef 00000000 		.4byte	.LVL93
 3437 03f3 0C000000 		.4byte	.LVL94
 3438 03f7 0100     		.2byte	0x1
 3439 03f9 51       		.byte	0x51
 3440 03fa 0C000000 		.4byte	.LVL94
 3441 03fe 34000000 		.4byte	.LFE18
 3442 0402 0400     		.2byte	0x4
 3443 0404 F3       		.byte	0xf3
 3444 0405 01       		.uleb128 0x1
 3445 0406 51       		.byte	0x51
 3446 0407 9F       		.byte	0x9f
 3447 0408 00000000 		.4byte	0
 3448 040c 00000000 		.4byte	0
 3449              	.LLST25:
 3450 0410 00000000 		.4byte	.LVL93
 3451 0414 12000000 		.4byte	.LVL96
 3452 0418 0100     		.2byte	0x1
 3453 041a 52       		.byte	0x52
 3454 041b 12000000 		.4byte	.LVL96
 3455 041f 34000000 		.4byte	.LFE18
 3456 0423 0400     		.2byte	0x4
 3457 0425 F3       		.byte	0xf3
 3458 0426 01       		.uleb128 0x1
 3459 0427 52       		.byte	0x52
 3460 0428 9F       		.byte	0x9f
 3461 0429 00000000 		.4byte	0
 3462 042d 00000000 		.4byte	0
 3463              	.LLST26:
 3464 0431 18000000 		.4byte	.LVL98
 3465 0435 27000000 		.4byte	.LVL99-1
 3466 0439 0100     		.2byte	0x1
 3467 043b 50       		.byte	0x50
 3468 043c 00000000 		.4byte	0
 3469 0440 00000000 		.4byte	0
 3470              	.LLST27:
 3471 0444 14000000 		.4byte	.LVL97
 3472 0448 28000000 		.4byte	.LVL99
 3473 044c 0100     		.2byte	0x1
 3474 044e 55       		.byte	0x55
 3475 044f 00000000 		.4byte	0
 3476 0453 00000000 		.4byte	0
 3477              	.LLST28:
 3478 0457 0E000000 		.4byte	.LVL95
 3479 045b 28000000 		.4byte	.LVL99
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 94


 3480 045f 0100     		.2byte	0x1
 3481 0461 56       		.byte	0x56
 3482 0462 00000000 		.4byte	0
 3483 0466 00000000 		.4byte	0
 3484              	.LLST29:
 3485 046a 00000000 		.4byte	.LVL100
 3486 046e 14000000 		.4byte	.LVL102
 3487 0472 0100     		.2byte	0x1
 3488 0474 50       		.byte	0x50
 3489 0475 14000000 		.4byte	.LVL102
 3490 0479 70000000 		.4byte	.LFE19
 3491 047d 0400     		.2byte	0x4
 3492 047f F3       		.byte	0xf3
 3493 0480 01       		.uleb128 0x1
 3494 0481 50       		.byte	0x50
 3495 0482 9F       		.byte	0x9f
 3496 0483 00000000 		.4byte	0
 3497 0487 00000000 		.4byte	0
 3498              	.LLST30:
 3499 048b 00000000 		.4byte	.LVL100
 3500 048f 22000000 		.4byte	.LVL104
 3501 0493 0100     		.2byte	0x1
 3502 0495 51       		.byte	0x51
 3503 0496 22000000 		.4byte	.LVL104
 3504 049a 70000000 		.4byte	.LFE19
 3505 049e 0400     		.2byte	0x4
 3506 04a0 F3       		.byte	0xf3
 3507 04a1 01       		.uleb128 0x1
 3508 04a2 51       		.byte	0x51
 3509 04a3 9F       		.byte	0x9f
 3510 04a4 00000000 		.4byte	0
 3511 04a8 00000000 		.4byte	0
 3512              	.LLST31:
 3513 04ac 00000000 		.4byte	.LVL100
 3514 04b0 0A000000 		.4byte	.LVL101
 3515 04b4 0100     		.2byte	0x1
 3516 04b6 52       		.byte	0x52
 3517 04b7 0A000000 		.4byte	.LVL101
 3518 04bb 70000000 		.4byte	.LFE19
 3519 04bf 0400     		.2byte	0x4
 3520 04c1 F3       		.byte	0xf3
 3521 04c2 01       		.uleb128 0x1
 3522 04c3 52       		.byte	0x52
 3523 04c4 9F       		.byte	0x9f
 3524 04c5 00000000 		.4byte	0
 3525 04c9 00000000 		.4byte	0
 3526              	.LLST32:
 3527 04cd 00000000 		.4byte	.LVL100
 3528 04d1 38000000 		.4byte	.LVL106
 3529 04d5 0100     		.2byte	0x1
 3530 04d7 53       		.byte	0x53
 3531 04d8 38000000 		.4byte	.LVL106
 3532 04dc 70000000 		.4byte	.LFE19
 3533 04e0 0400     		.2byte	0x4
 3534 04e2 F3       		.byte	0xf3
 3535 04e3 01       		.uleb128 0x1
 3536 04e4 53       		.byte	0x53
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 95


 3537 04e5 9F       		.byte	0x9f
 3538 04e6 00000000 		.4byte	0
 3539 04ea 00000000 		.4byte	0
 3540              	.LLST33:
 3541 04ee 46000000 		.4byte	.LVL108
 3542 04f2 5B000000 		.4byte	.LVL109-1
 3543 04f6 0100     		.2byte	0x1
 3544 04f8 50       		.byte	0x50
 3545 04f9 00000000 		.4byte	0
 3546 04fd 00000000 		.4byte	0
 3547              	.LLST34:
 3548 0501 1E000000 		.4byte	.LVL103
 3549 0505 5C000000 		.4byte	.LVL109
 3550 0509 0100     		.2byte	0x1
 3551 050b 54       		.byte	0x54
 3552 050c 00000000 		.4byte	0
 3553 0510 00000000 		.4byte	0
 3554              	.LLST35:
 3555 0514 36000000 		.4byte	.LVL105
 3556 0518 5C000000 		.4byte	.LVL109
 3557 051c 0100     		.2byte	0x1
 3558 051e 57       		.byte	0x57
 3559 051f 00000000 		.4byte	0
 3560 0523 00000000 		.4byte	0
 3561              	.LLST36:
 3562 0527 42000000 		.4byte	.LVL107
 3563 052b 5C000000 		.4byte	.LVL109
 3564 052f 0100     		.2byte	0x1
 3565 0531 56       		.byte	0x56
 3566 0532 00000000 		.4byte	0
 3567 0536 00000000 		.4byte	0
 3568              		.section	.debug_aranges,"",%progbits
 3569 0000 CC000000 		.4byte	0xcc
 3570 0004 0200     		.2byte	0x2
 3571 0006 00000000 		.4byte	.Ldebug_info0
 3572 000a 04       		.byte	0x4
 3573 000b 00       		.byte	0
 3574 000c 0000     		.2byte	0
 3575 000e 0000     		.2byte	0
 3576 0010 00000000 		.4byte	.LFB22
 3577 0014 10000000 		.4byte	.LFE22-.LFB22
 3578 0018 00000000 		.4byte	.LFB21
 3579 001c 32000000 		.4byte	.LFE21-.LFB21
 3580 0020 00000000 		.4byte	.LFB20
 3581 0024 A0000000 		.4byte	.LFE20-.LFB20
 3582 0028 00000000 		.4byte	.LFB3
 3583 002c 38000000 		.4byte	.LFE3-.LFB3
 3584 0030 00000000 		.4byte	.LFB4
 3585 0034 1C000000 		.4byte	.LFE4-.LFB4
 3586 0038 00000000 		.4byte	.LFB5
 3587 003c 1C000000 		.4byte	.LFE5-.LFB5
 3588 0040 00000000 		.4byte	.LFB1
 3589 0044 18000000 		.4byte	.LFE1-.LFB1
 3590 0048 00000000 		.4byte	.LFB6
 3591 004c 24000000 		.4byte	.LFE6-.LFB6
 3592 0050 00000000 		.4byte	.LFB7
 3593 0054 10000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 96


 3594 0058 00000000 		.4byte	.LFB8
 3595 005c 0C000000 		.4byte	.LFE8-.LFB8
 3596 0060 00000000 		.4byte	.LFB9
 3597 0064 0C000000 		.4byte	.LFE9-.LFB9
 3598 0068 00000000 		.4byte	.LFB10
 3599 006c 10000000 		.4byte	.LFE10-.LFB10
 3600 0070 00000000 		.4byte	.LFB11
 3601 0074 0C000000 		.4byte	.LFE11-.LFB11
 3602 0078 00000000 		.4byte	.LFB12
 3603 007c 10000000 		.4byte	.LFE12-.LFB12
 3604 0080 00000000 		.4byte	.LFB13
 3605 0084 30000000 		.4byte	.LFE13-.LFB13
 3606 0088 00000000 		.4byte	.LFB14
 3607 008c 30000000 		.4byte	.LFE14-.LFB14
 3608 0090 00000000 		.4byte	.LFB15
 3609 0094 14000000 		.4byte	.LFE15-.LFB15
 3610 0098 00000000 		.4byte	.LFB2
 3611 009c 00010000 		.4byte	.LFE2-.LFB2
 3612 00a0 00000000 		.4byte	.LFB0
 3613 00a4 1C000000 		.4byte	.LFE0-.LFB0
 3614 00a8 00000000 		.4byte	.LFB16
 3615 00ac 10000000 		.4byte	.LFE16-.LFB16
 3616 00b0 00000000 		.4byte	.LFB17
 3617 00b4 28000000 		.4byte	.LFE17-.LFB17
 3618 00b8 00000000 		.4byte	.LFB18
 3619 00bc 34000000 		.4byte	.LFE18-.LFB18
 3620 00c0 00000000 		.4byte	.LFB19
 3621 00c4 70000000 		.4byte	.LFE19-.LFB19
 3622 00c8 00000000 		.4byte	0
 3623 00cc 00000000 		.4byte	0
 3624              		.section	.debug_ranges,"",%progbits
 3625              	.Ldebug_ranges0:
 3626 0000 00000000 		.4byte	.LFB22
 3627 0004 10000000 		.4byte	.LFE22
 3628 0008 00000000 		.4byte	.LFB21
 3629 000c 32000000 		.4byte	.LFE21
 3630 0010 00000000 		.4byte	.LFB20
 3631 0014 A0000000 		.4byte	.LFE20
 3632 0018 00000000 		.4byte	.LFB3
 3633 001c 38000000 		.4byte	.LFE3
 3634 0020 00000000 		.4byte	.LFB4
 3635 0024 1C000000 		.4byte	.LFE4
 3636 0028 00000000 		.4byte	.LFB5
 3637 002c 1C000000 		.4byte	.LFE5
 3638 0030 00000000 		.4byte	.LFB1
 3639 0034 18000000 		.4byte	.LFE1
 3640 0038 00000000 		.4byte	.LFB6
 3641 003c 24000000 		.4byte	.LFE6
 3642 0040 00000000 		.4byte	.LFB7
 3643 0044 10000000 		.4byte	.LFE7
 3644 0048 00000000 		.4byte	.LFB8
 3645 004c 0C000000 		.4byte	.LFE8
 3646 0050 00000000 		.4byte	.LFB9
 3647 0054 0C000000 		.4byte	.LFE9
 3648 0058 00000000 		.4byte	.LFB10
 3649 005c 10000000 		.4byte	.LFE10
 3650 0060 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 97


 3651 0064 0C000000 		.4byte	.LFE11
 3652 0068 00000000 		.4byte	.LFB12
 3653 006c 10000000 		.4byte	.LFE12
 3654 0070 00000000 		.4byte	.LFB13
 3655 0074 30000000 		.4byte	.LFE13
 3656 0078 00000000 		.4byte	.LFB14
 3657 007c 30000000 		.4byte	.LFE14
 3658 0080 00000000 		.4byte	.LFB15
 3659 0084 14000000 		.4byte	.LFE15
 3660 0088 00000000 		.4byte	.LFB2
 3661 008c 00010000 		.4byte	.LFE2
 3662 0090 00000000 		.4byte	.LFB0
 3663 0094 1C000000 		.4byte	.LFE0
 3664 0098 00000000 		.4byte	.LFB16
 3665 009c 10000000 		.4byte	.LFE16
 3666 00a0 00000000 		.4byte	.LFB17
 3667 00a4 28000000 		.4byte	.LFE17
 3668 00a8 00000000 		.4byte	.LFB18
 3669 00ac 34000000 		.4byte	.LFE18
 3670 00b0 00000000 		.4byte	.LFB19
 3671 00b4 70000000 		.4byte	.LFE19
 3672 00b8 00000000 		.4byte	0
 3673 00bc 00000000 		.4byte	0
 3674              		.section	.debug_line,"",%progbits
 3675              	.Ldebug_line0:
 3676 0000 39030000 		.section	.debug_str,"MS",%progbits,1
 3676      02008F00 
 3676      00000201 
 3676      FB0E0D00 
 3676      01010101 
 3677              	.LASF105:
 3678 0000 4379446D 		.ascii	"CyDmaTdAllocate\000"
 3678      61546441 
 3678      6C6C6F63 
 3678      61746500 
 3679              	.LASF80:
 3680 0010 73617448 		.ascii	"satH\000"
 3680      00
 3681              	.LASF44:
 3682 0015 74616368 		.ascii	"tachOutDMA_dmaHandle\000"
 3682      4F757444 
 3682      4D415F64 
 3682      6D614861 
 3682      6E646C65 
 3683              	.LASF81:
 3684 002a 7361744C 		.ascii	"satL\000"
 3684      00
 3685              	.LASF45:
 3686 002f 636F756E 		.ascii	"counti\000"
 3686      746900
 3687              	.LASF32:
 3688 0036 46616E43 		.ascii	"FanController_fanPropertiesStruct\000"
 3688      6F6E7472 
 3688      6F6C6C65 
 3688      725F6661 
 3688      6E50726F 
 3689              	.LASF23:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 98


 3690 0058 61637475 		.ascii	"actualPeriod\000"
 3690      616C5065 
 3690      72696F64 
 3690      00
 3691              	.LASF85:
 3692 0065 746D7041 		.ascii	"tmpA1\000"
 3692      3100
 3693              	.LASF111:
 3694 006b 43794578 		.ascii	"CyExitCriticalSection\000"
 3694      69744372 
 3694      69746963 
 3694      616C5365 
 3694      6374696F 
 3695              	.LASF87:
 3696 0081 746D7041 		.ascii	"tmpA3\000"
 3696      3300
 3697              	.LASF93:
 3698 0087 46616E43 		.ascii	"FanController_pidA1\000"
 3698      6F6E7472 
 3698      6F6C6C65 
 3698      725F7069 
 3698      64413100 
 3699              	.LASF18:
 3700 009b 72656731 		.ascii	"reg16\000"
 3700      3600
 3701              	.LASF95:
 3702 00a1 46616E43 		.ascii	"FanController_pidA3\000"
 3702      6F6E7472 
 3702      6F6C6C65 
 3702      725F7069 
 3702      64413300 
 3703              	.LASF64:
 3704 00b5 46616E43 		.ascii	"FanController_SetDutyCycle\000"
 3704      6F6E7472 
 3704      6F6C6C65 
 3704      725F5365 
 3704      74447574 
 3705              	.LASF46:
 3706 00d0 66616E4E 		.ascii	"fanNum\000"
 3706      756D00
 3707              	.LASF4:
 3708 00d7 73686F72 		.ascii	"short int\000"
 3708      7420696E 
 3708      7400
 3709              	.LASF106:
 3710 00e1 4379446D 		.ascii	"CyDmaTdSetConfiguration\000"
 3710      61546453 
 3710      6574436F 
 3710      6E666967 
 3710      75726174 
 3711              	.LASF71:
 3712 00f9 66616E4E 		.ascii	"fanNumber\000"
 3712      756D6265 
 3712      7200
 3713              	.LASF115:
 3714 0103 433A5C55 		.ascii	"C:\\Users\\Ade0n\\Desktop\\PR\\CyberPong\\CyberPong"
 3714      73657273 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 99


 3714      5C416465 
 3714      306E5C44 
 3714      65736B74 
 3715 0130 2E637964 		.ascii	".cydsn\\CyberPongRemastered.cydsn\000"
 3715      736E5C43 
 3715      79626572 
 3715      506F6E67 
 3715      52656D61 
 3716              	.LASF25:
 3717 0151 72706D41 		.ascii	"rpmA\000"
 3717      00
 3718              	.LASF26:
 3719 0156 72706D42 		.ascii	"rpmB\000"
 3719      00
 3720              	.LASF38:
 3721 015b 62757273 		.ascii	"burstCount\000"
 3721      74436F75 
 3721      6E7400
 3722              	.LASF63:
 3723 0166 73706565 		.ascii	"speedStatus\000"
 3723      64537461 
 3723      74757300 
 3724              	.LASF43:
 3725 0172 46616E43 		.ascii	"FanController_SetupDMA\000"
 3725      6F6E7472 
 3725      6F6C6C65 
 3725      725F5365 
 3725      74757044 
 3726              	.LASF73:
 3727 0189 63757272 		.ascii	"currentSpeed\000"
 3727      656E7453 
 3727      70656564 
 3727      00
 3728              	.LASF70:
 3729 0196 46616E43 		.ascii	"FanController_SetDesiredSpeed\000"
 3729      6F6E7472 
 3729      6F6C6C65 
 3729      725F5365 
 3729      74446573 
 3730              	.LASF55:
 3731 01b4 46616E43 		.ascii	"FanController_SetAlertMask\000"
 3731      6F6E7472 
 3731      6F6C6C65 
 3731      725F5365 
 3731      74416C65 
 3732              	.LASF40:
 3733 01cf 75707065 		.ascii	"upperSrcAddress\000"
 3733      72537263 
 3733      41646472 
 3733      65737300 
 3734              	.LASF108:
 3735 01df 4379446D 		.ascii	"CyDmaChSetInitialTd\000"
 3735      61436853 
 3735      6574496E 
 3735      69746961 
 3735      6C546400 
 3736              	.LASF10:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 100


 3737 01f3 75696E74 		.ascii	"uint16\000"
 3737      313600
 3738              	.LASF89:
 3739 01fa 46616E43 		.ascii	"FanController_fanPwmInitRegs\000"
 3739      6F6E7472 
 3739      6F6C6C65 
 3739      725F6661 
 3739      6E50776D 
 3740              	.LASF28:
 3741 0217 64757479 		.ascii	"dutyB\000"
 3741      4200
 3742              	.LASF12:
 3743 021d 696E7431 		.ascii	"int16\000"
 3743      3600
 3744              	.LASF116:
 3745 0223 46616E43 		.ascii	"FanController_TachOutDMA_DmaInitialize\000"
 3745      6F6E7472 
 3745      6F6C6C65 
 3745      725F5461 
 3745      63684F75 
 3746              	.LASF9:
 3747 024a 75696E74 		.ascii	"uint8\000"
 3747      3800
 3748              	.LASF84:
 3749 0250 46616E43 		.ascii	"FanController_SetPID\000"
 3749      6F6E7472 
 3749      6F6C6C65 
 3749      725F5365 
 3749      74504944 
 3750              	.LASF57:
 3751 0265 46616E43 		.ascii	"FanController_GetAlertMode\000"
 3751      6F6E7472 
 3751      6F6C6C65 
 3751      725F4765 
 3751      74416C65 
 3752              	.LASF56:
 3753 0280 616C6572 		.ascii	"alertMask\000"
 3753      744D6173 
 3753      6B00
 3754              	.LASF104:
 3755 028a 4379446D 		.ascii	"CyDmaChPriority\000"
 3755      61436850 
 3755      72696F72 
 3755      69747900 
 3756              	.LASF14:
 3757 029a 666C6F61 		.ascii	"float\000"
 3757      7400
 3758              	.LASF42:
 3759 02a0 46616E43 		.ascii	"FanController_TachOutDMA_DmaRelease\000"
 3759      6F6E7472 
 3759      6F6C6C65 
 3759      725F5461 
 3759      63684F75 
 3760              	.LASF39:
 3761 02c4 72657175 		.ascii	"requestPerBurst\000"
 3761      65737450 
 3761      65724275 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 101


 3761      72737400 
 3762              	.LASF8:
 3763 02d4 6C6F6E67 		.ascii	"long long int\000"
 3763      206C6F6E 
 3763      6720696E 
 3763      7400
 3764              	.LASF35:
 3765 02e2 70776D50 		.ascii	"pwmPeriodReg\000"
 3765      6572696F 
 3765      64526567 
 3765      00
 3766              	.LASF77:
 3767 02ef 46616E43 		.ascii	"FanController_GetActualSpeed\000"
 3767      6F6E7472 
 3767      6F6C6C65 
 3767      725F4765 
 3767      74416374 
 3768              	.LASF78:
 3769 030c 61637475 		.ascii	"actualSpeed\000"
 3769      616C5370 
 3769      65656400 
 3770              	.LASF6:
 3771 0318 6C6F6E67 		.ascii	"long int\000"
 3771      20696E74 
 3771      00
 3772              	.LASF92:
 3773 0321 46616E43 		.ascii	"FanController_desiredFansSpeed\000"
 3773      6F6E7472 
 3773      6F6C6C65 
 3773      725F6465 
 3773      73697265 
 3774              	.LASF7:
 3775 0340 6C6F6E67 		.ascii	"long unsigned int\000"
 3775      20756E73 
 3775      69676E65 
 3775      6420696E 
 3775      7400
 3776              	.LASF41:
 3777 0352 75707065 		.ascii	"upperDestAddress\000"
 3777      72446573 
 3777      74416464 
 3777      72657373 
 3777      00
 3778              	.LASF24:
 3779 0363 46616E43 		.ascii	"FanController_fanControlStruct\000"
 3779      6F6E7472 
 3779      6F6C6C65 
 3779      725F6661 
 3779      6E436F6E 
 3780              	.LASF72:
 3781 0382 6F766572 		.ascii	"overrideDuty\000"
 3781      72696465 
 3781      44757479 
 3781      00
 3782              	.LASF58:
 3783 038f 46616E43 		.ascii	"FanController_GetAlertSource\000"
 3783      6F6E7472 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 102


 3783      6F6C6C65 
 3783      725F4765 
 3783      74416C65 
 3784              	.LASF31:
 3785 03ac 696E6974 		.ascii	"initDuty\000"
 3785      44757479 
 3785      00
 3786              	.LASF30:
 3787 03b5 696E6974 		.ascii	"initRpm\000"
 3787      52706D00 
 3788              	.LASF75:
 3789 03bd 46616E43 		.ascii	"FanController_Start\000"
 3789      6F6E7472 
 3789      6F6C6C65 
 3789      725F5374 
 3789      61727400 
 3790              	.LASF19:
 3791 03d1 6C6F6E67 		.ascii	"long double\000"
 3791      20646F75 
 3791      626C6500 
 3792              	.LASF98:
 3793 03dd 46616E43 		.ascii	"FanController_speedStatus\000"
 3793      6F6E7472 
 3793      6F6C6C65 
 3793      725F7370 
 3793      65656453 
 3794              	.LASF3:
 3795 03f7 756E7369 		.ascii	"unsigned char\000"
 3795      676E6564 
 3795      20636861 
 3795      7200
 3796              	.LASF52:
 3797 0405 46616E43 		.ascii	"FanController_Stop\000"
 3797      6F6E7472 
 3797      6F6C6C65 
 3797      725F5374 
 3797      6F7000
 3798              	.LASF102:
 3799 0418 4379446D 		.ascii	"CyDmaChSetConfiguration\000"
 3799      61436853 
 3799      6574436F 
 3799      6E666967 
 3799      75726174 
 3800              	.LASF2:
 3801 0430 7369676E 		.ascii	"signed char\000"
 3801      65642063 
 3801      68617200 
 3802              	.LASF22:
 3803 043c 73657441 		.ascii	"setActualPeriodTD\000"
 3803      63747561 
 3803      6C506572 
 3803      696F6454 
 3803      4400
 3804              	.LASF0:
 3805 044e 6C6F6E67 		.ascii	"long long unsigned int\000"
 3805      206C6F6E 
 3805      6720756E 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 103


 3805      7369676E 
 3805      65642069 
 3806              	.LASF37:
 3807 0465 46616E43 		.ascii	"FanController_fanPwmInitRegsStruct\000"
 3807      6F6E7472 
 3807      6F6C6C65 
 3807      725F6661 
 3807      6E50776D 
 3808              	.LASF21:
 3809 0488 46616E43 		.ascii	"FanController_fanTdOutStruct\000"
 3809      6F6E7472 
 3809      6F6C6C65 
 3809      725F6661 
 3809      6E54644F 
 3810              	.LASF1:
 3811 04a5 756E7369 		.ascii	"unsigned int\000"
 3811      676E6564 
 3811      20696E74 
 3811      00
 3812              	.LASF107:
 3813 04b2 4379446D 		.ascii	"CyDmaTdSetAddress\000"
 3813      61546453 
 3813      65744164 
 3813      64726573 
 3813      7300
 3814              	.LASF53:
 3815 04c4 46616E43 		.ascii	"FanController_SetAlertMode\000"
 3815      6F6E7472 
 3815      6F6C6C65 
 3815      725F5365 
 3815      74416C65 
 3816              	.LASF27:
 3817 04df 64757479 		.ascii	"dutyA\000"
 3817      4100
 3818              	.LASF101:
 3819 04e5 4379446D 		.ascii	"CyDmaChDisable\000"
 3819      61436844 
 3819      69736162 
 3819      6C6500
 3820              	.LASF36:
 3821 04f4 70776D41 		.ascii	"pwmAuxControlReg\000"
 3821      7578436F 
 3821      6E74726F 
 3821      6C526567 
 3821      00
 3822              	.LASF94:
 3823 0505 46616E43 		.ascii	"FanController_pidA2\000"
 3823      6F6E7472 
 3823      6F6C6C65 
 3823      725F7069 
 3823      64413200 
 3824              	.LASF29:
 3825 0519 64757479 		.ascii	"dutyRpmSlope\000"
 3825      52706D53 
 3825      6C6F7065 
 3825      00
 3826              	.LASF5:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 104


 3827 0526 73686F72 		.ascii	"short unsigned int\000"
 3827      7420756E 
 3827      7369676E 
 3827      65642069 
 3827      6E7400
 3828              	.LASF76:
 3829 0539 46616E43 		.ascii	"FanController_GetDesiredSpeed\000"
 3829      6F6E7472 
 3829      6F6C6C65 
 3829      725F4765 
 3829      74446573 
 3830              	.LASF103:
 3831 0557 4379446D 		.ascii	"CyDmaChSetExtendedAddress\000"
 3831      61436853 
 3831      65744578 
 3831      74656E64 
 3831      65644164 
 3832              	.LASF90:
 3833 0571 46616E43 		.ascii	"FanController_initVar\000"
 3833      6F6E7472 
 3833      6F6C6C65 
 3833      725F696E 
 3833      69745661 
 3834              	.LASF54:
 3835 0587 616C6572 		.ascii	"alertMode\000"
 3835      744D6F64 
 3835      6500
 3836              	.LASF16:
 3837 0591 63686172 		.ascii	"char\000"
 3837      00
 3838              	.LASF66:
 3839 0596 64757479 		.ascii	"dutyCycle\000"
 3839      4379636C 
 3839      6500
 3840              	.LASF60:
 3841 05a0 46616E43 		.ascii	"FanController_GetFanStallStatus\000"
 3841      6F6E7472 
 3841      6F6C6C65 
 3841      725F4765 
 3841      7446616E 
 3842              	.LASF109:
 3843 05c0 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3843      74657243 
 3843      72697469 
 3843      63616C53 
 3843      65637469 
 3844              	.LASF83:
 3845 05d7 746D704F 		.ascii	"tmpOutH\000"
 3845      75744800 
 3846              	.LASF100:
 3847 05df 46616E43 		.ascii	"FanController_fanProperties\000"
 3847      6F6E7472 
 3847      6F6C6C65 
 3847      725F6661 
 3847      6E50726F 
 3848              	.LASF82:
 3849 05fb 746D704F 		.ascii	"tmpOutL\000"
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 105


 3849      75744C00 
 3850              	.LASF48:
 3851 0603 696E7465 		.ascii	"interruptState\000"
 3851      72727570 
 3851      74537461 
 3851      746500
 3852              	.LASF11:
 3853 0612 75696E74 		.ascii	"uint32\000"
 3853      333200
 3854              	.LASF17:
 3855 0619 72656738 		.ascii	"reg8\000"
 3855      00
 3856              	.LASF91:
 3857 061e 46616E43 		.ascii	"FanController_fanControl\000"
 3857      6F6E7472 
 3857      6F6C6C65 
 3857      725F6661 
 3857      6E436F6E 
 3858              	.LASF13:
 3859 0637 696E7433 		.ascii	"int32\000"
 3859      3200
 3860              	.LASF15:
 3861 063d 646F7562 		.ascii	"double\000"
 3861      6C6500
 3862              	.LASF114:
 3863 0644 47656E65 		.ascii	"Generated_Source\\PSoC5\\FanController.c\000"
 3863      72617465 
 3863      645F536F 
 3863      75726365 
 3863      5C50536F 
 3864              	.LASF86:
 3865 066b 746D7041 		.ascii	"tmpA2\000"
 3865      3200
 3866              	.LASF74:
 3867 0671 46616E43 		.ascii	"FanController_Init\000"
 3867      6F6E7472 
 3867      6F6C6C65 
 3867      725F496E 
 3867      697400
 3868              	.LASF59:
 3869 0684 46616E43 		.ascii	"FanController_GetAlertMask\000"
 3869      6F6E7472 
 3869      6F6C6C65 
 3869      725F4765 
 3869      74416C65 
 3870              	.LASF88:
 3871 069f 46616E43 		.ascii	"FanController_TachOutDMA_channel\000"
 3871      6F6E7472 
 3871      6F6C6C65 
 3871      725F5461 
 3871      63684F75 
 3872              	.LASF69:
 3873 06c0 64757943 		.ascii	"duyCycle\000"
 3873      79636C65 
 3873      00
 3874              	.LASF34:
 3875 06c9 46616E43 		.ascii	"FanController_fanDriverRegsStruct\000"
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 106


 3875      6F6E7472 
 3875      6F6C6C65 
 3875      725F6661 
 3875      6E447269 
 3876              	.LASF99:
 3877 06eb 46616E43 		.ascii	"FanController_fanDriverRegs\000"
 3877      6F6E7472 
 3877      6F6C6C65 
 3877      725F6661 
 3877      6E447269 
 3878              	.LASF61:
 3879 0707 7374616C 		.ascii	"stallStatus\000"
 3879      6C537461 
 3879      74757300 
 3880              	.LASF47:
 3881 0713 46616E43 		.ascii	"FanController_fanOutTds\000"
 3881      6F6E7472 
 3881      6F6C6C65 
 3881      725F6661 
 3881      6E4F7574 
 3882              	.LASF20:
 3883 072b 73697A65 		.ascii	"sizetype\000"
 3883      74797065 
 3883      00
 3884              	.LASF65:
 3885 0734 66616E4F 		.ascii	"fanOrBankNumber\000"
 3885      7242616E 
 3885      6B4E756D 
 3885      62657200 
 3886              	.LASF50:
 3887 0744 46616E43 		.ascii	"FanController_EnableAlert\000"
 3887      6F6E7472 
 3887      6F6C6C65 
 3887      725F456E 
 3887      61626C65 
 3888              	.LASF33:
 3889 075e 70776D53 		.ascii	"pwmSetDutyReg\000"
 3889      65744475 
 3889      74795265 
 3889      6700
 3890              	.LASF67:
 3891 076c 6E657743 		.ascii	"newCompare\000"
 3891      6F6D7061 
 3891      726500
 3892              	.LASF110:
 3893 0777 4379446D 		.ascii	"CyDmaChEnable\000"
 3893      61436845 
 3893      6E61626C 
 3893      6500
 3894              	.LASF113:
 3895 0785 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3895      43313120 
 3895      352E342E 
 3895      31203230 
 3895      31363036 
 3896 07b8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3896      20726576 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 107


 3896      6973696F 
 3896      6E203233 
 3896      37373135 
 3897 07eb 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3897      66756E63 
 3897      74696F6E 
 3897      2D736563 
 3897      74696F6E 
 3898              	.LASF79:
 3899 0813 46616E43 		.ascii	"FanController_SetSaturation\000"
 3899      6F6E7472 
 3899      6F6C6C65 
 3899      725F5365 
 3899      74536174 
 3900              	.LASF62:
 3901 082f 46616E43 		.ascii	"FanController_GetFanSpeedStatus\000"
 3901      6F6E7472 
 3901      6F6C6C65 
 3901      725F4765 
 3901      7446616E 
 3902              	.LASF112:
 3903 084f 46616E43 		.ascii	"FanController_PID_ISR_StartEx\000"
 3903      6F6E7472 
 3903      6F6C6C65 
 3903      725F5049 
 3903      445F4953 
 3904              	.LASF51:
 3905 086d 46616E43 		.ascii	"FanController_DisableAlert\000"
 3905      6F6E7472 
 3905      6F6C6C65 
 3905      725F4469 
 3905      7361626C 
 3906              	.LASF97:
 3907 0888 46616E43 		.ascii	"FanController_outputSatH\000"
 3907      6F6E7472 
 3907      6F6C6C65 
 3907      725F6F75 
 3907      74707574 
 3908              	.LASF68:
 3909 08a1 46616E43 		.ascii	"FanController_GetDutyCycle\000"
 3909      6F6E7472 
 3909      6F6C6C65 
 3909      725F4765 
 3909      74447574 
 3910              	.LASF96:
 3911 08bc 46616E43 		.ascii	"FanController_outputSatL\000"
 3911      6F6E7472 
 3911      6F6C6C65 
 3911      725F6F75 
 3911      74707574 
 3912              	.LASF49:
 3913 08d5 46616E43 		.ascii	"FanController_Enable\000"
 3913      6F6E7472 
 3913      6F6C6C65 
 3913      725F456E 
 3913      61626C65 
 3914              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccVB4TUz.s 			page 108


