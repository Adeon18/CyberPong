ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CySysClkImoStart,"ax",%progbits
  20              		.align	2
  21              		.global	CySysClkImoStart
  22              		.code	16
  23              		.thumb_func
  24              		.type	CySysClkImoStart, %function
  25              	CySysClkImoStart:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 6.0
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2020, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 2


  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  75:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_6_REV            (6u)
  76:Generated_Source\PSoC4/CyLib.c ****     #define CY_CRI_TESTPGM_9_REV            (9u)
  77:Generated_Source\PSoC4/CyLib.c ****     #define CYSFLASH_CRI_testpgm_rev_MASK   (0x0000003Fu)
  78:Generated_Source\PSoC4/CyLib.c **** 
  79:Generated_Source\PSoC4/CyLib.c ****     /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  80:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  81:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  82:Generated_Source\PSoC4/CyLib.c **** 
  83:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void);
  84:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void);
  85:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  86:Generated_Source\PSoC4/CyLib.c **** 
  87:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 3


  88:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  89:Generated_Source\PSoC4/CyLib.c **** 
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  92:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  93:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  94:Generated_Source\PSoC4/CyLib.c **** *
  95:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4500 / PSoC Analog
  98:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in
  99:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
 100:Generated_Source\PSoC4/CyLib.c **** *
 101:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
 102:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 105:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 106:Generated_Source\PSoC4/CyLib.c **** {
  28              		.loc 1 106 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 107:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  33              		.loc 1 107 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 1368     		ldr	r3, [r2]
  36 0004 8021     		movs	r1, #128
  37 0006 0906     		lsls	r1, r1, #24
  38 0008 0B43     		orrs	r3, r1
  39 000a 1360     		str	r3, [r2]
 108:Generated_Source\PSoC4/CyLib.c **** 
 109:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 110:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 111:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 112:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 113:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c **** 
 116:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 117:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 118:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 119:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 120:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 121:Generated_Source\PSoC4/CyLib.c **** 
 122:Generated_Source\PSoC4/CyLib.c **** }
  40              		.loc 1 122 0
  41              		@ sp needed
  42 000c 7047     		bx	lr
  43              	.L3:
  44 000e C046     		.align	2
  45              	.L2:
  46 0010 08010B40 		.word	1074462984
  47              		.cfi_endproc
  48              	.LFE2:
  49              		.size	CySysClkImoStart, .-CySysClkImoStart
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 4


  50              		.section	.text.CySysClkImoStop,"ax",%progbits
  51              		.align	2
  52              		.global	CySysClkImoStop
  53              		.code	16
  54              		.thumb_func
  55              		.type	CySysClkImoStop, %function
  56              	CySysClkImoStop:
  57              	.LFB3:
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** 
 125:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 126:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 127:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 128:Generated_Source\PSoC4/CyLib.c **** *
 129:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S /
 132:Generated_Source\PSoC4/CyLib.c **** * PSoC 4500 / PSoC Analog Coprocessor devices, this function will also
 133:Generated_Source\PSoC4/CyLib.c **** * disable WCO lock.
 134:Generated_Source\PSoC4/CyLib.c **** *
 135:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 138:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 139:Generated_Source\PSoC4/CyLib.c **** {
  58              		.loc 1 139 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              		@ link register save eliminated.
 140:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 141:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 142:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 143:Generated_Source\PSoC4/CyLib.c **** 
 144:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 145:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 146:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 147:Generated_Source\PSoC4/CyLib.c **** 
 148:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  63              		.loc 1 148 0
  64 0000 024A     		ldr	r2, .L5
  65 0002 1368     		ldr	r3, [r2]
  66 0004 5B00     		lsls	r3, r3, #1
  67 0006 5B08     		lsrs	r3, r3, #1
  68 0008 1360     		str	r3, [r2]
 149:Generated_Source\PSoC4/CyLib.c **** }
  69              		.loc 1 149 0
  70              		@ sp needed
  71 000a 7047     		bx	lr
  72              	.L6:
  73              		.align	2
  74              	.L5:
  75 000c 08010B40 		.word	1074462984
  76              		.cfi_endproc
  77              	.LFE3:
  78              		.size	CySysClkImoStop, .-CySysClkImoStop
  79              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 5


  80              		.align	2
  81              		.global	CySysClkWriteHfclkDirect
  82              		.code	16
  83              		.thumb_func
  84              		.type	CySysClkWriteHfclkDirect, %function
  85              	CySysClkWriteHfclkDirect:
  86              	.LFB4:
 150:Generated_Source\PSoC4/CyLib.c **** 
 151:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 152:Generated_Source\PSoC4/CyLib.c **** 
 153:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 154:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 155:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 156:Generated_Source\PSoC4/CyLib.c ****     *
 157:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 158:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 159:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 160:Generated_Source\PSoC4/CyLib.c ****     *
 161:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 162:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 163:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 164:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 165:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 166:Generated_Source\PSoC4/CyLib.c ****     *
 167:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 168:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 169:Generated_Source\PSoC4/CyLib.c ****     *
 170:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 171:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 172:Generated_Source\PSoC4/CyLib.c ****     *
 173:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 174:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 175:Generated_Source\PSoC4/CyLib.c ****     {
 176:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 177:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 178:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 179:Generated_Source\PSoC4/CyLib.c **** 
 180:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 181:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 182:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 184:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 185:Generated_Source\PSoC4/CyLib.c **** 
 186:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 187:Generated_Source\PSoC4/CyLib.c ****         {
 188:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 189:Generated_Source\PSoC4/CyLib.c **** 
 190:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 191:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 192:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 193:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 194:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 195:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 196:Generated_Source\PSoC4/CyLib.c **** 
 197:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 198:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 199:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 6


 200:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 201:Generated_Source\PSoC4/CyLib.c ****                 {
 202:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 203:Generated_Source\PSoC4/CyLib.c ****                     {
 204:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 205:Generated_Source\PSoC4/CyLib.c ****                         break;
 206:Generated_Source\PSoC4/CyLib.c ****                     }
 207:Generated_Source\PSoC4/CyLib.c ****                 }
 208:Generated_Source\PSoC4/CyLib.c ****             #else
 209:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 210:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 211:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 212:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 213:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 214:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 215:Generated_Source\PSoC4/CyLib.c ****                 #else
 216:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 217:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 218:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 219:Generated_Source\PSoC4/CyLib.c **** 
 220:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 221:Generated_Source\PSoC4/CyLib.c **** 
 222:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = 0;
 223:Generated_Source\PSoC4/CyLib.c **** 
 224:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 225:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 226:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 227:Generated_Source\PSoC4/CyLib.c ****                 {
 228:Generated_Source\PSoC4/CyLib.c ****                      CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IM
 229:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 230:Generated_Source\PSoC4/CyLib.c ****                 }
 231:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 236:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 237:Generated_Source\PSoC4/CyLib.c **** 
 238:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 239:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 240:Generated_Source\PSoC4/CyLib.c **** 
 241:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 243:Generated_Source\PSoC4/CyLib.c **** 
 244:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 245:Generated_Source\PSoC4/CyLib.c **** 
 246:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 247:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 248:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 249:Generated_Source\PSoC4/CyLib.c **** 
 250:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 251:Generated_Source\PSoC4/CyLib.c **** 
 252:Generated_Source\PSoC4/CyLib.c ****             while (lfLimit < (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX - CY_SYS_CLK_WCO_CONFIG_DPLL_
 253:Generated_Source\PSoC4/CyLib.c ****             {
 254:Generated_Source\PSoC4/CyLib.c ****                 CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 255:Generated_Source\PSoC4/CyLib.c ****                 lfLimit += CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_STEP;
 256:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 7


 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
 259:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_DPLL_TIMEOUT_MS);
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = (regTmp | (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX <<
 261:Generated_Source\PSoC4/CyLib.c ****                                                  CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT));
 262:Generated_Source\PSoC4/CyLib.c **** 
 263:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 264:Generated_Source\PSoC4/CyLib.c **** 
 265:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 266:Generated_Source\PSoC4/CyLib.c ****         }
 267:Generated_Source\PSoC4/CyLib.c ****     }
 268:Generated_Source\PSoC4/CyLib.c **** 
 269:Generated_Source\PSoC4/CyLib.c **** 
 270:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 271:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 272:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 273:Generated_Source\PSoC4/CyLib.c ****     *
 274:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 277:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 278:Generated_Source\PSoC4/CyLib.c ****     *
 279:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 280:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 281:Generated_Source\PSoC4/CyLib.c ****     *
 282:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 283:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 284:Generated_Source\PSoC4/CyLib.c ****     {
 285:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 286:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 287:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 288:Generated_Source\PSoC4/CyLib.c **** 
 289:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 292:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 293:Generated_Source\PSoC4/CyLib.c ****             freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 294:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 295:Generated_Source\PSoC4/CyLib.c ****             {
 296:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 297:Generated_Source\PSoC4/CyLib.c ****                 {
 298:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 299:Generated_Source\PSoC4/CyLib.c ****                     break;
 300:Generated_Source\PSoC4/CyLib.c ****                 }
 301:Generated_Source\PSoC4/CyLib.c ****             }
 302:Generated_Source\PSoC4/CyLib.c ****         #else
 303:Generated_Source\PSoC4/CyLib.c ****             /* Calculate frequency by shifting register field value and adding constant. */
 304:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSLT)
 305:Generated_Source\PSoC4/CyLib.c ****                 freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FRE
 306:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ
 307:Generated_Source\PSoC4/CyLib.c ****                                   ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT) &
 308:Generated_Source\PSoC4/CyLib.c ****                                    (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 309:Generated_Source\PSoC4/CyLib.c ****             #else
 310:Generated_Source\PSoC4/CyLib.c ****                 freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_FREQ
 311:Generated_Source\PSoC4/CyLib.c ****                                    CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 312:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSLT) */
 313:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 8


 314:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 315:Generated_Source\PSoC4/CyLib.c **** 
 316:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 317:Generated_Source\PSoC4/CyLib.c **** 
 318:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSLT)
 319:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 320:Generated_Source\PSoC4/CyLib.c ****         #else
 321:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 322:Generated_Source\PSoC4/CyLib.c ****         #endif
 323:Generated_Source\PSoC4/CyLib.c ****     }
 324:Generated_Source\PSoC4/CyLib.c **** 
 325:Generated_Source\PSoC4/CyLib.c **** 
 326:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 327:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 328:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 331:Generated_Source\PSoC4/CyLib.c ****     *
 332:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 333:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4500 / PSoC Analog Coprocessor / PSoC 4200L.
 334:Generated_Source\PSoC4/CyLib.c ****     *
 335:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 336:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 337:Generated_Source\PSoC4/CyLib.c ****     *
 338:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 339:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 340:Generated_Source\PSoC4/CyLib.c ****     {
 341:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 342:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 343:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 344:Generated_Source\PSoC4/CyLib.c ****     }
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 347:Generated_Source\PSoC4/CyLib.c **** 
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 350:Generated_Source\PSoC4/CyLib.c **** 
 351:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 352:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 353:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/CyLib.c ****     *
 355:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 356:Generated_Source\PSoC4/CyLib.c ****     *
 357:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 360:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 363:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 364:Generated_Source\PSoC4/CyLib.c ****     *
 365:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 366:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 367:Generated_Source\PSoC4/CyLib.c ****     {
 368:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 369:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 370:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 9


 371:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 372:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 375:Generated_Source\PSoC4/CyLib.c **** 
 376:Generated_Source\PSoC4/CyLib.c ****             /* Save trims to restore in CySysClkImoDisableUsbLock() */
 377:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 378:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 379:Generated_Source\PSoC4/CyLib.c **** 
 380:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetImoTrims();
 381:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoSetPwrBgTrim5();
 382:Generated_Source\PSoC4/CyLib.c **** 
 383:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 384:Generated_Source\PSoC4/CyLib.c **** 
 385:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 386:Generated_Source\PSoC4/CyLib.c ****     }
 387:Generated_Source\PSoC4/CyLib.c **** 
 388:Generated_Source\PSoC4/CyLib.c **** 
 389:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 390:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 391:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 392:Generated_Source\PSoC4/CyLib.c ****     *
 393:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 394:Generated_Source\PSoC4/CyLib.c ****     *
 395:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 396:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 397:Generated_Source\PSoC4/CyLib.c ****     *
 398:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 399:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 400:Generated_Source\PSoC4/CyLib.c ****     *
 401:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 402:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 403:Generated_Source\PSoC4/CyLib.c ****     {
 404:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 405:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 406:Generated_Source\PSoC4/CyLib.c **** 
 407:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 408:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 409:Generated_Source\PSoC4/CyLib.c **** 
 410:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 411:Generated_Source\PSoC4/CyLib.c ****             {
 412:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 413:Generated_Source\PSoC4/CyLib.c ****                 {
 414:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 415:Generated_Source\PSoC4/CyLib.c ****                     break;
 416:Generated_Source\PSoC4/CyLib.c ****                 }
 417:Generated_Source\PSoC4/CyLib.c ****             }
 418:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 419:Generated_Source\PSoC4/CyLib.c **** 
 420:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 421:Generated_Source\PSoC4/CyLib.c **** 
 422:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 423:Generated_Source\PSoC4/CyLib.c ****             /* Restore IMO trim registers saved by CySysClkImoEnableUsbLock() */
 424:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 425:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 426:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 427:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 10


 428:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 429:Generated_Source\PSoC4/CyLib.c **** 
 430:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 431:Generated_Source\PSoC4/CyLib.c ****     }
 432:Generated_Source\PSoC4/CyLib.c **** 
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 435:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 436:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 437:Generated_Source\PSoC4/CyLib.c ****     *
 438:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 439:Generated_Source\PSoC4/CyLib.c ****     *
 440:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 441:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 442:Generated_Source\PSoC4/CyLib.c ****     *
 443:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 444:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 445:Generated_Source\PSoC4/CyLib.c ****     *
 446:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 447:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 448:Generated_Source\PSoC4/CyLib.c ****     {
 449:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 450:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 451:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 452:Generated_Source\PSoC4/CyLib.c ****     }
 453:Generated_Source\PSoC4/CyLib.c **** 
 454:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2)
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 457:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetPwrBgTrim5
 458:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 459:Generated_Source\PSoC4/CyLib.c ****     *
 460:Generated_Source\PSoC4/CyLib.c ****     * Updates Bandgap trim register based on the test program revision.
 461:Generated_Source\PSoC4/CyLib.c ****     *
 462:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 463:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetPwrBgTrim5(void)
 464:Generated_Source\PSoC4/CyLib.c ****     {
 465:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 466:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 467:Generated_Source\PSoC4/CyLib.c ****                             CYSFLASH_CRI_testpgm_rev_MASK);
 468:Generated_Source\PSoC4/CyLib.c **** 
 469:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_9_REV)
 470:Generated_Source\PSoC4/CyLib.c ****         {
 471:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_IMO_TMPCO0_REG;
 472:Generated_Source\PSoC4/CyLib.c ****         }
 473:Generated_Source\PSoC4/CyLib.c ****         else
 474:Generated_Source\PSoC4/CyLib.c ****         {
 475:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
 476:Generated_Source\PSoC4/CyLib.c ****         }
 477:Generated_Source\PSoC4/CyLib.c ****     }
 478:Generated_Source\PSoC4/CyLib.c **** 
 479:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 480:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoSetImoTrims
 481:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 482:Generated_Source\PSoC4/CyLib.c ****     *
 483:Generated_Source\PSoC4/CyLib.c ****     * Updates IMO trim registers based on the IMO frequency and test program
 484:Generated_Source\PSoC4/CyLib.c ****     * revision.
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 11


 485:Generated_Source\PSoC4/CyLib.c ****     *
 486:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 487:Generated_Source\PSoC4/CyLib.c ****     static void CySysClkImoSetImoTrims(void)
 488:Generated_Source\PSoC4/CyLib.c ****     {
 489:Generated_Source\PSoC4/CyLib.c ****         uint32 i;
 490:Generated_Source\PSoC4/CyLib.c **** 
 491:Generated_Source\PSoC4/CyLib.c ****         /* Get current IMO frequency based on the register value */
 492:Generated_Source\PSoC4/CyLib.c ****         uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 493:Generated_Source\PSoC4/CyLib.c **** 
 494:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 495:Generated_Source\PSoC4/CyLib.c ****         {
 496:Generated_Source\PSoC4/CyLib.c ****             if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreqMhz2
 497:Generated_Source\PSoC4/CyLib.c ****             {
 498:Generated_Source\PSoC4/CyLib.c ****                 freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 499:Generated_Source\PSoC4/CyLib.c ****                 break;
 500:Generated_Source\PSoC4/CyLib.c ****             }
 501:Generated_Source\PSoC4/CyLib.c ****         }
 502:Generated_Source\PSoC4/CyLib.c **** 
 503:Generated_Source\PSoC4/CyLib.c ****         /* Get sort test revision number */
 504:Generated_Source\PSoC4/CyLib.c ****         uint32  testRev = ((CY_SFLASH_CRI_TESTPGM_REV_REG >> CYSFLASH_CRI_testpgm_rev__OFFSET) &
 505:Generated_Source\PSoC4/CyLib.c ****             CYSFLASH_CRI_testpgm_rev_MASK);
 506:Generated_Source\PSoC4/CyLib.c **** 
 507:Generated_Source\PSoC4/CyLib.c ****         if(testRev <= CY_CRI_TESTPGM_6_REV)
 508:Generated_Source\PSoC4/CyLib.c ****         {
 509:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 510:Generated_Source\PSoC4/CyLib.c ****             {
 511:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 512:Generated_Source\PSoC4/CyLib.c ****             }
 513:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 514:Generated_Source\PSoC4/CyLib.c ****             {
 515:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 516:Generated_Source\PSoC4/CyLib.c ****             }
 517:Generated_Source\PSoC4/CyLib.c ****             else
 518:Generated_Source\PSoC4/CyLib.c ****             {
 519:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 520:Generated_Source\PSoC4/CyLib.c ****             }
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
 523:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 524:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 525:Generated_Source\PSoC4/CyLib.c ****         }
 526:Generated_Source\PSoC4/CyLib.c ****         else
 527:Generated_Source\PSoC4/CyLib.c ****         {
 528:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 529:Generated_Source\PSoC4/CyLib.c ****             {
 530:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG;
 531:Generated_Source\PSoC4/CyLib.c ****             }
 532:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 533:Generated_Source\PSoC4/CyLib.c ****             {
 534:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG;
 535:Generated_Source\PSoC4/CyLib.c ****             }
 536:Generated_Source\PSoC4/CyLib.c ****             else
 537:Generated_Source\PSoC4/CyLib.c ****             {
 538:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 539:Generated_Source\PSoC4/CyLib.c ****             }
 540:Generated_Source\PSoC4/CyLib.c **** 
 541:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO Gain in IMO Trim Register 4 */
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 12


 542:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 543:Generated_Source\PSoC4/CyLib.c ****                                         CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 544:Generated_Source\PSoC4/CyLib.c ****         }
 545:Generated_Source\PSoC4/CyLib.c ****     }
 546:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSV2) */
 547:Generated_Source\PSoC4/CyLib.c **** 
 548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 549:Generated_Source\PSoC4/CyLib.c **** 
 550:Generated_Source\PSoC4/CyLib.c **** 
 551:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 552:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 553:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 554:Generated_Source\PSoC4/CyLib.c **** *
 555:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 556:Generated_Source\PSoC4/CyLib.c **** *
 557:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 558:Generated_Source\PSoC4/CyLib.c **** *
 559:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 560:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 561:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 562:Generated_Source\PSoC4/CyLib.c **** *
 563:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 564:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 565:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 566:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 567:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 568:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 569:Generated_Source\PSoC4/CyLib.c **** *
 570:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 571:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 572:Generated_Source\PSoC4/CyLib.c **** *
 573:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 574:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 575:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 576:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 577:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 578:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with ECO.
 579:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 580:Generated_Source\PSoC4/CyLib.c **** *                          4100S / 4500 with PLL.
 581:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 582:Generated_Source\PSoC4/CyLib.c **** *
 583:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 584:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 585:Generated_Source\PSoC4/CyLib.c **** {
  87              		.loc 1 585 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              	.LVL0:
  92 0000 10B5     		push	{r4, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 4, -8
  95              		.cfi_offset 14, -4
  96 0002 0400     		movs	r4, r0
 586:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 587:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 588:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 13


 589:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 590:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 591:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 592:Generated_Source\PSoC4/CyLib.c **** 
 593:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  97              		.loc 1 593 0
  98 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  99              	.LVL1:
 594:Generated_Source\PSoC4/CyLib.c **** 
 595:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 596:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 597:Generated_Source\PSoC4/CyLib.c ****     {
 598:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 599:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 600:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;
 601:Generated_Source\PSoC4/CyLib.c **** 
 602:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */
 603:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 604:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 605:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 606:Generated_Source\PSoC4/CyLib.c **** 
 607:Generated_Source\PSoC4/CyLib.c ****         /* Check if ECO is enabled and running */
 608:Generated_Source\PSoC4/CyLib.c ****         if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
 609:Generated_Source\PSoC4/CyLib.c ****             (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
 610:Generated_Source\PSoC4/CyLib.c ****         {
 611:Generated_Source\PSoC4/CyLib.c ****             /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 612:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 613:Generated_Source\PSoC4/CyLib.c **** 
 614:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 615:Generated_Source\PSoC4/CyLib.c ****             {
 616:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 617:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 618:Generated_Source\PSoC4/CyLib.c ****             }
 619:Generated_Source\PSoC4/CyLib.c **** 
 620:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 621:Generated_Source\PSoC4/CyLib.c ****         }
 622:Generated_Source\PSoC4/CyLib.c ****     }
 623:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 624:Generated_Source\PSoC4/CyLib.c **** 
 625:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 100              		.loc 1 625 0
 101 0008 044A     		ldr	r2, .L8
 102 000a 1368     		ldr	r3, [r2]
 103 000c 0721     		movs	r1, #7
 104 000e 8B43     		bics	r3, r1
 105              	.LVL2:
 626:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 627:Generated_Source\PSoC4/CyLib.c **** 
 628:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 629:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 630:Generated_Source\PSoC4/CyLib.c ****     {
 631:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 632:Generated_Source\PSoC4/CyLib.c ****     }
 633:Generated_Source\PSoC4/CyLib.c ****     else
 634:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 635:Generated_Source\PSoC4/CyLib.c ****     {
 636:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 14


 106              		.loc 1 636 0
 107 0010 0C40     		ands	r4, r1
 108              	.LVL3:
 109 0012 1C43     		orrs	r4, r3
 110              	.LVL4:
 637:Generated_Source\PSoC4/CyLib.c ****     }
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 111              		.loc 1 639 0
 112 0014 1460     		str	r4, [r2]
 640:Generated_Source\PSoC4/CyLib.c **** 
 641:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 113              		.loc 1 641 0
 114 0016 FFF7FEFF 		bl	CyExitCriticalSection
 115              	.LVL5:
 642:Generated_Source\PSoC4/CyLib.c **** }
 116              		.loc 1 642 0
 117              		@ sp needed
 118              	.LVL6:
 119 001a 10BD     		pop	{r4, pc}
 120              	.L9:
 121              		.align	2
 122              	.L8:
 123 001c 00010B40 		.word	1074462976
 124              		.cfi_endproc
 125              	.LFE4:
 126              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 127              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 128              		.align	2
 129              		.global	CySysEnablePumpClock
 130              		.code	16
 131              		.thumb_func
 132              		.type	CySysEnablePumpClock, %function
 133              	CySysEnablePumpClock:
 134              	.LFB5:
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c **** 
 645:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 646:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 647:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 648:Generated_Source\PSoC4/CyLib.c **** *
 649:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 650:Generated_Source\PSoC4/CyLib.c **** *
 651:Generated_Source\PSoC4/CyLib.c **** * \param enable
 652:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 653:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of
 654:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 655:Generated_Source\PSoC4/CyLib.c **** *
 656:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 657:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation
 658:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 659:Generated_Source\PSoC4/CyLib.c **** *
 660:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 662:Generated_Source\PSoC4/CyLib.c **** {
 135              		.loc 1 662 0
 136              		.cfi_startproc
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 15


 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.LVL7:
 663:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 664:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 141              		.loc 1 664 0
 142 0000 C307     		lsls	r3, r0, #31
 143 0002 07D5     		bpl	.L11
 665:Generated_Source\PSoC4/CyLib.c ****         {
 666:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 144              		.loc 1 666 0
 145 0004 094A     		ldr	r2, .L13
 146 0006 1168     		ldr	r1, [r2]
 147 0008 094B     		ldr	r3, .L13+4
 148 000a 1B68     		ldr	r3, [r3]
 149 000c 5B06     		lsls	r3, r3, #25
 150 000e 0B43     		orrs	r3, r1
 151 0010 1360     		str	r3, [r2]
 152 0012 0AE0     		b	.L10
 153              	.L11:
 667:Generated_Source\PSoC4/CyLib.c ****         }
 668:Generated_Source\PSoC4/CyLib.c ****         else
 669:Generated_Source\PSoC4/CyLib.c ****         {
 670:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 154              		.loc 1 670 0
 155 0014 054A     		ldr	r2, .L13
 156 0016 1368     		ldr	r3, [r2]
 157 0018 5B0E     		lsrs	r3, r3, #25
 158 001a 0721     		movs	r1, #7
 159 001c 0B40     		ands	r3, r1
 160 001e 0449     		ldr	r1, .L13+4
 161 0020 0B60     		str	r3, [r1]
 671:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 672:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 162              		.loc 1 672 0
 163 0022 1168     		ldr	r1, [r2]
 164 0024 034B     		ldr	r3, .L13+8
 165 0026 0B40     		ands	r3, r1
 166 0028 1360     		str	r3, [r2]
 167              	.L10:
 673:Generated_Source\PSoC4/CyLib.c ****         }
 674:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 675:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 676:Generated_Source\PSoC4/CyLib.c ****         {
 677:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 678:Generated_Source\PSoC4/CyLib.c ****         }
 679:Generated_Source\PSoC4/CyLib.c ****         else
 680:Generated_Source\PSoC4/CyLib.c ****         {
 681:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) &
 682:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 683:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 684:Generated_Source\PSoC4/CyLib.c ****         }
 685:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 686:Generated_Source\PSoC4/CyLib.c **** }
 168              		.loc 1 686 0
 169              		@ sp needed
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 16


 170 002a 7047     		bx	lr
 171              	.L14:
 172              		.align	2
 173              	.L13:
 174 002c 08010B40 		.word	1074462984
 175 0030 00000000 		.word	.LANCHOR0
 176 0034 FFFFFFF1 		.word	-234881025
 177              		.cfi_endproc
 178              	.LFE5:
 179              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 180              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 181              		.align	2
 182              		.global	CySysClkGetSysclkSource
 183              		.code	16
 184              		.thumb_func
 185              		.type	CySysClkGetSysclkSource, %function
 186              	CySysClkGetSysclkSource:
 187              	.LFB6:
 687:Generated_Source\PSoC4/CyLib.c **** 
 688:Generated_Source\PSoC4/CyLib.c **** 
 689:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 690:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 691:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 692:Generated_Source\PSoC4/CyLib.c **** *
 693:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 694:Generated_Source\PSoC4/CyLib.c **** *
 695:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 696:Generated_Source\PSoC4/CyLib.c **** *
 697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 699:Generated_Source\PSoC4/CyLib.c **** {
 188              		.loc 1 699 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192 0000 10B5     		push	{r4, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
 700:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 701:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 702:Generated_Source\PSoC4/CyLib.c **** 
 703:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 196              		.loc 1 703 0
 197 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 198              	.LVL8:
 704:Generated_Source\PSoC4/CyLib.c **** 
 705:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 706:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 707:Generated_Source\PSoC4/CyLib.c ****     {
 708:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 709:Generated_Source\PSoC4/CyLib.c ****     }
 710:Generated_Source\PSoC4/CyLib.c ****     else
 711:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 712:Generated_Source\PSoC4/CyLib.c ****     {
 713:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 199              		.loc 1 713 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 17


 200 0006 044B     		ldr	r3, .L16
 201 0008 1B68     		ldr	r3, [r3]
 202 000a 0724     		movs	r4, #7
 203 000c 1C40     		ands	r4, r3
 204              	.LVL9:
 714:Generated_Source\PSoC4/CyLib.c **** 
 715:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 716:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 717:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 718:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 719:Generated_Source\PSoC4/CyLib.c **** 
 720:Generated_Source\PSoC4/CyLib.c ****     }
 721:Generated_Source\PSoC4/CyLib.c **** 
 722:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 205              		.loc 1 722 0
 206 000e FFF7FEFF 		bl	CyExitCriticalSection
 207              	.LVL10:
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 725:Generated_Source\PSoC4/CyLib.c **** }
 208              		.loc 1 725 0
 209 0012 2000     		movs	r0, r4
 210              		@ sp needed
 211              	.LVL11:
 212 0014 10BD     		pop	{r4, pc}
 213              	.L17:
 214 0016 C046     		.align	2
 215              	.L16:
 216 0018 00010B40 		.word	1074462976
 217              		.cfi_endproc
 218              	.LFE6:
 219              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 220              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 221              		.align	2
 222              		.global	CySysClkWriteSysclkDiv
 223              		.code	16
 224              		.thumb_func
 225              		.type	CySysClkWriteSysclkDiv, %function
 226              	CySysClkWriteSysclkDiv:
 227              	.LFB7:
 726:Generated_Source\PSoC4/CyLib.c **** 
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 729:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 730:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 731:Generated_Source\PSoC4/CyLib.c **** *
 732:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 735:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 736:Generated_Source\PSoC4/CyLib.c **** *
 737:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 738:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 739:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 740:Generated_Source\PSoC4/CyLib.c **** *
 741:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 742:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 18


 743:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 744:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 745:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 746:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 747:Generated_Source\PSoC4/CyLib.c **** *
 748:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 749:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 750:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 751:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 752:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 753:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 754:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 755:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 756:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 757:Generated_Source\PSoC4/CyLib.c **** *
 758:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 759:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 760:Generated_Source\PSoC4/CyLib.c **** {
 228              		.loc 1 760 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL12:
 233 0000 10B5     		push	{r4, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 4, -8
 236              		.cfi_offset 14, -4
 237 0002 0400     		movs	r4, r0
 761:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 762:Generated_Source\PSoC4/CyLib.c **** 
 763:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 238              		.loc 1 763 0
 239 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 240              	.LVL13:
 764:Generated_Source\PSoC4/CyLib.c **** 
 765:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 241              		.loc 1 765 0
 242 0008 E304     		lsls	r3, r4, #19
 243 000a E022     		movs	r2, #224
 244 000c 9203     		lsls	r2, r2, #14
 245 000e 1340     		ands	r3, r2
 246 0010 1900     		movs	r1, r3
 766:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 767:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 247              		.loc 1 767 0
 248 0012 054C     		ldr	r4, .L19
 249              	.LVL14:
 250 0014 2368     		ldr	r3, [r4]
 251 0016 054A     		ldr	r2, .L19+4
 252 0018 1A40     		ands	r2, r3
 766:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 253              		.loc 1 766 0
 254 001a 0B00     		movs	r3, r1
 255 001c 1343     		orrs	r3, r2
 765:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 256              		.loc 1 765 0
 257 001e 2360     		str	r3, [r4]
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 19


 768:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 769:Generated_Source\PSoC4/CyLib.c **** 
 770:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 258              		.loc 1 770 0
 259 0020 FFF7FEFF 		bl	CyExitCriticalSection
 260              	.LVL15:
 771:Generated_Source\PSoC4/CyLib.c **** }
 261              		.loc 1 771 0
 262              		@ sp needed
 263 0024 10BD     		pop	{r4, pc}
 264              	.L20:
 265 0026 C046     		.align	2
 266              	.L19:
 267 0028 00010B40 		.word	1074462976
 268 002c FFFFC7FF 		.word	-3670017
 269              		.cfi_endproc
 270              	.LFE7:
 271              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 272              		.section	.text.CySysClkEcoStop,"ax",%progbits
 273              		.align	2
 274              		.global	CySysClkEcoStop
 275              		.code	16
 276              		.thumb_func
 277              		.type	CySysClkEcoStop, %function
 278              	CySysClkEcoStop:
 279              	.LFB10:
 772:Generated_Source\PSoC4/CyLib.c **** 
 773:Generated_Source\PSoC4/CyLib.c **** 
 774:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 775:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 776:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 777:Generated_Source\PSoC4/CyLib.c **** *
 778:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 779:Generated_Source\PSoC4/CyLib.c **** *
 780:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 781:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 782:Generated_Source\PSoC4/CyLib.c **** *
 783:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 784:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 785:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 786:Generated_Source\PSoC4/CyLib.c **** *
 787:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 788:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 789:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 790:Generated_Source\PSoC4/CyLib.c **** *
 791:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 792:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 793:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 794:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 795:Generated_Source\PSoC4/CyLib.c **** *
 796:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 797:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 798:Generated_Source\PSoC4/CyLib.c **** *
 799:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 800:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 801:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 802:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 20


 803:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 804:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 805:Generated_Source\PSoC4/CyLib.c **** *
 806:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 807:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 808:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 809:Generated_Source\PSoC4/CyLib.c **** *
 810:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 811:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 812:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with
 813:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 814:Generated_Source\PSoC4/CyLib.c **** *
 815:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 816:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 817:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 818:Generated_Source\PSoC4/CyLib.c ****     {
 819:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 820:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 821:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 822:Generated_Source\PSoC4/CyLib.c ****         #else
 823:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 824:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 825:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 826:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 827:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 830:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 831:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 836:Generated_Source\PSoC4/CyLib.c **** 
 837:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 838:Generated_Source\PSoC4/CyLib.c **** 
 839:Generated_Source\PSoC4/CyLib.c **** 
 840:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 843:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 844:Generated_Source\PSoC4/CyLib.c ****             {
 845:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 846:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 847:Generated_Source\PSoC4/CyLib.c ****             }
 848:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 849:Generated_Source\PSoC4/CyLib.c **** 
 850:Generated_Source\PSoC4/CyLib.c **** 
 851:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 857:Generated_Source\PSoC4/CyLib.c **** 
 858:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 859:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 21


 860:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 861:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 862:Generated_Source\PSoC4/CyLib.c ****                 }
 863:Generated_Source\PSoC4/CyLib.c **** 
 864:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 865:Generated_Source\PSoC4/CyLib.c ****                 }
 866:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 872:Generated_Source\PSoC4/CyLib.c **** 
 873:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 874:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 875:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 876:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 877:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 878:Generated_Source\PSoC4/CyLib.c **** 
 879:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 880:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 881:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 882:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 885:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 886:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 887:Generated_Source\PSoC4/CyLib.c **** 
 888:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 889:Generated_Source\PSoC4/CyLib.c **** 
 890:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 891:Generated_Source\PSoC4/CyLib.c ****         {
 892:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 895:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 896:Generated_Source\PSoC4/CyLib.c ****             }
 897:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 898:Generated_Source\PSoC4/CyLib.c ****             {
 899:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 900:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 901:Generated_Source\PSoC4/CyLib.c ****             }
 902:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 903:Generated_Source\PSoC4/CyLib.c ****             {
 904:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 905:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 906:Generated_Source\PSoC4/CyLib.c ****             }
 907:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 908:Generated_Source\PSoC4/CyLib.c ****             {
 909:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 910:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c ****             else
 913:Generated_Source\PSoC4/CyLib.c ****             {
 914:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 915:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 916:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 22


 917:Generated_Source\PSoC4/CyLib.c **** 
 918:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 919:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c **** 
 922:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 923:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 924:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 925:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 926:Generated_Source\PSoC4/CyLib.c ****             *
 927:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 928:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 929:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 930:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 931:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 932:Generated_Source\PSoC4/CyLib.c ****             {
 933:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 934:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 935:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 936:Generated_Source\PSoC4/CyLib.c **** 
 937:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 938:Generated_Source\PSoC4/CyLib.c **** 
 939:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 940:Generated_Source\PSoC4/CyLib.c ****             }
 941:Generated_Source\PSoC4/CyLib.c ****             else
 942:Generated_Source\PSoC4/CyLib.c ****             {
 943:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 944:Generated_Source\PSoC4/CyLib.c ****             }
 945:Generated_Source\PSoC4/CyLib.c **** 
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 948:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 949:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 950:Generated_Source\PSoC4/CyLib.c ****             *
 951:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 952:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 953:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 954:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 955:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 956:Generated_Source\PSoC4/CyLib.c ****             {
 957:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 958:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 959:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 960:Generated_Source\PSoC4/CyLib.c ****             }
 961:Generated_Source\PSoC4/CyLib.c **** 
 962:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 963:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 964:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 965:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 966:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 967:Generated_Source\PSoC4/CyLib.c **** 
 968:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 969:Generated_Source\PSoC4/CyLib.c ****             {
 970:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 971:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 972:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 973:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 23


 974:Generated_Source\PSoC4/CyLib.c ****         }
 975:Generated_Source\PSoC4/CyLib.c ****         else
 976:Generated_Source\PSoC4/CyLib.c ****         {
 977:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 978:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 979:Generated_Source\PSoC4/CyLib.c ****         }
 980:Generated_Source\PSoC4/CyLib.c **** 
 981:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 982:Generated_Source\PSoC4/CyLib.c **** 
 983:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 984:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 985:Generated_Source\PSoC4/CyLib.c ****             {
 986:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 987:Generated_Source\PSoC4/CyLib.c ****             }
 988:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 989:Generated_Source\PSoC4/CyLib.c **** 
 990:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 991:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 992:Generated_Source\PSoC4/CyLib.c ****             {
 993:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 994:Generated_Source\PSoC4/CyLib.c ****             }
 995:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 996:Generated_Source\PSoC4/CyLib.c **** 
 997:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 998:Generated_Source\PSoC4/CyLib.c ****     }
 999:Generated_Source\PSoC4/CyLib.c **** 
1000:Generated_Source\PSoC4/CyLib.c **** #else
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
1003:Generated_Source\PSoC4/CyLib.c ****     {
1004:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1005:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
1006:Generated_Source\PSoC4/CyLib.c **** 
1007:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1008:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
1009:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1010:Generated_Source\PSoC4/CyLib.c **** 
1011:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1012:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
1013:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1014:Generated_Source\PSoC4/CyLib.c **** 
1015:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
1016:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
1017:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
1018:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
1019:Generated_Source\PSoC4/CyLib.c ****         #else
1020:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
1021:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
1022:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
1023:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
1024:Generated_Source\PSoC4/CyLib.c ****         {
1025:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1026:Generated_Source\PSoC4/CyLib.c **** 
1027:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1028:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
1029:Generated_Source\PSoC4/CyLib.c ****                 {
1030:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 24


1031:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
1032:Generated_Source\PSoC4/CyLib.c ****                 }
1033:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1036:Generated_Source\PSoC4/CyLib.c **** 
1037:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1038:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
1039:Generated_Source\PSoC4/CyLib.c ****                     {
1040:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1041:Generated_Source\PSoC4/CyLib.c **** 
1042:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
1043:Generated_Source\PSoC4/CyLib.c ****                     {
1044:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
1045:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
1046:Generated_Source\PSoC4/CyLib.c ****                     }
1047:Generated_Source\PSoC4/CyLib.c **** 
1048:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
1049:Generated_Source\PSoC4/CyLib.c ****                     }
1050:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
1053:Generated_Source\PSoC4/CyLib.c **** 
1054:Generated_Source\PSoC4/CyLib.c **** 
1055:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
1056:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
1057:Generated_Source\PSoC4/CyLib.c **** 
1058:Generated_Source\PSoC4/CyLib.c **** 
1059:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
1060:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1061:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
1062:Generated_Source\PSoC4/CyLib.c ****                 {
1063:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
1064:Generated_Source\PSoC4/CyLib.c ****                 }
1065:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
1066:Generated_Source\PSoC4/CyLib.c ****                 {
1067:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
1068:Generated_Source\PSoC4/CyLib.c ****                 }
1069:Generated_Source\PSoC4/CyLib.c ****                 else
1070:Generated_Source\PSoC4/CyLib.c ****                 {
1071:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
1072:Generated_Source\PSoC4/CyLib.c ****                 }
1073:Generated_Source\PSoC4/CyLib.c ****             #else
1074:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
1075:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1076:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1077:Generated_Source\PSoC4/CyLib.c **** 
1078:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1079:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1080:Generated_Source\PSoC4/CyLib.c **** 
1081:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1082:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1083:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1084:Generated_Source\PSoC4/CyLib.c **** 
1085:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1086:Generated_Source\PSoC4/CyLib.c **** 
1087:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 25


1088:Generated_Source\PSoC4/CyLib.c ****             {
1089:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1090:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1091:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1092:Generated_Source\PSoC4/CyLib.c **** 
1093:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1094:Generated_Source\PSoC4/CyLib.c **** 
1095:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1096:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1097:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1098:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1099:Generated_Source\PSoC4/CyLib.c ****             }
1100:Generated_Source\PSoC4/CyLib.c **** 
1101:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1102:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1103:Generated_Source\PSoC4/CyLib.c ****                 {
1104:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1105:Generated_Source\PSoC4/CyLib.c ****                 }
1106:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1107:Generated_Source\PSoC4/CyLib.c **** 
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1110:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1111:Generated_Source\PSoC4/CyLib.c ****                 {
1112:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1113:Generated_Source\PSoC4/CyLib.c ****                 }
1114:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1115:Generated_Source\PSoC4/CyLib.c **** 
1116:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1117:Generated_Source\PSoC4/CyLib.c ****         }
1118:Generated_Source\PSoC4/CyLib.c ****         else
1119:Generated_Source\PSoC4/CyLib.c ****         {
1120:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1121:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1122:Generated_Source\PSoC4/CyLib.c ****         }
1123:Generated_Source\PSoC4/CyLib.c ****     }
1124:Generated_Source\PSoC4/CyLib.c **** 
1125:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1126:Generated_Source\PSoC4/CyLib.c **** 
1127:Generated_Source\PSoC4/CyLib.c **** 
1128:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1129:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1130:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1131:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1132:Generated_Source\PSoC4/CyLib.c ****     *
1133:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1134:Generated_Source\PSoC4/CyLib.c ****     *
1135:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1136:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1137:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1138:Generated_Source\PSoC4/CyLib.c ****     *
1139:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1140:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1141:Generated_Source\PSoC4/CyLib.c ****     *
1142:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1143:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1144:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 26


1145:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1146:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1147:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1148:Generated_Source\PSoC4/CyLib.c ****     *
1149:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1150:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1151:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1152:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1153:Generated_Source\PSoC4/CyLib.c ****     *
1154:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1155:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1156:Generated_Source\PSoC4/CyLib.c ****     {
1157:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1158:Generated_Source\PSoC4/CyLib.c **** 
1159:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1160:Generated_Source\PSoC4/CyLib.c **** 
1161:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1162:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1163:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1164:Generated_Source\PSoC4/CyLib.c **** 
1165:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1166:Generated_Source\PSoC4/CyLib.c ****     }
1167:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1168:Generated_Source\PSoC4/CyLib.c **** 
1169:Generated_Source\PSoC4/CyLib.c **** 
1170:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1171:Generated_Source\PSoC4/CyLib.c **** 
1172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1175:Generated_Source\PSoC4/CyLib.c ****     *
1176:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1177:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1178:Generated_Source\PSoC4/CyLib.c ****     *
1179:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1180:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1181:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1182:Generated_Source\PSoC4/CyLib.c ****     * called.
1183:Generated_Source\PSoC4/CyLib.c ****     *
1184:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1185:Generated_Source\PSoC4/CyLib.c ****     *
1186:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1187:Generated_Source\PSoC4/CyLib.c ****     *
1188:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1189:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1192:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1195:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1196:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1197:Generated_Source\PSoC4/CyLib.c ****     *
1198:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1201:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 27


1202:Generated_Source\PSoC4/CyLib.c ****     {
1203:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1204:Generated_Source\PSoC4/CyLib.c **** 
1205:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1206:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1207:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1208:Generated_Source\PSoC4/CyLib.c **** 
1209:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1210:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1213:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1214:Generated_Source\PSoC4/CyLib.c **** 
1215:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1216:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1217:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1218:Generated_Source\PSoC4/CyLib.c **** 
1219:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1220:Generated_Source\PSoC4/CyLib.c ****             {
1221:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1222:Generated_Source\PSoC4/CyLib.c ****             }
1223:Generated_Source\PSoC4/CyLib.c ****             else
1224:Generated_Source\PSoC4/CyLib.c ****             {
1225:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1226:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1227:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1228:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1229:Generated_Source\PSoC4/CyLib.c **** 
1230:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1231:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1232:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1233:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1234:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1235:Generated_Source\PSoC4/CyLib.c **** 
1236:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1237:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1238:Generated_Source\PSoC4/CyLib.c ****                 {
1239:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1240:Generated_Source\PSoC4/CyLib.c ****                 }
1241:Generated_Source\PSoC4/CyLib.c **** 
1242:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1243:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1244:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1245:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1246:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1247:Generated_Source\PSoC4/CyLib.c **** 
1248:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1249:Generated_Source\PSoC4/CyLib.c ****                 {
1250:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1251:Generated_Source\PSoC4/CyLib.c ****                 }
1252:Generated_Source\PSoC4/CyLib.c **** 
1253:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1254:Generated_Source\PSoC4/CyLib.c ****                 {
1255:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1256:Generated_Source\PSoC4/CyLib.c ****                 }
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 28


1259:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1260:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1261:Generated_Source\PSoC4/CyLib.c **** 
1262:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1263:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1264:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1265:Generated_Source\PSoC4/CyLib.c ****                 #else
1266:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1267:Generated_Source\PSoC4/CyLib.c ****                 #endif
1268:Generated_Source\PSoC4/CyLib.c **** 
1269:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1270:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1271:Generated_Source\PSoC4/CyLib.c ****                 {
1272:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1273:Generated_Source\PSoC4/CyLib.c ****                 }
1274:Generated_Source\PSoC4/CyLib.c **** 
1275:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1276:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD |
1277:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1278:Generated_Source\PSoC4/CyLib.c **** 
1279:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1280:Generated_Source\PSoC4/CyLib.c ****                 {
1281:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1282:Generated_Source\PSoC4/CyLib.c ****                 }
1283:Generated_Source\PSoC4/CyLib.c **** 
1284:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1285:Generated_Source\PSoC4/CyLib.c **** 
1286:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1287:Generated_Source\PSoC4/CyLib.c **** 
1288:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1289:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1290:Generated_Source\PSoC4/CyLib.c **** 
1291:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1292:Generated_Source\PSoC4/CyLib.c ****                 {
1293:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1294:Generated_Source\PSoC4/CyLib.c ****                 }
1295:Generated_Source\PSoC4/CyLib.c **** 
1296:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1297:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1298:Generated_Source\PSoC4/CyLib.c **** 
1299:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1300:Generated_Source\PSoC4/CyLib.c ****                 {
1301:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1302:Generated_Source\PSoC4/CyLib.c ****                 }
1303:Generated_Source\PSoC4/CyLib.c **** 
1304:Generated_Source\PSoC4/CyLib.c ****             }
1305:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1306:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1307:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1308:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_ECOV2_SRSSLT)
1309:Generated_Source\PSoC4/CyLib.c ****                 CySysClkPllClearPendingInterrupt(CY_SYS_PLL_INTR_WD_ERR);
1310:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_ECOV2_SRSSLT) */
1311:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1312:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1313:Generated_Source\PSoC4/CyLib.c **** 
1314:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1315:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 29


1316:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1317:Generated_Source\PSoC4/CyLib.c **** 
1318:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1319:Generated_Source\PSoC4/CyLib.c ****             {
1320:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1321:Generated_Source\PSoC4/CyLib.c **** 
1322:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1323:Generated_Source\PSoC4/CyLib.c ****                 {
1324:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1325:Generated_Source\PSoC4/CyLib.c ****                     break;
1326:Generated_Source\PSoC4/CyLib.c ****                 }
1327:Generated_Source\PSoC4/CyLib.c ****             }
1328:Generated_Source\PSoC4/CyLib.c **** 
1329:Generated_Source\PSoC4/CyLib.c ****         }
1330:Generated_Source\PSoC4/CyLib.c **** 
1331:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1332:Generated_Source\PSoC4/CyLib.c ****     }
1333:Generated_Source\PSoC4/CyLib.c **** 
1334:Generated_Source\PSoC4/CyLib.c **** 
1335:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1336:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1337:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1338:Generated_Source\PSoC4/CyLib.c ****     *
1339:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1340:Generated_Source\PSoC4/CyLib.c ****     *
1341:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1342:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1343:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1344:Generated_Source\PSoC4/CyLib.c ****     *
1345:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1346:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1347:Generated_Source\PSoC4/CyLib.c ****     {
 280              		.loc 1 1347 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
1348:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1349:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1350:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 285              		.loc 1 1350 0
 286 0000 054A     		ldr	r2, .L22
 287 0002 1368     		ldr	r3, [r2]
 288 0004 0121     		movs	r1, #1
 289 0006 8B43     		bics	r3, r1
 290 0008 1360     		str	r3, [r2]
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1353:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 291              		.loc 1 1353 0
 292 000a 044A     		ldr	r2, .L22+4
 293 000c 1168     		ldr	r1, [r2]
 294 000e 044B     		ldr	r3, .L22+8
 295 0010 0B40     		ands	r3, r1
 296 0012 1360     		str	r3, [r2]
1354:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1355:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 30


1356:Generated_Source\PSoC4/CyLib.c ****         #else
1357:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1358:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1359:Generated_Source\PSoC4/CyLib.c ****     }
 297              		.loc 1 1359 0
 298              		@ sp needed
 299 0014 7047     		bx	lr
 300              	.L23:
 301 0016 C046     		.align	2
 302              	.L22:
 303 0018 60F02E40 		.word	1076818016
 304 001c 10002E40 		.word	1076756496
 305 0020 FF7FFFFF 		.word	-32769
 306              		.cfi_endproc
 307              	.LFE10:
 308              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 309              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 310              		.align	2
 311              		.global	CySysClkEcoReadStatus
 312              		.code	16
 313              		.thumb_func
 314              		.type	CySysClkEcoReadStatus, %function
 315              	CySysClkEcoReadStatus:
 316              	.LFB11:
1360:Generated_Source\PSoC4/CyLib.c **** 
1361:Generated_Source\PSoC4/CyLib.c **** 
1362:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1363:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1364:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1365:Generated_Source\PSoC4/CyLib.c ****     *
1366:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1367:Generated_Source\PSoC4/CyLib.c ****     *
1368:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1369:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1370:Generated_Source\PSoC4/CyLib.c ****     *
1371:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S / 4500 with ECO devices, the error status bit is
1372:Generated_Source\PSoC4/CyLib.c ****     * the WATCHDOG_ERROR bit in ECO_STATUS register.
1373:Generated_Source\PSoC4/CyLib.c ****     *
1374:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1375:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1376:Generated_Source\PSoC4/CyLib.c ****     *
1377:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S / 4500 with ECO: Non-zero indicates that ECO
1378:Generated_Source\PSoC4/CyLib.c ****     * is running.
1379:Generated_Source\PSoC4/CyLib.c ****     *
1380:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1381:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1382:Generated_Source\PSoC4/CyLib.c ****     {
 317              		.loc 1 1382 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              		@ link register save eliminated.
1383:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1384:Generated_Source\PSoC4/CyLib.c **** 
1385:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1386:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 322              		.loc 1 1386 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 31


 323 0000 024B     		ldr	r3, .L25
 324 0002 1B68     		ldr	r3, [r3]
 325 0004 0120     		movs	r0, #1
 326 0006 1840     		ands	r0, r3
 327              	.LVL16:
1387:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1388:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1389:Generated_Source\PSoC4/CyLib.c **** 
1390:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) ||
1391:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1392:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1393:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1394:Generated_Source\PSoC4/CyLib.c ****         #else
1395:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1396:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1397:Generated_Source\PSoC4/CyLib.c **** 
1398:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1399:Generated_Source\PSoC4/CyLib.c ****     }
 328              		.loc 1 1399 0
 329              		@ sp needed
 330 0008 7047     		bx	lr
 331              	.L26:
 332 000a C046     		.align	2
 333              	.L25:
 334 000c 0C002E40 		.word	1076756492
 335              		.cfi_endproc
 336              	.LFE11:
 337              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 338              		.section	.text.CySysLvdDisable,"ax",%progbits
 339              		.align	2
 340              		.global	CySysLvdDisable
 341              		.code	16
 342              		.thumb_func
 343              		.type	CySysLvdDisable, %function
 344              	CySysLvdDisable:
 345              	.LFB14:
1400:Generated_Source\PSoC4/CyLib.c **** 
1401:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1402:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1403:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1404:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1405:Generated_Source\PSoC4/CyLib.c ****         *
1406:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1407:Generated_Source\PSoC4/CyLib.c ****         *
1408:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1409:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1410:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1411:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1412:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1413:Generated_Source\PSoC4/CyLib.c ****         *
1414:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1415:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1416:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1417:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1418:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1419:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1420:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 32


1421:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1422:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1423:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1424:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1425:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1428:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1429:Generated_Source\PSoC4/CyLib.c ****         {
1430:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1431:Generated_Source\PSoC4/CyLib.c **** 
1432:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1433:Generated_Source\PSoC4/CyLib.c ****             {
1434:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1435:Generated_Source\PSoC4/CyLib.c **** 
1436:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1437:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1438:Generated_Source\PSoC4/CyLib.c **** 
1439:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1440:Generated_Source\PSoC4/CyLib.c ****             }
1441:Generated_Source\PSoC4/CyLib.c ****             else
1442:Generated_Source\PSoC4/CyLib.c ****             {
1443:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1444:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1445:Generated_Source\PSoC4/CyLib.c ****             }
1446:Generated_Source\PSoC4/CyLib.c ****         }
1447:Generated_Source\PSoC4/CyLib.c **** 
1448:Generated_Source\PSoC4/CyLib.c ****     #else
1449:Generated_Source\PSoC4/CyLib.c **** 
1450:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1451:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1452:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1453:Generated_Source\PSoC4/CyLib.c ****         *
1454:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1455:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S /4500 with ECO devices only.
1456:Generated_Source\PSoC4/CyLib.c ****         *
1457:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1458:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1459:Generated_Source\PSoC4/CyLib.c ****         *
1460:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1461:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1462:Generated_Source\PSoC4/CyLib.c ****         *
1463:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1464:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1465:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1466:Generated_Source\PSoC4/CyLib.c ****         *
1467:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1468:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1469:Generated_Source\PSoC4/CyLib.c ****         *
1470:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1471:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1472:Generated_Source\PSoC4/CyLib.c ****         *
1473:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1474:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1475:Generated_Source\PSoC4/CyLib.c ****         *
1476:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1477:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 33


1478:Generated_Source\PSoC4/CyLib.c ****         *
1479:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1480:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1481:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1482:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1483:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1484:Generated_Source\PSoC4/CyLib.c ****         *
1485:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1486:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1487:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1488:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1489:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1490:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1491:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1492:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1493:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1494:Generated_Source\PSoC4/CyLib.c ****         *
1495:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1496:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1497:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1498:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1499:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1500:Generated_Source\PSoC4/CyLib.c ****         *
1501:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1502:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1503:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1504:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1505:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1506:Generated_Source\PSoC4/CyLib.c ****         *
1507:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1508:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1509:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1510:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1511:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1512:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1513:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1514:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1515:Generated_Source\PSoC4/CyLib.c ****         *
1516:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1517:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1518:Generated_Source\PSoC4/CyLib.c ****         {
1519:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1520:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1521:Generated_Source\PSoC4/CyLib.c **** 
1522:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1523:Generated_Source\PSoC4/CyLib.c **** 
1524:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1525:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1526:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1527:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1528:Generated_Source\PSoC4/CyLib.c **** 
1529:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1530:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1531:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1532:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1533:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1534:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 34


1535:Generated_Source\PSoC4/CyLib.c **** 
1536:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1537:Generated_Source\PSoC4/CyLib.c **** 
1538:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1539:Generated_Source\PSoC4/CyLib.c ****         }
1540:Generated_Source\PSoC4/CyLib.c **** 
1541:Generated_Source\PSoC4/CyLib.c **** 
1542:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1543:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1544:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1545:Generated_Source\PSoC4/CyLib.c ****         *
1546:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1547:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1548:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1549:Generated_Source\PSoC4/CyLib.c ****         *
1550:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S / 4500 with ECO
1551:Generated_Source\PSoC4/CyLib.c ****         * devices only.
1552:Generated_Source\PSoC4/CyLib.c ****         *
1553:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1554:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1555:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1556:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1557:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1558:Generated_Source\PSoC4/CyLib.c ****         *
1559:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1560:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1561:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1562:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1563:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1564:Generated_Source\PSoC4/CyLib.c ****         *
1565:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1566:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1567:Generated_Source\PSoC4/CyLib.c ****         *
1568:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1569:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1570:Generated_Source\PSoC4/CyLib.c ****         {
1571:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1572:Generated_Source\PSoC4/CyLib.c **** 
1573:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1574:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1575:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1576:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1577:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1580:Generated_Source\PSoC4/CyLib.c **** 
1581:Generated_Source\PSoC4/CyLib.c **** 
1582:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1583:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1584:Generated_Source\PSoC4/CyLib.c ****             {
1585:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1586:Generated_Source\PSoC4/CyLib.c ****             }
1587:Generated_Source\PSoC4/CyLib.c ****             else
1588:Generated_Source\PSoC4/CyLib.c ****             {
1589:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1590:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1591:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 35


1592:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1593:Generated_Source\PSoC4/CyLib.c ****                 {
1594:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1595:Generated_Source\PSoC4/CyLib.c ****                 }
1596:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1597:Generated_Source\PSoC4/CyLib.c ****                 {
1598:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1599:Generated_Source\PSoC4/CyLib.c ****                 }
1600:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1601:Generated_Source\PSoC4/CyLib.c ****                 {
1602:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1603:Generated_Source\PSoC4/CyLib.c ****                 }
1604:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1605:Generated_Source\PSoC4/CyLib.c ****                 {
1606:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1607:Generated_Source\PSoC4/CyLib.c ****                 }
1608:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1609:Generated_Source\PSoC4/CyLib.c ****                 {
1610:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1611:Generated_Source\PSoC4/CyLib.c ****                 }
1612:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1613:Generated_Source\PSoC4/CyLib.c ****                 {
1614:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1615:Generated_Source\PSoC4/CyLib.c ****                 }
1616:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1617:Generated_Source\PSoC4/CyLib.c ****                 {
1618:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1619:Generated_Source\PSoC4/CyLib.c ****                 }
1620:Generated_Source\PSoC4/CyLib.c ****                 else
1621:Generated_Source\PSoC4/CyLib.c ****                 {
1622:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1623:Generated_Source\PSoC4/CyLib.c ****                 }
1624:Generated_Source\PSoC4/CyLib.c **** 
1625:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1626:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1627:Generated_Source\PSoC4/CyLib.c **** 
1628:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1629:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1630:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1631:Generated_Source\PSoC4/CyLib.c ****                 {
1632:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1633:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1634:Generated_Source\PSoC4/CyLib.c ****                 }
1635:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1636:Generated_Source\PSoC4/CyLib.c ****                 {
1637:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1638:Generated_Source\PSoC4/CyLib.c ****                 }
1639:Generated_Source\PSoC4/CyLib.c ****                 else
1640:Generated_Source\PSoC4/CyLib.c ****                 {
1641:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1642:Generated_Source\PSoC4/CyLib.c ****                 }
1643:Generated_Source\PSoC4/CyLib.c **** 
1644:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1645:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1646:Generated_Source\PSoC4/CyLib.c ****                 {
1647:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1648:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 36


1649:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1650:Generated_Source\PSoC4/CyLib.c ****                 {
1651:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1652:Generated_Source\PSoC4/CyLib.c ****                 }
1653:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1654:Generated_Source\PSoC4/CyLib.c ****                 {
1655:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1656:Generated_Source\PSoC4/CyLib.c ****                 }
1657:Generated_Source\PSoC4/CyLib.c ****                 else
1658:Generated_Source\PSoC4/CyLib.c ****                 {
1659:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1660:Generated_Source\PSoC4/CyLib.c ****                 }
1661:Generated_Source\PSoC4/CyLib.c **** 
1662:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1663:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1664:Generated_Source\PSoC4/CyLib.c **** 
1665:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1666:Generated_Source\PSoC4/CyLib.c **** 
1667:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1668:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1669:Generated_Source\PSoC4/CyLib.c ****                 {
1670:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1671:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1672:Generated_Source\PSoC4/CyLib.c ****                 }
1673:Generated_Source\PSoC4/CyLib.c ****                 else
1674:Generated_Source\PSoC4/CyLib.c ****                 {
1675:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1676:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1677:Generated_Source\PSoC4/CyLib.c ****                     */
1678:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1679:Generated_Source\PSoC4/CyLib.c ****                 }
1680:Generated_Source\PSoC4/CyLib.c ****             }
1681:Generated_Source\PSoC4/CyLib.c **** 
1682:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1683:Generated_Source\PSoC4/CyLib.c ****         }
1684:Generated_Source\PSoC4/CyLib.c **** 
1685:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1688:Generated_Source\PSoC4/CyLib.c **** 
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1691:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1692:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1693:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1694:Generated_Source\PSoC4/CyLib.c ****     *
1695:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1696:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1697:Generated_Source\PSoC4/CyLib.c ****     *
1698:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1699:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1700:Generated_Source\PSoC4/CyLib.c ****     *
1701:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1702:Generated_Source\PSoC4/CyLib.c ****     *
1703:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1704:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1705:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 37


1706:Generated_Source\PSoC4/CyLib.c ****     *
1707:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1708:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1709:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1710:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1711:Generated_Source\PSoC4/CyLib.c ****     *
1712:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1713:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1714:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1715:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1716:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1717:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1718:Generated_Source\PSoC4/CyLib.c ****     *
1719:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1720:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1721:Generated_Source\PSoC4/CyLib.c ****     {
1722:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1723:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1724:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1727:Generated_Source\PSoC4/CyLib.c ****         {
1728:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1729:Generated_Source\PSoC4/CyLib.c **** 
1730:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1731:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1732:Generated_Source\PSoC4/CyLib.c **** 
1733:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1734:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1735:Generated_Source\PSoC4/CyLib.c **** 
1736:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1737:Generated_Source\PSoC4/CyLib.c **** 
1738:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1739:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1740:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1741:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1742:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1743:Generated_Source\PSoC4/CyLib.c **** 
1744:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1745:Generated_Source\PSoC4/CyLib.c ****             {
1746:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1747:Generated_Source\PSoC4/CyLib.c **** 
1748:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1749:Generated_Source\PSoC4/CyLib.c ****                 {
1750:Generated_Source\PSoC4/CyLib.c **** 
1751:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1752:Generated_Source\PSoC4/CyLib.c ****                     {
1753:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1754:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1755:Generated_Source\PSoC4/CyLib.c ****                         break;
1756:Generated_Source\PSoC4/CyLib.c ****                     }
1757:Generated_Source\PSoC4/CyLib.c **** 
1758:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1759:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1760:Generated_Source\PSoC4/CyLib.c ****                 }
1761:Generated_Source\PSoC4/CyLib.c ****             }
1762:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 38


1763:Generated_Source\PSoC4/CyLib.c ****         else
1764:Generated_Source\PSoC4/CyLib.c ****         {
1765:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1766:Generated_Source\PSoC4/CyLib.c ****         }
1767:Generated_Source\PSoC4/CyLib.c **** 
1768:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1769:Generated_Source\PSoC4/CyLib.c ****     }
1770:Generated_Source\PSoC4/CyLib.c **** 
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1773:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1774:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1775:Generated_Source\PSoC4/CyLib.c ****     *
1776:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1777:Generated_Source\PSoC4/CyLib.c ****     *
1778:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1781:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1782:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1783:Generated_Source\PSoC4/CyLib.c ****     *
1784:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1785:Generated_Source\PSoC4/CyLib.c ****     *
1786:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1787:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1788:Generated_Source\PSoC4/CyLib.c ****     {
1789:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1790:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1791:Generated_Source\PSoC4/CyLib.c **** 
1792:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1793:Generated_Source\PSoC4/CyLib.c **** 
1794:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1797:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1798:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1799:Generated_Source\PSoC4/CyLib.c ****         {
1800:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1801:Generated_Source\PSoC4/CyLib.c ****         }
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1809:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1810:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1811:Generated_Source\PSoC4/CyLib.c ****     *
1812:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1813:Generated_Source\PSoC4/CyLib.c ****     *
1814:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1815:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1816:Generated_Source\PSoC4/CyLib.c ****     *
1817:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1818:Generated_Source\PSoC4/CyLib.c ****     *
1819:Generated_Source\PSoC4/CyLib.c ****     * PLL:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 39


1820:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1821:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1822:Generated_Source\PSoC4/CyLib.c ****     *
1823:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1824:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1825:Generated_Source\PSoC4/CyLib.c ****     {
1826:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1827:Generated_Source\PSoC4/CyLib.c **** 
1828:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1829:Generated_Source\PSoC4/CyLib.c ****         {
1830:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1831:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1832:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1833:Generated_Source\PSoC4/CyLib.c ****         }
1834:Generated_Source\PSoC4/CyLib.c ****     }
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c **** 
1837:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1838:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1839:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1840:Generated_Source\PSoC4/CyLib.c ****     *
1841:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1842:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1843:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1844:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1845:Generated_Source\PSoC4/CyLib.c ****     *
1846:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1847:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1848:Generated_Source\PSoC4/CyLib.c ****     *
1849:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1850:Generated_Source\PSoC4/CyLib.c ****     *
1851:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1852:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1856:Generated_Source\PSoC4/CyLib.c ****     * divider.
1857:Generated_Source\PSoC4/CyLib.c ****     *
1858:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1859:Generated_Source\PSoC4/CyLib.c ****     *
1860:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1861:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1862:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1863:Generated_Source\PSoC4/CyLib.c ****     *
1864:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1865:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1866:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1867:Generated_Source\PSoC4/CyLib.c ****     *
1868:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1869:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1870:Generated_Source\PSoC4/CyLib.c ****     {
1871:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1872:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1873:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1874:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 40


1877:Generated_Source\PSoC4/CyLib.c **** 
1878:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1881:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1882:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1883:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1884:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1885:Generated_Source\PSoC4/CyLib.c ****         {
1886:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1887:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1888:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1889:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1890:Generated_Source\PSoC4/CyLib.c **** 
1891:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1892:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1893:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1894:Generated_Source\PSoC4/CyLib.c **** 
1895:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1896:Generated_Source\PSoC4/CyLib.c **** 
1897:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1898:Generated_Source\PSoC4/CyLib.c ****         }
1899:Generated_Source\PSoC4/CyLib.c **** 
1900:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1901:Generated_Source\PSoC4/CyLib.c **** 
1902:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1903:Generated_Source\PSoC4/CyLib.c ****     }
1904:Generated_Source\PSoC4/CyLib.c **** 
1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1909:Generated_Source\PSoC4/CyLib.c ****     *
1910:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1913:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may
1916:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from
1917:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of
1918:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1919:Generated_Source\PSoC4/CyLib.c ****     *
1920:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 swith PLL devices.
1921:Generated_Source\PSoC4/CyLib.c ****     *
1922:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1923:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1924:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1925:Generated_Source\PSoC4/CyLib.c ****     *
1926:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1927:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1928:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1929:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1930:Generated_Source\PSoC4/CyLib.c ****     *
1931:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1932:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1933:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 41


1934:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1935:Generated_Source\PSoC4/CyLib.c ****     *
1936:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1937:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1938:Generated_Source\PSoC4/CyLib.c ****     {
1939:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1940:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1941:Generated_Source\PSoC4/CyLib.c **** 
1942:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1943:Generated_Source\PSoC4/CyLib.c **** 
1944:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1945:Generated_Source\PSoC4/CyLib.c ****         {
1946:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1947:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1948:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1949:Generated_Source\PSoC4/CyLib.c ****         }
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1952:Generated_Source\PSoC4/CyLib.c ****     }
1953:Generated_Source\PSoC4/CyLib.c **** 
1954:Generated_Source\PSoC4/CyLib.c **** 
1955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1958:Generated_Source\PSoC4/CyLib.c ****     *
1959:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1960:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1961:Generated_Source\PSoC4/CyLib.c ****     *
1962:Generated_Source\PSoC4/CyLib.c ****     *  \return bypass: Bypass mode.
1963:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1964:Generated_Source\PSoC4/CyLib.c ****     *
1965:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1966:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1967:Generated_Source\PSoC4/CyLib.c ****     {
1968:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1969:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1970:Generated_Source\PSoC4/CyLib.c **** 
1971:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1972:Generated_Source\PSoC4/CyLib.c **** 
1973:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1976:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1977:Generated_Source\PSoC4/CyLib.c **** 
1978:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1979:Generated_Source\PSoC4/CyLib.c **** 
1980:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1981:Generated_Source\PSoC4/CyLib.c ****     }
1982:Generated_Source\PSoC4/CyLib.c **** 
1983:Generated_Source\PSoC4/CyLib.c **** 
1984:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1985:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1986:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1987:Generated_Source\PSoC4/CyLib.c ****     *
1988:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1989:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1990:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 42


1991:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
1992:Generated_Source\PSoC4/CyLib.c ****     *
1993:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1994:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1995:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1996:Generated_Source\PSoC4/CyLib.c ****     *
1997:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1998:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2001:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
2002:Generated_Source\PSoC4/CyLib.c ****     {
2003:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
2004:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
2005:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
2006:Generated_Source\PSoC4/CyLib.c **** 
2007:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
2008:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
2009:Generated_Source\PSoC4/CyLib.c **** 
2010:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
2011:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
2012:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
2013:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
2014:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
2015:Generated_Source\PSoC4/CyLib.c ****             )
2016:Generated_Source\PSoC4/CyLib.c ****         {
2017:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
2018:Generated_Source\PSoC4/CyLib.c ****         }
2019:Generated_Source\PSoC4/CyLib.c **** 
2020:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
2021:Generated_Source\PSoC4/CyLib.c ****     }
2022:Generated_Source\PSoC4/CyLib.c **** 
2023:Generated_Source\PSoC4/CyLib.c **** 
2024:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2025:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
2026:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2027:Generated_Source\PSoC4/CyLib.c ****     *
2028:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
2029:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
2030:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
2031:Generated_Source\PSoC4/CyLib.c ****     *  this API.
2032:Generated_Source\PSoC4/CyLib.c ****     *
2033:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2034:Generated_Source\PSoC4/CyLib.c ****     *
2035:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2036:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2037:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2038:Generated_Source\PSoC4/CyLib.c ****     *
2039:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2042:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
2043:Generated_Source\PSoC4/CyLib.c ****     {
2044:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
2045:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2046:Generated_Source\PSoC4/CyLib.c **** 
2047:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 43


2048:Generated_Source\PSoC4/CyLib.c **** 
2049:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
2050:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
2051:Generated_Source\PSoC4/CyLib.c **** 
2052:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2053:Generated_Source\PSoC4/CyLib.c **** 
2054:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2055:Generated_Source\PSoC4/CyLib.c ****     }
2056:Generated_Source\PSoC4/CyLib.c **** 
2057:Generated_Source\PSoC4/CyLib.c **** 
2058:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2059:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
2060:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2061:Generated_Source\PSoC4/CyLib.c ****     *
2062:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
2063:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
2064:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
2065:Generated_Source\PSoC4/CyLib.c ****     *
2066:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
2067:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
2068:Generated_Source\PSoC4/CyLib.c ****     *
2069:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2070:Generated_Source\PSoC4/CyLib.c ****     *
2071:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
2072:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2073:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2074:Generated_Source\PSoC4/CyLib.c ****     *
2075:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
2076:Generated_Source\PSoC4/CyLib.c ****     *
2077:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2078:Generated_Source\PSoC4/CyLib.c ****     *
2079:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2080:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2081:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2082:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2083:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2084:Generated_Source\PSoC4/CyLib.c ****     *
2085:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2086:Generated_Source\PSoC4/CyLib.c ****     *
2087:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2088:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2089:Generated_Source\PSoC4/CyLib.c ****     *
2090:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2091:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2094:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2095:Generated_Source\PSoC4/CyLib.c ****     {
2096:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2097:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2098:Generated_Source\PSoC4/CyLib.c **** 
2099:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2100:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2101:Generated_Source\PSoC4/CyLib.c **** 
2102:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2103:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2104:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 44


2105:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2106:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2107:Generated_Source\PSoC4/CyLib.c **** 
2108:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2109:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2110:Generated_Source\PSoC4/CyLib.c **** 
2111:Generated_Source\PSoC4/CyLib.c **** 
2112:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2113:Generated_Source\PSoC4/CyLib.c **** 
2114:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2115:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2116:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2117:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2118:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2119:Generated_Source\PSoC4/CyLib.c ****         {
2120:Generated_Source\PSoC4/CyLib.c **** 
2121:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2122:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2123:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2124:Generated_Source\PSoC4/CyLib.c **** 
2125:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2126:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2127:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
2128:Generated_Source\PSoC4/CyLib.c **** 
2129:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2130:Generated_Source\PSoC4/CyLib.c ****             {
2131:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2132:Generated_Source\PSoC4/CyLib.c ****                 {
2133:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2134:Generated_Source\PSoC4/CyLib.c **** 
2135:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2136:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2137:Generated_Source\PSoC4/CyLib.c **** 
2138:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2139:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2142:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2143:Generated_Source\PSoC4/CyLib.c **** 
2144:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2145:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2146:Generated_Source\PSoC4/CyLib.c ****                     {
2147:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2148:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2149:Generated_Source\PSoC4/CyLib.c ****                         break;
2150:Generated_Source\PSoC4/CyLib.c ****                     }
2151:Generated_Source\PSoC4/CyLib.c ****                 }
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2155:Generated_Source\PSoC4/CyLib.c ****                 {
2156:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2157:Generated_Source\PSoC4/CyLib.c ****                     {
2158:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2159:Generated_Source\PSoC4/CyLib.c ****                     }
2160:Generated_Source\PSoC4/CyLib.c ****                 }
2161:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 45


2162:Generated_Source\PSoC4/CyLib.c **** 
2163:Generated_Source\PSoC4/CyLib.c ****         }
2164:Generated_Source\PSoC4/CyLib.c **** 
2165:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2166:Generated_Source\PSoC4/CyLib.c ****     }
2167:Generated_Source\PSoC4/CyLib.c **** 
2168:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2169:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2170:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2171:Generated_Source\PSoC4/CyLib.c ****     *
2172:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2173:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2174:Generated_Source\PSoC4/CyLib.c ****     *
2175:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S /4500 with PLL devices.
2176:Generated_Source\PSoC4/CyLib.c ****     *
2177:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2178:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2179:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2182:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2183:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L
2184:Generated_Source\PSoC4/CyLib.c ****     *  and PSoC 4500 with PLL devices)
2185:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2186:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2187:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2188:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2189:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2190:Generated_Source\PSoC4/CyLib.c ****     *
2191:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2193:Generated_Source\PSoC4/CyLib.c ****     {
2194:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2195:Generated_Source\PSoC4/CyLib.c **** 
2196:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2197:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2198:Generated_Source\PSoC4/CyLib.c ****         #else
2199:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
2200:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2203:Generated_Source\PSoC4/CyLib.c **** 
2204:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2205:Generated_Source\PSoC4/CyLib.c ****         {
2206:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2207:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2208:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2209:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2210:Generated_Source\PSoC4/CyLib.c ****             #else
2211:Generated_Source\PSoC4/CyLib.c ****                 CY_SET_REG32_FIELD(CYREG_EXCO_CLK_SELECT, CYFLD_EXCO_REF_SEL, source);
2212:Generated_Source\PSoC4/CyLib.c **** 
2213:Generated_Source\PSoC4/CyLib.c ****                 /* Check if ECO is enabled and running */
2214:Generated_Source\PSoC4/CyLib.c ****                 if ((0UL == (CY_SYS_CLK_ECO_CONFIG_REG & CY_SYS_CLK_ECO_CONFIG_ENABLE)) ||
2215:Generated_Source\PSoC4/CyLib.c ****                     (0UL != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)))
2216:Generated_Source\PSoC4/CyLib.c ****                 {
2217:Generated_Source\PSoC4/CyLib.c ****                     /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG 
2218:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 46


2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****                     for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2221:Generated_Source\PSoC4/CyLib.c ****                     {
2222:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2223:Generated_Source\PSoC4/CyLib.c ****                         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2224:Generated_Source\PSoC4/CyLib.c ****                     }
2225:Generated_Source\PSoC4/CyLib.c **** 
2226:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2227:Generated_Source\PSoC4/CyLib.c ****                 }
2228:Generated_Source\PSoC4/CyLib.c **** 
2229:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2230:Generated_Source\PSoC4/CyLib.c ****         }
2231:Generated_Source\PSoC4/CyLib.c **** 
2232:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2233:Generated_Source\PSoC4/CyLib.c ****     }
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c **** 
2236:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2237:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2238:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2239:Generated_Source\PSoC4/CyLib.c ****     *
2240:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2241:Generated_Source\PSoC4/CyLib.c ****     *
2242:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2243:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2244:Generated_Source\PSoC4/CyLib.c ****     *
2245:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S / 4500 with PLL devices.
2246:Generated_Source\PSoC4/CyLib.c ****     *
2247:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2248:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2249:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2250:Generated_Source\PSoC4/CyLib.c ****     *
2251:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2252:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2253:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2254:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2255:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2256:Generated_Source\PSoC4/CyLib.c ****     *
2257:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2258:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2259:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2260:Generated_Source\PSoC4/CyLib.c ****     *
2261:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2262:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2263:Generated_Source\PSoC4/CyLib.c ****     {
2264:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2265:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2266:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2267:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2268:Generated_Source\PSoC4/CyLib.c **** 
2269:Generated_Source\PSoC4/CyLib.c **** 
2270:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2271:Generated_Source\PSoC4/CyLib.c **** 
2272:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2273:Generated_Source\PSoC4/CyLib.c **** 
2274:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2275:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 47


2276:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2277:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2280:Generated_Source\PSoC4/CyLib.c **** 
2281:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2282:Generated_Source\PSoC4/CyLib.c ****         }
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2287:Generated_Source\PSoC4/CyLib.c ****     }
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c **** 
2290:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECOV2_SRSSLT)
2291:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2292:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCauseMasked
2293:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2294:Generated_Source\PSoC4/CyLib.c ****         *
2295:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects a bit-wise AND between interrupt
2296:Generated_Source\PSoC4/CyLib.c ****         *  request and mask registers. The API allows firmware to read the status of
2297:Generated_Source\PSoC4/CyLib.c ****         *  all mask enabled interrupt causes with a single load operation.
2298:Generated_Source\PSoC4/CyLib.c ****         *
2299:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2300:Generated_Source\PSoC4/CyLib.c ****         *
2301:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2302:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2303:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2304:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2305:Generated_Source\PSoC4/CyLib.c ****         *
2306:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2307:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCauseMasked(void)
2308:Generated_Source\PSoC4/CyLib.c ****         {
2309:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASKED));
2310:Generated_Source\PSoC4/CyLib.c ****         }
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** 
2313:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2314:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptCause
2315:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2316:Generated_Source\PSoC4/CyLib.c ****         *
2317:Generated_Source\PSoC4/CyLib.c ****         *  Returns a non-zero value that reflects the interrupt request registers.
2318:Generated_Source\PSoC4/CyLib.c ****         *
2319:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2320:Generated_Source\PSoC4/CyLib.c ****         *
2321:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2322:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2323:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2324:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2325:Generated_Source\PSoC4/CyLib.c ****         *
2326:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2327:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptCause(void)
2328:Generated_Source\PSoC4/CyLib.c ****         {
2329:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR));
2330:Generated_Source\PSoC4/CyLib.c ****         }
2331:Generated_Source\PSoC4/CyLib.c **** 
2332:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 48


2333:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2334:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllClearPendingInterrupt
2335:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2336:Generated_Source\PSoC4/CyLib.c ****         *
2337:Generated_Source\PSoC4/CyLib.c ****         *  Clears the pending interrupt.
2338:Generated_Source\PSoC4/CyLib.c ****         *
2339:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2340:Generated_Source\PSoC4/CyLib.c ****         *
2341:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2342:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2343:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2344:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2345:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2346:Generated_Source\PSoC4/CyLib.c ****         *
2347:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2348:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllClearPendingInterrupt(uint32 interrupt)
2349:Generated_Source\PSoC4/CyLib.c ****         {
2350:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR, interrupt);
2351:Generated_Source\PSoC4/CyLib.c ****         }
2352:Generated_Source\PSoC4/CyLib.c **** 
2353:Generated_Source\PSoC4/CyLib.c **** 
2354:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2355:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterruptMask
2356:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2357:Generated_Source\PSoC4/CyLib.c ****         *
2358:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the interrupt mask bit for the corresponding interrupts.
2359:Generated_Source\PSoC4/CyLib.c ****         *
2360:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2361:Generated_Source\PSoC4/CyLib.c ****         *
2362:Generated_Source\PSoC4/CyLib.c ****         * \param intrMask:
2363:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2364:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2365:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2366:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2367:Generated_Source\PSoC4/CyLib.c ****         *
2368:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2369:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterruptMask(uint32 intrMask)
2370:Generated_Source\PSoC4/CyLib.c ****         {
2371:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_MASK, intrMask);
2372:Generated_Source\PSoC4/CyLib.c ****         }
2373:Generated_Source\PSoC4/CyLib.c **** 
2374:Generated_Source\PSoC4/CyLib.c **** 
2375:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2376:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllGetInterruptMask
2377:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2378:Generated_Source\PSoC4/CyLib.c ****         *
2379:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the current interrupt mask register value.
2380:Generated_Source\PSoC4/CyLib.c ****         *
2381:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2382:Generated_Source\PSoC4/CyLib.c ****         *
2383:Generated_Source\PSoC4/CyLib.c ****         * \return A set bit indicates the source of the interrupt:
2384:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_PLL_LOCK
2385:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_WD_ERR
2386:Generated_Source\PSoC4/CyLib.c ****         *  *CY_SYS_PLL_INTR_CSV_CLK_SW
2387:Generated_Source\PSoC4/CyLib.c ****         *
2388:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2389:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllGetInterruptMask(void)
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 49


2390:Generated_Source\PSoC4/CyLib.c ****         {
2391:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_INTR_MASK));
2392:Generated_Source\PSoC4/CyLib.c ****         }
2393:Generated_Source\PSoC4/CyLib.c **** 
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2396:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllSetInterrupt
2397:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2398:Generated_Source\PSoC4/CyLib.c ****         *
2399:Generated_Source\PSoC4/CyLib.c ****         *  This API asserts an interrupt. This can be used for firmware debugging.
2400:Generated_Source\PSoC4/CyLib.c ****         *
2401:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2402:Generated_Source\PSoC4/CyLib.c ****         *
2403:Generated_Source\PSoC4/CyLib.c ****         * \param interrupt:
2404:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_PLL_LOCK
2405:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_WD_ERR
2406:Generated_Source\PSoC4/CyLib.c ****         *  CY_SYS_PLL_INTR_CSV_CLK_SW
2407:Generated_Source\PSoC4/CyLib.c ****         *  A logical OR of above can be used as input parameter.
2408:Generated_Source\PSoC4/CyLib.c ****         *
2409:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2410:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllSetInterrupt(uint32 interrupt)
2411:Generated_Source\PSoC4/CyLib.c ****         {
2412:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_INTR_SET, interrupt);
2413:Generated_Source\PSoC4/CyLib.c ****         }
2414:Generated_Source\PSoC4/CyLib.c **** 
2415:Generated_Source\PSoC4/CyLib.c **** 
2416:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2417:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnable
2418:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2419:Generated_Source\PSoC4/CyLib.c ****         *
2420:Generated_Source\PSoC4/CyLib.c ****         * This API enables clock supervision on PLL frequency lock and loss.
2421:Generated_Source\PSoC4/CyLib.c ****         *
2422:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2423:Generated_Source\PSoC4/CyLib.c ****         *
2424:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2425:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnable(void)
2426:Generated_Source\PSoC4/CyLib.c ****         {
2427:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN, 0x1uL);
2428:Generated_Source\PSoC4/CyLib.c ****         }
2429:Generated_Source\PSoC4/CyLib.c **** 
2430:Generated_Source\PSoC4/CyLib.c **** 
2431:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2432:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisable
2433:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2434:Generated_Source\PSoC4/CyLib.c ****         *
2435:Generated_Source\PSoC4/CyLib.c ****         * This API disables clock supervision on PLL.
2436:Generated_Source\PSoC4/CyLib.c ****         *
2437:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4500 with PLL devices.
2438:Generated_Source\PSoC4/CyLib.c ****         *
2439:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2440:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisable(void)
2441:Generated_Source\PSoC4/CyLib.c ****         {
2442:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_REF_CTL, CYFLD_EXCO_CSV_EN);
2443:Generated_Source\PSoC4/CyLib.c ****         }
2444:Generated_Source\PSoC4/CyLib.c **** 
2445:Generated_Source\PSoC4/CyLib.c **** 
2446:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 50


2447:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetSpvrCtl
2448:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2449:Generated_Source\PSoC4/CyLib.c ****         *
2450:Generated_Source\PSoC4/CyLib.c ****         *  This API enables sets the clock supervision parameters.
2451:Generated_Source\PSoC4/CyLib.c ****         *
2452:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2453:Generated_Source\PSoC4/CyLib.c ****         *
2454:Generated_Source\PSoC4/CyLib.c ****         * \param startupDelay:
2455:Generated_Source\PSoC4/CyLib.c ****         *  startup delay time -1 in reference clock cycles after enable
2456:Generated_Source\PSoC4/CyLib.c ****         *  or deep sleep wake up from reference clock start to monitored clock start
2457:Generated_Source\PSoC4/CyLib.c ****         *
2458:Generated_Source\PSoC4/CyLib.c ****         * \param csvSwitch:
2459:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_INT_EN – Enable INTR.CSV_CLK_SW if a clock switch occurs to IMO
2460:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_TRIG_EN – Enable CSV to cause trigger if a clock switch occurs to IMO
2461:Generated_Source\PSoC4/CyLib.c ****         * CY_SYS_PLL_CSV_CLK_SW_EN – Enable CSV to cause clock switch IMO (enabled by default in 
2462:Generated_Source\PSoC4/CyLib.c ****         *
2463:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2464:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetSpvrCtl(uint32 startupDelay, uint32 csvSwitch)
2465:Generated_Source\PSoC4/CyLib.c ****         {
2466:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_CTL);
2467:Generated_Source\PSoC4/CyLib.c **** 
2468:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_STARTUP_MASK | CY_SYS_PLL_CSV_MASK);
2469:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (startupDelay | csvSwitch);
2470:Generated_Source\PSoC4/CyLib.c **** 
2471:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_CTL, tmpRegVal);
2472:Generated_Source\PSoC4/CyLib.c ****         }
2473:Generated_Source\PSoC4/CyLib.c **** 
2474:Generated_Source\PSoC4/CyLib.c **** 
2475:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2476:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetRefLimits
2477:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2478:Generated_Source\PSoC4/CyLib.c ****         *
2479:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the cycle time lower and upper limits.
2480:Generated_Source\PSoC4/CyLib.c ****         *
2481:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2482:Generated_Source\PSoC4/CyLib.c ****         *
2483:Generated_Source\PSoC4/CyLib.c ****         * \param lower:
2484:Generated_Source\PSoC4/CyLib.c ****         *  Sets the lower limit -1, in reference clock cycles,
2485:Generated_Source\PSoC4/CyLib.c ****         *  before the next monitored clock event is allowed to happen.  If a monitored
2486:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens before this limit is reached a CSV error is detected.
2487:Generated_Source\PSoC4/CyLib.c ****         *
2488:Generated_Source\PSoC4/CyLib.c ****         * \param upper:
2489:Generated_Source\PSoC4/CyLib.c ****         *  Sets the upper limit -1, in reference clock cycles, before (or same time)
2490:Generated_Source\PSoC4/CyLib.c ****         *  the next monitored clock event must happen.  If a monitored clock event
2491:Generated_Source\PSoC4/CyLib.c ****         *  does not happen before this limit is reached, or does not happen at all
2492:Generated_Source\PSoC4/CyLib.c ****         *  (clock loss), a CSV error is detected.
2493:Generated_Source\PSoC4/CyLib.c ****         *
2494:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2495:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetRefLimits(uint32 lower, uint32 upper)
2496:Generated_Source\PSoC4/CyLib.c ****         {
2497:Generated_Source\PSoC4/CyLib.c ****             uint32 tmpRegVal = CY_GET_REG32(CYREG_EXCO_REF_LIMIT);
2498:Generated_Source\PSoC4/CyLib.c **** 
2499:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal &= ~(CY_SYS_PLL_REF_LIMIT_LOWER_MASK | CY_SYS_PLL_REF_LIMIT_UPPER_MASK);
2500:Generated_Source\PSoC4/CyLib.c ****             tmpRegVal |= (lower | ((uint32)(upper << CY_SYS_PLL_REF_LIMIT_UPPER_OFFSET)));
2501:Generated_Source\PSoC4/CyLib.c **** 
2502:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32(CYREG_EXCO_REF_LIMIT, tmpRegVal);
2503:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 51


2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetRefLimits
2508:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c ****         *
2510:Generated_Source\PSoC4/CyLib.c ****         *  This API gets the cycle time lower and upper limits.
2511:Generated_Source\PSoC4/CyLib.c ****         *
2512:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2513:Generated_Source\PSoC4/CyLib.c ****         *
2514:Generated_Source\PSoC4/CyLib.c ****         * \return
2515:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 31:16 – upper limit
2516:Generated_Source\PSoC4/CyLib.c ****         *  *Bits 15:0 – lower limit
2517:Generated_Source\PSoC4/CyLib.c ****         *
2518:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2519:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetRefLimits(void)
2520:Generated_Source\PSoC4/CyLib.c ****         {
2521:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32(CYREG_EXCO_REF_LIMIT));
2522:Generated_Source\PSoC4/CyLib.c ****         }
2523:Generated_Source\PSoC4/CyLib.c **** 
2524:Generated_Source\PSoC4/CyLib.c **** 
2525:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2526:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvSetPeriod
2527:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2528:Generated_Source\PSoC4/CyLib.c ****         *
2529:Generated_Source\PSoC4/CyLib.c ****         *  This API sets the csv period time.
2530:Generated_Source\PSoC4/CyLib.c ****         *
2531:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2532:Generated_Source\PSoC4/CyLib.c ****         *
2533:Generated_Source\PSoC4/CyLib.c ****         * \param period:
2534:Generated_Source\PSoC4/CyLib.c ****         *  Set the Period -1, in monitored clock cycles, before the next monitored
2535:Generated_Source\PSoC4/CyLib.c ****         *  clock event happens.
2536:Generated_Source\PSoC4/CyLib.c ****         *  PERIOD <=  (UPPER+1) / FREQ_RATIO -1, with
2537:Generated_Source\PSoC4/CyLib.c ****         *  FREQ_RATIO = (Reference frequency / Monitored frequency).
2538:Generated_Source\PSoC4/CyLib.c ****         *  In case the clocks are asynchronous: PERIOD <=  UPPER / FREQ_RATIO -1
2539:Generated_Source\PSoC4/CyLib.c ****         *
2540:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2541:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvSetPeriod(uint32 period)
2542:Generated_Source\PSoC4/CyLib.c ****         {
2543:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD, period);
2544:Generated_Source\PSoC4/CyLib.c ****         }
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c **** 
2547:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2548:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvGetPeriod
2549:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2550:Generated_Source\PSoC4/CyLib.c ****         *
2551:Generated_Source\PSoC4/CyLib.c ****         *  This API returns the CSV period time.
2552:Generated_Source\PSoC4/CyLib.c ****         *
2553:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2554:Generated_Source\PSoC4/CyLib.c ****         *
2555:Generated_Source\PSoC4/CyLib.c ****         * \return Period time
2556:Generated_Source\PSoC4/CyLib.c ****         *
2557:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2558:Generated_Source\PSoC4/CyLib.c ****         uint32 CySysClkPllCsvGetPeriod(void)
2559:Generated_Source\PSoC4/CyLib.c ****         {
2560:Generated_Source\PSoC4/CyLib.c ****             return ((uint32)CY_GET_REG32_FIELD(CYREG_EXCO_MON_CTL, CYFLD_EXCO_PERIOD));
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 52


2561:Generated_Source\PSoC4/CyLib.c ****         }
2562:Generated_Source\PSoC4/CyLib.c **** 
2563:Generated_Source\PSoC4/CyLib.c **** 
2564:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2565:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvEnableReset
2566:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2567:Generated_Source\PSoC4/CyLib.c ****         *
2568:Generated_Source\PSoC4/CyLib.c ****         *  This API enables the system reset feature when the clock supervisor switches
2569:Generated_Source\PSoC4/CyLib.c ****         *  the clock source to IMO. A programmable delay counter starts at delay count
2570:Generated_Source\PSoC4/CyLib.c ****         *  value (see CySysClkPllCsvReloadPgmDlyCounter API) and counts down.
2571:Generated_Source\PSoC4/CyLib.c ****         *
2572:Generated_Source\PSoC4/CyLib.c ****         *  The CSV block will assert system reset when the counter reaches zero unless
2573:Generated_Source\PSoC4/CyLib.c ****         *  firmware intervenes and reloads the counter using
2574:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2575:Generated_Source\PSoC4/CyLib.c ****         *
2576:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2577:Generated_Source\PSoC4/CyLib.c ****         *
2578:Generated_Source\PSoC4/CyLib.c ****         *  Side Effects and Restrictions:
2579:Generated_Source\PSoC4/CyLib.c ****         *  If a clock switch occurs, CSV block will reset the device when the delay
2580:Generated_Source\PSoC4/CyLib.c ****         *  counter reaches zero unless firmware reloads the counter using
2581:Generated_Source\PSoC4/CyLib.c ****         *  CySysClkPllCsvReloadPgmDlyCounter() API.
2582:Generated_Source\PSoC4/CyLib.c ****         *
2583:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2584:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvEnableReset(void)
2585:Generated_Source\PSoC4/CyLib.c ****         {
2586:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN, 0x1uL);
2587:Generated_Source\PSoC4/CyLib.c ****         }
2588:Generated_Source\PSoC4/CyLib.c **** 
2589:Generated_Source\PSoC4/CyLib.c **** 
2590:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2591:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvDisableReset
2592:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2593:Generated_Source\PSoC4/CyLib.c ****         *
2594:Generated_Source\PSoC4/CyLib.c ****         *  This API disables the system reset feature when the clock supervisor
2595:Generated_Source\PSoC4/CyLib.c ****         *  switches the clock source to IMO.
2596:Generated_Source\PSoC4/CyLib.c ****         *
2597:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2598:Generated_Source\PSoC4/CyLib.c ****         *
2599:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2600:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvDisableReset(void)
2601:Generated_Source\PSoC4/CyLib.c ****         {
2602:Generated_Source\PSoC4/CyLib.c ****             CY_CLEAR_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_EN);
2603:Generated_Source\PSoC4/CyLib.c ****         }
2604:Generated_Source\PSoC4/CyLib.c **** 
2605:Generated_Source\PSoC4/CyLib.c **** 
2606:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
2607:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkPllCsvReloadPgmDlyCounter
2608:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
2609:Generated_Source\PSoC4/CyLib.c ****         *
2610:Generated_Source\PSoC4/CyLib.c ****         *  This API reloads the programmable delay counter with the delay count value.
2611:Generated_Source\PSoC4/CyLib.c ****         *
2612:Generated_Source\PSoC4/CyLib.c ****         *  This API is available only for PSoC 4500 with PLL devices.
2613:Generated_Source\PSoC4/CyLib.c ****         *
2614:Generated_Source\PSoC4/CyLib.c ****         * \param delayCount:
2615:Generated_Source\PSoC4/CyLib.c ****         *  Valid range 0-65535, device default value is 256.
2616:Generated_Source\PSoC4/CyLib.c ****         *  Sets the # of counts of IMO clock before system reset is asserted.
2617:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 53


2618:Generated_Source\PSoC4/CyLib.c ****         *
2619:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
2620:Generated_Source\PSoC4/CyLib.c ****         void CySysClkPllCsvReloadPgmDlyCounter(uint32 delayCount)
2621:Generated_Source\PSoC4/CyLib.c ****         {
2622:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY, CYFLD_EXCO_DLYCOUNT, delayCount);
2623:Generated_Source\PSoC4/CyLib.c ****             CY_SET_REG32_FIELD(CYREG_EXCO_RSTDLY_CTL, CYFLD_EXCO_LOAD, 0x1uL);
2624:Generated_Source\PSoC4/CyLib.c ****         }
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_ECOV2_SRSSLT) */
2627:Generated_Source\PSoC4/CyLib.c **** 
2628:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2629:Generated_Source\PSoC4/CyLib.c **** 
2630:Generated_Source\PSoC4/CyLib.c **** 
2631:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2632:Generated_Source\PSoC4/CyLib.c **** 
2633:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2634:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2635:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2636:Generated_Source\PSoC4/CyLib.c ****     *
2637:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2638:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2639:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2640:Generated_Source\PSoC4/CyLib.c ****     *
2641:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2642:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2643:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2644:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2645:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2646:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2647:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2648:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2649:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2650:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2651:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2652:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2653:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2654:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2655:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2656:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2657:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2658:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2659:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2660:Generated_Source\PSoC4/CyLib.c ****     *
2661:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2662:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2663:Generated_Source\PSoC4/CyLib.c ****     {
2664:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2665:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2666:Generated_Source\PSoC4/CyLib.c **** 
2667:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2668:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2669:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2670:Generated_Source\PSoC4/CyLib.c **** 
2671:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2672:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2673:Generated_Source\PSoC4/CyLib.c **** 
2674:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 54


2675:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2678:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2679:Generated_Source\PSoC4/CyLib.c **** 
2680:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2681:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2682:Generated_Source\PSoC4/CyLib.c ****     }
2683:Generated_Source\PSoC4/CyLib.c **** 
2684:Generated_Source\PSoC4/CyLib.c **** 
2685:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2686:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2687:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2688:Generated_Source\PSoC4/CyLib.c ****     *
2689:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2690:Generated_Source\PSoC4/CyLib.c ****     *
2691:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2692:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2693:Generated_Source\PSoC4/CyLib.c ****     {
 346              		.loc 1 2693 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              		@ link register save eliminated.
2694:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 351              		.loc 1 2694 0
 352 0000 054A     		ldr	r2, .L28
 353 0002 1368     		ldr	r3, [r2]
 354 0004 0221     		movs	r1, #2
 355 0006 8B43     		bics	r3, r1
 356 0008 1360     		str	r3, [r2]
2695:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 357              		.loc 1 2695 0
 358 000a 044A     		ldr	r2, .L28+4
 359 000c 1368     		ldr	r3, [r2]
 360 000e 0139     		subs	r1, r1, #1
 361 0010 8B43     		bics	r3, r1
 362 0012 1360     		str	r3, [r2]
2696:Generated_Source\PSoC4/CyLib.c ****     }
 363              		.loc 1 2696 0
 364              		@ sp needed
 365 0014 7047     		bx	lr
 366              	.L29:
 367 0016 C046     		.align	2
 368              	.L28:
 369 0018 08000B40 		.word	1074462728
 370 001c 18000B40 		.word	1074462744
 371              		.cfi_endproc
 372              	.LFE14:
 373              		.size	CySysLvdDisable, .-CySysLvdDisable
 374              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 375              		.align	2
 376              		.global	CySysLvdGetInterruptSource
 377              		.code	16
 378              		.thumb_func
 379              		.type	CySysLvdGetInterruptSource, %function
 380              	CySysLvdGetInterruptSource:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 55


 381              	.LFB15:
2697:Generated_Source\PSoC4/CyLib.c **** 
2698:Generated_Source\PSoC4/CyLib.c **** 
2699:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2700:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2701:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2702:Generated_Source\PSoC4/CyLib.c ****     *
2703:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2704:Generated_Source\PSoC4/CyLib.c ****     *
2705:Generated_Source\PSoC4/CyLib.c ****     * \return
2706:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2707:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2708:Generated_Source\PSoC4/CyLib.c ****     *
2709:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2710:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2711:Generated_Source\PSoC4/CyLib.c ****     {
 382              		.loc 1 2711 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
2712:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 387              		.loc 1 2712 0
 388 0000 024B     		ldr	r3, .L31
 389 0002 1B68     		ldr	r3, [r3]
 390 0004 0220     		movs	r0, #2
 391 0006 1840     		ands	r0, r3
2713:Generated_Source\PSoC4/CyLib.c ****     }
 392              		.loc 1 2713 0
 393              		@ sp needed
 394 0008 7047     		bx	lr
 395              	.L32:
 396 000a C046     		.align	2
 397              	.L31:
 398 000c 04000B40 		.word	1074462724
 399              		.cfi_endproc
 400              	.LFE15:
 401              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 402              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 403              		.align	2
 404              		.global	CySysLvdClearInterrupt
 405              		.code	16
 406              		.thumb_func
 407              		.type	CySysLvdClearInterrupt, %function
 408              	CySysLvdClearInterrupt:
 409              	.LFB16:
2714:Generated_Source\PSoC4/CyLib.c **** 
2715:Generated_Source\PSoC4/CyLib.c **** 
2716:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2717:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2718:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2719:Generated_Source\PSoC4/CyLib.c ****     *
2720:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2721:Generated_Source\PSoC4/CyLib.c ****     *
2722:Generated_Source\PSoC4/CyLib.c ****     * \return
2723:Generated_Source\PSoC4/CyLib.c ****     *  None
2724:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 56


2725:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2726:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2727:Generated_Source\PSoC4/CyLib.c ****     {
 410              		.loc 1 2727 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              		@ link register save eliminated.
2728:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 415              		.loc 1 2728 0
 416 0000 0222     		movs	r2, #2
 417 0002 014B     		ldr	r3, .L34
 418 0004 1A60     		str	r2, [r3]
2729:Generated_Source\PSoC4/CyLib.c ****     }
 419              		.loc 1 2729 0
 420              		@ sp needed
 421 0006 7047     		bx	lr
 422              	.L35:
 423              		.align	2
 424              	.L34:
 425 0008 04000B40 		.word	1074462724
 426              		.cfi_endproc
 427              	.LFE16:
 428              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 429              		.section	.text.CySysGetResetReason,"ax",%progbits
 430              		.align	2
 431              		.global	CySysGetResetReason
 432              		.code	16
 433              		.thumb_func
 434              		.type	CySysGetResetReason, %function
 435              	CySysGetResetReason:
 436              	.LFB17:
2730:Generated_Source\PSoC4/CyLib.c **** 
2731:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2732:Generated_Source\PSoC4/CyLib.c **** 
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2735:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2736:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2737:Generated_Source\PSoC4/CyLib.c **** *
2738:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2739:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2740:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2741:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2742:Generated_Source\PSoC4/CyLib.c **** *
2743:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2744:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2745:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2746:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2747:Generated_Source\PSoC4/CyLib.c **** *
2748:Generated_Source\PSoC4/CyLib.c **** * \return
2749:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2752:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2753:Generated_Source\PSoC4/CyLib.c **** {
 437              		.loc 1 2753 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 57


 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 442              	.LVL17:
 443 0000 0200     		movs	r2, r0
2754:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2755:Generated_Source\PSoC4/CyLib.c **** 
2756:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 444              		.loc 1 2756 0
 445 0002 1920     		movs	r0, #25
 446              	.LVL18:
 447 0004 0240     		ands	r2, r0
 448              	.LVL19:
2757:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 449              		.loc 1 2757 0
 450 0006 0249     		ldr	r1, .L37
 451 0008 0B68     		ldr	r3, [r1]
 452 000a 1840     		ands	r0, r3
 453              	.LVL20:
2758:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2759:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 454              		.loc 1 2759 0
 455 000c 0A60     		str	r2, [r1]
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2762:Generated_Source\PSoC4/CyLib.c **** }
 456              		.loc 1 2762 0
 457              		@ sp needed
 458 000e 7047     		bx	lr
 459              	.L38:
 460              		.align	2
 461              	.L37:
 462 0010 00030B40 		.word	1074463488
 463              		.cfi_endproc
 464              	.LFE17:
 465              		.size	CySysGetResetReason, .-CySysGetResetReason
 466              		.section	.text.CyDisableInts,"ax",%progbits
 467              		.align	2
 468              		.global	CyDisableInts
 469              		.code	16
 470              		.thumb_func
 471              		.type	CyDisableInts, %function
 472              	CyDisableInts:
 473              	.LFB18:
2763:Generated_Source\PSoC4/CyLib.c **** 
2764:Generated_Source\PSoC4/CyLib.c **** 
2765:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2766:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2767:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2770:Generated_Source\PSoC4/CyLib.c **** *
2771:Generated_Source\PSoC4/CyLib.c **** * \return
2772:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2773:Generated_Source\PSoC4/CyLib.c **** *
2774:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 58


2775:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2776:Generated_Source\PSoC4/CyLib.c **** {
 474              		.loc 1 2776 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              		@ link register save eliminated.
2777:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2778:Generated_Source\PSoC4/CyLib.c **** 
2779:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2780:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 479              		.loc 1 2780 0
 480 0000 024B     		ldr	r3, .L40
 481 0002 1868     		ldr	r0, [r3]
 482              	.LVL21:
2781:Generated_Source\PSoC4/CyLib.c **** 
2782:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2783:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 483              		.loc 1 2783 0
 484 0004 0122     		movs	r2, #1
 485 0006 5242     		rsbs	r2, r2, #0
 486 0008 1A60     		str	r2, [r3]
2784:Generated_Source\PSoC4/CyLib.c **** 
2785:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2786:Generated_Source\PSoC4/CyLib.c **** }
 487              		.loc 1 2786 0
 488              		@ sp needed
 489 000a 7047     		bx	lr
 490              	.L41:
 491              		.align	2
 492              	.L40:
 493 000c 80E100E0 		.word	-536813184
 494              		.cfi_endproc
 495              	.LFE18:
 496              		.size	CyDisableInts, .-CyDisableInts
 497              		.section	.text.CyEnableInts,"ax",%progbits
 498              		.align	2
 499              		.global	CyEnableInts
 500              		.code	16
 501              		.thumb_func
 502              		.type	CyEnableInts, %function
 503              	CyEnableInts:
 504              	.LFB19:
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c **** 
2789:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2790:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2791:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2792:Generated_Source\PSoC4/CyLib.c **** *
2793:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2794:Generated_Source\PSoC4/CyLib.c **** *
2795:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2796:Generated_Source\PSoC4/CyLib.c **** *
2797:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2798:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2799:Generated_Source\PSoC4/CyLib.c **** {
 505              		.loc 1 2799 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 59


 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              		@ link register save eliminated.
 510              	.LVL22:
2800:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 511              		.loc 1 2800 0
 512 0000 014B     		ldr	r3, .L43
 513 0002 1860     		str	r0, [r3]
2801:Generated_Source\PSoC4/CyLib.c **** }
 514              		.loc 1 2801 0
 515              		@ sp needed
 516 0004 7047     		bx	lr
 517              	.L44:
 518 0006 C046     		.align	2
 519              	.L43:
 520 0008 00E100E0 		.word	-536813312
 521              		.cfi_endproc
 522              	.LFE19:
 523              		.size	CyEnableInts, .-CyEnableInts
 524              		.section	.text.CyIntEnable,"ax",%progbits
 525              		.align	2
 526              		.global	CyIntEnable
 527              		.code	16
 528              		.thumb_func
 529              		.type	CyIntEnable, %function
 530              	CyIntEnable:
 531              	.LFB26:
2802:Generated_Source\PSoC4/CyLib.c **** 
2803:Generated_Source\PSoC4/CyLib.c **** 
2804:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2805:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2806:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2807:Generated_Source\PSoC4/CyLib.c **** *
2808:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2809:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2810:Generated_Source\PSoC4/CyLib.c **** *
2811:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2812:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2813:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2814:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2815:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2816:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2817:Generated_Source\PSoC4/CyLib.c **** *
2818:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2819:Generated_Source\PSoC4/CyLib.c **** *
2820:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2823:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2824:Generated_Source\PSoC4/CyLib.c **** {
2825:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2826:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2827:Generated_Source\PSoC4/CyLib.c **** 
2828:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 60


2831:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2832:Generated_Source\PSoC4/CyLib.c **** 
2833:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2834:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2835:Generated_Source\PSoC4/CyLib.c **** 
2836:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2837:Generated_Source\PSoC4/CyLib.c **** }
2838:Generated_Source\PSoC4/CyLib.c **** 
2839:Generated_Source\PSoC4/CyLib.c **** 
2840:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2841:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2842:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2843:Generated_Source\PSoC4/CyLib.c **** *
2844:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2845:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2846:Generated_Source\PSoC4/CyLib.c **** *
2847:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2848:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2849:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2850:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2851:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2852:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2855:Generated_Source\PSoC4/CyLib.c **** *
2856:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2857:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2858:Generated_Source\PSoC4/CyLib.c **** {
2859:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2860:Generated_Source\PSoC4/CyLib.c **** 
2861:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2862:Generated_Source\PSoC4/CyLib.c **** 
2863:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2864:Generated_Source\PSoC4/CyLib.c **** }
2865:Generated_Source\PSoC4/CyLib.c **** 
2866:Generated_Source\PSoC4/CyLib.c **** 
2867:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2868:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2869:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2870:Generated_Source\PSoC4/CyLib.c **** *
2871:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2872:Generated_Source\PSoC4/CyLib.c **** *
2873:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2874:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2882:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2885:Generated_Source\PSoC4/CyLib.c **** 
2886:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2887:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 61


2888:Generated_Source\PSoC4/CyLib.c **** 
2889:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2890:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2891:Generated_Source\PSoC4/CyLib.c **** 
2892:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2893:Generated_Source\PSoC4/CyLib.c **** }
2894:Generated_Source\PSoC4/CyLib.c **** 
2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2897:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2898:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2899:Generated_Source\PSoC4/CyLib.c **** *
2900:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2903:Generated_Source\PSoC4/CyLib.c **** *
2904:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2907:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2908:Generated_Source\PSoC4/CyLib.c **** {
2909:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2910:Generated_Source\PSoC4/CyLib.c **** 
2911:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2912:Generated_Source\PSoC4/CyLib.c **** 
2913:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2914:Generated_Source\PSoC4/CyLib.c **** }
2915:Generated_Source\PSoC4/CyLib.c **** 
2916:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2917:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2918:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2919:Generated_Source\PSoC4/CyLib.c **** *
2920:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2921:Generated_Source\PSoC4/CyLib.c **** *
2922:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2923:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2924:Generated_Source\PSoC4/CyLib.c **** *
2925:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2926:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2927:Generated_Source\PSoC4/CyLib.c **** {
2928:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2929:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2930:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2931:Generated_Source\PSoC4/CyLib.c **** 
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2933:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2934:Generated_Source\PSoC4/CyLib.c **** 
2935:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2936:Generated_Source\PSoC4/CyLib.c **** 
2937:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2938:Generated_Source\PSoC4/CyLib.c **** 
2939:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2940:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2941:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2942:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 62


2945:Generated_Source\PSoC4/CyLib.c **** }
2946:Generated_Source\PSoC4/CyLib.c **** 
2947:Generated_Source\PSoC4/CyLib.c **** 
2948:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2949:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2950:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2951:Generated_Source\PSoC4/CyLib.c **** *
2952:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2953:Generated_Source\PSoC4/CyLib.c **** *
2954:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2955:Generated_Source\PSoC4/CyLib.c **** *
2956:Generated_Source\PSoC4/CyLib.c **** * \return
2957:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2958:Generated_Source\PSoC4/CyLib.c **** *
2959:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2960:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2961:Generated_Source\PSoC4/CyLib.c **** {
2962:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2963:Generated_Source\PSoC4/CyLib.c **** 
2964:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2965:Generated_Source\PSoC4/CyLib.c **** 
2966:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2969:Generated_Source\PSoC4/CyLib.c **** }
2970:Generated_Source\PSoC4/CyLib.c **** 
2971:Generated_Source\PSoC4/CyLib.c **** 
2972:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2973:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2974:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2975:Generated_Source\PSoC4/CyLib.c **** *
2976:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2979:Generated_Source\PSoC4/CyLib.c **** *
2980:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2981:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2982:Generated_Source\PSoC4/CyLib.c **** {
 532              		.loc 1 2982 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537              	.LVL23:
2983:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 538              		.loc 1 2983 0
 539 0000 1F23     		movs	r3, #31
 540 0002 1840     		ands	r0, r3
 541              	.LVL24:
 542 0004 1E3B     		subs	r3, r3, #30
 543 0006 8340     		lsls	r3, r3, r0
 544 0008 014A     		ldr	r2, .L46
 545 000a 1360     		str	r3, [r2]
2984:Generated_Source\PSoC4/CyLib.c **** }
 546              		.loc 1 2984 0
 547              		@ sp needed
 548 000c 7047     		bx	lr
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 63


 549              	.L47:
 550 000e C046     		.align	2
 551              	.L46:
 552 0010 00E100E0 		.word	-536813312
 553              		.cfi_endproc
 554              	.LFE26:
 555              		.size	CyIntEnable, .-CyIntEnable
 556              		.section	.text.CyIntGetState,"ax",%progbits
 557              		.align	2
 558              		.global	CyIntGetState
 559              		.code	16
 560              		.thumb_func
 561              		.type	CyIntGetState, %function
 562              	CyIntGetState:
 563              	.LFB27:
2985:Generated_Source\PSoC4/CyLib.c **** 
2986:Generated_Source\PSoC4/CyLib.c **** 
2987:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2988:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2989:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2990:Generated_Source\PSoC4/CyLib.c **** *
2991:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2992:Generated_Source\PSoC4/CyLib.c **** *
2993:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2994:Generated_Source\PSoC4/CyLib.c **** *
2995:Generated_Source\PSoC4/CyLib.c **** * \return
2996:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2997:Generated_Source\PSoC4/CyLib.c **** *
2998:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2999:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
3000:Generated_Source\PSoC4/CyLib.c **** {
 564              		.loc 1 3000 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              		@ link register save eliminated.
 569              	.LVL25:
3001:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
3002:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 570              		.loc 1 3002 0
 571 0000 044B     		ldr	r3, .L49
 572 0002 1B68     		ldr	r3, [r3]
 573 0004 1F22     		movs	r2, #31
 574 0006 1040     		ands	r0, r2
 575              	.LVL26:
 576 0008 C340     		lsrs	r3, r3, r0
 577 000a 1800     		movs	r0, r3
 578 000c 0123     		movs	r3, #1
 579 000e 1840     		ands	r0, r3
3003:Generated_Source\PSoC4/CyLib.c **** }
 580              		.loc 1 3003 0
 581              		@ sp needed
 582 0010 7047     		bx	lr
 583              	.L50:
 584 0012 C046     		.align	2
 585              	.L49:
 586 0014 00E100E0 		.word	-536813312
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 64


 587              		.cfi_endproc
 588              	.LFE27:
 589              		.size	CyIntGetState, .-CyIntGetState
 590              		.section	.text.CyIntDisable,"ax",%progbits
 591              		.align	2
 592              		.global	CyIntDisable
 593              		.code	16
 594              		.thumb_func
 595              		.type	CyIntDisable, %function
 596              	CyIntDisable:
 597              	.LFB28:
3004:Generated_Source\PSoC4/CyLib.c **** 
3005:Generated_Source\PSoC4/CyLib.c **** 
3006:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3007:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
3008:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3009:Generated_Source\PSoC4/CyLib.c **** *
3010:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
3011:Generated_Source\PSoC4/CyLib.c **** *
3012:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
3013:Generated_Source\PSoC4/CyLib.c **** *
3014:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3015:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
3016:Generated_Source\PSoC4/CyLib.c **** {
 598              		.loc 1 3016 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602              		@ link register save eliminated.
 603              	.LVL27:
3017:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 604              		.loc 1 3017 0
 605 0000 1F23     		movs	r3, #31
 606 0002 1840     		ands	r0, r3
 607              	.LVL28:
 608 0004 1E3B     		subs	r3, r3, #30
 609 0006 8340     		lsls	r3, r3, r0
 610 0008 014A     		ldr	r2, .L52
 611 000a 1360     		str	r3, [r2]
3018:Generated_Source\PSoC4/CyLib.c **** }
 612              		.loc 1 3018 0
 613              		@ sp needed
 614 000c 7047     		bx	lr
 615              	.L53:
 616 000e C046     		.align	2
 617              	.L52:
 618 0010 80E100E0 		.word	-536813184
 619              		.cfi_endproc
 620              	.LFE28:
 621              		.size	CyIntDisable, .-CyIntDisable
 622              		.section	.text.CyIntSetPending,"ax",%progbits
 623              		.align	2
 624              		.global	CyIntSetPending
 625              		.code	16
 626              		.thumb_func
 627              		.type	CyIntSetPending, %function
 628              	CyIntSetPending:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 65


 629              	.LFB29:
3019:Generated_Source\PSoC4/CyLib.c **** 
3020:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3021:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
3022:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3023:Generated_Source\PSoC4/CyLib.c **** *
3024:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
3025:Generated_Source\PSoC4/CyLib.c **** *
3026:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3027:Generated_Source\PSoC4/CyLib.c **** *
3028:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3029:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
3030:Generated_Source\PSoC4/CyLib.c **** {
 630              		.loc 1 3030 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 635              	.LVL29:
3031:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 636              		.loc 1 3031 0
 637 0000 1F23     		movs	r3, #31
 638 0002 1840     		ands	r0, r3
 639              	.LVL30:
 640 0004 1E3B     		subs	r3, r3, #30
 641 0006 8340     		lsls	r3, r3, r0
 642 0008 014A     		ldr	r2, .L55
 643 000a 1360     		str	r3, [r2]
3032:Generated_Source\PSoC4/CyLib.c **** }
 644              		.loc 1 3032 0
 645              		@ sp needed
 646 000c 7047     		bx	lr
 647              	.L56:
 648 000e C046     		.align	2
 649              	.L55:
 650 0010 00E200E0 		.word	-536813056
 651              		.cfi_endproc
 652              	.LFE29:
 653              		.size	CyIntSetPending, .-CyIntSetPending
 654              		.section	.text.CyIntClearPending,"ax",%progbits
 655              		.align	2
 656              		.global	CyIntClearPending
 657              		.code	16
 658              		.thumb_func
 659              		.type	CyIntClearPending, %function
 660              	CyIntClearPending:
 661              	.LFB30:
3033:Generated_Source\PSoC4/CyLib.c **** 
3034:Generated_Source\PSoC4/CyLib.c **** 
3035:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3036:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
3037:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3038:Generated_Source\PSoC4/CyLib.c **** *
3039:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
3040:Generated_Source\PSoC4/CyLib.c **** *
3041:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
3042:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 66


3043:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3044:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
3045:Generated_Source\PSoC4/CyLib.c **** {
 662              		.loc 1 3045 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 667              	.LVL31:
3046:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 668              		.loc 1 3046 0
 669 0000 1F23     		movs	r3, #31
 670 0002 1840     		ands	r0, r3
 671              	.LVL32:
 672 0004 1E3B     		subs	r3, r3, #30
 673 0006 8340     		lsls	r3, r3, r0
 674 0008 014A     		ldr	r2, .L58
 675 000a 1360     		str	r3, [r2]
3047:Generated_Source\PSoC4/CyLib.c **** }
 676              		.loc 1 3047 0
 677              		@ sp needed
 678 000c 7047     		bx	lr
 679              	.L59:
 680 000e C046     		.align	2
 681              	.L58:
 682 0010 80E200E0 		.word	-536812928
 683              		.cfi_endproc
 684              	.LFE30:
 685              		.size	CyIntClearPending, .-CyIntClearPending
 686              		.section	.text.CyHalt,"ax",%progbits
 687              		.align	2
 688              		.global	CyHalt
 689              		.code	16
 690              		.thumb_func
 691              		.type	CyHalt, %function
 692              	CyHalt:
 693              	.LFB31:
3048:Generated_Source\PSoC4/CyLib.c **** 
3049:Generated_Source\PSoC4/CyLib.c **** 
3050:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3051:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
3052:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3053:Generated_Source\PSoC4/CyLib.c **** *
3054:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
3055:Generated_Source\PSoC4/CyLib.c **** *
3056:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
3057:Generated_Source\PSoC4/CyLib.c **** *
3058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3059:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
3060:Generated_Source\PSoC4/CyLib.c **** {
 694              		.loc 1 3060 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 0
 697              		@ frame_needed = 0, uses_anonymous_args = 0
 698              		@ link register save eliminated.
 699              	.LVL33:
3061:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 67


3062:Generated_Source\PSoC4/CyLib.c ****     {
3063:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
3064:Generated_Source\PSoC4/CyLib.c ****     }
3065:Generated_Source\PSoC4/CyLib.c **** 
3066:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
3067:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
3068:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
3069:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 700              		.loc 1 3069 0
 701              		.syntax divided
 702              	@ 3069 "Generated_Source\PSoC4\CyLib.c" 1
 703 0000 01BE     		    bkpt    1
 704              	@ 0 "" 2
3070:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
3071:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
3072:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
3073:Generated_Source\PSoC4/CyLib.c **** }
 705              		.loc 1 3073 0
 706              		.thumb
 707              		.syntax unified
 708              		@ sp needed
 709 0002 7047     		bx	lr
 710              		.cfi_endproc
 711              	.LFE31:
 712              		.size	CyHalt, .-CyHalt
 713              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 714              		.align	2
 715              		.global	CySysClkWriteEcoDiv
 716              		.code	16
 717              		.thumb_func
 718              		.type	CySysClkWriteEcoDiv, %function
 719              	CySysClkWriteEcoDiv:
 720              	.LFB12:
1429:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
 721              		.loc 1 1429 0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 0
 724              		@ frame_needed = 0, uses_anonymous_args = 0
 725              	.LVL34:
 726 0000 10B5     		push	{r4, lr}
 727              		.cfi_def_cfa_offset 8
 728              		.cfi_offset 4, -8
 729              		.cfi_offset 14, -4
 730 0002 0400     		movs	r4, r0
1432:Generated_Source\PSoC4/CyLib.c ****             {
 731              		.loc 1 1432 0
 732 0004 0A4B     		ldr	r3, .L64
 733 0006 1B68     		ldr	r3, [r3]
 734 0008 0722     		movs	r2, #7
 735 000a 1340     		ands	r3, r2
 736 000c 022B     		cmp	r3, #2
 737 000e 0BD0     		beq	.L62
1434:Generated_Source\PSoC4/CyLib.c **** 
 738              		.loc 1 1434 0
 739 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 740              	.LVL35:
1436:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 68


 741              		.loc 1 1436 0
 742 0014 0321     		movs	r1, #3
 743 0016 0C40     		ands	r4, r1
 744              	.LVL36:
1437:Generated_Source\PSoC4/CyLib.c **** 
 745              		.loc 1 1437 0
 746 0018 064A     		ldr	r2, .L64+4
 747 001a 1368     		ldr	r3, [r2]
 748 001c 8B43     		bics	r3, r1
1436:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 749              		.loc 1 1436 0
 750 001e 2343     		orrs	r3, r4
 751 0020 1360     		str	r3, [r2]
1439:Generated_Source\PSoC4/CyLib.c ****             }
 752              		.loc 1 1439 0
 753 0022 FFF7FEFF 		bl	CyExitCriticalSection
 754              	.LVL37:
 755 0026 02E0     		b	.L61
 756              	.LVL38:
 757              	.L62:
1444:Generated_Source\PSoC4/CyLib.c ****             }
 758              		.loc 1 1444 0 discriminator 1
 759 0028 0020     		movs	r0, #0
 760              	.LVL39:
 761 002a FFF7FEFF 		bl	CyHalt
 762              	.LVL40:
 763              	.L61:
1446:Generated_Source\PSoC4/CyLib.c **** 
 764              		.loc 1 1446 0
 765              		@ sp needed
 766 002e 10BD     		pop	{r4, pc}
 767              	.L65:
 768              		.align	2
 769              	.L64:
 770 0030 00010B40 		.word	1074462976
 771 0034 64F02E40 		.word	1076818020
 772              		.cfi_endproc
 773              	.LFE12:
 774              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 775              		.section	.text.CyIntSetSysVector,"ax",%progbits
 776              		.align	2
 777              		.global	CyIntSetSysVector
 778              		.code	16
 779              		.thumb_func
 780              		.type	CyIntSetSysVector, %function
 781              	CyIntSetSysVector:
 782              	.LFB20:
2824:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 783              		.loc 1 2824 0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 0
 786              		@ frame_needed = 0, uses_anonymous_args = 0
 787              	.LVL41:
 788 0000 70B5     		push	{r4, r5, r6, lr}
 789              		.cfi_def_cfa_offset 16
 790              		.cfi_offset 4, -16
 791              		.cfi_offset 5, -12
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 69


 792              		.cfi_offset 6, -8
 793              		.cfi_offset 14, -4
 794 0002 0400     		movs	r4, r0
 795 0004 0D00     		movs	r5, r1
 796              	.LVL42:
2828:Generated_Source\PSoC4/CyLib.c **** 
 797              		.loc 1 2828 0
 798 0006 0F28     		cmp	r0, #15
 799 0008 02D9     		bls	.L67
2828:Generated_Source\PSoC4/CyLib.c **** 
 800              		.loc 1 2828 0 is_stmt 0 discriminator 1
 801 000a 0020     		movs	r0, #0
 802              	.LVL43:
 803 000c FFF7FEFF 		bl	CyHalt
 804              	.LVL44:
 805              	.L67:
2831:Generated_Source\PSoC4/CyLib.c **** 
 806              		.loc 1 2831 0 is_stmt 1
 807 0010 A400     		lsls	r4, r4, #2
 808 0012 8023     		movs	r3, #128
 809 0014 9B05     		lsls	r3, r3, #22
 810 0016 9C46     		mov	ip, r3
 811 0018 6444     		add	r4, r4, ip
 812 001a 2068     		ldr	r0, [r4]
 813              	.LVL45:
2834:Generated_Source\PSoC4/CyLib.c **** 
 814              		.loc 1 2834 0
 815 001c 2560     		str	r5, [r4]
2837:Generated_Source\PSoC4/CyLib.c **** 
 816              		.loc 1 2837 0
 817              		@ sp needed
 818              	.LVL46:
 819 001e 70BD     		pop	{r4, r5, r6, pc}
 820              		.cfi_endproc
 821              	.LFE20:
 822              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 823              		.section	.text.CyIntGetSysVector,"ax",%progbits
 824              		.align	2
 825              		.global	CyIntGetSysVector
 826              		.code	16
 827              		.thumb_func
 828              		.type	CyIntGetSysVector, %function
 829              	CyIntGetSysVector:
 830              	.LFB21:
2858:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 831              		.loc 1 2858 0
 832              		.cfi_startproc
 833              		@ args = 0, pretend = 0, frame = 0
 834              		@ frame_needed = 0, uses_anonymous_args = 0
 835              	.LVL47:
 836 0000 10B5     		push	{r4, lr}
 837              		.cfi_def_cfa_offset 8
 838              		.cfi_offset 4, -8
 839              		.cfi_offset 14, -4
 840 0002 0400     		movs	r4, r0
 841              	.LVL48:
2861:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 70


 842              		.loc 1 2861 0
 843 0004 0F28     		cmp	r0, #15
 844 0006 02D9     		bls	.L69
2861:Generated_Source\PSoC4/CyLib.c **** 
 845              		.loc 1 2861 0 is_stmt 0 discriminator 1
 846 0008 0020     		movs	r0, #0
 847              	.LVL49:
 848 000a FFF7FEFF 		bl	CyHalt
 849              	.LVL50:
 850              	.L69:
2863:Generated_Source\PSoC4/CyLib.c **** }
 851              		.loc 1 2863 0 is_stmt 1
 852 000e A400     		lsls	r4, r4, #2
 853 0010 8023     		movs	r3, #128
 854 0012 9B05     		lsls	r3, r3, #22
 855 0014 9C46     		mov	ip, r3
 856 0016 6444     		add	r4, r4, ip
 857 0018 2068     		ldr	r0, [r4]
2864:Generated_Source\PSoC4/CyLib.c **** 
 858              		.loc 1 2864 0
 859              		@ sp needed
 860 001a 10BD     		pop	{r4, pc}
 861              		.cfi_endproc
 862              	.LFE21:
 863              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 864              		.section	.text.CyIntSetVector,"ax",%progbits
 865              		.align	2
 866              		.global	CyIntSetVector
 867              		.code	16
 868              		.thumb_func
 869              		.type	CyIntSetVector, %function
 870              	CyIntSetVector:
 871              	.LFB22:
2880:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 872              		.loc 1 2880 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 0
 875              		@ frame_needed = 0, uses_anonymous_args = 0
 876              	.LVL51:
 877 0000 70B5     		push	{r4, r5, r6, lr}
 878              		.cfi_def_cfa_offset 16
 879              		.cfi_offset 4, -16
 880              		.cfi_offset 5, -12
 881              		.cfi_offset 6, -8
 882              		.cfi_offset 14, -4
 883 0002 0400     		movs	r4, r0
 884 0004 0D00     		movs	r5, r1
 885              	.LVL52:
2884:Generated_Source\PSoC4/CyLib.c **** 
 886              		.loc 1 2884 0
 887 0006 1F28     		cmp	r0, #31
 888 0008 02D9     		bls	.L71
2884:Generated_Source\PSoC4/CyLib.c **** 
 889              		.loc 1 2884 0 is_stmt 0 discriminator 1
 890 000a 0020     		movs	r0, #0
 891              	.LVL53:
 892 000c FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 71


 893              	.LVL54:
 894              	.L71:
2887:Generated_Source\PSoC4/CyLib.c **** 
 895              		.loc 1 2887 0 is_stmt 1
 896 0010 1034     		adds	r4, r4, #16
 897 0012 A400     		lsls	r4, r4, #2
 898 0014 8023     		movs	r3, #128
 899 0016 9B05     		lsls	r3, r3, #22
 900 0018 9C46     		mov	ip, r3
 901 001a 6444     		add	r4, r4, ip
 902 001c 2068     		ldr	r0, [r4]
 903              	.LVL55:
2890:Generated_Source\PSoC4/CyLib.c **** 
 904              		.loc 1 2890 0
 905 001e 2560     		str	r5, [r4]
2893:Generated_Source\PSoC4/CyLib.c **** 
 906              		.loc 1 2893 0
 907              		@ sp needed
 908              	.LVL56:
 909 0020 70BD     		pop	{r4, r5, r6, pc}
 910              		.cfi_endproc
 911              	.LFE22:
 912              		.size	CyIntSetVector, .-CyIntSetVector
 913 0022 C046     		.section	.text.CyIntGetVector,"ax",%progbits
 914              		.align	2
 915              		.global	CyIntGetVector
 916              		.code	16
 917              		.thumb_func
 918              		.type	CyIntGetVector, %function
 919              	CyIntGetVector:
 920              	.LFB23:
2908:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 921              		.loc 1 2908 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925              	.LVL57:
 926 0000 10B5     		push	{r4, lr}
 927              		.cfi_def_cfa_offset 8
 928              		.cfi_offset 4, -8
 929              		.cfi_offset 14, -4
 930 0002 0400     		movs	r4, r0
 931              	.LVL58:
2911:Generated_Source\PSoC4/CyLib.c **** 
 932              		.loc 1 2911 0
 933 0004 1F28     		cmp	r0, #31
 934 0006 02D9     		bls	.L73
2911:Generated_Source\PSoC4/CyLib.c **** 
 935              		.loc 1 2911 0 is_stmt 0 discriminator 1
 936 0008 0020     		movs	r0, #0
 937              	.LVL59:
 938 000a FFF7FEFF 		bl	CyHalt
 939              	.LVL60:
 940              	.L73:
2913:Generated_Source\PSoC4/CyLib.c **** }
 941              		.loc 1 2913 0 is_stmt 1
 942 000e 1034     		adds	r4, r4, #16
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 72


 943 0010 A400     		lsls	r4, r4, #2
 944 0012 8023     		movs	r3, #128
 945 0014 9B05     		lsls	r3, r3, #22
 946 0016 9C46     		mov	ip, r3
 947 0018 6444     		add	r4, r4, ip
 948 001a 2068     		ldr	r0, [r4]
2914:Generated_Source\PSoC4/CyLib.c **** 
 949              		.loc 1 2914 0
 950              		@ sp needed
 951 001c 10BD     		pop	{r4, pc}
 952              		.cfi_endproc
 953              	.LFE23:
 954              		.size	CyIntGetVector, .-CyIntGetVector
 955 001e C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 956              		.align	2
 957              		.global	CyIntSetPriority
 958              		.code	16
 959              		.thumb_func
 960              		.type	CyIntSetPriority, %function
 961              	CyIntSetPriority:
 962              	.LFB24:
2927:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 963              		.loc 1 2927 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 0, uses_anonymous_args = 0
 967              	.LVL61:
 968 0000 70B5     		push	{r4, r5, r6, lr}
 969              		.cfi_def_cfa_offset 16
 970              		.cfi_offset 4, -16
 971              		.cfi_offset 5, -12
 972              		.cfi_offset 6, -8
 973              		.cfi_offset 14, -4
 974 0002 0400     		movs	r4, r0
 975 0004 0E00     		movs	r6, r1
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 976              		.loc 1 2932 0
 977 0006 0329     		cmp	r1, #3
 978 0008 02D9     		bls	.L75
2932:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 979              		.loc 1 2932 0 is_stmt 0 discriminator 1
 980 000a 0020     		movs	r0, #0
 981              	.LVL62:
 982 000c FFF7FEFF 		bl	CyHalt
 983              	.LVL63:
 984              	.L75:
2933:Generated_Source\PSoC4/CyLib.c **** 
 985              		.loc 1 2933 0 is_stmt 1
 986 0010 1F2C     		cmp	r4, #31
 987 0012 02D9     		bls	.L76
2933:Generated_Source\PSoC4/CyLib.c **** 
 988              		.loc 1 2933 0 is_stmt 0 discriminator 1
 989 0014 0020     		movs	r0, #0
 990 0016 FFF7FEFF 		bl	CyHalt
 991              	.LVL64:
 992              	.L76:
2935:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 73


 993              		.loc 1 2935 0 is_stmt 1
 994 001a 0325     		movs	r5, #3
 995 001c 2540     		ands	r5, r4
 996 001e ED00     		lsls	r5, r5, #3
 997 0020 0635     		adds	r5, r5, #6
 998              	.LVL65:
2937:Generated_Source\PSoC4/CyLib.c **** 
 999              		.loc 1 2937 0
 1000 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 1001              	.LVL66:
2939:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1002              		.loc 1 2939 0
 1003 0026 A408     		lsrs	r4, r4, #2
 1004 0028 A400     		lsls	r4, r4, #2
 1005 002a 074B     		ldr	r3, .L77
 1006 002c 9C46     		mov	ip, r3
 1007 002e 6444     		add	r4, r4, ip
 1008 0030 2168     		ldr	r1, [r4]
 1009              	.LVL67:
2940:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1010              		.loc 1 2940 0
 1011 0032 0323     		movs	r3, #3
 1012 0034 AB40     		lsls	r3, r3, r5
 1013 0036 9943     		bics	r1, r3
 1014              	.LVL68:
 1015 0038 0B00     		movs	r3, r1
 1016              	.LVL69:
2941:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1017              		.loc 1 2941 0
 1018 003a 3100     		movs	r1, r6
 1019              	.LVL70:
 1020 003c A940     		lsls	r1, r1, r5
 1021 003e 1943     		orrs	r1, r3
 1022              	.LVL71:
2942:Generated_Source\PSoC4/CyLib.c **** 
 1023              		.loc 1 2942 0
 1024 0040 2160     		str	r1, [r4]
2944:Generated_Source\PSoC4/CyLib.c **** }
 1025              		.loc 1 2944 0
 1026 0042 FFF7FEFF 		bl	CyExitCriticalSection
 1027              	.LVL72:
2945:Generated_Source\PSoC4/CyLib.c **** 
 1028              		.loc 1 2945 0
 1029              		@ sp needed
 1030              	.LVL73:
 1031 0046 70BD     		pop	{r4, r5, r6, pc}
 1032              	.L78:
 1033              		.align	2
 1034              	.L77:
 1035 0048 00E400E0 		.word	-536812544
 1036              		.cfi_endproc
 1037              	.LFE24:
 1038              		.size	CyIntSetPriority, .-CyIntSetPriority
 1039              		.section	.text.CyIntGetPriority,"ax",%progbits
 1040              		.align	2
 1041              		.global	CyIntGetPriority
 1042              		.code	16
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 74


 1043              		.thumb_func
 1044              		.type	CyIntGetPriority, %function
 1045              	CyIntGetPriority:
 1046              	.LFB25:
2961:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 1047              		.loc 1 2961 0
 1048              		.cfi_startproc
 1049              		@ args = 0, pretend = 0, frame = 0
 1050              		@ frame_needed = 0, uses_anonymous_args = 0
 1051              	.LVL74:
 1052 0000 10B5     		push	{r4, lr}
 1053              		.cfi_def_cfa_offset 8
 1054              		.cfi_offset 4, -8
 1055              		.cfi_offset 14, -4
 1056 0002 0400     		movs	r4, r0
2964:Generated_Source\PSoC4/CyLib.c **** 
 1057              		.loc 1 2964 0
 1058 0004 1F28     		cmp	r0, #31
 1059 0006 02D9     		bls	.L80
2964:Generated_Source\PSoC4/CyLib.c **** 
 1060              		.loc 1 2964 0 is_stmt 0 discriminator 1
 1061 0008 0020     		movs	r0, #0
 1062              	.LVL75:
 1063 000a FFF7FEFF 		bl	CyHalt
 1064              	.LVL76:
 1065              	.L80:
2966:Generated_Source\PSoC4/CyLib.c **** 
 1066              		.loc 1 2966 0 is_stmt 1
 1067 000e A308     		lsrs	r3, r4, #2
 1068 0010 9B00     		lsls	r3, r3, #2
 1069 0012 054A     		ldr	r2, .L81
 1070 0014 9446     		mov	ip, r2
 1071 0016 6344     		add	r3, r3, ip
 1072 0018 1868     		ldr	r0, [r3]
 1073 001a 0323     		movs	r3, #3
 1074 001c 1C40     		ands	r4, r3
 1075 001e E400     		lsls	r4, r4, #3
 1076 0020 0634     		adds	r4, r4, #6
 1077 0022 E040     		lsrs	r0, r0, r4
 1078              	.LVL77:
2968:Generated_Source\PSoC4/CyLib.c **** }
 1079              		.loc 1 2968 0
 1080 0024 1840     		ands	r0, r3
 1081              	.LVL78:
2969:Generated_Source\PSoC4/CyLib.c **** 
 1082              		.loc 1 2969 0
 1083              		@ sp needed
 1084 0026 10BD     		pop	{r4, pc}
 1085              	.L82:
 1086              		.align	2
 1087              	.L81:
 1088 0028 00E400E0 		.word	-536812544
 1089              		.cfi_endproc
 1090              	.LFE25:
 1091              		.size	CyIntGetPriority, .-CyIntGetPriority
 1092              		.section	.text.CySoftwareReset,"ax",%progbits
 1093              		.align	2
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 75


 1094              		.global	CySoftwareReset
 1095              		.code	16
 1096              		.thumb_func
 1097              		.type	CySoftwareReset, %function
 1098              	CySoftwareReset:
 1099              	.LFB32:
3074:Generated_Source\PSoC4/CyLib.c **** 
3075:Generated_Source\PSoC4/CyLib.c **** 
3076:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3077:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
3078:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3079:Generated_Source\PSoC4/CyLib.c **** *
3080:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
3081:Generated_Source\PSoC4/CyLib.c **** *
3082:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3083:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
3084:Generated_Source\PSoC4/CyLib.c **** {
 1100              		.loc 1 3084 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104              		@ link register save eliminated.
3085:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
3086:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
3087:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
3088:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
3089:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1105              		.loc 1 3089 0
 1106 0000 034A     		ldr	r2, .L84
 1107 0002 1368     		ldr	r3, [r2]
 1108 0004 1B04     		lsls	r3, r3, #16
 1109 0006 1B0C     		lsrs	r3, r3, #16
3090:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1110              		.loc 1 3090 0
 1111 0008 0249     		ldr	r1, .L84+4
 1112 000a 0B43     		orrs	r3, r1
3089:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1113              		.loc 1 3089 0
 1114 000c 1360     		str	r3, [r2]
3091:Generated_Source\PSoC4/CyLib.c **** }
 1115              		.loc 1 3091 0
 1116              		@ sp needed
 1117 000e 7047     		bx	lr
 1118              	.L85:
 1119              		.align	2
 1120              	.L84:
 1121 0010 0CED00E0 		.word	-536810228
 1122 0014 0400FA05 		.word	100270084
 1123              		.cfi_endproc
 1124              	.LFE32:
 1125              		.size	CySoftwareReset, .-CySoftwareReset
 1126              		.section	.text.CyDelay,"ax",%progbits
 1127              		.align	2
 1128              		.global	CyDelay
 1129              		.code	16
 1130              		.thumb_func
 1131              		.type	CyDelay, %function
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 76


 1132              	CyDelay:
 1133              	.LFB33:
3092:Generated_Source\PSoC4/CyLib.c **** 
3093:Generated_Source\PSoC4/CyLib.c **** 
3094:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3095:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
3096:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3097:Generated_Source\PSoC4/CyLib.c **** *
3098:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
3099:Generated_Source\PSoC4/CyLib.c **** *
3100:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
3101:Generated_Source\PSoC4/CyLib.c **** *
3102:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3103:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
3104:Generated_Source\PSoC4/CyLib.c **** {
 1134              		.loc 1 3104 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 1138              	.LVL79:
 1139 0000 10B5     		push	{r4, lr}
 1140              		.cfi_def_cfa_offset 8
 1141              		.cfi_offset 4, -8
 1142              		.cfi_offset 14, -4
 1143 0002 0400     		movs	r4, r0
3105:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1144              		.loc 1 3105 0
 1145 0004 06E0     		b	.L87
 1146              	.LVL80:
 1147              	.L88:
3106:Generated_Source\PSoC4/CyLib.c ****     {
3107:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
3108:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
3109:Generated_Source\PSoC4/CyLib.c ****          */
3110:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1148              		.loc 1 3110 0
 1149 0006 084B     		ldr	r3, .L89
 1150 0008 5868     		ldr	r0, [r3, #4]
 1151 000a FFF7FEFF 		bl	CyDelayCycles
 1152              	.LVL81:
3111:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1153              		.loc 1 3111 0
 1154 000e 074B     		ldr	r3, .L89+4
 1155 0010 9C46     		mov	ip, r3
 1156 0012 6444     		add	r4, r4, ip
 1157              	.LVL82:
 1158              	.L87:
3105:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1159              		.loc 1 3105 0
 1160 0014 8023     		movs	r3, #128
 1161 0016 1B02     		lsls	r3, r3, #8
 1162 0018 9C42     		cmp	r4, r3
 1163 001a F4D8     		bhi	.L88
3112:Generated_Source\PSoC4/CyLib.c ****     }
3113:Generated_Source\PSoC4/CyLib.c **** 
3114:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1164              		.loc 1 3114 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 77


 1165 001c 024B     		ldr	r3, .L89
 1166 001e 9868     		ldr	r0, [r3, #8]
 1167 0020 6043     		muls	r0, r4
 1168 0022 FFF7FEFF 		bl	CyDelayCycles
 1169              	.LVL83:
3115:Generated_Source\PSoC4/CyLib.c **** }
 1170              		.loc 1 3115 0
 1171              		@ sp needed
 1172              	.LVL84:
 1173 0026 10BD     		pop	{r4, pc}
 1174              	.L90:
 1175              		.align	2
 1176              	.L89:
 1177 0028 00000000 		.word	.LANCHOR0
 1178 002c 0080FFFF 		.word	-32768
 1179              		.cfi_endproc
 1180              	.LFE33:
 1181              		.size	CyDelay, .-CyDelay
 1182              		.section	.text.CyDelayUs,"ax",%progbits
 1183              		.align	2
 1184              		.global	CyDelayUs
 1185              		.code	16
 1186              		.thumb_func
 1187              		.type	CyDelayUs, %function
 1188              	CyDelayUs:
 1189              	.LFB34:
3116:Generated_Source\PSoC4/CyLib.c **** 
3117:Generated_Source\PSoC4/CyLib.c **** 
3118:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3119:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
3120:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3121:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
3122:Generated_Source\PSoC4/CyLib.c **** *
3123:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
3124:Generated_Source\PSoC4/CyLib.c **** *
3125:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3126:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
3127:Generated_Source\PSoC4/CyLib.c **** {
 1190              		.loc 1 3127 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 0
 1193              		@ frame_needed = 0, uses_anonymous_args = 0
 1194              	.LVL85:
 1195 0000 10B5     		push	{r4, lr}
 1196              		.cfi_def_cfa_offset 8
 1197              		.cfi_offset 4, -8
 1198              		.cfi_offset 14, -4
3128:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1199              		.loc 1 3128 0
 1200 0002 034B     		ldr	r3, .L92
 1201 0004 1B7B     		ldrb	r3, [r3, #12]
 1202 0006 5843     		muls	r0, r3
 1203              	.LVL86:
 1204 0008 FFF7FEFF 		bl	CyDelayCycles
 1205              	.LVL87:
3129:Generated_Source\PSoC4/CyLib.c **** }
 1206              		.loc 1 3129 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 78


 1207              		@ sp needed
 1208 000c 10BD     		pop	{r4, pc}
 1209              	.L93:
 1210 000e C046     		.align	2
 1211              	.L92:
 1212 0010 00000000 		.word	.LANCHOR0
 1213              		.cfi_endproc
 1214              	.LFE34:
 1215              		.size	CyDelayUs, .-CyDelayUs
 1216              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1217              		.align	2
 1218              		.global	CySysClkWriteImoFreq
 1219              		.code	16
 1220              		.thumb_func
 1221              		.type	CySysClkWriteImoFreq, %function
 1222              	CySysClkWriteImoFreq:
 1223              	.LFB8:
 818:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1224              		.loc 1 818 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 8
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 1228              	.LVL88:
 1229 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1230              		.cfi_def_cfa_offset 20
 1231              		.cfi_offset 4, -20
 1232              		.cfi_offset 5, -16
 1233              		.cfi_offset 6, -12
 1234              		.cfi_offset 7, -8
 1235              		.cfi_offset 14, -4
 1236 0002 5746     		mov	r7, r10
 1237 0004 4E46     		mov	r6, r9
 1238 0006 C0B4     		push	{r6, r7}
 1239              		.cfi_def_cfa_offset 28
 1240              		.cfi_offset 9, -28
 1241              		.cfi_offset 10, -24
 1242 0008 83B0     		sub	sp, sp, #12
 1243              		.cfi_def_cfa_offset 40
 1244 000a 0400     		movs	r4, r0
 840:Generated_Source\PSoC4/CyLib.c **** 
 1245              		.loc 1 840 0
 1246 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1247              	.LVL89:
 1248 0010 0190     		str	r0, [sp, #4]
 1249              	.LVL90:
 890:Generated_Source\PSoC4/CyLib.c ****         {
 1250              		.loc 1 890 0
 1251 0012 E71E     		subs	r7, r4, #3
 1252 0014 2D2F     		cmp	r7, #45
 1253 0016 74D8     		bhi	.L95
 892:Generated_Source\PSoC4/CyLib.c ****             {
 1254              		.loc 1 892 0
 1255 0018 3F4B     		ldr	r3, .L105
 1256 001a 1B78     		ldrb	r3, [r3]
 1257 001c DBB2     		uxtb	r3, r3
 1258 001e 9C42     		cmp	r4, r3
 1259 0020 08D8     		bhi	.L96
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 79


 894:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1260              		.loc 1 894 0
 1261 0022 3E4B     		ldr	r3, .L105+4
 1262 0024 1B78     		ldrb	r3, [r3]
 1263 0026 DBB2     		uxtb	r3, r3
 1264 0028 9A46     		mov	r10, r3
 1265              	.LVL91:
 895:Generated_Source\PSoC4/CyLib.c ****             }
 1266              		.loc 1 895 0
 1267 002a 3D4B     		ldr	r3, .L105+8
 1268 002c 1B78     		ldrb	r3, [r3]
 1269 002e DBB2     		uxtb	r3, r3
 1270 0030 9946     		mov	r9, r3
 1271              	.LVL92:
 1272 0032 31E0     		b	.L97
 1273              	.LVL93:
 1274              	.L96:
 897:Generated_Source\PSoC4/CyLib.c ****             {
 1275              		.loc 1 897 0
 1276 0034 3B4B     		ldr	r3, .L105+12
 1277 0036 1B78     		ldrb	r3, [r3]
 1278 0038 DBB2     		uxtb	r3, r3
 1279 003a 9C42     		cmp	r4, r3
 1280 003c 08D8     		bhi	.L98
 899:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1281              		.loc 1 899 0
 1282 003e 3A4B     		ldr	r3, .L105+16
 1283 0040 1B78     		ldrb	r3, [r3]
 1284 0042 DBB2     		uxtb	r3, r3
 1285 0044 9A46     		mov	r10, r3
 1286              	.LVL94:
 900:Generated_Source\PSoC4/CyLib.c ****             }
 1287              		.loc 1 900 0
 1288 0046 394B     		ldr	r3, .L105+20
 1289 0048 1B78     		ldrb	r3, [r3]
 1290 004a DBB2     		uxtb	r3, r3
 1291 004c 9946     		mov	r9, r3
 1292              	.LVL95:
 1293 004e 23E0     		b	.L97
 1294              	.LVL96:
 1295              	.L98:
 902:Generated_Source\PSoC4/CyLib.c ****             {
 1296              		.loc 1 902 0
 1297 0050 374B     		ldr	r3, .L105+24
 1298 0052 1B78     		ldrb	r3, [r3]
 1299 0054 DBB2     		uxtb	r3, r3
 1300 0056 9C42     		cmp	r4, r3
 1301 0058 08D8     		bhi	.L99
 904:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1302              		.loc 1 904 0
 1303 005a 364B     		ldr	r3, .L105+28
 1304 005c 1B78     		ldrb	r3, [r3]
 1305 005e DBB2     		uxtb	r3, r3
 1306 0060 9A46     		mov	r10, r3
 1307              	.LVL97:
 905:Generated_Source\PSoC4/CyLib.c ****             }
 1308              		.loc 1 905 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 80


 1309 0062 354B     		ldr	r3, .L105+32
 1310 0064 1B78     		ldrb	r3, [r3]
 1311 0066 DBB2     		uxtb	r3, r3
 1312 0068 9946     		mov	r9, r3
 1313              	.LVL98:
 1314 006a 15E0     		b	.L97
 1315              	.LVL99:
 1316              	.L99:
 907:Generated_Source\PSoC4/CyLib.c ****             {
 1317              		.loc 1 907 0
 1318 006c 334B     		ldr	r3, .L105+36
 1319 006e 1B78     		ldrb	r3, [r3]
 1320 0070 DBB2     		uxtb	r3, r3
 1321 0072 9C42     		cmp	r4, r3
 1322 0074 08D8     		bhi	.L100
 909:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1323              		.loc 1 909 0
 1324 0076 324B     		ldr	r3, .L105+40
 1325 0078 1B78     		ldrb	r3, [r3]
 1326 007a DBB2     		uxtb	r3, r3
 1327 007c 9A46     		mov	r10, r3
 1328              	.LVL100:
 910:Generated_Source\PSoC4/CyLib.c ****             }
 1329              		.loc 1 910 0
 1330 007e 314B     		ldr	r3, .L105+44
 1331 0080 1B78     		ldrb	r3, [r3]
 1332 0082 DBB2     		uxtb	r3, r3
 1333 0084 9946     		mov	r9, r3
 1334              	.LVL101:
 1335 0086 07E0     		b	.L97
 1336              	.LVL102:
 1337              	.L100:
 914:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1338              		.loc 1 914 0
 1339 0088 2F4B     		ldr	r3, .L105+48
 1340 008a 1B78     		ldrb	r3, [r3]
 1341 008c DBB2     		uxtb	r3, r3
 1342 008e 9A46     		mov	r10, r3
 1343              	.LVL103:
 915:Generated_Source\PSoC4/CyLib.c ****             }
 1344              		.loc 1 915 0
 1345 0090 2E4B     		ldr	r3, .L105+52
 1346 0092 1B78     		ldrb	r3, [r3]
 1347 0094 DBB2     		uxtb	r3, r3
 1348 0096 9946     		mov	r9, r3
 1349              	.LVL104:
 1350              	.L97:
 919:Generated_Source\PSoC4/CyLib.c **** 
 1351              		.loc 1 919 0
 1352 0098 2D4B     		ldr	r3, .L105+56
 1353 009a DE5D     		ldrb	r6, [r3, r7]
 1354              	.LVL105:
 931:Generated_Source\PSoC4/CyLib.c ****             {
 1355              		.loc 1 931 0
 1356 009c 2F2E     		cmp	r6, #47
 1357 009e 09D9     		bls	.L101
 931:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 81


 1358              		.loc 1 931 0 is_stmt 0 discriminator 1
 1359 00a0 2A2C     		cmp	r4, #42
 1360 00a2 07D9     		bls	.L101
 934:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1361              		.loc 1 934 0 is_stmt 1
 1362 00a4 1922     		movs	r2, #25
 1363 00a6 2B4B     		ldr	r3, .L105+60
 1364 00a8 1A60     		str	r2, [r3]
 1365              	.LVL106:
 937:Generated_Source\PSoC4/CyLib.c **** 
 1366              		.loc 1 937 0
 1367 00aa 0520     		movs	r0, #5
 1368 00ac FFF7FEFF 		bl	CyDelayCycles
 1369              	.LVL107:
 939:Generated_Source\PSoC4/CyLib.c ****             }
 1370              		.loc 1 939 0
 1371 00b0 1925     		movs	r5, #25
 1372 00b2 03E0     		b	.L102
 1373              	.LVL108:
 1374              	.L101:
 943:Generated_Source\PSoC4/CyLib.c ****             }
 1375              		.loc 1 943 0
 1376 00b4 274B     		ldr	r3, .L105+60
 1377 00b6 1D68     		ldr	r5, [r3]
 1378 00b8 3F23     		movs	r3, #63
 1379 00ba 1D40     		ands	r5, r3
 1380              	.LVL109:
 1381              	.L102:
 955:Generated_Source\PSoC4/CyLib.c ****             {
 1382              		.loc 1 955 0
 1383 00bc B542     		cmp	r5, r6
 1384 00be 06D9     		bls	.L103
 958:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1385              		.loc 1 958 0
 1386 00c0 234B     		ldr	r3, .L105+56
 1387 00c2 DA5D     		ldrb	r2, [r3, r7]
 1388 00c4 234B     		ldr	r3, .L105+60
 1389 00c6 1A60     		str	r2, [r3]
 959:Generated_Source\PSoC4/CyLib.c ****             }
 1390              		.loc 1 959 0
 1391 00c8 0520     		movs	r0, #5
 1392 00ca FFF7FEFF 		bl	CyDelayCycles
 1393              	.LVL110:
 1394              	.L103:
 963:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1395              		.loc 1 963 0
 1396 00ce 1F4B     		ldr	r3, .L105+52
 1397 00d0 9C46     		mov	ip, r3
 1398 00d2 6444     		add	r4, r4, ip
 1399              	.LVL111:
 1400 00d4 2378     		ldrb	r3, [r4]
 1401 00d6 DBB2     		uxtb	r3, r3
 1402 00d8 1F4A     		ldr	r2, .L105+64
 1403 00da 1360     		str	r3, [r2]
 964:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1404              		.loc 1 964 0
 1405 00dc 1F4B     		ldr	r3, .L105+68
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 82


 1406 00de 5246     		mov	r2, r10
 1407 00e0 1A60     		str	r2, [r3]
 965:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1408              		.loc 1 965 0
 1409 00e2 1F4B     		ldr	r3, .L105+72
 1410 00e4 4A46     		mov	r2, r9
 1411 00e6 1A60     		str	r2, [r3]
 966:Generated_Source\PSoC4/CyLib.c **** 
 1412              		.loc 1 966 0
 1413 00e8 0520     		movs	r0, #5
 1414 00ea FFF7FEFF 		bl	CyDelayUs
 1415              	.LVL112:
 968:Generated_Source\PSoC4/CyLib.c ****             {
 1416              		.loc 1 968 0
 1417 00ee B542     		cmp	r5, r6
 1418 00f0 0AD2     		bcs	.L104
 971:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1419              		.loc 1 971 0
 1420 00f2 174B     		ldr	r3, .L105+56
 1421 00f4 DA5D     		ldrb	r2, [r3, r7]
 1422 00f6 174B     		ldr	r3, .L105+60
 1423 00f8 1A60     		str	r2, [r3]
 972:Generated_Source\PSoC4/CyLib.c ****             }
 1424              		.loc 1 972 0
 1425 00fa 0520     		movs	r0, #5
 1426 00fc FFF7FEFF 		bl	CyDelayCycles
 1427              	.LVL113:
 1428 0100 02E0     		b	.L104
 1429              	.LVL114:
 1430              	.L95:
 978:Generated_Source\PSoC4/CyLib.c ****         }
 1431              		.loc 1 978 0 discriminator 1
 1432 0102 0020     		movs	r0, #0
 1433 0104 FFF7FEFF 		bl	CyHalt
 1434              	.LVL115:
 1435              	.L104:
 997:Generated_Source\PSoC4/CyLib.c ****     }
 1436              		.loc 1 997 0
 1437 0108 0198     		ldr	r0, [sp, #4]
 1438 010a FFF7FEFF 		bl	CyExitCriticalSection
 1439              	.LVL116:
 998:Generated_Source\PSoC4/CyLib.c **** 
 1440              		.loc 1 998 0
 1441 010e 03B0     		add	sp, sp, #12
 1442              		@ sp needed
 1443              	.LVL117:
 1444 0110 0CBC     		pop	{r2, r3}
 1445 0112 9146     		mov	r9, r2
 1446 0114 9A46     		mov	r10, r3
 1447 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 1448              	.L106:
 1449              		.align	2
 1450              	.L105:
 1451 0118 40F3FF0F 		.word	268432192
 1452 011c 41F3FF0F 		.word	268432193
 1453 0120 42F3FF0F 		.word	268432194
 1454 0124 43F3FF0F 		.word	268432195
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 83


 1455 0128 44F3FF0F 		.word	268432196
 1456 012c 45F3FF0F 		.word	268432197
 1457 0130 46F3FF0F 		.word	268432198
 1458 0134 47F3FF0F 		.word	268432199
 1459 0138 48F3FF0F 		.word	268432200
 1460 013c 49F3FF0F 		.word	268432201
 1461 0140 4AF3FF0F 		.word	268432202
 1462 0144 4BF3FF0F 		.word	268432203
 1463 0148 4CF3FF0F 		.word	268432204
 1464 014c 4DF3FF0F 		.word	268432205
 1465 0150 00000000 		.word	.LANCHOR1
 1466 0154 2CFF0B40 		.word	1074528044
 1467 0158 28FF0B40 		.word	1074528040
 1468 015c 1CFF0B40 		.word	1074528028
 1469 0160 20FF0B40 		.word	1074528032
 1470              		.cfi_endproc
 1471              	.LFE8:
 1472              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1473              		.section	.text.CySysClkEcoStart,"ax",%progbits
 1474              		.align	2
 1475              		.global	CySysClkEcoStart
 1476              		.code	16
 1477              		.thumb_func
 1478              		.type	CySysClkEcoStart, %function
 1479              	CySysClkEcoStart:
 1480              	.LFB9:
1202:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1481              		.loc 1 1202 0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 0
 1484              		@ frame_needed = 0, uses_anonymous_args = 0
 1485              	.LVL118:
 1486 0000 10B5     		push	{r4, lr}
 1487              		.cfi_def_cfa_offset 8
 1488              		.cfi_offset 4, -8
 1489              		.cfi_offset 14, -4
 1490 0002 0400     		movs	r4, r0
 1491              	.LVL119:
1207:Generated_Source\PSoC4/CyLib.c **** 
 1492              		.loc 1 1207 0
 1493 0004 0F4A     		ldr	r2, .L112
 1494 0006 1168     		ldr	r1, [r2]
 1495 0008 0123     		movs	r3, #1
 1496 000a 0B43     		orrs	r3, r1
 1497 000c 1360     		str	r3, [r2]
1210:Generated_Source\PSoC4/CyLib.c **** 
 1498              		.loc 1 1210 0
 1499 000e 0E4A     		ldr	r2, .L112+4
 1500 0010 0E4B     		ldr	r3, .L112+8
 1501 0012 1A60     		str	r2, [r3]
1213:Generated_Source\PSoC4/CyLib.c **** 
 1502              		.loc 1 1213 0
 1503 0014 0E4A     		ldr	r2, .L112+12
 1504 0016 1368     		ldr	r3, [r2]
 1505 0018 8021     		movs	r1, #128
 1506 001a 0902     		lsls	r1, r1, #8
 1507 001c 0B43     		orrs	r3, r1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 84


 1508 001e 1360     		str	r3, [r2]
1314:Generated_Source\PSoC4/CyLib.c ****         {
 1509              		.loc 1 1314 0
 1510 0020 0028     		cmp	r0, #0
 1511 0022 09D1     		bne	.L108
1203:Generated_Source\PSoC4/CyLib.c **** 
 1512              		.loc 1 1203 0
 1513 0024 0020     		movs	r0, #0
 1514              	.LVL120:
 1515 0026 0CE0     		b	.L109
 1516              	.L110:
1320:Generated_Source\PSoC4/CyLib.c **** 
 1517              		.loc 1 1320 0
 1518 0028 0120     		movs	r0, #1
 1519 002a FFF7FEFF 		bl	CyDelayUs
 1520              	.LVL121:
1322:Generated_Source\PSoC4/CyLib.c ****                 {
 1521              		.loc 1 1322 0
 1522 002e FFF7FEFF 		bl	CySysClkEcoReadStatus
 1523              	.LVL122:
 1524 0032 0028     		cmp	r0, #0
 1525 0034 04D1     		bne	.L111
1318:Generated_Source\PSoC4/CyLib.c ****             {
 1526              		.loc 1 1318 0
 1527 0036 013C     		subs	r4, r4, #1
 1528              	.LVL123:
 1529              	.L108:
1318:Generated_Source\PSoC4/CyLib.c ****             {
 1530              		.loc 1 1318 0 is_stmt 0 discriminator 1
 1531 0038 002C     		cmp	r4, #0
 1532 003a F5D1     		bne	.L110
1316:Generated_Source\PSoC4/CyLib.c **** 
 1533              		.loc 1 1316 0 is_stmt 1
 1534 003c 1020     		movs	r0, #16
 1535 003e 00E0     		b	.L109
 1536              	.L111:
1324:Generated_Source\PSoC4/CyLib.c ****                     break;
 1537              		.loc 1 1324 0
 1538 0040 0020     		movs	r0, #0
 1539              	.L109:
 1540              	.LVL124:
1332:Generated_Source\PSoC4/CyLib.c **** 
 1541              		.loc 1 1332 0
 1542              		@ sp needed
 1543              	.LVL125:
 1544 0042 10BD     		pop	{r4, pc}
 1545              	.L113:
 1546              		.align	2
 1547              	.L112:
 1548 0044 60F02E40 		.word	1076818016
 1549 0048 02200000 		.word	8194
 1550 004c 78002E40 		.word	1076756600
 1551 0050 10002E40 		.word	1076756496
 1552              		.cfi_endproc
 1553              	.LFE9:
 1554              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 1555              		.section	.text.CySysLvdEnable,"ax",%progbits
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 85


 1556              		.align	2
 1557              		.global	CySysLvdEnable
 1558              		.code	16
 1559              		.thumb_func
 1560              		.type	CySysLvdEnable, %function
 1561              	CySysLvdEnable:
 1562              	.LFB13:
2663:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1563              		.loc 1 2663 0
 1564              		.cfi_startproc
 1565              		@ args = 0, pretend = 0, frame = 0
 1566              		@ frame_needed = 0, uses_anonymous_args = 0
 1567              	.LVL126:
 1568 0000 70B5     		push	{r4, r5, r6, lr}
 1569              		.cfi_def_cfa_offset 16
 1570              		.cfi_offset 4, -16
 1571              		.cfi_offset 5, -12
 1572              		.cfi_offset 6, -8
 1573              		.cfi_offset 14, -4
 1574 0002 0300     		movs	r3, r0
2665:Generated_Source\PSoC4/CyLib.c **** 
 1575              		.loc 1 2665 0
 1576 0004 0D4C     		ldr	r4, .L115
 1577 0006 2268     		ldr	r2, [r4]
 1578 0008 0225     		movs	r5, #2
 1579 000a AA43     		bics	r2, r5
 1580 000c 2260     		str	r2, [r4]
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1581              		.loc 1 2668 0
 1582 000e 0C4A     		ldr	r2, .L115+4
 1583 0010 1168     		ldr	r1, [r2]
 1584 0012 1E20     		movs	r0, #30
 1585              	.LVL127:
 1586 0014 8143     		bics	r1, r0
2669:Generated_Source\PSoC4/CyLib.c **** 
 1587              		.loc 1 2669 0
 1588 0016 5B00     		lsls	r3, r3, #1
 1589              	.LVL128:
 1590 0018 1840     		ands	r0, r3
2668:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1591              		.loc 1 2668 0
 1592 001a 0843     		orrs	r0, r1
 1593 001c 1060     		str	r0, [r2]
2672:Generated_Source\PSoC4/CyLib.c **** 
 1594              		.loc 1 2672 0
 1595 001e 1168     		ldr	r1, [r2]
 1596 0020 0123     		movs	r3, #1
 1597 0022 0B43     		orrs	r3, r1
 1598 0024 1360     		str	r3, [r2]
2675:Generated_Source\PSoC4/CyLib.c **** 
 1599              		.loc 1 2675 0
 1600 0026 FA20     		movs	r0, #250
 1601 0028 8000     		lsls	r0, r0, #2
 1602 002a FFF7FEFF 		bl	CyDelayUs
 1603              	.LVL129:
2678:Generated_Source\PSoC4/CyLib.c **** 
 1604              		.loc 1 2678 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 86


 1605 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1606              	.LVL130:
2681:Generated_Source\PSoC4/CyLib.c ****     }
 1607              		.loc 1 2681 0
 1608 0032 2368     		ldr	r3, [r4]
 1609 0034 1D43     		orrs	r5, r3
 1610 0036 2560     		str	r5, [r4]
2682:Generated_Source\PSoC4/CyLib.c **** 
 1611              		.loc 1 2682 0
 1612              		@ sp needed
 1613 0038 70BD     		pop	{r4, r5, r6, pc}
 1614              	.L116:
 1615 003a C046     		.align	2
 1616              	.L115:
 1617 003c 08000B40 		.word	1074462728
 1618 0040 18000B40 		.word	1074462744
 1619              		.cfi_endproc
 1620              	.LFE13:
 1621              		.size	CySysLvdEnable, .-CySysLvdEnable
 1622              		.global	__aeabi_uidiv
 1623              		.section	.text.CyDelayFreq,"ax",%progbits
 1624              		.align	2
 1625              		.global	CyDelayFreq
 1626              		.code	16
 1627              		.thumb_func
 1628              		.type	CyDelayFreq, %function
 1629              	CyDelayFreq:
 1630              	.LFB35:
3130:Generated_Source\PSoC4/CyLib.c **** 
3131:Generated_Source\PSoC4/CyLib.c **** 
3132:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3133:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
3134:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3135:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
3136:Generated_Source\PSoC4/CyLib.c **** *
3137:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
3138:Generated_Source\PSoC4/CyLib.c **** *
3139:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3140:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
3141:Generated_Source\PSoC4/CyLib.c **** {
 1631              		.loc 1 3141 0
 1632              		.cfi_startproc
 1633              		@ args = 0, pretend = 0, frame = 0
 1634              		@ frame_needed = 0, uses_anonymous_args = 0
 1635              	.LVL131:
 1636 0000 70B5     		push	{r4, r5, r6, lr}
 1637              		.cfi_def_cfa_offset 16
 1638              		.cfi_offset 4, -16
 1639              		.cfi_offset 5, -12
 1640              		.cfi_offset 6, -8
 1641              		.cfi_offset 14, -4
3142:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1642              		.loc 1 3142 0
 1643 0002 0028     		cmp	r0, #0
 1644 0004 02D0     		beq	.L118
3143:Generated_Source\PSoC4/CyLib.c ****     {
3144:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 87


 1645              		.loc 1 3144 0
 1646 0006 0C4B     		ldr	r3, .L120
 1647 0008 1861     		str	r0, [r3, #16]
 1648 000a 02E0     		b	.L119
 1649              	.L118:
3145:Generated_Source\PSoC4/CyLib.c ****     }
3146:Generated_Source\PSoC4/CyLib.c ****     else
3147:Generated_Source\PSoC4/CyLib.c ****     {
3148:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1650              		.loc 1 3148 0
 1651 000c 0B4A     		ldr	r2, .L120+4
 1652 000e 0A4B     		ldr	r3, .L120
 1653 0010 1A61     		str	r2, [r3, #16]
 1654              	.L119:
3149:Generated_Source\PSoC4/CyLib.c ****     }
3150:Generated_Source\PSoC4/CyLib.c **** 
3151:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1655              		.loc 1 3151 0
 1656 0012 094C     		ldr	r4, .L120
 1657 0014 2569     		ldr	r5, [r4, #16]
 1658 0016 0A4B     		ldr	r3, .L120+8
 1659 0018 E818     		adds	r0, r5, r3
 1660              	.LVL132:
 1661 001a 0A49     		ldr	r1, .L120+12
 1662 001c FFF7FEFF 		bl	__aeabi_uidiv
 1663              	.LVL133:
 1664 0020 2073     		strb	r0, [r4, #12]
3152:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1665              		.loc 1 3152 0
 1666 0022 094B     		ldr	r3, .L120+16
 1667 0024 E818     		adds	r0, r5, r3
 1668 0026 FA21     		movs	r1, #250
 1669 0028 8900     		lsls	r1, r1, #2
 1670 002a FFF7FEFF 		bl	__aeabi_uidiv
 1671              	.LVL134:
 1672 002e A060     		str	r0, [r4, #8]
3153:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1673              		.loc 1 3153 0
 1674 0030 C003     		lsls	r0, r0, #15
 1675 0032 6060     		str	r0, [r4, #4]
3154:Generated_Source\PSoC4/CyLib.c **** }
 1676              		.loc 1 3154 0
 1677              		@ sp needed
 1678 0034 70BD     		pop	{r4, r5, r6, pc}
 1679              	.L121:
 1680 0036 C046     		.align	2
 1681              	.L120:
 1682 0038 00000000 		.word	.LANCHOR0
 1683 003c 006CDC02 		.word	48000000
 1684 0040 3F420F00 		.word	999999
 1685 0044 40420F00 		.word	1000000
 1686 0048 E7030000 		.word	999
 1687              		.cfi_endproc
 1688              	.LFE35:
 1689              		.size	CyDelayFreq, .-CyDelayFreq
 1690              		.section	.text.CySysTickStop,"ax",%progbits
 1691              		.align	2
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 88


 1692              		.global	CySysTickStop
 1693              		.code	16
 1694              		.thumb_func
 1695              		.type	CySysTickStop, %function
 1696              	CySysTickStop:
 1697              	.LFB39:
3155:Generated_Source\PSoC4/CyLib.c **** 
3156:Generated_Source\PSoC4/CyLib.c **** 
3157:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3158:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
3159:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3160:Generated_Source\PSoC4/CyLib.c **** *
3161:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
3162:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
3163:Generated_Source\PSoC4/CyLib.c **** *
3164:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default
3165:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact
3166:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
3167:Generated_Source\PSoC4/CyLib.c **** *
3168:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3169:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3170:Generated_Source\PSoC4/CyLib.c **** *
3171:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3172:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
3173:Generated_Source\PSoC4/CyLib.c **** {
3174:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
3175:Generated_Source\PSoC4/CyLib.c ****     {
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
3177:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
3178:Generated_Source\PSoC4/CyLib.c ****     }
3179:Generated_Source\PSoC4/CyLib.c **** 
3180:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
3181:Generated_Source\PSoC4/CyLib.c **** }
3182:Generated_Source\PSoC4/CyLib.c **** 
3183:Generated_Source\PSoC4/CyLib.c **** 
3184:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3185:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
3186:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3187:Generated_Source\PSoC4/CyLib.c **** *
3188:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
3189:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
3190:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
3191:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
3192:Generated_Source\PSoC4/CyLib.c **** *
3193:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
3194:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
3195:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
3196:Generated_Source\PSoC4/CyLib.c **** *
3197:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3198:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3199:Generated_Source\PSoC4/CyLib.c **** *
3200:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3201:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
3202:Generated_Source\PSoC4/CyLib.c **** {
3203:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3204:Generated_Source\PSoC4/CyLib.c **** 
3205:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 89


3206:Generated_Source\PSoC4/CyLib.c ****     {
3207:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
3208:Generated_Source\PSoC4/CyLib.c ****     }
3209:Generated_Source\PSoC4/CyLib.c **** 
3210:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
3211:Generated_Source\PSoC4/CyLib.c **** 
3212:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
3213:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
3214:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3215:Generated_Source\PSoC4/CyLib.c **** 
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
3217:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
3218:Generated_Source\PSoC4/CyLib.c **** }
3219:Generated_Source\PSoC4/CyLib.c **** 
3220:Generated_Source\PSoC4/CyLib.c **** 
3221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
3223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3224:Generated_Source\PSoC4/CyLib.c **** *
3225:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
3226:Generated_Source\PSoC4/CyLib.c **** *
3227:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3228:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3229:Generated_Source\PSoC4/CyLib.c **** *
3230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3231:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
3232:Generated_Source\PSoC4/CyLib.c **** {
3233:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
3234:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
3235:Generated_Source\PSoC4/CyLib.c **** }
3236:Generated_Source\PSoC4/CyLib.c **** 
3237:Generated_Source\PSoC4/CyLib.c **** 
3238:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3239:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
3240:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3241:Generated_Source\PSoC4/CyLib.c **** *
3242:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
3243:Generated_Source\PSoC4/CyLib.c **** *
3244:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3245:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3246:Generated_Source\PSoC4/CyLib.c **** *
3247:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3248:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
3249:Generated_Source\PSoC4/CyLib.c **** {
 1698              		.loc 1 3249 0
 1699              		.cfi_startproc
 1700              		@ args = 0, pretend = 0, frame = 0
 1701              		@ frame_needed = 0, uses_anonymous_args = 0
 1702              		@ link register save eliminated.
3250:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1703              		.loc 1 3250 0
 1704 0000 024A     		ldr	r2, .L123
 1705 0002 1368     		ldr	r3, [r2]
 1706 0004 0121     		movs	r1, #1
 1707 0006 8B43     		bics	r3, r1
 1708 0008 1360     		str	r3, [r2]
3251:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 90


 1709              		.loc 1 3251 0
 1710              		@ sp needed
 1711 000a 7047     		bx	lr
 1712              	.L124:
 1713              		.align	2
 1714              	.L123:
 1715 000c 10E000E0 		.word	-536813552
 1716              		.cfi_endproc
 1717              	.LFE39:
 1718              		.size	CySysTickStop, .-CySysTickStop
 1719              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1720              		.align	2
 1721              		.global	CySysTickEnableInterrupt
 1722              		.code	16
 1723              		.thumb_func
 1724              		.type	CySysTickEnableInterrupt, %function
 1725              	CySysTickEnableInterrupt:
 1726              	.LFB40:
3252:Generated_Source\PSoC4/CyLib.c **** 
3253:Generated_Source\PSoC4/CyLib.c **** 
3254:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3255:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
3256:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3257:Generated_Source\PSoC4/CyLib.c **** *
3258:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
3259:Generated_Source\PSoC4/CyLib.c **** *
3260:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3261:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3262:Generated_Source\PSoC4/CyLib.c **** *
3263:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3264:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
3265:Generated_Source\PSoC4/CyLib.c **** {
 1727              		.loc 1 3265 0
 1728              		.cfi_startproc
 1729              		@ args = 0, pretend = 0, frame = 0
 1730              		@ frame_needed = 0, uses_anonymous_args = 0
 1731              		@ link register save eliminated.
3266:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1732              		.loc 1 3266 0
 1733 0000 024A     		ldr	r2, .L126
 1734 0002 1168     		ldr	r1, [r2]
 1735 0004 0223     		movs	r3, #2
 1736 0006 0B43     		orrs	r3, r1
 1737 0008 1360     		str	r3, [r2]
3267:Generated_Source\PSoC4/CyLib.c **** }
 1738              		.loc 1 3267 0
 1739              		@ sp needed
 1740 000a 7047     		bx	lr
 1741              	.L127:
 1742              		.align	2
 1743              	.L126:
 1744 000c 10E000E0 		.word	-536813552
 1745              		.cfi_endproc
 1746              	.LFE40:
 1747              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1748              		.section	.text.CySysTickEnable,"ax",%progbits
 1749              		.align	2
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 91


 1750              		.global	CySysTickEnable
 1751              		.code	16
 1752              		.thumb_func
 1753              		.type	CySysTickEnable, %function
 1754              	CySysTickEnable:
 1755              	.LFB38:
3232:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1756              		.loc 1 3232 0
 1757              		.cfi_startproc
 1758              		@ args = 0, pretend = 0, frame = 0
 1759              		@ frame_needed = 0, uses_anonymous_args = 0
 1760 0000 10B5     		push	{r4, lr}
 1761              		.cfi_def_cfa_offset 8
 1762              		.cfi_offset 4, -8
 1763              		.cfi_offset 14, -4
3233:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1764              		.loc 1 3233 0
 1765 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1766              	.LVL135:
3234:Generated_Source\PSoC4/CyLib.c **** }
 1767              		.loc 1 3234 0
 1768 0006 034A     		ldr	r2, .L129
 1769 0008 1168     		ldr	r1, [r2]
 1770 000a 0123     		movs	r3, #1
 1771 000c 0B43     		orrs	r3, r1
 1772 000e 1360     		str	r3, [r2]
3235:Generated_Source\PSoC4/CyLib.c **** 
 1773              		.loc 1 3235 0
 1774              		@ sp needed
 1775 0010 10BD     		pop	{r4, pc}
 1776              	.L130:
 1777 0012 C046     		.align	2
 1778              	.L129:
 1779 0014 10E000E0 		.word	-536813552
 1780              		.cfi_endproc
 1781              	.LFE38:
 1782              		.size	CySysTickEnable, .-CySysTickEnable
 1783              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1784              		.align	2
 1785              		.global	CySysTickDisableInterrupt
 1786              		.code	16
 1787              		.thumb_func
 1788              		.type	CySysTickDisableInterrupt, %function
 1789              	CySysTickDisableInterrupt:
 1790              	.LFB41:
3268:Generated_Source\PSoC4/CyLib.c **** 
3269:Generated_Source\PSoC4/CyLib.c **** 
3270:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3271:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
3272:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3273:Generated_Source\PSoC4/CyLib.c **** *
3274:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
3275:Generated_Source\PSoC4/CyLib.c **** *
3276:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3277:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
3278:Generated_Source\PSoC4/CyLib.c **** *
3279:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 92


3280:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
3281:Generated_Source\PSoC4/CyLib.c **** {
 1791              		.loc 1 3281 0
 1792              		.cfi_startproc
 1793              		@ args = 0, pretend = 0, frame = 0
 1794              		@ frame_needed = 0, uses_anonymous_args = 0
 1795              		@ link register save eliminated.
3282:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1796              		.loc 1 3282 0
 1797 0000 024A     		ldr	r2, .L132
 1798 0002 1368     		ldr	r3, [r2]
 1799 0004 0221     		movs	r1, #2
 1800 0006 8B43     		bics	r3, r1
 1801 0008 1360     		str	r3, [r2]
3283:Generated_Source\PSoC4/CyLib.c **** }
 1802              		.loc 1 3283 0
 1803              		@ sp needed
 1804 000a 7047     		bx	lr
 1805              	.L133:
 1806              		.align	2
 1807              	.L132:
 1808 000c 10E000E0 		.word	-536813552
 1809              		.cfi_endproc
 1810              	.LFE41:
 1811              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1812              		.section	.text.CySysTickSetReload,"ax",%progbits
 1813              		.align	2
 1814              		.global	CySysTickSetReload
 1815              		.code	16
 1816              		.thumb_func
 1817              		.type	CySysTickSetReload, %function
 1818              	CySysTickSetReload:
 1819              	.LFB42:
3284:Generated_Source\PSoC4/CyLib.c **** 
3285:Generated_Source\PSoC4/CyLib.c **** 
3286:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3287:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
3288:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3289:Generated_Source\PSoC4/CyLib.c **** *
3290:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
3291:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
3292:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
3293:Generated_Source\PSoC4/CyLib.c **** *
3294:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
3295:Generated_Source\PSoC4/CyLib.c **** *
3296:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3297:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
3298:Generated_Source\PSoC4/CyLib.c **** {
 1820              		.loc 1 3298 0
 1821              		.cfi_startproc
 1822              		@ args = 0, pretend = 0, frame = 0
 1823              		@ frame_needed = 0, uses_anonymous_args = 0
 1824              		@ link register save eliminated.
 1825              	.LVL136:
3299:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1826              		.loc 1 3299 0
 1827 0000 0002     		lsls	r0, r0, #8
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 93


 1828              	.LVL137:
 1829 0002 000A     		lsrs	r0, r0, #8
 1830 0004 014B     		ldr	r3, .L135
 1831 0006 1860     		str	r0, [r3]
3300:Generated_Source\PSoC4/CyLib.c **** }
 1832              		.loc 1 3300 0
 1833              		@ sp needed
 1834 0008 7047     		bx	lr
 1835              	.L136:
 1836 000a C046     		.align	2
 1837              	.L135:
 1838 000c 14E000E0 		.word	-536813548
 1839              		.cfi_endproc
 1840              	.LFE42:
 1841              		.size	CySysTickSetReload, .-CySysTickSetReload
 1842              		.section	.text.CySysTickGetReload,"ax",%progbits
 1843              		.align	2
 1844              		.global	CySysTickGetReload
 1845              		.code	16
 1846              		.thumb_func
 1847              		.type	CySysTickGetReload, %function
 1848              	CySysTickGetReload:
 1849              	.LFB43:
3301:Generated_Source\PSoC4/CyLib.c **** 
3302:Generated_Source\PSoC4/CyLib.c **** 
3303:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3304:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
3305:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3306:Generated_Source\PSoC4/CyLib.c **** *
3307:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
3308:Generated_Source\PSoC4/CyLib.c **** *
3309:Generated_Source\PSoC4/CyLib.c **** * \return
3310:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
3311:Generated_Source\PSoC4/CyLib.c **** *
3312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3313:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
3314:Generated_Source\PSoC4/CyLib.c **** {
 1850              		.loc 1 3314 0
 1851              		.cfi_startproc
 1852              		@ args = 0, pretend = 0, frame = 0
 1853              		@ frame_needed = 0, uses_anonymous_args = 0
 1854              		@ link register save eliminated.
3315:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1855              		.loc 1 3315 0
 1856 0000 024B     		ldr	r3, .L138
 1857 0002 1868     		ldr	r0, [r3]
 1858 0004 0002     		lsls	r0, r0, #8
 1859 0006 000A     		lsrs	r0, r0, #8
3316:Generated_Source\PSoC4/CyLib.c **** }
 1860              		.loc 1 3316 0
 1861              		@ sp needed
 1862 0008 7047     		bx	lr
 1863              	.L139:
 1864 000a C046     		.align	2
 1865              	.L138:
 1866 000c 14E000E0 		.word	-536813548
 1867              		.cfi_endproc
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 94


 1868              	.LFE43:
 1869              		.size	CySysTickGetReload, .-CySysTickGetReload
 1870              		.section	.text.CySysTickGetValue,"ax",%progbits
 1871              		.align	2
 1872              		.global	CySysTickGetValue
 1873              		.code	16
 1874              		.thumb_func
 1875              		.type	CySysTickGetValue, %function
 1876              	CySysTickGetValue:
 1877              	.LFB44:
3317:Generated_Source\PSoC4/CyLib.c **** 
3318:Generated_Source\PSoC4/CyLib.c **** 
3319:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3320:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
3321:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3322:Generated_Source\PSoC4/CyLib.c **** *
3323:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
3324:Generated_Source\PSoC4/CyLib.c **** *
3325:Generated_Source\PSoC4/CyLib.c **** * \return
3326:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
3327:Generated_Source\PSoC4/CyLib.c **** *
3328:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3329:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
3330:Generated_Source\PSoC4/CyLib.c **** {
 1878              		.loc 1 3330 0
 1879              		.cfi_startproc
 1880              		@ args = 0, pretend = 0, frame = 0
 1881              		@ frame_needed = 0, uses_anonymous_args = 0
 1882              		@ link register save eliminated.
3331:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1883              		.loc 1 3331 0
 1884 0000 024B     		ldr	r3, .L141
 1885 0002 1868     		ldr	r0, [r3]
 1886 0004 0002     		lsls	r0, r0, #8
 1887 0006 000A     		lsrs	r0, r0, #8
3332:Generated_Source\PSoC4/CyLib.c **** }
 1888              		.loc 1 3332 0
 1889              		@ sp needed
 1890 0008 7047     		bx	lr
 1891              	.L142:
 1892 000a C046     		.align	2
 1893              	.L141:
 1894 000c 18E000E0 		.word	-536813544
 1895              		.cfi_endproc
 1896              	.LFE44:
 1897              		.size	CySysTickGetValue, .-CySysTickGetValue
 1898              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1899              		.align	2
 1900              		.global	CySysTickSetClockSource
 1901              		.code	16
 1902              		.thumb_func
 1903              		.type	CySysTickSetClockSource, %function
 1904              	CySysTickSetClockSource:
 1905              	.LFB45:
3333:Generated_Source\PSoC4/CyLib.c **** 
3334:Generated_Source\PSoC4/CyLib.c **** 
3335:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 95


3336:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3337:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
3338:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3339:Generated_Source\PSoC4/CyLib.c ****     *
3340:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
3341:Generated_Source\PSoC4/CyLib.c ****     *
3342:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
3343:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
3344:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
3345:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
3346:Generated_Source\PSoC4/CyLib.c ****     *
3347:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change
3348:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be
3349:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.
3350:Generated_Source\PSoC4/CyLib.c ****     *
3351:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
3352:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
3353:Generated_Source\PSoC4/CyLib.c ****     *
3354:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
3355:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
3356:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
3357:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3358:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3359:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3360:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3361:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
3362:Generated_Source\PSoC4/CyLib.c ****     {
 1906              		.loc 1 3362 0
 1907              		.cfi_startproc
 1908              		@ args = 0, pretend = 0, frame = 0
 1909              		@ frame_needed = 0, uses_anonymous_args = 0
 1910              		@ link register save eliminated.
 1911              	.LVL138:
3363:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1912              		.loc 1 3363 0
 1913 0000 0128     		cmp	r0, #1
 1914 0002 05D1     		bne	.L144
3364:Generated_Source\PSoC4/CyLib.c ****         {
3365:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1915              		.loc 1 3365 0
 1916 0004 054A     		ldr	r2, .L146
 1917 0006 1168     		ldr	r1, [r2]
 1918 0008 0423     		movs	r3, #4
 1919 000a 0B43     		orrs	r3, r1
 1920 000c 1360     		str	r3, [r2]
 1921 000e 04E0     		b	.L143
 1922              	.L144:
3366:Generated_Source\PSoC4/CyLib.c ****         }
3367:Generated_Source\PSoC4/CyLib.c ****         else
3368:Generated_Source\PSoC4/CyLib.c ****         {
3369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1923              		.loc 1 3369 0
 1924 0010 024A     		ldr	r2, .L146
 1925 0012 1368     		ldr	r3, [r2]
 1926 0014 0421     		movs	r1, #4
 1927 0016 8B43     		bics	r3, r1
 1928 0018 1360     		str	r3, [r2]
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 96


 1929              	.L143:
3370:Generated_Source\PSoC4/CyLib.c ****         }
3371:Generated_Source\PSoC4/CyLib.c ****     }
 1930              		.loc 1 3371 0
 1931              		@ sp needed
 1932 001a 7047     		bx	lr
 1933              	.L147:
 1934              		.align	2
 1935              	.L146:
 1936 001c 10E000E0 		.word	-536813552
 1937              		.cfi_endproc
 1938              	.LFE45:
 1939              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1940              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 1941              		.align	2
 1942              		.global	CySysTickGetClockSource
 1943              		.code	16
 1944              		.thumb_func
 1945              		.type	CySysTickGetClockSource, %function
 1946              	CySysTickGetClockSource:
 1947              	.LFB46:
3372:Generated_Source\PSoC4/CyLib.c **** 
3373:Generated_Source\PSoC4/CyLib.c **** 
3374:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3375:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
3376:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3377:Generated_Source\PSoC4/CyLib.c ****     *
3378:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
3379:Generated_Source\PSoC4/CyLib.c ****     *
3380:Generated_Source\PSoC4/CyLib.c ****     *  \return
3381:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
3382:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
3383:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
3384:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
3385:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3386:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
3387:Generated_Source\PSoC4/CyLib.c ****     {
 1948              		.loc 1 3387 0
 1949              		.cfi_startproc
 1950              		@ args = 0, pretend = 0, frame = 0
 1951              		@ frame_needed = 0, uses_anonymous_args = 0
 1952              		@ link register save eliminated.
3388:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 1953              		.loc 1 3388 0
 1954 0000 024B     		ldr	r3, .L149
 1955 0002 1868     		ldr	r0, [r3]
 1956 0004 8008     		lsrs	r0, r0, #2
 1957 0006 0123     		movs	r3, #1
 1958 0008 1840     		ands	r0, r3
3389:Generated_Source\PSoC4/CyLib.c ****     }
 1959              		.loc 1 3389 0
 1960              		@ sp needed
 1961 000a 7047     		bx	lr
 1962              	.L150:
 1963              		.align	2
 1964              	.L149:
 1965 000c 10E000E0 		.word	-536813552
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 97


 1966              		.cfi_endproc
 1967              	.LFE46:
 1968              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 1969              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1970              		.align	2
 1971              		.global	CySysTickGetCountFlag
 1972              		.code	16
 1973              		.thumb_func
 1974              		.type	CySysTickGetCountFlag, %function
 1975              	CySysTickGetCountFlag:
 1976              	.LFB47:
3390:Generated_Source\PSoC4/CyLib.c **** 
3391:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
3392:Generated_Source\PSoC4/CyLib.c **** 
3393:Generated_Source\PSoC4/CyLib.c **** 
3394:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3395:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
3396:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3397:Generated_Source\PSoC4/CyLib.c **** *
3398:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
3399:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
3400:Generated_Source\PSoC4/CyLib.c **** *
3401:Generated_Source\PSoC4/CyLib.c **** * \return
3402:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
3403:Generated_Source\PSoC4/CyLib.c **** *
3404:Generated_Source\PSoC4/CyLib.c **** *
3405:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3406:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
3407:Generated_Source\PSoC4/CyLib.c **** *
3408:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3409:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
3410:Generated_Source\PSoC4/CyLib.c **** {
 1977              		.loc 1 3410 0
 1978              		.cfi_startproc
 1979              		@ args = 0, pretend = 0, frame = 0
 1980              		@ frame_needed = 0, uses_anonymous_args = 0
 1981              		@ link register save eliminated.
3411:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1982              		.loc 1 3411 0
 1983 0000 024B     		ldr	r3, .L152
 1984 0002 1868     		ldr	r0, [r3]
 1985 0004 000C     		lsrs	r0, r0, #16
 1986 0006 0123     		movs	r3, #1
 1987 0008 1840     		ands	r0, r3
3412:Generated_Source\PSoC4/CyLib.c **** }
 1988              		.loc 1 3412 0
 1989              		@ sp needed
 1990 000a 7047     		bx	lr
 1991              	.L153:
 1992              		.align	2
 1993              	.L152:
 1994 000c 10E000E0 		.word	-536813552
 1995              		.cfi_endproc
 1996              	.LFE47:
 1997              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1998              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1999              		.align	2
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 98


 2000              		.code	16
 2001              		.thumb_func
 2002              		.type	CySysTickServiceCallbacks, %function
 2003              	CySysTickServiceCallbacks:
 2004              	.LFB51:
3413:Generated_Source\PSoC4/CyLib.c **** 
3414:Generated_Source\PSoC4/CyLib.c **** 
3415:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3416:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
3417:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3418:Generated_Source\PSoC4/CyLib.c **** *
3419:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
3420:Generated_Source\PSoC4/CyLib.c **** *
3421:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3422:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3423:Generated_Source\PSoC4/CyLib.c **** {
3424:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
3425:Generated_Source\PSoC4/CyLib.c **** }
3426:Generated_Source\PSoC4/CyLib.c **** 
3427:Generated_Source\PSoC4/CyLib.c **** 
3428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3431:Generated_Source\PSoC4/CyLib.c **** *
3432:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3433:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3434:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3435:Generated_Source\PSoC4/CyLib.c **** *
3436:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3437:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3438:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3439:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
3440:Generated_Source\PSoC4/CyLib.c **** *  functions.
3441:Generated_Source\PSoC4/CyLib.c **** *
3442:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3443:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3444:Generated_Source\PSoC4/CyLib.c **** *
3445:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3446:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3447:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3448:Generated_Source\PSoC4/CyLib.c **** *
3449:Generated_Source\PSoC4/CyLib.c **** * \return
3450:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3451:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3452:Generated_Source\PSoC4/CyLib.c **** *
3453:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3454:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3455:Generated_Source\PSoC4/CyLib.c **** *
3456:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3457:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3458:Generated_Source\PSoC4/CyLib.c **** {
3459:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3460:Generated_Source\PSoC4/CyLib.c **** 
3461:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
3462:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
3463:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
3464:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 99


3465:Generated_Source\PSoC4/CyLib.c **** 
3466:Generated_Source\PSoC4/CyLib.c **** 
3467:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3468:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3469:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3470:Generated_Source\PSoC4/CyLib.c **** *
3471:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3472:Generated_Source\PSoC4/CyLib.c **** *
3473:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3474:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3475:Generated_Source\PSoC4/CyLib.c **** *
3476:Generated_Source\PSoC4/CyLib.c **** * \return
3477:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3478:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3479:Generated_Source\PSoC4/CyLib.c **** *
3480:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3481:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3482:Generated_Source\PSoC4/CyLib.c **** {
3483:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
3484:Generated_Source\PSoC4/CyLib.c **** }
3485:Generated_Source\PSoC4/CyLib.c **** 
3486:Generated_Source\PSoC4/CyLib.c **** 
3487:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3488:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3489:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3490:Generated_Source\PSoC4/CyLib.c **** *
3491:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3492:Generated_Source\PSoC4/CyLib.c **** *
3493:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3494:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3495:Generated_Source\PSoC4/CyLib.c **** {
 2005              		.loc 1 3495 0
 2006              		.cfi_startproc
 2007              		@ args = 0, pretend = 0, frame = 0
 2008              		@ frame_needed = 0, uses_anonymous_args = 0
 2009 0000 10B5     		push	{r4, lr}
 2010              		.cfi_def_cfa_offset 8
 2011              		.cfi_offset 4, -8
 2012              		.cfi_offset 14, -4
3496:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3497:Generated_Source\PSoC4/CyLib.c **** 
3498:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3499:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2013              		.loc 1 3499 0
 2014 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 2015              	.LVL139:
 2016 0006 0128     		cmp	r0, #1
 2017 0008 0BD1     		bne	.L154
 2018 000a 07E0     		b	.L159
 2019              	.LVL140:
 2020              	.L158:
3500:Generated_Source\PSoC4/CyLib.c ****     {
3501:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
3502:Generated_Source\PSoC4/CyLib.c ****         {
3503:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2021              		.loc 1 3503 0
 2022 000c A300     		lsls	r3, r4, #2
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 100


 2023 000e 054A     		ldr	r2, .L160
 2024 0010 9B58     		ldr	r3, [r3, r2]
 2025 0012 002B     		cmp	r3, #0
 2026 0014 00D0     		beq	.L157
3504:Generated_Source\PSoC4/CyLib.c ****             {
3505:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2027              		.loc 1 3505 0
 2028 0016 9847     		blx	r3
 2029              	.LVL141:
 2030              	.L157:
3501:Generated_Source\PSoC4/CyLib.c ****         {
 2031              		.loc 1 3501 0 discriminator 2
 2032 0018 0134     		adds	r4, r4, #1
 2033              	.LVL142:
 2034 001a 00E0     		b	.L155
 2035              	.LVL143:
 2036              	.L159:
 2037 001c 0024     		movs	r4, #0
 2038              	.L155:
 2039              	.LVL144:
3501:Generated_Source\PSoC4/CyLib.c ****         {
 2040              		.loc 1 3501 0 is_stmt 0 discriminator 1
 2041 001e 042C     		cmp	r4, #4
 2042 0020 F4D9     		bls	.L158
 2043              	.LVL145:
 2044              	.L154:
3506:Generated_Source\PSoC4/CyLib.c ****             }
3507:Generated_Source\PSoC4/CyLib.c ****         }
3508:Generated_Source\PSoC4/CyLib.c ****     }
3509:Generated_Source\PSoC4/CyLib.c **** }
 2045              		.loc 1 3509 0 is_stmt 1
 2046              		@ sp needed
 2047 0022 10BD     		pop	{r4, pc}
 2048              	.L161:
 2049              		.align	2
 2050              	.L160:
 2051 0024 00000000 		.word	.LANCHOR2
 2052              		.cfi_endproc
 2053              	.LFE51:
 2054              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2055              		.section	.text.CySysTickClear,"ax",%progbits
 2056              		.align	2
 2057              		.global	CySysTickClear
 2058              		.code	16
 2059              		.thumb_func
 2060              		.type	CySysTickClear, %function
 2061              	CySysTickClear:
 2062              	.LFB48:
3423:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2063              		.loc 1 3423 0
 2064              		.cfi_startproc
 2065              		@ args = 0, pretend = 0, frame = 0
 2066              		@ frame_needed = 0, uses_anonymous_args = 0
 2067              		@ link register save eliminated.
3424:Generated_Source\PSoC4/CyLib.c **** }
 2068              		.loc 1 3424 0
 2069 0000 0022     		movs	r2, #0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 101


 2070 0002 014B     		ldr	r3, .L163
 2071 0004 1A60     		str	r2, [r3]
3425:Generated_Source\PSoC4/CyLib.c **** 
 2072              		.loc 1 3425 0
 2073              		@ sp needed
 2074 0006 7047     		bx	lr
 2075              	.L164:
 2076              		.align	2
 2077              	.L163:
 2078 0008 18E000E0 		.word	-536813544
 2079              		.cfi_endproc
 2080              	.LFE48:
 2081              		.size	CySysTickClear, .-CySysTickClear
 2082              		.section	.text.CySysTickInit,"ax",%progbits
 2083              		.align	2
 2084              		.global	CySysTickInit
 2085              		.code	16
 2086              		.thumb_func
 2087              		.type	CySysTickInit, %function
 2088              	CySysTickInit:
 2089              	.LFB37:
3202:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 2090              		.loc 1 3202 0
 2091              		.cfi_startproc
 2092              		@ args = 0, pretend = 0, frame = 0
 2093              		@ frame_needed = 0, uses_anonymous_args = 0
 2094 0000 10B5     		push	{r4, lr}
 2095              		.cfi_def_cfa_offset 8
 2096              		.cfi_offset 4, -8
 2097              		.cfi_offset 14, -4
 2098              	.LVL146:
3205:Generated_Source\PSoC4/CyLib.c ****     {
 2099              		.loc 1 3205 0
 2100 0002 0023     		movs	r3, #0
 2101 0004 04E0     		b	.L166
 2102              	.LVL147:
 2103              	.L167:
3207:Generated_Source\PSoC4/CyLib.c ****     }
 2104              		.loc 1 3207 0 discriminator 3
 2105 0006 9900     		lsls	r1, r3, #2
 2106 0008 0020     		movs	r0, #0
 2107 000a 0B4A     		ldr	r2, .L168
 2108 000c 8850     		str	r0, [r1, r2]
3205:Generated_Source\PSoC4/CyLib.c ****     {
 2109              		.loc 1 3205 0 discriminator 3
 2110 000e 0133     		adds	r3, r3, #1
 2111              	.LVL148:
 2112              	.L166:
3205:Generated_Source\PSoC4/CyLib.c ****     {
 2113              		.loc 1 3205 0 is_stmt 0 discriminator 1
 2114 0010 042B     		cmp	r3, #4
 2115 0012 F8D9     		bls	.L167
3210:Generated_Source\PSoC4/CyLib.c **** 
 2116              		.loc 1 3210 0 is_stmt 1
 2117 0014 0949     		ldr	r1, .L168+4
 2118 0016 0F20     		movs	r0, #15
 2119 0018 FFF7FEFF 		bl	CyIntSetSysVector
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 102


 2120              	.LVL149:
3213:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 2121              		.loc 1 3213 0
 2122 001c 0120     		movs	r0, #1
 2123 001e FFF7FEFF 		bl	CySysTickSetClockSource
 2124              	.LVL150:
3216:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2125              		.loc 1 3216 0
 2126 0022 074B     		ldr	r3, .L168+8
 2127 0024 1869     		ldr	r0, [r3, #16]
 2128 0026 FA21     		movs	r1, #250
 2129 0028 8900     		lsls	r1, r1, #2
 2130 002a FFF7FEFF 		bl	__aeabi_uidiv
 2131              	.LVL151:
 2132 002e FFF7FEFF 		bl	CySysTickSetReload
 2133              	.LVL152:
3217:Generated_Source\PSoC4/CyLib.c **** }
 2134              		.loc 1 3217 0
 2135 0032 FFF7FEFF 		bl	CySysTickClear
 2136              	.LVL153:
3218:Generated_Source\PSoC4/CyLib.c **** 
 2137              		.loc 1 3218 0
 2138              		@ sp needed
 2139 0036 10BD     		pop	{r4, pc}
 2140              	.L169:
 2141              		.align	2
 2142              	.L168:
 2143 0038 00000000 		.word	.LANCHOR2
 2144 003c 00000000 		.word	CySysTickServiceCallbacks
 2145 0040 00000000 		.word	.LANCHOR0
 2146              		.cfi_endproc
 2147              	.LFE37:
 2148              		.size	CySysTickInit, .-CySysTickInit
 2149              		.section	.text.CySysTickStart,"ax",%progbits
 2150              		.align	2
 2151              		.global	CySysTickStart
 2152              		.code	16
 2153              		.thumb_func
 2154              		.type	CySysTickStart, %function
 2155              	CySysTickStart:
 2156              	.LFB36:
3173:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2157              		.loc 1 3173 0
 2158              		.cfi_startproc
 2159              		@ args = 0, pretend = 0, frame = 0
 2160              		@ frame_needed = 0, uses_anonymous_args = 0
 2161 0000 10B5     		push	{r4, lr}
 2162              		.cfi_def_cfa_offset 8
 2163              		.cfi_offset 4, -8
 2164              		.cfi_offset 14, -4
3174:Generated_Source\PSoC4/CyLib.c ****     {
 2165              		.loc 1 3174 0
 2166 0002 064B     		ldr	r3, .L172
 2167 0004 5B69     		ldr	r3, [r3, #20]
 2168 0006 002B     		cmp	r3, #0
 2169 0008 04D1     		bne	.L171
3176:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 103


 2170              		.loc 1 3176 0
 2171 000a FFF7FEFF 		bl	CySysTickInit
 2172              	.LVL154:
3177:Generated_Source\PSoC4/CyLib.c ****     }
 2173              		.loc 1 3177 0
 2174 000e 0122     		movs	r2, #1
 2175 0010 024B     		ldr	r3, .L172
 2176 0012 5A61     		str	r2, [r3, #20]
 2177              	.L171:
3180:Generated_Source\PSoC4/CyLib.c **** }
 2178              		.loc 1 3180 0
 2179 0014 FFF7FEFF 		bl	CySysTickEnable
 2180              	.LVL155:
3181:Generated_Source\PSoC4/CyLib.c **** 
 2181              		.loc 1 3181 0
 2182              		@ sp needed
 2183 0018 10BD     		pop	{r4, pc}
 2184              	.L173:
 2185 001a C046     		.align	2
 2186              	.L172:
 2187 001c 00000000 		.word	.LANCHOR2
 2188              		.cfi_endproc
 2189              	.LFE36:
 2190              		.size	CySysTickStart, .-CySysTickStart
 2191              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2192              		.align	2
 2193              		.global	CySysTickSetCallback
 2194              		.code	16
 2195              		.thumb_func
 2196              		.type	CySysTickSetCallback, %function
 2197              	CySysTickSetCallback:
 2198              	.LFB49:
3458:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2199              		.loc 1 3458 0
 2200              		.cfi_startproc
 2201              		@ args = 0, pretend = 0, frame = 0
 2202              		@ frame_needed = 0, uses_anonymous_args = 0
 2203              		@ link register save eliminated.
 2204              	.LVL156:
3461:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2205              		.loc 1 3461 0
 2206 0000 024A     		ldr	r2, .L175
 2207 0002 8300     		lsls	r3, r0, #2
 2208 0004 9858     		ldr	r0, [r3, r2]
 2209              	.LVL157:
3462:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2210              		.loc 1 3462 0
 2211 0006 9950     		str	r1, [r3, r2]
3464:Generated_Source\PSoC4/CyLib.c **** 
 2212              		.loc 1 3464 0
 2213              		@ sp needed
 2214 0008 7047     		bx	lr
 2215              	.L176:
 2216 000a C046     		.align	2
 2217              	.L175:
 2218 000c 00000000 		.word	.LANCHOR2
 2219              		.cfi_endproc
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 104


 2220              	.LFE49:
 2221              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2222              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2223              		.align	2
 2224              		.global	CySysTickGetCallback
 2225              		.code	16
 2226              		.thumb_func
 2227              		.type	CySysTickGetCallback, %function
 2228              	CySysTickGetCallback:
 2229              	.LFB50:
3482:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2230              		.loc 1 3482 0
 2231              		.cfi_startproc
 2232              		@ args = 0, pretend = 0, frame = 0
 2233              		@ frame_needed = 0, uses_anonymous_args = 0
 2234              		@ link register save eliminated.
 2235              	.LVL158:
3483:Generated_Source\PSoC4/CyLib.c **** }
 2236              		.loc 1 3483 0
 2237 0000 8000     		lsls	r0, r0, #2
 2238              	.LVL159:
 2239 0002 014B     		ldr	r3, .L178
 2240 0004 C058     		ldr	r0, [r0, r3]
3484:Generated_Source\PSoC4/CyLib.c **** 
 2241              		.loc 1 3484 0
 2242              		@ sp needed
 2243 0006 7047     		bx	lr
 2244              	.L179:
 2245              		.align	2
 2246              	.L178:
 2247 0008 00000000 		.word	.LANCHOR2
 2248              		.cfi_endproc
 2249              	.LFE50:
 2250              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2251              		.section	.text.CyGetUniqueId,"ax",%progbits
 2252              		.align	2
 2253              		.global	CyGetUniqueId
 2254              		.code	16
 2255              		.thumb_func
 2256              		.type	CyGetUniqueId, %function
 2257              	CyGetUniqueId:
 2258              	.LFB52:
3510:Generated_Source\PSoC4/CyLib.c **** 
3511:Generated_Source\PSoC4/CyLib.c **** 
3512:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3513:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3514:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3515:Generated_Source\PSoC4/CyLib.c **** *
3516:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3517:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3518:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3519:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3520:Generated_Source\PSoC4/CyLib.c **** *
3521:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3522:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3523:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3524:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 105


3525:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3526:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3527:Generated_Source\PSoC4/CyLib.c **** {
 2259              		.loc 1 3527 0
 2260              		.cfi_startproc
 2261              		@ args = 0, pretend = 0, frame = 0
 2262              		@ frame_needed = 0, uses_anonymous_args = 0
 2263              		@ link register save eliminated.
 2264              	.LVL160:
3528:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3529:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2265              		.loc 1 3529 0
 2266 0000 134B     		ldr	r3, .L181
 2267 0002 1B78     		ldrb	r3, [r3]
 2268 0004 DAB2     		uxtb	r2, r3
 2269 0006 0260     		str	r2, [r0]
3530:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2270              		.loc 1 3530 0
 2271 0008 124B     		ldr	r3, .L181+4
 2272 000a 1B78     		ldrb	r3, [r3]
 2273 000c 1B02     		lsls	r3, r3, #8
 2274 000e 1343     		orrs	r3, r2
 2275 0010 0360     		str	r3, [r0]
3531:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2276              		.loc 1 3531 0
 2277 0012 114A     		ldr	r2, .L181+8
 2278 0014 1278     		ldrb	r2, [r2]
 2279 0016 1204     		lsls	r2, r2, #16
 2280 0018 1343     		orrs	r3, r2
 2281 001a 0360     		str	r3, [r0]
3532:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2282              		.loc 1 3532 0
 2283 001c 0F4A     		ldr	r2, .L181+12
 2284 001e 1278     		ldrb	r2, [r2]
 2285 0020 1206     		lsls	r2, r2, #24
 2286 0022 1343     		orrs	r3, r2
 2287 0024 0360     		str	r3, [r0]
3533:Generated_Source\PSoC4/CyLib.c **** 
3534:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2288              		.loc 1 3534 0
 2289 0026 0E4B     		ldr	r3, .L181+16
 2290 0028 1B78     		ldrb	r3, [r3]
 2291 002a DAB2     		uxtb	r2, r3
 2292 002c 4260     		str	r2, [r0, #4]
3535:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2293              		.loc 1 3535 0
 2294 002e 0D4B     		ldr	r3, .L181+20
 2295 0030 1B78     		ldrb	r3, [r3]
 2296 0032 1B02     		lsls	r3, r3, #8
 2297 0034 1343     		orrs	r3, r2
 2298 0036 4360     		str	r3, [r0, #4]
3536:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2299              		.loc 1 3536 0
 2300 0038 0B4A     		ldr	r2, .L181+24
 2301 003a 1278     		ldrb	r2, [r2]
 2302 003c 1204     		lsls	r2, r2, #16
 2303 003e 1343     		orrs	r3, r2
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 106


 2304 0040 4360     		str	r3, [r0, #4]
3537:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2305              		.loc 1 3537 0
 2306 0042 0A4A     		ldr	r2, .L181+28
 2307 0044 1278     		ldrb	r2, [r2]
 2308 0046 1206     		lsls	r2, r2, #24
 2309 0048 1343     		orrs	r3, r2
 2310 004a 4360     		str	r3, [r0, #4]
3538:Generated_Source\PSoC4/CyLib.c **** #else
3539:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3540:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3541:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3542:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3543:Generated_Source\PSoC4/CyLib.c **** 
3544:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3545:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3546:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3547:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3548:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3549:Generated_Source\PSoC4/CyLib.c **** }
 2311              		.loc 1 3549 0
 2312              		@ sp needed
 2313 004c 7047     		bx	lr
 2314              	.L182:
 2315 004e C046     		.align	2
 2316              	.L181:
 2317 0050 78F2FF0F 		.word	268431992
 2318 0054 79F2FF0F 		.word	268431993
 2319 0058 7AF2FF0F 		.word	268431994
 2320 005c 7BF2FF0F 		.word	268431995
 2321 0060 7CF2FF0F 		.word	268431996
 2322 0064 7DF2FF0F 		.word	268431997
 2323 0068 7EF2FF0F 		.word	268431998
 2324 006c 7FF2FF0F 		.word	268431999
 2325              		.cfi_endproc
 2326              	.LFE52:
 2327              		.size	CyGetUniqueId, .-CyGetUniqueId
 2328              		.section	.text.CySysSetRamAccessArbPriority,"ax",%progbits
 2329              		.align	2
 2330              		.global	CySysSetRamAccessArbPriority
 2331              		.code	16
 2332              		.thumb_func
 2333              		.type	CySysSetRamAccessArbPriority, %function
 2334              	CySysSetRamAccessArbPriority:
 2335              	.LFB53:
3550:Generated_Source\PSoC4/CyLib.c **** 
3551:Generated_Source\PSoC4/CyLib.c **** 
3552:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_DMAC_PRESENT)
3553:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3554:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetRamAccessArbPriority
3555:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3556:Generated_Source\PSoC4/CyLib.c ****     *
3557:Generated_Source\PSoC4/CyLib.c ****     *  Sets RAM access priority between CPU and DMA. The RAM_CTL register is
3558:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3559:Generated_Source\PSoC4/CyLib.c ****     *  details.
3560:Generated_Source\PSoC4/CyLib.c ****     *
3561:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 107


3562:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3563:Generated_Source\PSoC4/CyLib.c ****     *
3564:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3565:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3566:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3567:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3568:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3569:Generated_Source\PSoC4/CyLib.c ****     *
3570:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3571:Generated_Source\PSoC4/CyLib.c ****     void CySysSetRamAccessArbPriority(uint32 source)
3572:Generated_Source\PSoC4/CyLib.c ****     {
 2336              		.loc 1 3572 0
 2337              		.cfi_startproc
 2338              		@ args = 0, pretend = 0, frame = 0
 2339              		@ frame_needed = 0, uses_anonymous_args = 0
 2340              		@ link register save eliminated.
 2341              	.LVL161:
3573:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3574:Generated_Source\PSoC4/CyLib.c **** 
3575:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_RAM_CTL_REG & ~CY_SYS_CPUSS_RAM_CTL_ARB_MASK;
 2342              		.loc 1 3575 0
 2343 0000 0549     		ldr	r1, .L184
 2344 0002 0A68     		ldr	r2, [r1]
 2345 0004 054B     		ldr	r3, .L184+4
 2346 0006 1A40     		ands	r2, r3
 2347              	.LVL162:
3576:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_RAM_CTL_ARB_SHIFT) & CY_SYS_CPUSS_RAM_CTL_ARB_M
 2348              		.loc 1 3576 0
 2349 0008 4004     		lsls	r0, r0, #17
 2350              	.LVL163:
 2351 000a C023     		movs	r3, #192
 2352 000c DB02     		lsls	r3, r3, #11
 2353 000e 1840     		ands	r0, r3
 2354 0010 1043     		orrs	r0, r2
 2355              	.LVL164:
3577:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_RAM_CTL_REG = regTmp;
 2356              		.loc 1 3577 0
 2357 0012 0860     		str	r0, [r1]
3578:Generated_Source\PSoC4/CyLib.c ****     }
 2358              		.loc 1 3578 0
 2359              		@ sp needed
 2360 0014 7047     		bx	lr
 2361              	.L185:
 2362 0016 C046     		.align	2
 2363              	.L184:
 2364 0018 38001040 		.word	1074790456
 2365 001c FFFFF9FF 		.word	-393217
 2366              		.cfi_endproc
 2367              	.LFE53:
 2368              		.size	CySysSetRamAccessArbPriority, .-CySysSetRamAccessArbPriority
 2369              		.section	.text.CySysSetFlashAccessArbPriority,"ax",%progbits
 2370              		.align	2
 2371              		.global	CySysSetFlashAccessArbPriority
 2372              		.code	16
 2373              		.thumb_func
 2374              		.type	CySysSetFlashAccessArbPriority, %function
 2375              	CySysSetFlashAccessArbPriority:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 108


 2376              	.LFB54:
3579:Generated_Source\PSoC4/CyLib.c **** 
3580:Generated_Source\PSoC4/CyLib.c **** 
3581:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3582:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetFlashAccessArbPriority
3583:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3584:Generated_Source\PSoC4/CyLib.c ****     *
3585:Generated_Source\PSoC4/CyLib.c ****     *  Sets flash access priority between CPU and DMA. The FLASH_CTL register is
3586:Generated_Source\PSoC4/CyLib.c ****     *  configured to set the priority. Please refer to the device TRM for more
3587:Generated_Source\PSoC4/CyLib.c ****     *  details.
3588:Generated_Source\PSoC4/CyLib.c ****     *
3589:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3590:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3591:Generated_Source\PSoC4/CyLib.c ****     *
3592:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3593:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3594:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3595:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3596:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3597:Generated_Source\PSoC4/CyLib.c ****     *
3598:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3599:Generated_Source\PSoC4/CyLib.c ****     void CySysSetFlashAccessArbPriority(uint32 source)
3600:Generated_Source\PSoC4/CyLib.c ****     {
 2377              		.loc 1 3600 0
 2378              		.cfi_startproc
 2379              		@ args = 0, pretend = 0, frame = 0
 2380              		@ frame_needed = 0, uses_anonymous_args = 0
 2381              		@ link register save eliminated.
 2382              	.LVL165:
3601:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3602:Generated_Source\PSoC4/CyLib.c **** 
3603:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_FLASH_CTL_REG & ~CY_SYS_CPUSS_FLASH_CTL_ARB_MASK;
 2383              		.loc 1 3603 0
 2384 0000 0549     		ldr	r1, .L187
 2385 0002 0A68     		ldr	r2, [r1]
 2386 0004 054B     		ldr	r3, .L187+4
 2387 0006 1A40     		ands	r2, r3
 2388              	.LVL166:
3604:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_FLASH_CTL_ARB_SHIFT) & CY_SYS_CPUSS_FLASH_CTL_A
 2389              		.loc 1 3604 0
 2390 0008 4004     		lsls	r0, r0, #17
 2391              	.LVL167:
 2392 000a C023     		movs	r3, #192
 2393 000c DB02     		lsls	r3, r3, #11
 2394 000e 1840     		ands	r0, r3
 2395 0010 1043     		orrs	r0, r2
 2396              	.LVL168:
3605:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_FLASH_CTL_REG = regTmp;
 2397              		.loc 1 3605 0
 2398 0012 0860     		str	r0, [r1]
3606:Generated_Source\PSoC4/CyLib.c ****     }
 2399              		.loc 1 3606 0
 2400              		@ sp needed
 2401 0014 7047     		bx	lr
 2402              	.L188:
 2403 0016 C046     		.align	2
 2404              	.L187:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 109


 2405 0018 30001040 		.word	1074790448
 2406 001c FFFFF9FF 		.word	-393217
 2407              		.cfi_endproc
 2408              	.LFE54:
 2409              		.size	CySysSetFlashAccessArbPriority, .-CySysSetFlashAccessArbPriority
 2410              		.section	.text.CySysSetDmacAccessArbPriority,"ax",%progbits
 2411              		.align	2
 2412              		.global	CySysSetDmacAccessArbPriority
 2413              		.code	16
 2414              		.thumb_func
 2415              		.type	CySysSetDmacAccessArbPriority, %function
 2416              	CySysSetDmacAccessArbPriority:
 2417              	.LFB55:
3607:Generated_Source\PSoC4/CyLib.c **** 
3608:Generated_Source\PSoC4/CyLib.c **** 
3609:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3610:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetDmacAccessArbPriority
3611:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3612:Generated_Source\PSoC4/CyLib.c ****     *
3613:Generated_Source\PSoC4/CyLib.c ****     *  Sets DMAC slave interface access priority between CPU and DMA. The DMAC_CTL
3614:Generated_Source\PSoC4/CyLib.c ****     *  register is configured to set the priority. Please refer to the device TRM
3615:Generated_Source\PSoC4/CyLib.c ****     *  for more details.
3616:Generated_Source\PSoC4/CyLib.c ****     *
3617:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3618:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3619:Generated_Source\PSoC4/CyLib.c ****     *
3620:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3621:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3622:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3623:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3624:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3625:Generated_Source\PSoC4/CyLib.c ****     *
3626:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3627:Generated_Source\PSoC4/CyLib.c ****     void CySysSetDmacAccessArbPriority(uint32 source)
3628:Generated_Source\PSoC4/CyLib.c ****     {
 2418              		.loc 1 3628 0
 2419              		.cfi_startproc
 2420              		@ args = 0, pretend = 0, frame = 0
 2421              		@ frame_needed = 0, uses_anonymous_args = 0
 2422              		@ link register save eliminated.
 2423              	.LVL169:
3629:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3630:Generated_Source\PSoC4/CyLib.c **** 
3631:Generated_Source\PSoC4/CyLib.c ****         regTmp  = CY_SYS_CPUSS_DMAC_CTL_REG & ~CY_SYS_CPUSS_DMAC_CTL_ARB_MASK;
 2424              		.loc 1 3631 0
 2425 0000 0549     		ldr	r1, .L190
 2426 0002 0A68     		ldr	r2, [r1]
 2427 0004 054B     		ldr	r3, .L190+4
 2428 0006 1A40     		ands	r2, r3
 2429              	.LVL170:
3632:Generated_Source\PSoC4/CyLib.c ****         regTmp |= ((uint32) (source << CY_SYS_CPUSS_DMAC_CTL_ARB_SHIFT) & CY_SYS_CPUSS_DMAC_CTL_ARB
 2430              		.loc 1 3632 0
 2431 0008 4004     		lsls	r0, r0, #17
 2432              	.LVL171:
 2433 000a C023     		movs	r3, #192
 2434 000c DB02     		lsls	r3, r3, #11
 2435 000e 1840     		ands	r0, r3
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 110


 2436 0010 1043     		orrs	r0, r2
 2437              	.LVL172:
3633:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CPUSS_DMAC_CTL_REG = regTmp;
 2438              		.loc 1 3633 0
 2439 0012 0860     		str	r0, [r1]
3634:Generated_Source\PSoC4/CyLib.c ****     }
 2440              		.loc 1 3634 0
 2441              		@ sp needed
 2442 0014 7047     		bx	lr
 2443              	.L191:
 2444 0016 C046     		.align	2
 2445              	.L190:
 2446 0018 3C001040 		.word	1074790460
 2447 001c FFFFF9FF 		.word	-393217
 2448              		.cfi_endproc
 2449              	.LFE55:
 2450              		.size	CySysSetDmacAccessArbPriority, .-CySysSetDmacAccessArbPriority
 2451              		.section	.text.CySysSetPeripheralAccessArbPriority,"ax",%progbits
 2452              		.align	2
 2453              		.global	CySysSetPeripheralAccessArbPriority
 2454              		.code	16
 2455              		.thumb_func
 2456              		.type	CySysSetPeripheralAccessArbPriority, %function
 2457              	CySysSetPeripheralAccessArbPriority:
 2458              	.LFB56:
3635:Generated_Source\PSoC4/CyLib.c **** 
3636:Generated_Source\PSoC4/CyLib.c **** 
3637:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
3638:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysSetPeripheralAccessArbPriority
3639:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
3640:Generated_Source\PSoC4/CyLib.c ****     *
3641:Generated_Source\PSoC4/CyLib.c ****     *  Sets slave peripheral interface access priority between CPU and DMA.
3642:Generated_Source\PSoC4/CyLib.c ****     *  The SL_CTL register is configured to set the priority. Please refer to the
3643:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3644:Generated_Source\PSoC4/CyLib.c ****     *
3645:Generated_Source\PSoC4/CyLib.c ****     *  This API is applicable for PSoC 4200M / PSoC 4200L / 4100S with
3646:Generated_Source\PSoC4/CyLib.c ****     *  DMA devices only.
3647:Generated_Source\PSoC4/CyLib.c ****     *
3648:Generated_Source\PSoC4/CyLib.c ****     *  \param  interfaceNumber: the slave interface number. Please refer to the
3649:Generated_Source\PSoC4/CyLib.c ****     *  device TRM for more details.
3650:Generated_Source\PSoC4/CyLib.c ****     *  \param source:
3651:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_CPU              CPU has priority (Default)
3652:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_DMA              DMA has priority
3653:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND            Round robin
3654:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_ARB_PRIORITY_ROUND_STICKY     Round robin sticky
3655:Generated_Source\PSoC4/CyLib.c ****     *
3656:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
3657:Generated_Source\PSoC4/CyLib.c ****     void CySysSetPeripheralAccessArbPriority(uint32 interfaceNumber, uint32 source)
3658:Generated_Source\PSoC4/CyLib.c ****     {
 2459              		.loc 1 3658 0
 2460              		.cfi_startproc
 2461              		@ args = 0, pretend = 0, frame = 0
 2462              		@ frame_needed = 0, uses_anonymous_args = 0
 2463              	.LVL173:
 2464 0000 10B5     		push	{r4, lr}
 2465              		.cfi_def_cfa_offset 8
 2466              		.cfi_offset 4, -8
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 111


 2467              		.cfi_offset 14, -4
3659:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
3660:Generated_Source\PSoC4/CyLib.c **** 
3661:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 0u)
 2468              		.loc 1 3661 0
 2469 0002 0028     		cmp	r0, #0
 2470 0004 0AD1     		bne	.L193
3662:Generated_Source\PSoC4/CyLib.c ****         {
3663:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL0_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2471              		.loc 1 3663 0
 2472 0006 1448     		ldr	r0, .L197
 2473              	.LVL174:
 2474 0008 0268     		ldr	r2, [r0]
 2475 000a 144B     		ldr	r3, .L197+4
 2476 000c 1A40     		ands	r2, r3
 2477              	.LVL175:
3664:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2478              		.loc 1 3664 0
 2479 000e 4904     		lsls	r1, r1, #17
 2480              	.LVL176:
 2481 0010 C023     		movs	r3, #192
 2482 0012 DB02     		lsls	r3, r3, #11
 2483 0014 1940     		ands	r1, r3
 2484 0016 1143     		orrs	r1, r2
 2485              	.LVL177:
3665:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL0_REG = regTmp;
 2486              		.loc 1 3665 0
 2487 0018 0160     		str	r1, [r0]
 2488 001a 1CE0     		b	.L192
 2489              	.LVL178:
 2490              	.L193:
3666:Generated_Source\PSoC4/CyLib.c ****         } else
3667:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 2)
3668:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 1u)
 2491              		.loc 1 3668 0
 2492 001c 0128     		cmp	r0, #1
 2493 001e 0AD1     		bne	.L195
3669:Generated_Source\PSoC4/CyLib.c ****         {
3670:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL1_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2494              		.loc 1 3670 0
 2495 0020 0F48     		ldr	r0, .L197+8
 2496              	.LVL179:
 2497 0022 0268     		ldr	r2, [r0]
 2498 0024 0D4B     		ldr	r3, .L197+4
 2499 0026 1A40     		ands	r2, r3
 2500              	.LVL180:
3671:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2501              		.loc 1 3671 0
 2502 0028 4904     		lsls	r1, r1, #17
 2503              	.LVL181:
 2504 002a C023     		movs	r3, #192
 2505 002c DB02     		lsls	r3, r3, #11
 2506 002e 1940     		ands	r1, r3
 2507 0030 1143     		orrs	r1, r2
 2508              	.LVL182:
3672:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL1_REG = regTmp;
 2509              		.loc 1 3672 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 112


 2510 0032 0160     		str	r1, [r0]
 2511 0034 0FE0     		b	.L192
 2512              	.LVL183:
 2513              	.L195:
3673:Generated_Source\PSoC4/CyLib.c ****         } else
3674:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3675:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SL_NR >= 3)
3676:Generated_Source\PSoC4/CyLib.c ****         if (interfaceNumber == 2u)
 2514              		.loc 1 3676 0
 2515 0036 0228     		cmp	r0, #2
 2516 0038 0AD1     		bne	.L196
3677:Generated_Source\PSoC4/CyLib.c ****         {
3678:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CPUSS_SL_CTL2_REG & ~CY_SYS_CPUSS_SL_CTL_ARB_MASK;
 2517              		.loc 1 3678 0
 2518 003a 0A48     		ldr	r0, .L197+12
 2519              	.LVL184:
 2520 003c 0268     		ldr	r2, [r0]
 2521 003e 074B     		ldr	r3, .L197+4
 2522 0040 1A40     		ands	r2, r3
 2523              	.LVL185:
3679:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (source << CY_SYS_CPUSS_SL_CTL_ARB_SHIFT) & CY_SYS_CPUSS_SL_CTL_ARB
 2524              		.loc 1 3679 0
 2525 0042 4904     		lsls	r1, r1, #17
 2526              	.LVL186:
 2527 0044 C023     		movs	r3, #192
 2528 0046 DB02     		lsls	r3, r3, #11
 2529 0048 1940     		ands	r1, r3
 2530 004a 1143     		orrs	r1, r2
 2531              	.LVL187:
3680:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CPUSS_SL_CTL2_REG = regTmp;
 2532              		.loc 1 3680 0
 2533 004c 0160     		str	r1, [r0]
 2534 004e 02E0     		b	.L192
 2535              	.LVL188:
 2536              	.L196:
3681:Generated_Source\PSoC4/CyLib.c ****         } else
3682:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SL_NR >= 1) */
3683:Generated_Source\PSoC4/CyLib.c ****         {
3684:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if interface is invalid */
3685:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 2537              		.loc 1 3685 0 discriminator 1
 2538 0050 0020     		movs	r0, #0
 2539              	.LVL189:
 2540 0052 FFF7FEFF 		bl	CyHalt
 2541              	.LVL190:
 2542              	.L192:
3686:Generated_Source\PSoC4/CyLib.c ****         }
3687:Generated_Source\PSoC4/CyLib.c ****     }
 2543              		.loc 1 3687 0
 2544              		@ sp needed
 2545 0056 10BD     		pop	{r4, pc}
 2546              	.L198:
 2547              		.align	2
 2548              	.L197:
 2549 0058 00011040 		.word	1074790656
 2550 005c FFFFF9FF 		.word	-393217
 2551 0060 04011040 		.word	1074790660
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 113


 2552 0064 08011040 		.word	1074790664
 2553              		.cfi_endproc
 2554              	.LFE56:
 2555              		.size	CySysSetPeripheralAccessArbPriority, .-CySysSetPeripheralAccessArbPriority
 2556              		.global	CySysClkPumpConfig
 2557              		.global	cyImoFreqMhz2Reg
 2558              		.global	CySysTickInitVar
 2559              		.global	cydelay32kMs
 2560              		.global	cydelayFreqMhz
 2561              		.global	cydelayFreqKhz
 2562              		.global	cydelayFreqHz
 2563              		.section	.rodata
 2564              		.align	2
 2565              		.set	.LANCHOR1,. + 0
 2566              		.type	cyImoFreqMhz2Reg, %object
 2567              		.size	cyImoFreqMhz2Reg, 46
 2568              	cyImoFreqMhz2Reg:
 2569 0000 03       		.byte	3
 2570 0001 04       		.byte	4
 2571 0002 05       		.byte	5
 2572 0003 06       		.byte	6
 2573 0004 07       		.byte	7
 2574 0005 08       		.byte	8
 2575 0006 09       		.byte	9
 2576 0007 0A       		.byte	10
 2577 0008 0B       		.byte	11
 2578 0009 0C       		.byte	12
 2579 000a 0E       		.byte	14
 2580 000b 0F       		.byte	15
 2581 000c 10       		.byte	16
 2582 000d 11       		.byte	17
 2583 000e 12       		.byte	18
 2584 000f 13       		.byte	19
 2585 0010 14       		.byte	20
 2586 0011 15       		.byte	21
 2587 0012 16       		.byte	22
 2588 0013 17       		.byte	23
 2589 0014 18       		.byte	24
 2590 0015 19       		.byte	25
 2591 0016 1B       		.byte	27
 2592 0017 1C       		.byte	28
 2593 0018 1D       		.byte	29
 2594 0019 1E       		.byte	30
 2595 001a 1F       		.byte	31
 2596 001b 20       		.byte	32
 2597 001c 21       		.byte	33
 2598 001d 22       		.byte	34
 2599 001e 23       		.byte	35
 2600 001f 25       		.byte	37
 2601 0020 26       		.byte	38
 2602 0021 27       		.byte	39
 2603 0022 28       		.byte	40
 2604 0023 29       		.byte	41
 2605 0024 2A       		.byte	42
 2606 0025 2B       		.byte	43
 2607 0026 2E       		.byte	46
 2608 0027 2F       		.byte	47
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 114


 2609 0028 30       		.byte	48
 2610 0029 31       		.byte	49
 2611 002a 32       		.byte	50
 2612 002b 33       		.byte	51
 2613 002c 34       		.byte	52
 2614 002d 35       		.byte	53
 2615              		.data
 2616              		.align	2
 2617              		.set	.LANCHOR0,. + 0
 2618              		.type	CySysClkPumpConfig, %object
 2619              		.size	CySysClkPumpConfig, 4
 2620              	CySysClkPumpConfig:
 2621 0000 01000000 		.word	1
 2622              		.type	cydelay32kMs, %object
 2623              		.size	cydelay32kMs, 4
 2624              	cydelay32kMs:
 2625 0004 0000C05D 		.word	1572864000
 2626              		.type	cydelayFreqKhz, %object
 2627              		.size	cydelayFreqKhz, 4
 2628              	cydelayFreqKhz:
 2629 0008 80BB0000 		.word	48000
 2630              		.type	cydelayFreqMhz, %object
 2631              		.size	cydelayFreqMhz, 1
 2632              	cydelayFreqMhz:
 2633 000c 30       		.byte	48
 2634 000d 000000   		.space	3
 2635              		.type	cydelayFreqHz, %object
 2636              		.size	cydelayFreqHz, 4
 2637              	cydelayFreqHz:
 2638 0010 006CDC02 		.word	48000000
 2639              		.bss
 2640              		.align	2
 2641              		.set	.LANCHOR2,. + 0
 2642              		.type	CySysTickCallbacks, %object
 2643              		.size	CySysTickCallbacks, 20
 2644              	CySysTickCallbacks:
 2645 0000 00000000 		.space	20
 2645      00000000 
 2645      00000000 
 2645      00000000 
 2645      00000000 
 2646              		.type	CySysTickInitVar, %object
 2647              		.size	CySysTickInitVar, 4
 2648              	CySysTickInitVar:
 2649 0014 00000000 		.space	4
 2650              		.text
 2651              	.Letext0:
 2652              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2653              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2654              		.section	.debug_info,"",%progbits
 2655              	.Ldebug_info0:
 2656 0000 280D0000 		.4byte	0xd28
 2657 0004 0400     		.2byte	0x4
 2658 0006 00000000 		.4byte	.Ldebug_abbrev0
 2659 000a 04       		.byte	0x4
 2660 000b 01       		.uleb128 0x1
 2661 000c 84000000 		.4byte	.LASF121
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 115


 2662 0010 0C       		.byte	0xc
 2663 0011 77070000 		.4byte	.LASF122
 2664 0015 22020000 		.4byte	.LASF123
 2665 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2666 001d 00000000 		.4byte	0
 2667 0021 00000000 		.4byte	.Ldebug_line0
 2668 0025 02       		.uleb128 0x2
 2669 0026 01       		.byte	0x1
 2670 0027 06       		.byte	0x6
 2671 0028 9C010000 		.4byte	.LASF0
 2672 002c 02       		.uleb128 0x2
 2673 002d 01       		.byte	0x1
 2674 002e 08       		.byte	0x8
 2675 002f C5050000 		.4byte	.LASF1
 2676 0033 02       		.uleb128 0x2
 2677 0034 02       		.byte	0x2
 2678 0035 05       		.byte	0x5
 2679 0036 D3050000 		.4byte	.LASF2
 2680 003a 02       		.uleb128 0x2
 2681 003b 02       		.byte	0x2
 2682 003c 07       		.byte	0x7
 2683 003d A3030000 		.4byte	.LASF3
 2684 0041 02       		.uleb128 0x2
 2685 0042 04       		.byte	0x4
 2686 0043 05       		.byte	0x5
 2687 0044 DB010000 		.4byte	.LASF4
 2688 0048 02       		.uleb128 0x2
 2689 0049 04       		.byte	0x4
 2690 004a 07       		.byte	0x7
 2691 004b 2B030000 		.4byte	.LASF5
 2692 004f 02       		.uleb128 0x2
 2693 0050 08       		.byte	0x8
 2694 0051 05       		.byte	0x5
 2695 0052 8E010000 		.4byte	.LASF6
 2696 0056 02       		.uleb128 0x2
 2697 0057 08       		.byte	0x8
 2698 0058 07       		.byte	0x7
 2699 0059 12010000 		.4byte	.LASF7
 2700 005d 03       		.uleb128 0x3
 2701 005e 04       		.byte	0x4
 2702 005f 05       		.byte	0x5
 2703 0060 696E7400 		.ascii	"int\000"
 2704 0064 02       		.uleb128 0x2
 2705 0065 04       		.byte	0x4
 2706 0066 07       		.byte	0x7
 2707 0067 0F030000 		.4byte	.LASF8
 2708 006b 04       		.uleb128 0x4
 2709 006c 06020000 		.4byte	.LASF9
 2710 0070 02       		.byte	0x2
 2711 0071 FB01     		.2byte	0x1fb
 2712 0073 2C000000 		.4byte	0x2c
 2713 0077 04       		.uleb128 0x4
 2714 0078 17000000 		.4byte	.LASF10
 2715 007c 02       		.byte	0x2
 2716 007d FC01     		.2byte	0x1fc
 2717 007f 3A000000 		.4byte	0x3a
 2718 0083 04       		.uleb128 0x4
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 116


 2719 0084 73020000 		.4byte	.LASF11
 2720 0088 02       		.byte	0x2
 2721 0089 FD01     		.2byte	0x1fd
 2722 008b 48000000 		.4byte	0x48
 2723 008f 02       		.uleb128 0x2
 2724 0090 04       		.byte	0x4
 2725 0091 04       		.byte	0x4
 2726 0092 2B050000 		.4byte	.LASF12
 2727 0096 02       		.uleb128 0x2
 2728 0097 08       		.byte	0x8
 2729 0098 04       		.byte	0x4
 2730 0099 E3070000 		.4byte	.LASF13
 2731 009d 02       		.uleb128 0x2
 2732 009e 01       		.byte	0x1
 2733 009f 08       		.byte	0x8
 2734 00a0 27060000 		.4byte	.LASF14
 2735 00a4 04       		.uleb128 0x4
 2736 00a5 4C070000 		.4byte	.LASF15
 2737 00a9 02       		.byte	0x2
 2738 00aa 9D02     		.2byte	0x29d
 2739 00ac 48000000 		.4byte	0x48
 2740 00b0 04       		.uleb128 0x4
 2741 00b1 92050000 		.4byte	.LASF16
 2742 00b5 02       		.byte	0x2
 2743 00b6 A502     		.2byte	0x2a5
 2744 00b8 BC000000 		.4byte	0xbc
 2745 00bc 05       		.uleb128 0x5
 2746 00bd 6B000000 		.4byte	0x6b
 2747 00c1 04       		.uleb128 0x4
 2748 00c2 4F040000 		.4byte	.LASF17
 2749 00c6 02       		.byte	0x2
 2750 00c7 A702     		.2byte	0x2a7
 2751 00c9 CD000000 		.4byte	0xcd
 2752 00cd 05       		.uleb128 0x5
 2753 00ce 83000000 		.4byte	0x83
 2754 00d2 04       		.uleb128 0x4
 2755 00d3 2C060000 		.4byte	.LASF18
 2756 00d7 02       		.byte	0x2
 2757 00d8 B702     		.2byte	0x2b7
 2758 00da DE000000 		.4byte	0xde
 2759 00de 06       		.uleb128 0x6
 2760 00df 04       		.byte	0x4
 2761 00e0 E4000000 		.4byte	0xe4
 2762 00e4 07       		.uleb128 0x7
 2763 00e5 02       		.uleb128 0x2
 2764 00e6 08       		.byte	0x8
 2765 00e7 04       		.byte	0x4
 2766 00e8 B7040000 		.4byte	.LASF19
 2767 00ec 02       		.uleb128 0x2
 2768 00ed 04       		.byte	0x4
 2769 00ee 07       		.byte	0x7
 2770 00ef 78040000 		.4byte	.LASF20
 2771 00f3 04       		.uleb128 0x4
 2772 00f4 56050000 		.4byte	.LASF21
 2773 00f8 03       		.byte	0x3
 2774 00f9 0801     		.2byte	0x108
 2775 00fb DE000000 		.4byte	0xde
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 117


 2776 00ff 08       		.uleb128 0x8
 2777 0100 55070000 		.4byte	.LASF22
 2778 0104 01       		.byte	0x1
 2779 0105 69       		.byte	0x69
 2780 0106 00000000 		.4byte	.LFB2
 2781 010a 14000000 		.4byte	.LFE2-.LFB2
 2782 010e 01       		.uleb128 0x1
 2783 010f 9C       		.byte	0x9c
 2784 0110 08       		.uleb128 0x8
 2785 0111 58030000 		.4byte	.LASF23
 2786 0115 01       		.byte	0x1
 2787 0116 8A       		.byte	0x8a
 2788 0117 00000000 		.4byte	.LFB3
 2789 011b 10000000 		.4byte	.LFE3-.LFB3
 2790 011f 01       		.uleb128 0x1
 2791 0120 9C       		.byte	0x9c
 2792 0121 09       		.uleb128 0x9
 2793 0122 27000000 		.4byte	.LASF26
 2794 0126 01       		.byte	0x1
 2795 0127 4802     		.2byte	0x248
 2796 0129 00000000 		.4byte	.LFB4
 2797 012d 20000000 		.4byte	.LFE4-.LFB4
 2798 0131 01       		.uleb128 0x1
 2799 0132 9C       		.byte	0x9c
 2800 0133 7A010000 		.4byte	0x17a
 2801 0137 0A       		.uleb128 0xa
 2802 0138 FB050000 		.4byte	.LASF28
 2803 013c 01       		.byte	0x1
 2804 013d 4802     		.2byte	0x248
 2805 013f 83000000 		.4byte	0x83
 2806 0143 00000000 		.4byte	.LLST0
 2807 0147 0B       		.uleb128 0xb
 2808 0148 B9010000 		.4byte	.LASF24
 2809 014c 01       		.byte	0x1
 2810 014d 4A02     		.2byte	0x24a
 2811 014f 6B000000 		.4byte	0x6b
 2812 0153 2C000000 		.4byte	.LLST1
 2813 0157 0B       		.uleb128 0xb
 2814 0158 A3070000 		.4byte	.LASF25
 2815 015c 01       		.byte	0x1
 2816 015d 4B02     		.2byte	0x24b
 2817 015f 83000000 		.4byte	0x83
 2818 0163 3F000000 		.4byte	.LLST2
 2819 0167 0C       		.uleb128 0xc
 2820 0168 08000000 		.4byte	.LVL1
 2821 016c 0A0D0000 		.4byte	0xd0a
 2822 0170 0C       		.uleb128 0xc
 2823 0171 1A000000 		.4byte	.LVL5
 2824 0175 150D0000 		.4byte	0xd15
 2825 0179 00       		.byte	0
 2826 017a 09       		.uleb128 0x9
 2827 017b 3A040000 		.4byte	.LASF27
 2828 017f 01       		.byte	0x1
 2829 0180 9502     		.2byte	0x295
 2830 0182 00000000 		.4byte	.LFB5
 2831 0186 38000000 		.4byte	.LFE5-.LFB5
 2832 018a 01       		.uleb128 0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 118


 2833 018b 9C       		.byte	0x9c
 2834 018c 9F010000 		.4byte	0x19f
 2835 0190 0D       		.uleb128 0xd
 2836 0191 1B020000 		.4byte	.LASF29
 2837 0195 01       		.byte	0x1
 2838 0196 9502     		.2byte	0x295
 2839 0198 83000000 		.4byte	0x83
 2840 019c 01       		.uleb128 0x1
 2841 019d 50       		.byte	0x50
 2842 019e 00       		.byte	0
 2843 019f 0E       		.uleb128 0xe
 2844 01a0 95020000 		.4byte	.LASF34
 2845 01a4 01       		.byte	0x1
 2846 01a5 BA02     		.2byte	0x2ba
 2847 01a7 83000000 		.4byte	0x83
 2848 01ab 00000000 		.4byte	.LFB6
 2849 01af 1C000000 		.4byte	.LFE6-.LFB6
 2850 01b3 01       		.uleb128 0x1
 2851 01b4 9C       		.byte	0x9c
 2852 01b5 EC010000 		.4byte	0x1ec
 2853 01b9 0B       		.uleb128 0xb
 2854 01ba B9010000 		.4byte	.LASF24
 2855 01be 01       		.byte	0x1
 2856 01bf BC02     		.2byte	0x2bc
 2857 01c1 6B000000 		.4byte	0x6b
 2858 01c5 5D000000 		.4byte	.LLST3
 2859 01c9 0B       		.uleb128 0xb
 2860 01ca D3040000 		.4byte	.LASF30
 2861 01ce 01       		.byte	0x1
 2862 01cf BD02     		.2byte	0x2bd
 2863 01d1 83000000 		.4byte	0x83
 2864 01d5 70000000 		.4byte	.LLST4
 2865 01d9 0C       		.uleb128 0xc
 2866 01da 06000000 		.4byte	.LVL8
 2867 01de 0A0D0000 		.4byte	0xd0a
 2868 01e2 0C       		.uleb128 0xc
 2869 01e3 12000000 		.4byte	.LVL10
 2870 01e7 150D0000 		.4byte	0xd15
 2871 01eb 00       		.byte	0
 2872 01ec 09       		.uleb128 0x9
 2873 01ed 49060000 		.4byte	.LASF31
 2874 01f1 01       		.byte	0x1
 2875 01f2 F702     		.2byte	0x2f7
 2876 01f4 00000000 		.4byte	.LFB7
 2877 01f8 30000000 		.4byte	.LFE7-.LFB7
 2878 01fc 01       		.uleb128 0x1
 2879 01fd 9C       		.byte	0x9c
 2880 01fe 35020000 		.4byte	0x235
 2881 0202 0A       		.uleb128 0xa
 2882 0203 30070000 		.4byte	.LASF32
 2883 0207 01       		.byte	0x1
 2884 0208 F702     		.2byte	0x2f7
 2885 020a 83000000 		.4byte	0x83
 2886 020e 8E000000 		.4byte	.LLST5
 2887 0212 0B       		.uleb128 0xb
 2888 0213 B9010000 		.4byte	.LASF24
 2889 0217 01       		.byte	0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 119


 2890 0218 F902     		.2byte	0x2f9
 2891 021a 6B000000 		.4byte	0x6b
 2892 021e BA000000 		.4byte	.LLST6
 2893 0222 0C       		.uleb128 0xc
 2894 0223 08000000 		.4byte	.LVL13
 2895 0227 0A0D0000 		.4byte	0xd0a
 2896 022b 0C       		.uleb128 0xc
 2897 022c 24000000 		.4byte	.LVL15
 2898 0230 150D0000 		.4byte	0xd15
 2899 0234 00       		.byte	0
 2900 0235 0F       		.uleb128 0xf
 2901 0236 EA060000 		.4byte	.LASF33
 2902 023a 01       		.byte	0x1
 2903 023b 4205     		.2byte	0x542
 2904 023d 00000000 		.4byte	.LFB10
 2905 0241 24000000 		.4byte	.LFE10-.LFB10
 2906 0245 01       		.uleb128 0x1
 2907 0246 9C       		.byte	0x9c
 2908 0247 0E       		.uleb128 0xe
 2909 0248 7A020000 		.4byte	.LASF35
 2910 024c 01       		.byte	0x1
 2911 024d 6505     		.2byte	0x565
 2912 024f 83000000 		.4byte	0x83
 2913 0253 00000000 		.4byte	.LFB11
 2914 0257 10000000 		.4byte	.LFE11-.LFB11
 2915 025b 01       		.uleb128 0x1
 2916 025c 9C       		.byte	0x9c
 2917 025d 70020000 		.4byte	0x270
 2918 0261 10       		.uleb128 0x10
 2919 0262 D7070000 		.4byte	.LASF36
 2920 0266 01       		.byte	0x1
 2921 0267 6705     		.2byte	0x567
 2922 0269 83000000 		.4byte	0x83
 2923 026d 01       		.uleb128 0x1
 2924 026e 50       		.byte	0x50
 2925 026f 00       		.byte	0
 2926 0270 0F       		.uleb128 0xf
 2927 0271 CB060000 		.4byte	.LASF37
 2928 0275 01       		.byte	0x1
 2929 0276 840A     		.2byte	0xa84
 2930 0278 00000000 		.4byte	.LFB14
 2931 027c 20000000 		.4byte	.LFE14-.LFB14
 2932 0280 01       		.uleb128 0x1
 2933 0281 9C       		.byte	0x9c
 2934 0282 11       		.uleb128 0x11
 2935 0283 3D030000 		.4byte	.LASF87
 2936 0287 01       		.byte	0x1
 2937 0288 960A     		.2byte	0xa96
 2938 028a 83000000 		.4byte	0x83
 2939 028e 00000000 		.4byte	.LFB15
 2940 0292 10000000 		.4byte	.LFE15-.LFB15
 2941 0296 01       		.uleb128 0x1
 2942 0297 9C       		.byte	0x9c
 2943 0298 0F       		.uleb128 0xf
 2944 0299 5C020000 		.4byte	.LASF38
 2945 029d 01       		.byte	0x1
 2946 029e A60A     		.2byte	0xaa6
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 120


 2947 02a0 00000000 		.4byte	.LFB16
 2948 02a4 0C000000 		.4byte	.LFE16-.LFB16
 2949 02a8 01       		.uleb128 0x1
 2950 02a9 9C       		.byte	0x9c
 2951 02aa 0E       		.uleb128 0xe
 2952 02ab 8F030000 		.4byte	.LASF39
 2953 02af 01       		.byte	0x1
 2954 02b0 C00A     		.2byte	0xac0
 2955 02b2 83000000 		.4byte	0x83
 2956 02b6 00000000 		.4byte	.LFB17
 2957 02ba 14000000 		.4byte	.LFE17-.LFB17
 2958 02be 01       		.uleb128 0x1
 2959 02bf 9C       		.byte	0x9c
 2960 02c0 E3020000 		.4byte	0x2e3
 2961 02c4 0A       		.uleb128 0xa
 2962 02c5 20060000 		.4byte	.LASF40
 2963 02c9 01       		.byte	0x1
 2964 02ca C00A     		.2byte	0xac0
 2965 02cc 83000000 		.4byte	0x83
 2966 02d0 CD000000 		.4byte	.LLST7
 2967 02d4 10       		.uleb128 0x10
 2968 02d5 64040000 		.4byte	.LASF41
 2969 02d9 01       		.byte	0x1
 2970 02da C20A     		.2byte	0xac2
 2971 02dc 83000000 		.4byte	0x83
 2972 02e0 01       		.uleb128 0x1
 2973 02e1 50       		.byte	0x50
 2974 02e2 00       		.byte	0
 2975 02e3 0E       		.uleb128 0xe
 2976 02e4 61000000 		.4byte	.LASF42
 2977 02e8 01       		.byte	0x1
 2978 02e9 D70A     		.2byte	0xad7
 2979 02eb 83000000 		.4byte	0x83
 2980 02ef 00000000 		.4byte	.LFB18
 2981 02f3 10000000 		.4byte	.LFE18-.LFB18
 2982 02f7 01       		.uleb128 0x1
 2983 02f8 9C       		.byte	0x9c
 2984 02f9 0C030000 		.4byte	0x30c
 2985 02fd 10       		.uleb128 0x10
 2986 02fe 1E000000 		.4byte	.LASF43
 2987 0302 01       		.byte	0x1
 2988 0303 D90A     		.2byte	0xad9
 2989 0305 83000000 		.4byte	0x83
 2990 0309 01       		.uleb128 0x1
 2991 030a 50       		.byte	0x50
 2992 030b 00       		.byte	0
 2993 030c 09       		.uleb128 0x9
 2994 030d 3A010000 		.4byte	.LASF44
 2995 0311 01       		.byte	0x1
 2996 0312 EE0A     		.2byte	0xaee
 2997 0314 00000000 		.4byte	.LFB19
 2998 0318 0C000000 		.4byte	.LFE19-.LFB19
 2999 031c 01       		.uleb128 0x1
 3000 031d 9C       		.byte	0x9c
 3001 031e 31030000 		.4byte	0x331
 3002 0322 0D       		.uleb128 0xd
 3003 0323 90020000 		.4byte	.LASF45
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 121


 3004 0327 01       		.byte	0x1
 3005 0328 EE0A     		.2byte	0xaee
 3006 032a 83000000 		.4byte	0x83
 3007 032e 01       		.uleb128 0x1
 3008 032f 50       		.byte	0x50
 3009 0330 00       		.byte	0
 3010 0331 09       		.uleb128 0x9
 3011 0332 DD050000 		.4byte	.LASF46
 3012 0336 01       		.byte	0x1
 3013 0337 A50B     		.2byte	0xba5
 3014 0339 00000000 		.4byte	.LFB26
 3015 033d 14000000 		.4byte	.LFE26-.LFB26
 3016 0341 01       		.uleb128 0x1
 3017 0342 9C       		.byte	0x9c
 3018 0343 58030000 		.4byte	0x358
 3019 0347 0A       		.uleb128 0xa
 3020 0348 E4030000 		.4byte	.LASF47
 3021 034c 01       		.byte	0x1
 3022 034d A50B     		.2byte	0xba5
 3023 034f 6B000000 		.4byte	0x6b
 3024 0353 EB000000 		.4byte	.LLST8
 3025 0357 00       		.byte	0
 3026 0358 0E       		.uleb128 0xe
 3027 0359 80010000 		.4byte	.LASF48
 3028 035d 01       		.byte	0x1
 3029 035e B70B     		.2byte	0xbb7
 3030 0360 6B000000 		.4byte	0x6b
 3031 0364 00000000 		.4byte	.LFB27
 3032 0368 18000000 		.4byte	.LFE27-.LFB27
 3033 036c 01       		.uleb128 0x1
 3034 036d 9C       		.byte	0x9c
 3035 036e 83030000 		.4byte	0x383
 3036 0372 0A       		.uleb128 0xa
 3037 0373 E4030000 		.4byte	.LASF47
 3038 0377 01       		.byte	0x1
 3039 0378 B70B     		.2byte	0xbb7
 3040 037a 6B000000 		.4byte	0x6b
 3041 037e 0C010000 		.4byte	.LLST9
 3042 0382 00       		.byte	0
 3043 0383 09       		.uleb128 0x9
 3044 0384 E4010000 		.4byte	.LASF49
 3045 0388 01       		.byte	0x1
 3046 0389 C70B     		.2byte	0xbc7
 3047 038b 00000000 		.4byte	.LFB28
 3048 038f 14000000 		.4byte	.LFE28-.LFB28
 3049 0393 01       		.uleb128 0x1
 3050 0394 9C       		.byte	0x9c
 3051 0395 AA030000 		.4byte	0x3aa
 3052 0399 0A       		.uleb128 0xa
 3053 039a E4030000 		.4byte	.LASF47
 3054 039e 01       		.byte	0x1
 3055 039f C70B     		.2byte	0xbc7
 3056 03a1 6B000000 		.4byte	0x6b
 3057 03a5 2D010000 		.4byte	.LLST10
 3058 03a9 00       		.byte	0
 3059 03aa 09       		.uleb128 0x9
 3060 03ab 7F030000 		.4byte	.LASF50
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 122


 3061 03af 01       		.byte	0x1
 3062 03b0 D50B     		.2byte	0xbd5
 3063 03b2 00000000 		.4byte	.LFB29
 3064 03b6 14000000 		.4byte	.LFE29-.LFB29
 3065 03ba 01       		.uleb128 0x1
 3066 03bb 9C       		.byte	0x9c
 3067 03bc D1030000 		.4byte	0x3d1
 3068 03c0 0A       		.uleb128 0xa
 3069 03c1 E4030000 		.4byte	.LASF47
 3070 03c5 01       		.byte	0x1
 3071 03c6 D50B     		.2byte	0xbd5
 3072 03c8 6B000000 		.4byte	0x6b
 3073 03cc 4E010000 		.4byte	.LLST11
 3074 03d0 00       		.byte	0
 3075 03d1 09       		.uleb128 0x9
 3076 03d2 A5040000 		.4byte	.LASF51
 3077 03d6 01       		.byte	0x1
 3078 03d7 E40B     		.2byte	0xbe4
 3079 03d9 00000000 		.4byte	.LFB30
 3080 03dd 14000000 		.4byte	.LFE30-.LFB30
 3081 03e1 01       		.uleb128 0x1
 3082 03e2 9C       		.byte	0x9c
 3083 03e3 F8030000 		.4byte	0x3f8
 3084 03e7 0A       		.uleb128 0xa
 3085 03e8 E4030000 		.4byte	.LASF47
 3086 03ec 01       		.byte	0x1
 3087 03ed E40B     		.2byte	0xbe4
 3088 03ef 6B000000 		.4byte	0x6b
 3089 03f3 6F010000 		.4byte	.LLST12
 3090 03f7 00       		.byte	0
 3091 03f8 09       		.uleb128 0x9
 3092 03f9 A1050000 		.4byte	.LASF52
 3093 03fd 01       		.byte	0x1
 3094 03fe F30B     		.2byte	0xbf3
 3095 0400 00000000 		.4byte	.LFB31
 3096 0404 04000000 		.4byte	.LFE31-.LFB31
 3097 0408 01       		.uleb128 0x1
 3098 0409 9C       		.byte	0x9c
 3099 040a 1D040000 		.4byte	0x41d
 3100 040e 0D       		.uleb128 0xd
 3101 040f 20060000 		.4byte	.LASF40
 3102 0413 01       		.byte	0x1
 3103 0414 F30B     		.2byte	0xbf3
 3104 0416 6B000000 		.4byte	0x6b
 3105 041a 01       		.uleb128 0x1
 3106 041b 50       		.byte	0x50
 3107 041c 00       		.byte	0
 3108 041d 09       		.uleb128 0x9
 3109 041e 38070000 		.4byte	.LASF53
 3110 0422 01       		.byte	0x1
 3111 0423 9405     		.2byte	0x594
 3112 0425 00000000 		.4byte	.LFB12
 3113 0429 38000000 		.4byte	.LFE12-.LFB12
 3114 042d 01       		.uleb128 0x1
 3115 042e 9C       		.byte	0x9c
 3116 042f 75040000 		.4byte	0x475
 3117 0433 0A       		.uleb128 0xa
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 123


 3118 0434 30070000 		.4byte	.LASF32
 3119 0438 01       		.byte	0x1
 3120 0439 9405     		.2byte	0x594
 3121 043b 83000000 		.4byte	0x83
 3122 043f 90010000 		.4byte	.LLST13
 3123 0443 0B       		.uleb128 0xb
 3124 0444 B9010000 		.4byte	.LASF24
 3125 0448 01       		.byte	0x1
 3126 0449 9605     		.2byte	0x596
 3127 044b 6B000000 		.4byte	0x6b
 3128 044f E0010000 		.4byte	.LLST14
 3129 0453 0C       		.uleb128 0xc
 3130 0454 14000000 		.4byte	.LVL35
 3131 0458 0A0D0000 		.4byte	0xd0a
 3132 045c 0C       		.uleb128 0xc
 3133 045d 26000000 		.4byte	.LVL37
 3134 0461 150D0000 		.4byte	0xd15
 3135 0465 12       		.uleb128 0x12
 3136 0466 2E000000 		.4byte	.LVL40
 3137 046a F8030000 		.4byte	0x3f8
 3138 046e 13       		.uleb128 0x13
 3139 046f 01       		.uleb128 0x1
 3140 0470 50       		.byte	0x50
 3141 0471 01       		.uleb128 0x1
 3142 0472 30       		.byte	0x30
 3143 0473 00       		.byte	0
 3144 0474 00       		.byte	0
 3145 0475 0E       		.uleb128 0xe
 3146 0476 28040000 		.4byte	.LASF54
 3147 047a 01       		.byte	0x1
 3148 047b 070B     		.2byte	0xb07
 3149 047d D2000000 		.4byte	0xd2
 3150 0481 00000000 		.4byte	.LFB20
 3151 0485 20000000 		.4byte	.LFE20-.LFB20
 3152 0489 01       		.uleb128 0x1
 3153 048a 9C       		.byte	0x9c
 3154 048b DD040000 		.4byte	0x4dd
 3155 048f 0A       		.uleb128 0xa
 3156 0490 E4030000 		.4byte	.LASF47
 3157 0494 01       		.byte	0x1
 3158 0495 070B     		.2byte	0xb07
 3159 0497 6B000000 		.4byte	0x6b
 3160 049b F3010000 		.4byte	.LLST15
 3161 049f 0A       		.uleb128 0xa
 3162 04a0 C3040000 		.4byte	.LASF55
 3163 04a4 01       		.byte	0x1
 3164 04a5 070B     		.2byte	0xb07
 3165 04a7 D2000000 		.4byte	0xd2
 3166 04ab 14020000 		.4byte	.LLST16
 3167 04af 10       		.uleb128 0x10
 3168 04b0 53000000 		.4byte	.LASF56
 3169 04b4 01       		.byte	0x1
 3170 04b5 090B     		.2byte	0xb09
 3171 04b7 D2000000 		.4byte	0xd2
 3172 04bb 01       		.uleb128 0x1
 3173 04bc 50       		.byte	0x50
 3174 04bd 14       		.uleb128 0x14
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 124


 3175 04be 00000000 		.4byte	.LASF57
 3176 04c2 01       		.byte	0x1
 3177 04c3 0A0B     		.2byte	0xb0a
 3178 04c5 DD040000 		.4byte	0x4dd
 3179 04c9 00000020 		.4byte	0x20000000
 3180 04cd 12       		.uleb128 0x12
 3181 04ce 10000000 		.4byte	.LVL44
 3182 04d2 F8030000 		.4byte	0x3f8
 3183 04d6 13       		.uleb128 0x13
 3184 04d7 01       		.uleb128 0x1
 3185 04d8 50       		.byte	0x50
 3186 04d9 01       		.uleb128 0x1
 3187 04da 30       		.byte	0x30
 3188 04db 00       		.byte	0
 3189 04dc 00       		.byte	0
 3190 04dd 06       		.uleb128 0x6
 3191 04de 04       		.byte	0x4
 3192 04df D2000000 		.4byte	0xd2
 3193 04e3 0E       		.uleb128 0xe
 3194 04e4 E9050000 		.4byte	.LASF58
 3195 04e8 01       		.byte	0x1
 3196 04e9 290B     		.2byte	0xb29
 3197 04eb D2000000 		.4byte	0xd2
 3198 04ef 00000000 		.4byte	.LFB21
 3199 04f3 1C000000 		.4byte	.LFE21-.LFB21
 3200 04f7 01       		.uleb128 0x1
 3201 04f8 9C       		.byte	0x9c
 3202 04f9 2D050000 		.4byte	0x52d
 3203 04fd 0A       		.uleb128 0xa
 3204 04fe E4030000 		.4byte	.LASF47
 3205 0502 01       		.byte	0x1
 3206 0503 290B     		.2byte	0xb29
 3207 0505 6B000000 		.4byte	0x6b
 3208 0509 40020000 		.4byte	.LLST17
 3209 050d 14       		.uleb128 0x14
 3210 050e 00000000 		.4byte	.LASF57
 3211 0512 01       		.byte	0x1
 3212 0513 2B0B     		.2byte	0xb2b
 3213 0515 DD040000 		.4byte	0x4dd
 3214 0519 00000020 		.4byte	0x20000000
 3215 051d 12       		.uleb128 0x12
 3216 051e 0E000000 		.4byte	.LVL50
 3217 0522 F8030000 		.4byte	0x3f8
 3218 0526 13       		.uleb128 0x13
 3219 0527 01       		.uleb128 0x1
 3220 0528 50       		.byte	0x50
 3221 0529 01       		.uleb128 0x1
 3222 052a 30       		.byte	0x30
 3223 052b 00       		.byte	0
 3224 052c 00       		.byte	0
 3225 052d 0E       		.uleb128 0xe
 3226 052e D5030000 		.4byte	.LASF59
 3227 0532 01       		.byte	0x1
 3228 0533 3F0B     		.2byte	0xb3f
 3229 0535 D2000000 		.4byte	0xd2
 3230 0539 00000000 		.4byte	.LFB22
 3231 053d 22000000 		.4byte	.LFE22-.LFB22
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 125


 3232 0541 01       		.uleb128 0x1
 3233 0542 9C       		.byte	0x9c
 3234 0543 95050000 		.4byte	0x595
 3235 0547 0A       		.uleb128 0xa
 3236 0548 E4030000 		.4byte	.LASF47
 3237 054c 01       		.byte	0x1
 3238 054d 3F0B     		.2byte	0xb3f
 3239 054f 6B000000 		.4byte	0x6b
 3240 0553 61020000 		.4byte	.LLST18
 3241 0557 0A       		.uleb128 0xa
 3242 0558 C3040000 		.4byte	.LASF55
 3243 055c 01       		.byte	0x1
 3244 055d 3F0B     		.2byte	0xb3f
 3245 055f D2000000 		.4byte	0xd2
 3246 0563 82020000 		.4byte	.LLST19
 3247 0567 10       		.uleb128 0x10
 3248 0568 53000000 		.4byte	.LASF56
 3249 056c 01       		.byte	0x1
 3250 056d 410B     		.2byte	0xb41
 3251 056f D2000000 		.4byte	0xd2
 3252 0573 01       		.uleb128 0x1
 3253 0574 50       		.byte	0x50
 3254 0575 14       		.uleb128 0x14
 3255 0576 00000000 		.4byte	.LASF57
 3256 057a 01       		.byte	0x1
 3257 057b 420B     		.2byte	0xb42
 3258 057d DD040000 		.4byte	0x4dd
 3259 0581 00000020 		.4byte	0x20000000
 3260 0585 12       		.uleb128 0x12
 3261 0586 10000000 		.4byte	.LVL54
 3262 058a F8030000 		.4byte	0x3f8
 3263 058e 13       		.uleb128 0x13
 3264 058f 01       		.uleb128 0x1
 3265 0590 50       		.byte	0x50
 3266 0591 01       		.uleb128 0x1
 3267 0592 30       		.byte	0x30
 3268 0593 00       		.byte	0
 3269 0594 00       		.byte	0
 3270 0595 0E       		.uleb128 0xe
 3271 0596 68050000 		.4byte	.LASF60
 3272 059a 01       		.byte	0x1
 3273 059b 5B0B     		.2byte	0xb5b
 3274 059d D2000000 		.4byte	0xd2
 3275 05a1 00000000 		.4byte	.LFB23
 3276 05a5 1E000000 		.4byte	.LFE23-.LFB23
 3277 05a9 01       		.uleb128 0x1
 3278 05aa 9C       		.byte	0x9c
 3279 05ab DF050000 		.4byte	0x5df
 3280 05af 0A       		.uleb128 0xa
 3281 05b0 E4030000 		.4byte	.LASF47
 3282 05b4 01       		.byte	0x1
 3283 05b5 5B0B     		.2byte	0xb5b
 3284 05b7 6B000000 		.4byte	0x6b
 3285 05bb AE020000 		.4byte	.LLST20
 3286 05bf 14       		.uleb128 0x14
 3287 05c0 00000000 		.4byte	.LASF57
 3288 05c4 01       		.byte	0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 126


 3289 05c5 5D0B     		.2byte	0xb5d
 3290 05c7 DD040000 		.4byte	0x4dd
 3291 05cb 00000020 		.4byte	0x20000000
 3292 05cf 12       		.uleb128 0x12
 3293 05d0 0E000000 		.4byte	.LVL60
 3294 05d4 F8030000 		.4byte	0x3f8
 3295 05d8 13       		.uleb128 0x13
 3296 05d9 01       		.uleb128 0x1
 3297 05da 50       		.byte	0x50
 3298 05db 01       		.uleb128 0x1
 3299 05dc 30       		.byte	0x30
 3300 05dd 00       		.byte	0
 3301 05de 00       		.byte	0
 3302 05df 09       		.uleb128 0x9
 3303 05e0 1A050000 		.4byte	.LASF61
 3304 05e4 01       		.byte	0x1
 3305 05e5 6E0B     		.2byte	0xb6e
 3306 05e7 00000000 		.4byte	.LFB24
 3307 05eb 4C000000 		.4byte	.LFE24-.LFB24
 3308 05ef 01       		.uleb128 0x1
 3309 05f0 9C       		.byte	0x9c
 3310 05f1 7E060000 		.4byte	0x67e
 3311 05f5 0A       		.uleb128 0xa
 3312 05f6 E4030000 		.4byte	.LASF47
 3313 05fa 01       		.byte	0x1
 3314 05fb 6E0B     		.2byte	0xb6e
 3315 05fd 6B000000 		.4byte	0x6b
 3316 0601 CF020000 		.4byte	.LLST21
 3317 0605 0A       		.uleb128 0xa
 3318 0606 EB030000 		.4byte	.LASF62
 3319 060a 01       		.byte	0x1
 3320 060b 6E0B     		.2byte	0xb6e
 3321 060d 6B000000 		.4byte	0x6b
 3322 0611 F0020000 		.4byte	.LLST22
 3323 0615 0B       		.uleb128 0xb
 3324 0616 B9010000 		.4byte	.LASF24
 3325 061a 01       		.byte	0x1
 3326 061b 700B     		.2byte	0xb70
 3327 061d 6B000000 		.4byte	0x6b
 3328 0621 11030000 		.4byte	.LLST23
 3329 0625 0B       		.uleb128 0xb
 3330 0626 56020000 		.4byte	.LASF63
 3331 062a 01       		.byte	0x1
 3332 062b 710B     		.2byte	0xb71
 3333 062d 83000000 		.4byte	0x83
 3334 0631 24030000 		.4byte	.LLST24
 3335 0635 0B       		.uleb128 0xb
 3336 0636 D9020000 		.4byte	.LASF64
 3337 063a 01       		.byte	0x1
 3338 063b 720B     		.2byte	0xb72
 3339 063d 83000000 		.4byte	0x83
 3340 0641 37030000 		.4byte	.LLST25
 3341 0645 15       		.uleb128 0x15
 3342 0646 10000000 		.4byte	.LVL63
 3343 064a F8030000 		.4byte	0x3f8
 3344 064e 58060000 		.4byte	0x658
 3345 0652 13       		.uleb128 0x13
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 127


 3346 0653 01       		.uleb128 0x1
 3347 0654 50       		.byte	0x50
 3348 0655 01       		.uleb128 0x1
 3349 0656 30       		.byte	0x30
 3350 0657 00       		.byte	0
 3351 0658 15       		.uleb128 0x15
 3352 0659 1A000000 		.4byte	.LVL64
 3353 065d F8030000 		.4byte	0x3f8
 3354 0661 6B060000 		.4byte	0x66b
 3355 0665 13       		.uleb128 0x13
 3356 0666 01       		.uleb128 0x1
 3357 0667 50       		.byte	0x50
 3358 0668 01       		.uleb128 0x1
 3359 0669 30       		.byte	0x30
 3360 066a 00       		.byte	0
 3361 066b 0C       		.uleb128 0xc
 3362 066c 26000000 		.4byte	.LVL66
 3363 0670 0A0D0000 		.4byte	0xd0a
 3364 0674 0C       		.uleb128 0xc
 3365 0675 46000000 		.4byte	.LVL72
 3366 0679 150D0000 		.4byte	0xd15
 3367 067d 00       		.byte	0
 3368 067e 0E       		.uleb128 0xe
 3369 067f AD020000 		.4byte	.LASF65
 3370 0683 01       		.byte	0x1
 3371 0684 900B     		.2byte	0xb90
 3372 0686 6B000000 		.4byte	0x6b
 3373 068a 00000000 		.4byte	.LFB25
 3374 068e 2C000000 		.4byte	.LFE25-.LFB25
 3375 0692 01       		.uleb128 0x1
 3376 0693 9C       		.byte	0x9c
 3377 0694 C8060000 		.4byte	0x6c8
 3378 0698 0A       		.uleb128 0xa
 3379 0699 E4030000 		.4byte	.LASF47
 3380 069d 01       		.byte	0x1
 3381 069e 900B     		.2byte	0xb90
 3382 06a0 6B000000 		.4byte	0x6b
 3383 06a4 6B030000 		.4byte	.LLST26
 3384 06a8 0B       		.uleb128 0xb
 3385 06a9 EB030000 		.4byte	.LASF62
 3386 06ad 01       		.byte	0x1
 3387 06ae 920B     		.2byte	0xb92
 3388 06b0 6B000000 		.4byte	0x6b
 3389 06b4 8C030000 		.4byte	.LLST27
 3390 06b8 12       		.uleb128 0x12
 3391 06b9 0E000000 		.4byte	.LVL76
 3392 06bd F8030000 		.4byte	0x3f8
 3393 06c1 13       		.uleb128 0x13
 3394 06c2 01       		.uleb128 0x1
 3395 06c3 50       		.byte	0x50
 3396 06c4 01       		.uleb128 0x1
 3397 06c5 30       		.byte	0x30
 3398 06c6 00       		.byte	0
 3399 06c7 00       		.byte	0
 3400 06c8 0F       		.uleb128 0xf
 3401 06c9 57010000 		.4byte	.LASF66
 3402 06cd 01       		.byte	0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 128


 3403 06ce 0B0C     		.2byte	0xc0b
 3404 06d0 00000000 		.4byte	.LFB32
 3405 06d4 18000000 		.4byte	.LFE32-.LFB32
 3406 06d8 01       		.uleb128 0x1
 3407 06d9 9C       		.byte	0x9c
 3408 06da 09       		.uleb128 0x9
 3409 06db 91060000 		.4byte	.LASF67
 3410 06df 01       		.byte	0x1
 3411 06e0 1F0C     		.2byte	0xc1f
 3412 06e2 00000000 		.4byte	.LFB33
 3413 06e6 30000000 		.4byte	.LFE33-.LFB33
 3414 06ea 01       		.uleb128 0x1
 3415 06eb 9C       		.byte	0x9c
 3416 06ec 13070000 		.4byte	0x713
 3417 06f0 0A       		.uleb128 0xa
 3418 06f1 77050000 		.4byte	.LASF68
 3419 06f5 01       		.byte	0x1
 3420 06f6 1F0C     		.2byte	0xc1f
 3421 06f8 83000000 		.4byte	0x83
 3422 06fc 9F030000 		.4byte	.LLST28
 3423 0700 0C       		.uleb128 0xc
 3424 0701 0E000000 		.4byte	.LVL81
 3425 0705 200D0000 		.4byte	0xd20
 3426 0709 0C       		.uleb128 0xc
 3427 070a 26000000 		.4byte	.LVL83
 3428 070e 200D0000 		.4byte	0xd20
 3429 0712 00       		.byte	0
 3430 0713 09       		.uleb128 0x9
 3431 0714 16060000 		.4byte	.LASF69
 3432 0718 01       		.byte	0x1
 3433 0719 360C     		.2byte	0xc36
 3434 071b 00000000 		.4byte	.LFB34
 3435 071f 14000000 		.4byte	.LFE34-.LFB34
 3436 0723 01       		.uleb128 0x1
 3437 0724 9C       		.byte	0x9c
 3438 0725 43070000 		.4byte	0x743
 3439 0729 0A       		.uleb128 0xa
 3440 072a 96070000 		.4byte	.LASF70
 3441 072e 01       		.byte	0x1
 3442 072f 360C     		.2byte	0xc36
 3443 0731 77000000 		.4byte	0x77
 3444 0735 BD030000 		.4byte	.LLST29
 3445 0739 0C       		.uleb128 0xc
 3446 073a 0C000000 		.4byte	.LVL87
 3447 073e 200D0000 		.4byte	0xd20
 3448 0742 00       		.byte	0
 3449 0743 09       		.uleb128 0x9
 3450 0744 F4030000 		.4byte	.LASF71
 3451 0748 01       		.byte	0x1
 3452 0749 3103     		.2byte	0x331
 3453 074b 00000000 		.4byte	.LFB8
 3454 074f 64010000 		.4byte	.LFE8-.LFB8
 3455 0753 01       		.uleb128 0x1
 3456 0754 9C       		.byte	0x9c
 3457 0755 34080000 		.4byte	0x834
 3458 0759 0A       		.uleb128 0xa
 3459 075a A8010000 		.4byte	.LASF72
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 129


 3460 075e 01       		.byte	0x1
 3461 075f 3103     		.2byte	0x331
 3462 0761 83000000 		.4byte	0x83
 3463 0765 DE030000 		.4byte	.LLST30
 3464 0769 0B       		.uleb128 0xb
 3465 076a 0F000000 		.4byte	.LASF73
 3466 076e 01       		.byte	0x1
 3467 076f 3703     		.2byte	0x337
 3468 0771 6B000000 		.4byte	0x6b
 3469 0775 33040000 		.4byte	.LLST31
 3470 0779 0B       		.uleb128 0xb
 3471 077a CB040000 		.4byte	.LASF74
 3472 077e 01       		.byte	0x1
 3473 077f 3803     		.2byte	0x338
 3474 0781 6B000000 		.4byte	0x6b
 3475 0785 72040000 		.4byte	.LLST32
 3476 0789 0B       		.uleb128 0xb
 3477 078a 66070000 		.4byte	.LASF75
 3478 078e 01       		.byte	0x1
 3479 078f 3903     		.2byte	0x339
 3480 0791 6B000000 		.4byte	0x6b
 3481 0795 B1040000 		.4byte	.LLST33
 3482 0799 0B       		.uleb128 0xb
 3483 079a 6F000000 		.4byte	.LASF76
 3484 079e 01       		.byte	0x1
 3485 079f 3A03     		.2byte	0x33a
 3486 07a1 6B000000 		.4byte	0x6b
 3487 07a5 C4040000 		.4byte	.LLST34
 3488 07a9 0B       		.uleb128 0xb
 3489 07aa B9010000 		.4byte	.LASF24
 3490 07ae 01       		.byte	0x1
 3491 07af 4503     		.2byte	0x345
 3492 07b1 6B000000 		.4byte	0x6b
 3493 07b5 E3040000 		.4byte	.LLST35
 3494 07b9 0C       		.uleb128 0xc
 3495 07ba 10000000 		.4byte	.LVL89
 3496 07be 0A0D0000 		.4byte	0xd0a
 3497 07c2 15       		.uleb128 0x15
 3498 07c3 B0000000 		.4byte	.LVL107
 3499 07c7 200D0000 		.4byte	0xd20
 3500 07cb D5070000 		.4byte	0x7d5
 3501 07cf 13       		.uleb128 0x13
 3502 07d0 01       		.uleb128 0x1
 3503 07d1 50       		.byte	0x50
 3504 07d2 01       		.uleb128 0x1
 3505 07d3 35       		.byte	0x35
 3506 07d4 00       		.byte	0
 3507 07d5 15       		.uleb128 0x15
 3508 07d6 CE000000 		.4byte	.LVL110
 3509 07da 200D0000 		.4byte	0xd20
 3510 07de E8070000 		.4byte	0x7e8
 3511 07e2 13       		.uleb128 0x13
 3512 07e3 01       		.uleb128 0x1
 3513 07e4 50       		.byte	0x50
 3514 07e5 01       		.uleb128 0x1
 3515 07e6 35       		.byte	0x35
 3516 07e7 00       		.byte	0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 130


 3517 07e8 15       		.uleb128 0x15
 3518 07e9 EE000000 		.4byte	.LVL112
 3519 07ed 13070000 		.4byte	0x713
 3520 07f1 FB070000 		.4byte	0x7fb
 3521 07f5 13       		.uleb128 0x13
 3522 07f6 01       		.uleb128 0x1
 3523 07f7 50       		.byte	0x50
 3524 07f8 01       		.uleb128 0x1
 3525 07f9 35       		.byte	0x35
 3526 07fa 00       		.byte	0
 3527 07fb 15       		.uleb128 0x15
 3528 07fc 00010000 		.4byte	.LVL113
 3529 0800 200D0000 		.4byte	0xd20
 3530 0804 0E080000 		.4byte	0x80e
 3531 0808 13       		.uleb128 0x13
 3532 0809 01       		.uleb128 0x1
 3533 080a 50       		.byte	0x50
 3534 080b 01       		.uleb128 0x1
 3535 080c 35       		.byte	0x35
 3536 080d 00       		.byte	0
 3537 080e 15       		.uleb128 0x15
 3538 080f 08010000 		.4byte	.LVL115
 3539 0813 F8030000 		.4byte	0x3f8
 3540 0817 21080000 		.4byte	0x821
 3541 081b 13       		.uleb128 0x13
 3542 081c 01       		.uleb128 0x1
 3543 081d 50       		.byte	0x50
 3544 081e 01       		.uleb128 0x1
 3545 081f 30       		.byte	0x30
 3546 0820 00       		.byte	0
 3547 0821 12       		.uleb128 0x12
 3548 0822 0E010000 		.4byte	.LVL116
 3549 0826 150D0000 		.4byte	0xd15
 3550 082a 13       		.uleb128 0x13
 3551 082b 01       		.uleb128 0x1
 3552 082c 50       		.byte	0x50
 3553 082d 04       		.uleb128 0x4
 3554 082e 91       		.byte	0x91
 3555 082f 5C       		.sleb128 -36
 3556 0830 94       		.byte	0x94
 3557 0831 01       		.byte	0x1
 3558 0832 00       		.byte	0
 3559 0833 00       		.byte	0
 3560 0834 0E       		.uleb128 0xe
 3561 0835 05060000 		.4byte	.LASF77
 3562 0839 01       		.byte	0x1
 3563 083a B104     		.2byte	0x4b1
 3564 083c A4000000 		.4byte	0xa4
 3565 0840 00000000 		.4byte	.LFB9
 3566 0844 54000000 		.4byte	.LFE9-.LFB9
 3567 0848 01       		.uleb128 0x1
 3568 0849 9C       		.byte	0x9c
 3569 084a 8B080000 		.4byte	0x88b
 3570 084e 0A       		.uleb128 0xa
 3571 084f 26070000 		.4byte	.LASF78
 3572 0853 01       		.byte	0x1
 3573 0854 B104     		.2byte	0x4b1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 131


 3574 0856 83000000 		.4byte	0x83
 3575 085a 0F050000 		.4byte	.LLST36
 3576 085e 0B       		.uleb128 0xb
 3577 085f 64040000 		.4byte	.LASF41
 3578 0863 01       		.byte	0x1
 3579 0864 B304     		.2byte	0x4b3
 3580 0866 A4000000 		.4byte	0xa4
 3581 086a 2D050000 		.4byte	.LLST37
 3582 086e 15       		.uleb128 0x15
 3583 086f 2E000000 		.4byte	.LVL121
 3584 0873 13070000 		.4byte	0x713
 3585 0877 81080000 		.4byte	0x881
 3586 087b 13       		.uleb128 0x13
 3587 087c 01       		.uleb128 0x1
 3588 087d 50       		.byte	0x50
 3589 087e 01       		.uleb128 0x1
 3590 087f 31       		.byte	0x31
 3591 0880 00       		.byte	0
 3592 0881 0C       		.uleb128 0xc
 3593 0882 32000000 		.4byte	.LVL122
 3594 0886 47020000 		.4byte	0x247
 3595 088a 00       		.byte	0
 3596 088b 09       		.uleb128 0x9
 3597 088c 47050000 		.4byte	.LASF79
 3598 0890 01       		.byte	0x1
 3599 0891 660A     		.2byte	0xa66
 3600 0893 00000000 		.4byte	.LFB13
 3601 0897 44000000 		.4byte	.LFE13-.LFB13
 3602 089b 01       		.uleb128 0x1
 3603 089c 9C       		.byte	0x9c
 3604 089d D0080000 		.4byte	0x8d0
 3605 08a1 0A       		.uleb128 0xa
 3606 08a2 97050000 		.4byte	.LASF80
 3607 08a6 01       		.byte	0x1
 3608 08a7 660A     		.2byte	0xa66
 3609 08a9 83000000 		.4byte	0x83
 3610 08ad 4C050000 		.4byte	.LLST38
 3611 08b1 15       		.uleb128 0x15
 3612 08b2 2E000000 		.4byte	.LVL129
 3613 08b6 13070000 		.4byte	0x713
 3614 08ba C6080000 		.4byte	0x8c6
 3615 08be 13       		.uleb128 0x13
 3616 08bf 01       		.uleb128 0x1
 3617 08c0 50       		.byte	0x50
 3618 08c1 03       		.uleb128 0x3
 3619 08c2 0A       		.byte	0xa
 3620 08c3 E803     		.2byte	0x3e8
 3621 08c5 00       		.byte	0
 3622 08c6 0C       		.uleb128 0xc
 3623 08c7 32000000 		.4byte	.LVL130
 3624 08cb 98020000 		.4byte	0x298
 3625 08cf 00       		.byte	0
 3626 08d0 16       		.uleb128 0x16
 3627 08d1 AD010000 		.4byte	.LASF81
 3628 08d5 01       		.byte	0x1
 3629 08d6 440C     		.2byte	0xc44
 3630 08d8 00000000 		.4byte	.LFB35
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 132


 3631 08dc 4C000000 		.4byte	.LFE35-.LFB35
 3632 08e0 01       		.uleb128 0x1
 3633 08e1 9C       		.byte	0x9c
 3634 08e2 F7080000 		.4byte	0x8f7
 3635 08e6 0A       		.uleb128 0xa
 3636 08e7 A8010000 		.4byte	.LASF72
 3637 08eb 01       		.byte	0x1
 3638 08ec 440C     		.2byte	0xc44
 3639 08ee 83000000 		.4byte	0x83
 3640 08f2 78050000 		.4byte	.LLST39
 3641 08f6 00       		.byte	0
 3642 08f7 0F       		.uleb128 0xf
 3643 08f8 18070000 		.4byte	.LASF82
 3644 08fc 01       		.byte	0x1
 3645 08fd B00C     		.2byte	0xcb0
 3646 08ff 00000000 		.4byte	.LFB39
 3647 0903 10000000 		.4byte	.LFE39-.LFB39
 3648 0907 01       		.uleb128 0x1
 3649 0908 9C       		.byte	0x9c
 3650 0909 0F       		.uleb128 0xf
 3651 090a 67010000 		.4byte	.LASF83
 3652 090e 01       		.byte	0x1
 3653 090f C00C     		.2byte	0xcc0
 3654 0911 00000000 		.4byte	.LFB40
 3655 0915 10000000 		.4byte	.LFE40-.LFB40
 3656 0919 01       		.uleb128 0x1
 3657 091a 9C       		.byte	0x9c
 3658 091b 09       		.uleb128 0x9
 3659 091c 39060000 		.4byte	.LASF84
 3660 0920 01       		.byte	0x1
 3661 0921 9F0C     		.2byte	0xc9f
 3662 0923 00000000 		.4byte	.LFB38
 3663 0927 18000000 		.4byte	.LFE38-.LFB38
 3664 092b 01       		.uleb128 0x1
 3665 092c 9C       		.byte	0x9c
 3666 092d 3B090000 		.4byte	0x93b
 3667 0931 0C       		.uleb128 0xc
 3668 0932 06000000 		.4byte	.LVL135
 3669 0936 09090000 		.4byte	0x909
 3670 093a 00       		.byte	0
 3671 093b 0F       		.uleb128 0xf
 3672 093c B1060000 		.4byte	.LASF85
 3673 0940 01       		.byte	0x1
 3674 0941 D00C     		.2byte	0xcd0
 3675 0943 00000000 		.4byte	.LFB41
 3676 0947 10000000 		.4byte	.LFE41-.LFB41
 3677 094b 01       		.uleb128 0x1
 3678 094c 9C       		.byte	0x9c
 3679 094d 09       		.uleb128 0x9
 3680 094e AA070000 		.4byte	.LASF86
 3681 0952 01       		.byte	0x1
 3682 0953 E10C     		.2byte	0xce1
 3683 0955 00000000 		.4byte	.LFB42
 3684 0959 10000000 		.4byte	.LFE42-.LFB42
 3685 095d 01       		.uleb128 0x1
 3686 095e 9C       		.byte	0x9c
 3687 095f 74090000 		.4byte	0x974
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 133


 3688 0963 0A       		.uleb128 0xa
 3689 0964 D9020000 		.4byte	.LASF64
 3690 0968 01       		.byte	0x1
 3691 0969 E10C     		.2byte	0xce1
 3692 096b 83000000 		.4byte	0x83
 3693 096f 99050000 		.4byte	.LLST40
 3694 0973 00       		.byte	0
 3695 0974 11       		.uleb128 0x11
 3696 0975 C8010000 		.4byte	.LASF88
 3697 0979 01       		.byte	0x1
 3698 097a F10C     		.2byte	0xcf1
 3699 097c 83000000 		.4byte	0x83
 3700 0980 00000000 		.4byte	.LFB43
 3701 0984 10000000 		.4byte	.LFE43-.LFB43
 3702 0988 01       		.uleb128 0x1
 3703 0989 9C       		.byte	0x9c
 3704 098a 11       		.uleb128 0x11
 3705 098b FA040000 		.4byte	.LASF89
 3706 098f 01       		.byte	0x1
 3707 0990 010D     		.2byte	0xd01
 3708 0992 83000000 		.4byte	0x83
 3709 0996 00000000 		.4byte	.LFB44
 3710 099a 10000000 		.4byte	.LFE44-.LFB44
 3711 099e 01       		.uleb128 0x1
 3712 099f 9C       		.byte	0x9c
 3713 09a0 09       		.uleb128 0x9
 3714 09a1 BD030000 		.4byte	.LASF90
 3715 09a5 01       		.byte	0x1
 3716 09a6 210D     		.2byte	0xd21
 3717 09a8 00000000 		.4byte	.LFB45
 3718 09ac 20000000 		.4byte	.LFE45-.LFB45
 3719 09b0 01       		.uleb128 0x1
 3720 09b1 9C       		.byte	0x9c
 3721 09b2 C5090000 		.4byte	0x9c5
 3722 09b6 0D       		.uleb128 0xd
 3723 09b7 DF020000 		.4byte	.LASF91
 3724 09bb 01       		.byte	0x1
 3725 09bc 210D     		.2byte	0xd21
 3726 09be 83000000 		.4byte	0x83
 3727 09c2 01       		.uleb128 0x1
 3728 09c3 50       		.byte	0x50
 3729 09c4 00       		.byte	0
 3730 09c5 11       		.uleb128 0x11
 3731 09c6 99060000 		.4byte	.LASF92
 3732 09ca 01       		.byte	0x1
 3733 09cb 3A0D     		.2byte	0xd3a
 3734 09cd 83000000 		.4byte	0x83
 3735 09d1 00000000 		.4byte	.LFB46
 3736 09d5 10000000 		.4byte	.LFE46-.LFB46
 3737 09d9 01       		.uleb128 0x1
 3738 09da 9C       		.byte	0x9c
 3739 09db 11       		.uleb128 0x11
 3740 09dc F9020000 		.4byte	.LASF93
 3741 09e0 01       		.byte	0x1
 3742 09e1 510D     		.2byte	0xd51
 3743 09e3 83000000 		.4byte	0x83
 3744 09e7 00000000 		.4byte	.LFB47
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 134


 3745 09eb 10000000 		.4byte	.LFE47-.LFB47
 3746 09ef 01       		.uleb128 0x1
 3747 09f0 9C       		.byte	0x9c
 3748 09f1 17       		.uleb128 0x17
 3749 09f2 BD070000 		.4byte	.LASF124
 3750 09f6 01       		.byte	0x1
 3751 09f7 A60D     		.2byte	0xda6
 3752 09f9 00000000 		.4byte	.LFB51
 3753 09fd 28000000 		.4byte	.LFE51-.LFB51
 3754 0a01 01       		.uleb128 0x1
 3755 0a02 9C       		.byte	0x9c
 3756 0a03 1F0A0000 		.4byte	0xa1f
 3757 0a07 18       		.uleb128 0x18
 3758 0a08 6900     		.ascii	"i\000"
 3759 0a0a 01       		.byte	0x1
 3760 0a0b A80D     		.2byte	0xda8
 3761 0a0d 83000000 		.4byte	0x83
 3762 0a11 BA050000 		.4byte	.LLST41
 3763 0a15 0C       		.uleb128 0xc
 3764 0a16 06000000 		.4byte	.LVL139
 3765 0a1a DB090000 		.4byte	0x9db
 3766 0a1e 00       		.byte	0
 3767 0a1f 0F       		.uleb128 0xf
 3768 0a20 1C030000 		.4byte	.LASF94
 3769 0a24 01       		.byte	0x1
 3770 0a25 5E0D     		.2byte	0xd5e
 3771 0a27 00000000 		.4byte	.LFB48
 3772 0a2b 0C000000 		.4byte	.LFE48-.LFB48
 3773 0a2f 01       		.uleb128 0x1
 3774 0a30 9C       		.byte	0x9c
 3775 0a31 16       		.uleb128 0x16
 3776 0a32 CB020000 		.4byte	.LASF95
 3777 0a36 01       		.byte	0x1
 3778 0a37 810C     		.2byte	0xc81
 3779 0a39 00000000 		.4byte	.LFB37
 3780 0a3d 44000000 		.4byte	.LFE37-.LFB37
 3781 0a41 01       		.uleb128 0x1
 3782 0a42 9C       		.byte	0x9c
 3783 0a43 970A0000 		.4byte	0xa97
 3784 0a47 18       		.uleb128 0x18
 3785 0a48 6900     		.ascii	"i\000"
 3786 0a4a 01       		.byte	0x1
 3787 0a4b 830C     		.2byte	0xc83
 3788 0a4d 83000000 		.4byte	0x83
 3789 0a51 D8050000 		.4byte	.LLST42
 3790 0a55 15       		.uleb128 0x15
 3791 0a56 1C000000 		.4byte	.LVL149
 3792 0a5a 75040000 		.4byte	0x475
 3793 0a5e 710A0000 		.4byte	0xa71
 3794 0a62 13       		.uleb128 0x13
 3795 0a63 01       		.uleb128 0x1
 3796 0a64 50       		.byte	0x50
 3797 0a65 01       		.uleb128 0x1
 3798 0a66 3F       		.byte	0x3f
 3799 0a67 13       		.uleb128 0x13
 3800 0a68 01       		.uleb128 0x1
 3801 0a69 51       		.byte	0x51
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 135


 3802 0a6a 05       		.uleb128 0x5
 3803 0a6b 03       		.byte	0x3
 3804 0a6c 00000000 		.4byte	CySysTickServiceCallbacks
 3805 0a70 00       		.byte	0
 3806 0a71 15       		.uleb128 0x15
 3807 0a72 22000000 		.4byte	.LVL150
 3808 0a76 A0090000 		.4byte	0x9a0
 3809 0a7a 840A0000 		.4byte	0xa84
 3810 0a7e 13       		.uleb128 0x13
 3811 0a7f 01       		.uleb128 0x1
 3812 0a80 50       		.byte	0x50
 3813 0a81 01       		.uleb128 0x1
 3814 0a82 31       		.byte	0x31
 3815 0a83 00       		.byte	0
 3816 0a84 0C       		.uleb128 0xc
 3817 0a85 32000000 		.4byte	.LVL152
 3818 0a89 4D090000 		.4byte	0x94d
 3819 0a8d 0C       		.uleb128 0xc
 3820 0a8e 36000000 		.4byte	.LVL153
 3821 0a92 1F0A0000 		.4byte	0xa1f
 3822 0a96 00       		.byte	0
 3823 0a97 09       		.uleb128 0x9
 3824 0a98 55040000 		.4byte	.LASF96
 3825 0a9c 01       		.byte	0x1
 3826 0a9d 640C     		.2byte	0xc64
 3827 0a9f 00000000 		.4byte	.LFB36
 3828 0aa3 20000000 		.4byte	.LFE36-.LFB36
 3829 0aa7 01       		.uleb128 0x1
 3830 0aa8 9C       		.byte	0x9c
 3831 0aa9 C00A0000 		.4byte	0xac0
 3832 0aad 0C       		.uleb128 0xc
 3833 0aae 0E000000 		.4byte	.LVL154
 3834 0ab2 310A0000 		.4byte	0xa31
 3835 0ab6 0C       		.uleb128 0xc
 3836 0ab7 18000000 		.4byte	.LVL155
 3837 0abb 1B090000 		.4byte	0x91b
 3838 0abf 00       		.byte	0
 3839 0ac0 0E       		.uleb128 0xe
 3840 0ac1 60060000 		.4byte	.LASF97
 3841 0ac5 01       		.byte	0x1
 3842 0ac6 810D     		.2byte	0xd81
 3843 0ac8 F3000000 		.4byte	0xf3
 3844 0acc 00000000 		.4byte	.LFB49
 3845 0ad0 10000000 		.4byte	.LFE49-.LFB49
 3846 0ad4 01       		.uleb128 0x1
 3847 0ad5 9C       		.byte	0x9c
 3848 0ad6 070B0000 		.4byte	0xb07
 3849 0ada 0A       		.uleb128 0xa
 3850 0adb E4030000 		.4byte	.LASF47
 3851 0adf 01       		.byte	0x1
 3852 0ae0 810D     		.2byte	0xd81
 3853 0ae2 83000000 		.4byte	0x83
 3854 0ae6 F7050000 		.4byte	.LLST43
 3855 0aea 0D       		.uleb128 0xd
 3856 0aeb E0040000 		.4byte	.LASF98
 3857 0aef 01       		.byte	0x1
 3858 0af0 810D     		.2byte	0xd81
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 136


 3859 0af2 F3000000 		.4byte	0xf3
 3860 0af6 01       		.uleb128 0x1
 3861 0af7 51       		.byte	0x51
 3862 0af8 10       		.uleb128 0x10
 3863 0af9 5A000000 		.4byte	.LASF99
 3864 0afd 01       		.byte	0x1
 3865 0afe 830D     		.2byte	0xd83
 3866 0b00 F3000000 		.4byte	0xf3
 3867 0b04 01       		.uleb128 0x1
 3868 0b05 50       		.byte	0x50
 3869 0b06 00       		.byte	0
 3870 0b07 0E       		.uleb128 0xe
 3871 0b08 F1010000 		.4byte	.LASF100
 3872 0b0c 01       		.byte	0x1
 3873 0b0d 990D     		.2byte	0xd99
 3874 0b0f F3000000 		.4byte	0xf3
 3875 0b13 00000000 		.4byte	.LFB50
 3876 0b17 0C000000 		.4byte	.LFE50-.LFB50
 3877 0b1b 01       		.uleb128 0x1
 3878 0b1c 9C       		.byte	0x9c
 3879 0b1d 320B0000 		.4byte	0xb32
 3880 0b21 0A       		.uleb128 0xa
 3881 0b22 E4030000 		.4byte	.LASF47
 3882 0b26 01       		.byte	0x1
 3883 0b27 990D     		.2byte	0xd99
 3884 0b29 83000000 		.4byte	0x83
 3885 0b2d 18060000 		.4byte	.LLST44
 3886 0b31 00       		.byte	0
 3887 0b32 09       		.uleb128 0x9
 3888 0b33 EB020000 		.4byte	.LASF101
 3889 0b37 01       		.byte	0x1
 3890 0b38 C60D     		.2byte	0xdc6
 3891 0b3a 00000000 		.4byte	.LFB52
 3892 0b3e 70000000 		.4byte	.LFE52-.LFB52
 3893 0b42 01       		.uleb128 0x1
 3894 0b43 9C       		.byte	0x9c
 3895 0b44 570B0000 		.4byte	0xb57
 3896 0b48 0D       		.uleb128 0xd
 3897 0b49 88060000 		.4byte	.LASF102
 3898 0b4d 01       		.byte	0x1
 3899 0b4e C60D     		.2byte	0xdc6
 3900 0b50 570B0000 		.4byte	0xb57
 3901 0b54 01       		.uleb128 0x1
 3902 0b55 50       		.byte	0x50
 3903 0b56 00       		.byte	0
 3904 0b57 06       		.uleb128 0x6
 3905 0b58 04       		.byte	0x4
 3906 0b59 83000000 		.4byte	0x83
 3907 0b5d 09       		.uleb128 0x9
 3908 0b5e A8050000 		.4byte	.LASF103
 3909 0b62 01       		.byte	0x1
 3910 0b63 F30D     		.2byte	0xdf3
 3911 0b65 00000000 		.4byte	.LFB53
 3912 0b69 20000000 		.4byte	.LFE53-.LFB53
 3913 0b6d 01       		.uleb128 0x1
 3914 0b6e 9C       		.byte	0x9c
 3915 0b6f 940B0000 		.4byte	0xb94
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 137


 3916 0b73 0A       		.uleb128 0xa
 3917 0b74 71040000 		.4byte	.LASF104
 3918 0b78 01       		.byte	0x1
 3919 0b79 F30D     		.2byte	0xdf3
 3920 0b7b 83000000 		.4byte	0x83
 3921 0b7f 39060000 		.4byte	.LLST45
 3922 0b83 0B       		.uleb128 0xb
 3923 0b84 B6030000 		.4byte	.LASF105
 3924 0b88 01       		.byte	0x1
 3925 0b89 F50D     		.2byte	0xdf5
 3926 0b8b 83000000 		.4byte	0x83
 3927 0b8f 5A060000 		.4byte	.LLST46
 3928 0b93 00       		.byte	0
 3929 0b94 09       		.uleb128 0x9
 3930 0b95 09040000 		.4byte	.LASF106
 3931 0b99 01       		.byte	0x1
 3932 0b9a 0F0E     		.2byte	0xe0f
 3933 0b9c 00000000 		.4byte	.LFB54
 3934 0ba0 20000000 		.4byte	.LFE54-.LFB54
 3935 0ba4 01       		.uleb128 0x1
 3936 0ba5 9C       		.byte	0x9c
 3937 0ba6 CB0B0000 		.4byte	0xbcb
 3938 0baa 0A       		.uleb128 0xa
 3939 0bab 71040000 		.4byte	.LASF104
 3940 0baf 01       		.byte	0x1
 3941 0bb0 0F0E     		.2byte	0xe0f
 3942 0bb2 83000000 		.4byte	0x83
 3943 0bb6 78060000 		.4byte	.LLST47
 3944 0bba 0B       		.uleb128 0xb
 3945 0bbb B6030000 		.4byte	.LASF105
 3946 0bbf 01       		.byte	0x1
 3947 0bc0 110E     		.2byte	0xe11
 3948 0bc2 83000000 		.4byte	0x83
 3949 0bc6 99060000 		.4byte	.LLST48
 3950 0bca 00       		.byte	0
 3951 0bcb 09       		.uleb128 0x9
 3952 0bcc FA060000 		.4byte	.LASF107
 3953 0bd0 01       		.byte	0x1
 3954 0bd1 2B0E     		.2byte	0xe2b
 3955 0bd3 00000000 		.4byte	.LFB55
 3956 0bd7 20000000 		.4byte	.LFE55-.LFB55
 3957 0bdb 01       		.uleb128 0x1
 3958 0bdc 9C       		.byte	0x9c
 3959 0bdd 020C0000 		.4byte	0xc02
 3960 0be1 0A       		.uleb128 0xa
 3961 0be2 71040000 		.4byte	.LASF104
 3962 0be6 01       		.byte	0x1
 3963 0be7 2B0E     		.2byte	0xe2b
 3964 0be9 83000000 		.4byte	0x83
 3965 0bed B7060000 		.4byte	.LLST49
 3966 0bf1 0B       		.uleb128 0xb
 3967 0bf2 B6030000 		.4byte	.LASF105
 3968 0bf6 01       		.byte	0x1
 3969 0bf7 2D0E     		.2byte	0xe2d
 3970 0bf9 83000000 		.4byte	0x83
 3971 0bfd D8060000 		.4byte	.LLST50
 3972 0c01 00       		.byte	0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 138


 3973 0c02 09       		.uleb128 0x9
 3974 0c03 81040000 		.4byte	.LASF108
 3975 0c07 01       		.byte	0x1
 3976 0c08 490E     		.2byte	0xe49
 3977 0c0a 00000000 		.4byte	.LFB56
 3978 0c0e 68000000 		.4byte	.LFE56-.LFB56
 3979 0c12 01       		.uleb128 0x1
 3980 0c13 9C       		.byte	0x9c
 3981 0c14 580C0000 		.4byte	0xc58
 3982 0c18 0A       		.uleb128 0xa
 3983 0c19 47010000 		.4byte	.LASF109
 3984 0c1d 01       		.byte	0x1
 3985 0c1e 490E     		.2byte	0xe49
 3986 0c20 83000000 		.4byte	0x83
 3987 0c24 F6060000 		.4byte	.LLST51
 3988 0c28 0A       		.uleb128 0xa
 3989 0c29 71040000 		.4byte	.LASF104
 3990 0c2d 01       		.byte	0x1
 3991 0c2e 490E     		.2byte	0xe49
 3992 0c30 83000000 		.4byte	0x83
 3993 0c34 62070000 		.4byte	.LLST52
 3994 0c38 0B       		.uleb128 0xb
 3995 0c39 B6030000 		.4byte	.LASF105
 3996 0c3d 01       		.byte	0x1
 3997 0c3e 4B0E     		.2byte	0xe4b
 3998 0c40 83000000 		.4byte	0x83
 3999 0c44 CE070000 		.4byte	.LLST53
 4000 0c48 12       		.uleb128 0x12
 4001 0c49 56000000 		.4byte	.LVL190
 4002 0c4d F8030000 		.4byte	0x3f8
 4003 0c51 13       		.uleb128 0x13
 4004 0c52 01       		.uleb128 0x1
 4005 0c53 50       		.byte	0x50
 4006 0c54 01       		.uleb128 0x1
 4007 0c55 30       		.byte	0x30
 4008 0c56 00       		.byte	0
 4009 0c57 00       		.byte	0
 4010 0c58 19       		.uleb128 0x19
 4011 0c59 F3000000 		.4byte	0xf3
 4012 0c5d 680C0000 		.4byte	0xc68
 4013 0c61 1A       		.uleb128 0x1a
 4014 0c62 EC000000 		.4byte	0xec
 4015 0c66 04       		.byte	0x4
 4016 0c67 00       		.byte	0
 4017 0c68 1B       		.uleb128 0x1b
 4018 0c69 75060000 		.4byte	.LASF110
 4019 0c6d 01       		.byte	0x1
 4020 0c6e 22       		.byte	0x22
 4021 0c6f 580C0000 		.4byte	0xc58
 4022 0c73 05       		.uleb128 0x5
 4023 0c74 03       		.byte	0x3
 4024 0c75 00000000 		.4byte	CySysTickCallbacks
 4025 0c79 1C       		.uleb128 0x1c
 4026 0c7a 0C050000 		.4byte	.LASF111
 4027 0c7e 01       		.byte	0x1
 4028 0c7f 1B       		.byte	0x1b
 4029 0c80 83000000 		.4byte	0x83
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 139


 4030 0c84 05       		.uleb128 0x5
 4031 0c85 03       		.byte	0x3
 4032 0c86 00000000 		.4byte	cydelayFreqHz
 4033 0c8a 1C       		.uleb128 0x1c
 4034 0c8b 0C020000 		.4byte	.LASF112
 4035 0c8f 01       		.byte	0x1
 4036 0c90 1C       		.byte	0x1c
 4037 0c91 83000000 		.4byte	0x83
 4038 0c95 05       		.uleb128 0x5
 4039 0c96 03       		.byte	0x3
 4040 0c97 00000000 		.4byte	cydelayFreqKhz
 4041 0c9b 1C       		.uleb128 0x1c
 4042 0c9c DB060000 		.4byte	.LASF113
 4043 0ca0 01       		.byte	0x1
 4044 0ca1 1D       		.byte	0x1d
 4045 0ca2 6B000000 		.4byte	0x6b
 4046 0ca6 05       		.uleb128 0x5
 4047 0ca7 03       		.byte	0x3
 4048 0ca8 00000000 		.4byte	cydelayFreqMhz
 4049 0cac 1C       		.uleb128 0x1c
 4050 0cad BE020000 		.4byte	.LASF114
 4051 0cb1 01       		.byte	0x1
 4052 0cb2 1E       		.byte	0x1e
 4053 0cb3 83000000 		.4byte	0x83
 4054 0cb7 05       		.uleb128 0x5
 4055 0cb8 03       		.byte	0x3
 4056 0cb9 00000000 		.4byte	cydelay32kMs
 4057 0cbd 1C       		.uleb128 0x1c
 4058 0cbe 29010000 		.4byte	.LASF115
 4059 0cc2 01       		.byte	0x1
 4060 0cc3 36       		.byte	0x36
 4061 0cc4 83000000 		.4byte	0x83
 4062 0cc8 05       		.uleb128 0x5
 4063 0cc9 03       		.byte	0x3
 4064 0cca 00000000 		.4byte	CySysTickInitVar
 4065 0cce 19       		.uleb128 0x19
 4066 0ccf DE0C0000 		.4byte	0xcde
 4067 0cd3 DE0C0000 		.4byte	0xcde
 4068 0cd7 1A       		.uleb128 0x1a
 4069 0cd8 EC000000 		.4byte	0xec
 4070 0cdc 2D       		.byte	0x2d
 4071 0cdd 00       		.byte	0
 4072 0cde 1D       		.uleb128 0x1d
 4073 0cdf 6B000000 		.4byte	0x6b
 4074 0ce3 1C       		.uleb128 0x1c
 4075 0ce4 E9040000 		.4byte	.LASF116
 4076 0ce8 01       		.byte	0x1
 4077 0ce9 3B       		.byte	0x3b
 4078 0cea F40C0000 		.4byte	0xcf4
 4079 0cee 05       		.uleb128 0x5
 4080 0cef 03       		.byte	0x3
 4081 0cf0 00000000 		.4byte	cyImoFreqMhz2Reg
 4082 0cf4 1D       		.uleb128 0x1d
 4083 0cf5 CE0C0000 		.4byte	0xcce
 4084 0cf9 1C       		.uleb128 0x1c
 4085 0cfa 40000000 		.4byte	.LASF117
 4086 0cfe 01       		.byte	0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 140


 4087 0cff 58       		.byte	0x58
 4088 0d00 83000000 		.4byte	0x83
 4089 0d04 05       		.uleb128 0x5
 4090 0d05 03       		.byte	0x3
 4091 0d06 00000000 		.4byte	CySysClkPumpConfig
 4092 0d0a 1E       		.uleb128 0x1e
 4093 0d0b 68030000 		.4byte	.LASF118
 4094 0d0f 68030000 		.4byte	.LASF118
 4095 0d13 03       		.byte	0x3
 4096 0d14 F8       		.byte	0xf8
 4097 0d15 1E       		.uleb128 0x1e
 4098 0d16 31050000 		.4byte	.LASF119
 4099 0d1a 31050000 		.4byte	.LASF119
 4100 0d1e 03       		.byte	0x3
 4101 0d1f F9       		.byte	0xf9
 4102 0d20 1E       		.uleb128 0x1e
 4103 0d21 84050000 		.4byte	.LASF120
 4104 0d25 84050000 		.4byte	.LASF120
 4105 0d29 03       		.byte	0x3
 4106 0d2a EF       		.byte	0xef
 4107 0d2b 00       		.byte	0
 4108              		.section	.debug_abbrev,"",%progbits
 4109              	.Ldebug_abbrev0:
 4110 0000 01       		.uleb128 0x1
 4111 0001 11       		.uleb128 0x11
 4112 0002 01       		.byte	0x1
 4113 0003 25       		.uleb128 0x25
 4114 0004 0E       		.uleb128 0xe
 4115 0005 13       		.uleb128 0x13
 4116 0006 0B       		.uleb128 0xb
 4117 0007 03       		.uleb128 0x3
 4118 0008 0E       		.uleb128 0xe
 4119 0009 1B       		.uleb128 0x1b
 4120 000a 0E       		.uleb128 0xe
 4121 000b 55       		.uleb128 0x55
 4122 000c 17       		.uleb128 0x17
 4123 000d 11       		.uleb128 0x11
 4124 000e 01       		.uleb128 0x1
 4125 000f 10       		.uleb128 0x10
 4126 0010 17       		.uleb128 0x17
 4127 0011 00       		.byte	0
 4128 0012 00       		.byte	0
 4129 0013 02       		.uleb128 0x2
 4130 0014 24       		.uleb128 0x24
 4131 0015 00       		.byte	0
 4132 0016 0B       		.uleb128 0xb
 4133 0017 0B       		.uleb128 0xb
 4134 0018 3E       		.uleb128 0x3e
 4135 0019 0B       		.uleb128 0xb
 4136 001a 03       		.uleb128 0x3
 4137 001b 0E       		.uleb128 0xe
 4138 001c 00       		.byte	0
 4139 001d 00       		.byte	0
 4140 001e 03       		.uleb128 0x3
 4141 001f 24       		.uleb128 0x24
 4142 0020 00       		.byte	0
 4143 0021 0B       		.uleb128 0xb
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 141


 4144 0022 0B       		.uleb128 0xb
 4145 0023 3E       		.uleb128 0x3e
 4146 0024 0B       		.uleb128 0xb
 4147 0025 03       		.uleb128 0x3
 4148 0026 08       		.uleb128 0x8
 4149 0027 00       		.byte	0
 4150 0028 00       		.byte	0
 4151 0029 04       		.uleb128 0x4
 4152 002a 16       		.uleb128 0x16
 4153 002b 00       		.byte	0
 4154 002c 03       		.uleb128 0x3
 4155 002d 0E       		.uleb128 0xe
 4156 002e 3A       		.uleb128 0x3a
 4157 002f 0B       		.uleb128 0xb
 4158 0030 3B       		.uleb128 0x3b
 4159 0031 05       		.uleb128 0x5
 4160 0032 49       		.uleb128 0x49
 4161 0033 13       		.uleb128 0x13
 4162 0034 00       		.byte	0
 4163 0035 00       		.byte	0
 4164 0036 05       		.uleb128 0x5
 4165 0037 35       		.uleb128 0x35
 4166 0038 00       		.byte	0
 4167 0039 49       		.uleb128 0x49
 4168 003a 13       		.uleb128 0x13
 4169 003b 00       		.byte	0
 4170 003c 00       		.byte	0
 4171 003d 06       		.uleb128 0x6
 4172 003e 0F       		.uleb128 0xf
 4173 003f 00       		.byte	0
 4174 0040 0B       		.uleb128 0xb
 4175 0041 0B       		.uleb128 0xb
 4176 0042 49       		.uleb128 0x49
 4177 0043 13       		.uleb128 0x13
 4178 0044 00       		.byte	0
 4179 0045 00       		.byte	0
 4180 0046 07       		.uleb128 0x7
 4181 0047 15       		.uleb128 0x15
 4182 0048 00       		.byte	0
 4183 0049 27       		.uleb128 0x27
 4184 004a 19       		.uleb128 0x19
 4185 004b 00       		.byte	0
 4186 004c 00       		.byte	0
 4187 004d 08       		.uleb128 0x8
 4188 004e 2E       		.uleb128 0x2e
 4189 004f 00       		.byte	0
 4190 0050 3F       		.uleb128 0x3f
 4191 0051 19       		.uleb128 0x19
 4192 0052 03       		.uleb128 0x3
 4193 0053 0E       		.uleb128 0xe
 4194 0054 3A       		.uleb128 0x3a
 4195 0055 0B       		.uleb128 0xb
 4196 0056 3B       		.uleb128 0x3b
 4197 0057 0B       		.uleb128 0xb
 4198 0058 27       		.uleb128 0x27
 4199 0059 19       		.uleb128 0x19
 4200 005a 11       		.uleb128 0x11
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 142


 4201 005b 01       		.uleb128 0x1
 4202 005c 12       		.uleb128 0x12
 4203 005d 06       		.uleb128 0x6
 4204 005e 40       		.uleb128 0x40
 4205 005f 18       		.uleb128 0x18
 4206 0060 9742     		.uleb128 0x2117
 4207 0062 19       		.uleb128 0x19
 4208 0063 00       		.byte	0
 4209 0064 00       		.byte	0
 4210 0065 09       		.uleb128 0x9
 4211 0066 2E       		.uleb128 0x2e
 4212 0067 01       		.byte	0x1
 4213 0068 3F       		.uleb128 0x3f
 4214 0069 19       		.uleb128 0x19
 4215 006a 03       		.uleb128 0x3
 4216 006b 0E       		.uleb128 0xe
 4217 006c 3A       		.uleb128 0x3a
 4218 006d 0B       		.uleb128 0xb
 4219 006e 3B       		.uleb128 0x3b
 4220 006f 05       		.uleb128 0x5
 4221 0070 27       		.uleb128 0x27
 4222 0071 19       		.uleb128 0x19
 4223 0072 11       		.uleb128 0x11
 4224 0073 01       		.uleb128 0x1
 4225 0074 12       		.uleb128 0x12
 4226 0075 06       		.uleb128 0x6
 4227 0076 40       		.uleb128 0x40
 4228 0077 18       		.uleb128 0x18
 4229 0078 9742     		.uleb128 0x2117
 4230 007a 19       		.uleb128 0x19
 4231 007b 01       		.uleb128 0x1
 4232 007c 13       		.uleb128 0x13
 4233 007d 00       		.byte	0
 4234 007e 00       		.byte	0
 4235 007f 0A       		.uleb128 0xa
 4236 0080 05       		.uleb128 0x5
 4237 0081 00       		.byte	0
 4238 0082 03       		.uleb128 0x3
 4239 0083 0E       		.uleb128 0xe
 4240 0084 3A       		.uleb128 0x3a
 4241 0085 0B       		.uleb128 0xb
 4242 0086 3B       		.uleb128 0x3b
 4243 0087 05       		.uleb128 0x5
 4244 0088 49       		.uleb128 0x49
 4245 0089 13       		.uleb128 0x13
 4246 008a 02       		.uleb128 0x2
 4247 008b 17       		.uleb128 0x17
 4248 008c 00       		.byte	0
 4249 008d 00       		.byte	0
 4250 008e 0B       		.uleb128 0xb
 4251 008f 34       		.uleb128 0x34
 4252 0090 00       		.byte	0
 4253 0091 03       		.uleb128 0x3
 4254 0092 0E       		.uleb128 0xe
 4255 0093 3A       		.uleb128 0x3a
 4256 0094 0B       		.uleb128 0xb
 4257 0095 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 143


 4258 0096 05       		.uleb128 0x5
 4259 0097 49       		.uleb128 0x49
 4260 0098 13       		.uleb128 0x13
 4261 0099 02       		.uleb128 0x2
 4262 009a 17       		.uleb128 0x17
 4263 009b 00       		.byte	0
 4264 009c 00       		.byte	0
 4265 009d 0C       		.uleb128 0xc
 4266 009e 898201   		.uleb128 0x4109
 4267 00a1 00       		.byte	0
 4268 00a2 11       		.uleb128 0x11
 4269 00a3 01       		.uleb128 0x1
 4270 00a4 31       		.uleb128 0x31
 4271 00a5 13       		.uleb128 0x13
 4272 00a6 00       		.byte	0
 4273 00a7 00       		.byte	0
 4274 00a8 0D       		.uleb128 0xd
 4275 00a9 05       		.uleb128 0x5
 4276 00aa 00       		.byte	0
 4277 00ab 03       		.uleb128 0x3
 4278 00ac 0E       		.uleb128 0xe
 4279 00ad 3A       		.uleb128 0x3a
 4280 00ae 0B       		.uleb128 0xb
 4281 00af 3B       		.uleb128 0x3b
 4282 00b0 05       		.uleb128 0x5
 4283 00b1 49       		.uleb128 0x49
 4284 00b2 13       		.uleb128 0x13
 4285 00b3 02       		.uleb128 0x2
 4286 00b4 18       		.uleb128 0x18
 4287 00b5 00       		.byte	0
 4288 00b6 00       		.byte	0
 4289 00b7 0E       		.uleb128 0xe
 4290 00b8 2E       		.uleb128 0x2e
 4291 00b9 01       		.byte	0x1
 4292 00ba 3F       		.uleb128 0x3f
 4293 00bb 19       		.uleb128 0x19
 4294 00bc 03       		.uleb128 0x3
 4295 00bd 0E       		.uleb128 0xe
 4296 00be 3A       		.uleb128 0x3a
 4297 00bf 0B       		.uleb128 0xb
 4298 00c0 3B       		.uleb128 0x3b
 4299 00c1 05       		.uleb128 0x5
 4300 00c2 27       		.uleb128 0x27
 4301 00c3 19       		.uleb128 0x19
 4302 00c4 49       		.uleb128 0x49
 4303 00c5 13       		.uleb128 0x13
 4304 00c6 11       		.uleb128 0x11
 4305 00c7 01       		.uleb128 0x1
 4306 00c8 12       		.uleb128 0x12
 4307 00c9 06       		.uleb128 0x6
 4308 00ca 40       		.uleb128 0x40
 4309 00cb 18       		.uleb128 0x18
 4310 00cc 9742     		.uleb128 0x2117
 4311 00ce 19       		.uleb128 0x19
 4312 00cf 01       		.uleb128 0x1
 4313 00d0 13       		.uleb128 0x13
 4314 00d1 00       		.byte	0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 144


 4315 00d2 00       		.byte	0
 4316 00d3 0F       		.uleb128 0xf
 4317 00d4 2E       		.uleb128 0x2e
 4318 00d5 00       		.byte	0
 4319 00d6 3F       		.uleb128 0x3f
 4320 00d7 19       		.uleb128 0x19
 4321 00d8 03       		.uleb128 0x3
 4322 00d9 0E       		.uleb128 0xe
 4323 00da 3A       		.uleb128 0x3a
 4324 00db 0B       		.uleb128 0xb
 4325 00dc 3B       		.uleb128 0x3b
 4326 00dd 05       		.uleb128 0x5
 4327 00de 27       		.uleb128 0x27
 4328 00df 19       		.uleb128 0x19
 4329 00e0 11       		.uleb128 0x11
 4330 00e1 01       		.uleb128 0x1
 4331 00e2 12       		.uleb128 0x12
 4332 00e3 06       		.uleb128 0x6
 4333 00e4 40       		.uleb128 0x40
 4334 00e5 18       		.uleb128 0x18
 4335 00e6 9742     		.uleb128 0x2117
 4336 00e8 19       		.uleb128 0x19
 4337 00e9 00       		.byte	0
 4338 00ea 00       		.byte	0
 4339 00eb 10       		.uleb128 0x10
 4340 00ec 34       		.uleb128 0x34
 4341 00ed 00       		.byte	0
 4342 00ee 03       		.uleb128 0x3
 4343 00ef 0E       		.uleb128 0xe
 4344 00f0 3A       		.uleb128 0x3a
 4345 00f1 0B       		.uleb128 0xb
 4346 00f2 3B       		.uleb128 0x3b
 4347 00f3 05       		.uleb128 0x5
 4348 00f4 49       		.uleb128 0x49
 4349 00f5 13       		.uleb128 0x13
 4350 00f6 02       		.uleb128 0x2
 4351 00f7 18       		.uleb128 0x18
 4352 00f8 00       		.byte	0
 4353 00f9 00       		.byte	0
 4354 00fa 11       		.uleb128 0x11
 4355 00fb 2E       		.uleb128 0x2e
 4356 00fc 00       		.byte	0
 4357 00fd 3F       		.uleb128 0x3f
 4358 00fe 19       		.uleb128 0x19
 4359 00ff 03       		.uleb128 0x3
 4360 0100 0E       		.uleb128 0xe
 4361 0101 3A       		.uleb128 0x3a
 4362 0102 0B       		.uleb128 0xb
 4363 0103 3B       		.uleb128 0x3b
 4364 0104 05       		.uleb128 0x5
 4365 0105 27       		.uleb128 0x27
 4366 0106 19       		.uleb128 0x19
 4367 0107 49       		.uleb128 0x49
 4368 0108 13       		.uleb128 0x13
 4369 0109 11       		.uleb128 0x11
 4370 010a 01       		.uleb128 0x1
 4371 010b 12       		.uleb128 0x12
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 145


 4372 010c 06       		.uleb128 0x6
 4373 010d 40       		.uleb128 0x40
 4374 010e 18       		.uleb128 0x18
 4375 010f 9742     		.uleb128 0x2117
 4376 0111 19       		.uleb128 0x19
 4377 0112 00       		.byte	0
 4378 0113 00       		.byte	0
 4379 0114 12       		.uleb128 0x12
 4380 0115 898201   		.uleb128 0x4109
 4381 0118 01       		.byte	0x1
 4382 0119 11       		.uleb128 0x11
 4383 011a 01       		.uleb128 0x1
 4384 011b 31       		.uleb128 0x31
 4385 011c 13       		.uleb128 0x13
 4386 011d 00       		.byte	0
 4387 011e 00       		.byte	0
 4388 011f 13       		.uleb128 0x13
 4389 0120 8A8201   		.uleb128 0x410a
 4390 0123 00       		.byte	0
 4391 0124 02       		.uleb128 0x2
 4392 0125 18       		.uleb128 0x18
 4393 0126 9142     		.uleb128 0x2111
 4394 0128 18       		.uleb128 0x18
 4395 0129 00       		.byte	0
 4396 012a 00       		.byte	0
 4397 012b 14       		.uleb128 0x14
 4398 012c 34       		.uleb128 0x34
 4399 012d 00       		.byte	0
 4400 012e 03       		.uleb128 0x3
 4401 012f 0E       		.uleb128 0xe
 4402 0130 3A       		.uleb128 0x3a
 4403 0131 0B       		.uleb128 0xb
 4404 0132 3B       		.uleb128 0x3b
 4405 0133 05       		.uleb128 0x5
 4406 0134 49       		.uleb128 0x49
 4407 0135 13       		.uleb128 0x13
 4408 0136 1C       		.uleb128 0x1c
 4409 0137 06       		.uleb128 0x6
 4410 0138 00       		.byte	0
 4411 0139 00       		.byte	0
 4412 013a 15       		.uleb128 0x15
 4413 013b 898201   		.uleb128 0x4109
 4414 013e 01       		.byte	0x1
 4415 013f 11       		.uleb128 0x11
 4416 0140 01       		.uleb128 0x1
 4417 0141 31       		.uleb128 0x31
 4418 0142 13       		.uleb128 0x13
 4419 0143 01       		.uleb128 0x1
 4420 0144 13       		.uleb128 0x13
 4421 0145 00       		.byte	0
 4422 0146 00       		.byte	0
 4423 0147 16       		.uleb128 0x16
 4424 0148 2E       		.uleb128 0x2e
 4425 0149 01       		.byte	0x1
 4426 014a 3F       		.uleb128 0x3f
 4427 014b 19       		.uleb128 0x19
 4428 014c 03       		.uleb128 0x3
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 146


 4429 014d 0E       		.uleb128 0xe
 4430 014e 3A       		.uleb128 0x3a
 4431 014f 0B       		.uleb128 0xb
 4432 0150 3B       		.uleb128 0x3b
 4433 0151 05       		.uleb128 0x5
 4434 0152 27       		.uleb128 0x27
 4435 0153 19       		.uleb128 0x19
 4436 0154 11       		.uleb128 0x11
 4437 0155 01       		.uleb128 0x1
 4438 0156 12       		.uleb128 0x12
 4439 0157 06       		.uleb128 0x6
 4440 0158 40       		.uleb128 0x40
 4441 0159 18       		.uleb128 0x18
 4442 015a 9642     		.uleb128 0x2116
 4443 015c 19       		.uleb128 0x19
 4444 015d 01       		.uleb128 0x1
 4445 015e 13       		.uleb128 0x13
 4446 015f 00       		.byte	0
 4447 0160 00       		.byte	0
 4448 0161 17       		.uleb128 0x17
 4449 0162 2E       		.uleb128 0x2e
 4450 0163 01       		.byte	0x1
 4451 0164 03       		.uleb128 0x3
 4452 0165 0E       		.uleb128 0xe
 4453 0166 3A       		.uleb128 0x3a
 4454 0167 0B       		.uleb128 0xb
 4455 0168 3B       		.uleb128 0x3b
 4456 0169 05       		.uleb128 0x5
 4457 016a 27       		.uleb128 0x27
 4458 016b 19       		.uleb128 0x19
 4459 016c 11       		.uleb128 0x11
 4460 016d 01       		.uleb128 0x1
 4461 016e 12       		.uleb128 0x12
 4462 016f 06       		.uleb128 0x6
 4463 0170 40       		.uleb128 0x40
 4464 0171 18       		.uleb128 0x18
 4465 0172 9642     		.uleb128 0x2116
 4466 0174 19       		.uleb128 0x19
 4467 0175 01       		.uleb128 0x1
 4468 0176 13       		.uleb128 0x13
 4469 0177 00       		.byte	0
 4470 0178 00       		.byte	0
 4471 0179 18       		.uleb128 0x18
 4472 017a 34       		.uleb128 0x34
 4473 017b 00       		.byte	0
 4474 017c 03       		.uleb128 0x3
 4475 017d 08       		.uleb128 0x8
 4476 017e 3A       		.uleb128 0x3a
 4477 017f 0B       		.uleb128 0xb
 4478 0180 3B       		.uleb128 0x3b
 4479 0181 05       		.uleb128 0x5
 4480 0182 49       		.uleb128 0x49
 4481 0183 13       		.uleb128 0x13
 4482 0184 02       		.uleb128 0x2
 4483 0185 17       		.uleb128 0x17
 4484 0186 00       		.byte	0
 4485 0187 00       		.byte	0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 147


 4486 0188 19       		.uleb128 0x19
 4487 0189 01       		.uleb128 0x1
 4488 018a 01       		.byte	0x1
 4489 018b 49       		.uleb128 0x49
 4490 018c 13       		.uleb128 0x13
 4491 018d 01       		.uleb128 0x1
 4492 018e 13       		.uleb128 0x13
 4493 018f 00       		.byte	0
 4494 0190 00       		.byte	0
 4495 0191 1A       		.uleb128 0x1a
 4496 0192 21       		.uleb128 0x21
 4497 0193 00       		.byte	0
 4498 0194 49       		.uleb128 0x49
 4499 0195 13       		.uleb128 0x13
 4500 0196 2F       		.uleb128 0x2f
 4501 0197 0B       		.uleb128 0xb
 4502 0198 00       		.byte	0
 4503 0199 00       		.byte	0
 4504 019a 1B       		.uleb128 0x1b
 4505 019b 34       		.uleb128 0x34
 4506 019c 00       		.byte	0
 4507 019d 03       		.uleb128 0x3
 4508 019e 0E       		.uleb128 0xe
 4509 019f 3A       		.uleb128 0x3a
 4510 01a0 0B       		.uleb128 0xb
 4511 01a1 3B       		.uleb128 0x3b
 4512 01a2 0B       		.uleb128 0xb
 4513 01a3 49       		.uleb128 0x49
 4514 01a4 13       		.uleb128 0x13
 4515 01a5 02       		.uleb128 0x2
 4516 01a6 18       		.uleb128 0x18
 4517 01a7 00       		.byte	0
 4518 01a8 00       		.byte	0
 4519 01a9 1C       		.uleb128 0x1c
 4520 01aa 34       		.uleb128 0x34
 4521 01ab 00       		.byte	0
 4522 01ac 03       		.uleb128 0x3
 4523 01ad 0E       		.uleb128 0xe
 4524 01ae 3A       		.uleb128 0x3a
 4525 01af 0B       		.uleb128 0xb
 4526 01b0 3B       		.uleb128 0x3b
 4527 01b1 0B       		.uleb128 0xb
 4528 01b2 49       		.uleb128 0x49
 4529 01b3 13       		.uleb128 0x13
 4530 01b4 3F       		.uleb128 0x3f
 4531 01b5 19       		.uleb128 0x19
 4532 01b6 02       		.uleb128 0x2
 4533 01b7 18       		.uleb128 0x18
 4534 01b8 00       		.byte	0
 4535 01b9 00       		.byte	0
 4536 01ba 1D       		.uleb128 0x1d
 4537 01bb 26       		.uleb128 0x26
 4538 01bc 00       		.byte	0
 4539 01bd 49       		.uleb128 0x49
 4540 01be 13       		.uleb128 0x13
 4541 01bf 00       		.byte	0
 4542 01c0 00       		.byte	0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 148


 4543 01c1 1E       		.uleb128 0x1e
 4544 01c2 2E       		.uleb128 0x2e
 4545 01c3 00       		.byte	0
 4546 01c4 3F       		.uleb128 0x3f
 4547 01c5 19       		.uleb128 0x19
 4548 01c6 3C       		.uleb128 0x3c
 4549 01c7 19       		.uleb128 0x19
 4550 01c8 6E       		.uleb128 0x6e
 4551 01c9 0E       		.uleb128 0xe
 4552 01ca 03       		.uleb128 0x3
 4553 01cb 0E       		.uleb128 0xe
 4554 01cc 3A       		.uleb128 0x3a
 4555 01cd 0B       		.uleb128 0xb
 4556 01ce 3B       		.uleb128 0x3b
 4557 01cf 0B       		.uleb128 0xb
 4558 01d0 00       		.byte	0
 4559 01d1 00       		.byte	0
 4560 01d2 00       		.byte	0
 4561              		.section	.debug_loc,"",%progbits
 4562              	.Ldebug_loc0:
 4563              	.LLST0:
 4564 0000 00000000 		.4byte	.LVL0
 4565 0004 07000000 		.4byte	.LVL1-1
 4566 0008 0100     		.2byte	0x1
 4567 000a 50       		.byte	0x50
 4568 000b 07000000 		.4byte	.LVL1-1
 4569 000f 12000000 		.4byte	.LVL3
 4570 0013 0100     		.2byte	0x1
 4571 0015 54       		.byte	0x54
 4572 0016 12000000 		.4byte	.LVL3
 4573 001a 20000000 		.4byte	.LFE4
 4574 001e 0400     		.2byte	0x4
 4575 0020 F3       		.byte	0xf3
 4576 0021 01       		.uleb128 0x1
 4577 0022 50       		.byte	0x50
 4578 0023 9F       		.byte	0x9f
 4579 0024 00000000 		.4byte	0
 4580 0028 00000000 		.4byte	0
 4581              	.LLST1:
 4582 002c 08000000 		.4byte	.LVL1
 4583 0030 19000000 		.4byte	.LVL5-1
 4584 0034 0100     		.2byte	0x1
 4585 0036 50       		.byte	0x50
 4586 0037 00000000 		.4byte	0
 4587 003b 00000000 		.4byte	0
 4588              	.LLST2:
 4589 003f 10000000 		.4byte	.LVL2
 4590 0043 14000000 		.4byte	.LVL4
 4591 0047 0100     		.2byte	0x1
 4592 0049 53       		.byte	0x53
 4593 004a 14000000 		.4byte	.LVL4
 4594 004e 1A000000 		.4byte	.LVL6
 4595 0052 0100     		.2byte	0x1
 4596 0054 54       		.byte	0x54
 4597 0055 00000000 		.4byte	0
 4598 0059 00000000 		.4byte	0
 4599              	.LLST3:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 149


 4600 005d 06000000 		.4byte	.LVL8
 4601 0061 11000000 		.4byte	.LVL10-1
 4602 0065 0100     		.2byte	0x1
 4603 0067 50       		.byte	0x50
 4604 0068 00000000 		.4byte	0
 4605 006c 00000000 		.4byte	0
 4606              	.LLST4:
 4607 0070 0E000000 		.4byte	.LVL9
 4608 0074 14000000 		.4byte	.LVL11
 4609 0078 0100     		.2byte	0x1
 4610 007a 54       		.byte	0x54
 4611 007b 14000000 		.4byte	.LVL11
 4612 007f 1C000000 		.4byte	.LFE6
 4613 0083 0100     		.2byte	0x1
 4614 0085 50       		.byte	0x50
 4615 0086 00000000 		.4byte	0
 4616 008a 00000000 		.4byte	0
 4617              	.LLST5:
 4618 008e 00000000 		.4byte	.LVL12
 4619 0092 07000000 		.4byte	.LVL13-1
 4620 0096 0100     		.2byte	0x1
 4621 0098 50       		.byte	0x50
 4622 0099 07000000 		.4byte	.LVL13-1
 4623 009d 14000000 		.4byte	.LVL14
 4624 00a1 0100     		.2byte	0x1
 4625 00a3 54       		.byte	0x54
 4626 00a4 14000000 		.4byte	.LVL14
 4627 00a8 30000000 		.4byte	.LFE7
 4628 00ac 0400     		.2byte	0x4
 4629 00ae F3       		.byte	0xf3
 4630 00af 01       		.uleb128 0x1
 4631 00b0 50       		.byte	0x50
 4632 00b1 9F       		.byte	0x9f
 4633 00b2 00000000 		.4byte	0
 4634 00b6 00000000 		.4byte	0
 4635              	.LLST6:
 4636 00ba 08000000 		.4byte	.LVL13
 4637 00be 23000000 		.4byte	.LVL15-1
 4638 00c2 0100     		.2byte	0x1
 4639 00c4 50       		.byte	0x50
 4640 00c5 00000000 		.4byte	0
 4641 00c9 00000000 		.4byte	0
 4642              	.LLST7:
 4643 00cd 00000000 		.4byte	.LVL17
 4644 00d1 04000000 		.4byte	.LVL18
 4645 00d5 0100     		.2byte	0x1
 4646 00d7 50       		.byte	0x50
 4647 00d8 04000000 		.4byte	.LVL18
 4648 00dc 14000000 		.4byte	.LFE17
 4649 00e0 0100     		.2byte	0x1
 4650 00e2 52       		.byte	0x52
 4651 00e3 00000000 		.4byte	0
 4652 00e7 00000000 		.4byte	0
 4653              	.LLST8:
 4654 00eb 00000000 		.4byte	.LVL23
 4655 00ef 04000000 		.4byte	.LVL24
 4656 00f3 0100     		.2byte	0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 150


 4657 00f5 50       		.byte	0x50
 4658 00f6 04000000 		.4byte	.LVL24
 4659 00fa 14000000 		.4byte	.LFE26
 4660 00fe 0400     		.2byte	0x4
 4661 0100 F3       		.byte	0xf3
 4662 0101 01       		.uleb128 0x1
 4663 0102 50       		.byte	0x50
 4664 0103 9F       		.byte	0x9f
 4665 0104 00000000 		.4byte	0
 4666 0108 00000000 		.4byte	0
 4667              	.LLST9:
 4668 010c 00000000 		.4byte	.LVL25
 4669 0110 08000000 		.4byte	.LVL26
 4670 0114 0100     		.2byte	0x1
 4671 0116 50       		.byte	0x50
 4672 0117 08000000 		.4byte	.LVL26
 4673 011b 18000000 		.4byte	.LFE27
 4674 011f 0400     		.2byte	0x4
 4675 0121 F3       		.byte	0xf3
 4676 0122 01       		.uleb128 0x1
 4677 0123 50       		.byte	0x50
 4678 0124 9F       		.byte	0x9f
 4679 0125 00000000 		.4byte	0
 4680 0129 00000000 		.4byte	0
 4681              	.LLST10:
 4682 012d 00000000 		.4byte	.LVL27
 4683 0131 04000000 		.4byte	.LVL28
 4684 0135 0100     		.2byte	0x1
 4685 0137 50       		.byte	0x50
 4686 0138 04000000 		.4byte	.LVL28
 4687 013c 14000000 		.4byte	.LFE28
 4688 0140 0400     		.2byte	0x4
 4689 0142 F3       		.byte	0xf3
 4690 0143 01       		.uleb128 0x1
 4691 0144 50       		.byte	0x50
 4692 0145 9F       		.byte	0x9f
 4693 0146 00000000 		.4byte	0
 4694 014a 00000000 		.4byte	0
 4695              	.LLST11:
 4696 014e 00000000 		.4byte	.LVL29
 4697 0152 04000000 		.4byte	.LVL30
 4698 0156 0100     		.2byte	0x1
 4699 0158 50       		.byte	0x50
 4700 0159 04000000 		.4byte	.LVL30
 4701 015d 14000000 		.4byte	.LFE29
 4702 0161 0400     		.2byte	0x4
 4703 0163 F3       		.byte	0xf3
 4704 0164 01       		.uleb128 0x1
 4705 0165 50       		.byte	0x50
 4706 0166 9F       		.byte	0x9f
 4707 0167 00000000 		.4byte	0
 4708 016b 00000000 		.4byte	0
 4709              	.LLST12:
 4710 016f 00000000 		.4byte	.LVL31
 4711 0173 04000000 		.4byte	.LVL32
 4712 0177 0100     		.2byte	0x1
 4713 0179 50       		.byte	0x50
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 151


 4714 017a 04000000 		.4byte	.LVL32
 4715 017e 14000000 		.4byte	.LFE30
 4716 0182 0400     		.2byte	0x4
 4717 0184 F3       		.byte	0xf3
 4718 0185 01       		.uleb128 0x1
 4719 0186 50       		.byte	0x50
 4720 0187 9F       		.byte	0x9f
 4721 0188 00000000 		.4byte	0
 4722 018c 00000000 		.4byte	0
 4723              	.LLST13:
 4724 0190 00000000 		.4byte	.LVL34
 4725 0194 13000000 		.4byte	.LVL35-1
 4726 0198 0100     		.2byte	0x1
 4727 019a 50       		.byte	0x50
 4728 019b 13000000 		.4byte	.LVL35-1
 4729 019f 18000000 		.4byte	.LVL36
 4730 01a3 0100     		.2byte	0x1
 4731 01a5 54       		.byte	0x54
 4732 01a6 18000000 		.4byte	.LVL36
 4733 01aa 28000000 		.4byte	.LVL38
 4734 01ae 0400     		.2byte	0x4
 4735 01b0 F3       		.byte	0xf3
 4736 01b1 01       		.uleb128 0x1
 4737 01b2 50       		.byte	0x50
 4738 01b3 9F       		.byte	0x9f
 4739 01b4 28000000 		.4byte	.LVL38
 4740 01b8 2A000000 		.4byte	.LVL39
 4741 01bc 0100     		.2byte	0x1
 4742 01be 50       		.byte	0x50
 4743 01bf 2A000000 		.4byte	.LVL39
 4744 01c3 2E000000 		.4byte	.LVL40
 4745 01c7 0100     		.2byte	0x1
 4746 01c9 54       		.byte	0x54
 4747 01ca 2E000000 		.4byte	.LVL40
 4748 01ce 38000000 		.4byte	.LFE12
 4749 01d2 0400     		.2byte	0x4
 4750 01d4 F3       		.byte	0xf3
 4751 01d5 01       		.uleb128 0x1
 4752 01d6 50       		.byte	0x50
 4753 01d7 9F       		.byte	0x9f
 4754 01d8 00000000 		.4byte	0
 4755 01dc 00000000 		.4byte	0
 4756              	.LLST14:
 4757 01e0 14000000 		.4byte	.LVL35
 4758 01e4 25000000 		.4byte	.LVL37-1
 4759 01e8 0100     		.2byte	0x1
 4760 01ea 50       		.byte	0x50
 4761 01eb 00000000 		.4byte	0
 4762 01ef 00000000 		.4byte	0
 4763              	.LLST15:
 4764 01f3 00000000 		.4byte	.LVL41
 4765 01f7 0C000000 		.4byte	.LVL43
 4766 01fb 0100     		.2byte	0x1
 4767 01fd 50       		.byte	0x50
 4768 01fe 0C000000 		.4byte	.LVL43
 4769 0202 20000000 		.4byte	.LFE20
 4770 0206 0400     		.2byte	0x4
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 152


 4771 0208 F3       		.byte	0xf3
 4772 0209 01       		.uleb128 0x1
 4773 020a 50       		.byte	0x50
 4774 020b 9F       		.byte	0x9f
 4775 020c 00000000 		.4byte	0
 4776 0210 00000000 		.4byte	0
 4777              	.LLST16:
 4778 0214 00000000 		.4byte	.LVL41
 4779 0218 0F000000 		.4byte	.LVL44-1
 4780 021c 0100     		.2byte	0x1
 4781 021e 51       		.byte	0x51
 4782 021f 0F000000 		.4byte	.LVL44-1
 4783 0223 1E000000 		.4byte	.LVL46
 4784 0227 0100     		.2byte	0x1
 4785 0229 55       		.byte	0x55
 4786 022a 1E000000 		.4byte	.LVL46
 4787 022e 20000000 		.4byte	.LFE20
 4788 0232 0400     		.2byte	0x4
 4789 0234 F3       		.byte	0xf3
 4790 0235 01       		.uleb128 0x1
 4791 0236 51       		.byte	0x51
 4792 0237 9F       		.byte	0x9f
 4793 0238 00000000 		.4byte	0
 4794 023c 00000000 		.4byte	0
 4795              	.LLST17:
 4796 0240 00000000 		.4byte	.LVL47
 4797 0244 0A000000 		.4byte	.LVL49
 4798 0248 0100     		.2byte	0x1
 4799 024a 50       		.byte	0x50
 4800 024b 0A000000 		.4byte	.LVL49
 4801 024f 1C000000 		.4byte	.LFE21
 4802 0253 0400     		.2byte	0x4
 4803 0255 F3       		.byte	0xf3
 4804 0256 01       		.uleb128 0x1
 4805 0257 50       		.byte	0x50
 4806 0258 9F       		.byte	0x9f
 4807 0259 00000000 		.4byte	0
 4808 025d 00000000 		.4byte	0
 4809              	.LLST18:
 4810 0261 00000000 		.4byte	.LVL51
 4811 0265 0C000000 		.4byte	.LVL53
 4812 0269 0100     		.2byte	0x1
 4813 026b 50       		.byte	0x50
 4814 026c 0C000000 		.4byte	.LVL53
 4815 0270 22000000 		.4byte	.LFE22
 4816 0274 0400     		.2byte	0x4
 4817 0276 F3       		.byte	0xf3
 4818 0277 01       		.uleb128 0x1
 4819 0278 50       		.byte	0x50
 4820 0279 9F       		.byte	0x9f
 4821 027a 00000000 		.4byte	0
 4822 027e 00000000 		.4byte	0
 4823              	.LLST19:
 4824 0282 00000000 		.4byte	.LVL51
 4825 0286 0F000000 		.4byte	.LVL54-1
 4826 028a 0100     		.2byte	0x1
 4827 028c 51       		.byte	0x51
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 153


 4828 028d 0F000000 		.4byte	.LVL54-1
 4829 0291 20000000 		.4byte	.LVL56
 4830 0295 0100     		.2byte	0x1
 4831 0297 55       		.byte	0x55
 4832 0298 20000000 		.4byte	.LVL56
 4833 029c 22000000 		.4byte	.LFE22
 4834 02a0 0400     		.2byte	0x4
 4835 02a2 F3       		.byte	0xf3
 4836 02a3 01       		.uleb128 0x1
 4837 02a4 51       		.byte	0x51
 4838 02a5 9F       		.byte	0x9f
 4839 02a6 00000000 		.4byte	0
 4840 02aa 00000000 		.4byte	0
 4841              	.LLST20:
 4842 02ae 00000000 		.4byte	.LVL57
 4843 02b2 0A000000 		.4byte	.LVL59
 4844 02b6 0100     		.2byte	0x1
 4845 02b8 50       		.byte	0x50
 4846 02b9 0A000000 		.4byte	.LVL59
 4847 02bd 1E000000 		.4byte	.LFE23
 4848 02c1 0400     		.2byte	0x4
 4849 02c3 F3       		.byte	0xf3
 4850 02c4 01       		.uleb128 0x1
 4851 02c5 50       		.byte	0x50
 4852 02c6 9F       		.byte	0x9f
 4853 02c7 00000000 		.4byte	0
 4854 02cb 00000000 		.4byte	0
 4855              	.LLST21:
 4856 02cf 00000000 		.4byte	.LVL61
 4857 02d3 0C000000 		.4byte	.LVL62
 4858 02d7 0100     		.2byte	0x1
 4859 02d9 50       		.byte	0x50
 4860 02da 0C000000 		.4byte	.LVL62
 4861 02de 4C000000 		.4byte	.LFE24
 4862 02e2 0400     		.2byte	0x4
 4863 02e4 F3       		.byte	0xf3
 4864 02e5 01       		.uleb128 0x1
 4865 02e6 50       		.byte	0x50
 4866 02e7 9F       		.byte	0x9f
 4867 02e8 00000000 		.4byte	0
 4868 02ec 00000000 		.4byte	0
 4869              	.LLST22:
 4870 02f0 00000000 		.4byte	.LVL61
 4871 02f4 0F000000 		.4byte	.LVL63-1
 4872 02f8 0100     		.2byte	0x1
 4873 02fa 51       		.byte	0x51
 4874 02fb 0F000000 		.4byte	.LVL63-1
 4875 02ff 4C000000 		.4byte	.LFE24
 4876 0303 0400     		.2byte	0x4
 4877 0305 F3       		.byte	0xf3
 4878 0306 01       		.uleb128 0x1
 4879 0307 51       		.byte	0x51
 4880 0308 9F       		.byte	0x9f
 4881 0309 00000000 		.4byte	0
 4882 030d 00000000 		.4byte	0
 4883              	.LLST23:
 4884 0311 26000000 		.4byte	.LVL66
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 154


 4885 0315 45000000 		.4byte	.LVL72-1
 4886 0319 0100     		.2byte	0x1
 4887 031b 50       		.byte	0x50
 4888 031c 00000000 		.4byte	0
 4889 0320 00000000 		.4byte	0
 4890              	.LLST24:
 4891 0324 22000000 		.4byte	.LVL65
 4892 0328 46000000 		.4byte	.LVL73
 4893 032c 0100     		.2byte	0x1
 4894 032e 55       		.byte	0x55
 4895 032f 00000000 		.4byte	0
 4896 0333 00000000 		.4byte	0
 4897              	.LLST25:
 4898 0337 32000000 		.4byte	.LVL67
 4899 033b 38000000 		.4byte	.LVL68
 4900 033f 0100     		.2byte	0x1
 4901 0341 51       		.byte	0x51
 4902 0342 3A000000 		.4byte	.LVL69
 4903 0346 3C000000 		.4byte	.LVL70
 4904 034a 0100     		.2byte	0x1
 4905 034c 51       		.byte	0x51
 4906 034d 3C000000 		.4byte	.LVL70
 4907 0351 40000000 		.4byte	.LVL71
 4908 0355 0100     		.2byte	0x1
 4909 0357 53       		.byte	0x53
 4910 0358 40000000 		.4byte	.LVL71
 4911 035c 45000000 		.4byte	.LVL72-1
 4912 0360 0100     		.2byte	0x1
 4913 0362 51       		.byte	0x51
 4914 0363 00000000 		.4byte	0
 4915 0367 00000000 		.4byte	0
 4916              	.LLST26:
 4917 036b 00000000 		.4byte	.LVL74
 4918 036f 0A000000 		.4byte	.LVL75
 4919 0373 0100     		.2byte	0x1
 4920 0375 50       		.byte	0x50
 4921 0376 0A000000 		.4byte	.LVL75
 4922 037a 2C000000 		.4byte	.LFE25
 4923 037e 0400     		.2byte	0x4
 4924 0380 F3       		.byte	0xf3
 4925 0381 01       		.uleb128 0x1
 4926 0382 50       		.byte	0x50
 4927 0383 9F       		.byte	0x9f
 4928 0384 00000000 		.4byte	0
 4929 0388 00000000 		.4byte	0
 4930              	.LLST27:
 4931 038c 24000000 		.4byte	.LVL77
 4932 0390 26000000 		.4byte	.LVL78
 4933 0394 0100     		.2byte	0x1
 4934 0396 50       		.byte	0x50
 4935 0397 00000000 		.4byte	0
 4936 039b 00000000 		.4byte	0
 4937              	.LLST28:
 4938 039f 00000000 		.4byte	.LVL79
 4939 03a3 06000000 		.4byte	.LVL80
 4940 03a7 0100     		.2byte	0x1
 4941 03a9 50       		.byte	0x50
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 155


 4942 03aa 06000000 		.4byte	.LVL80
 4943 03ae 26000000 		.4byte	.LVL84
 4944 03b2 0100     		.2byte	0x1
 4945 03b4 54       		.byte	0x54
 4946 03b5 00000000 		.4byte	0
 4947 03b9 00000000 		.4byte	0
 4948              	.LLST29:
 4949 03bd 00000000 		.4byte	.LVL85
 4950 03c1 08000000 		.4byte	.LVL86
 4951 03c5 0100     		.2byte	0x1
 4952 03c7 50       		.byte	0x50
 4953 03c8 08000000 		.4byte	.LVL86
 4954 03cc 14000000 		.4byte	.LFE34
 4955 03d0 0400     		.2byte	0x4
 4956 03d2 F3       		.byte	0xf3
 4957 03d3 01       		.uleb128 0x1
 4958 03d4 50       		.byte	0x50
 4959 03d5 9F       		.byte	0x9f
 4960 03d6 00000000 		.4byte	0
 4961 03da 00000000 		.4byte	0
 4962              	.LLST30:
 4963 03de 00000000 		.4byte	.LVL88
 4964 03e2 0F000000 		.4byte	.LVL89-1
 4965 03e6 0100     		.2byte	0x1
 4966 03e8 50       		.byte	0x50
 4967 03e9 0F000000 		.4byte	.LVL89-1
 4968 03ed D4000000 		.4byte	.LVL111
 4969 03f1 0100     		.2byte	0x1
 4970 03f3 54       		.byte	0x54
 4971 03f4 D4000000 		.4byte	.LVL111
 4972 03f8 02010000 		.4byte	.LVL114
 4973 03fc 0700     		.2byte	0x7
 4974 03fe 74       		.byte	0x74
 4975 03ff B3998080 		.sleb128 -268432205
 4975      7F
 4976 0404 9F       		.byte	0x9f
 4977 0405 02010000 		.4byte	.LVL114
 4978 0409 08010000 		.4byte	.LVL115
 4979 040d 0100     		.2byte	0x1
 4980 040f 54       		.byte	0x54
 4981 0410 08010000 		.4byte	.LVL115
 4982 0414 10010000 		.4byte	.LVL117
 4983 0418 0300     		.2byte	0x3
 4984 041a 77       		.byte	0x77
 4985 041b 03       		.sleb128 3
 4986 041c 9F       		.byte	0x9f
 4987 041d 10010000 		.4byte	.LVL117
 4988 0421 64010000 		.4byte	.LFE8
 4989 0425 0400     		.2byte	0x4
 4990 0427 F3       		.byte	0xf3
 4991 0428 01       		.uleb128 0x1
 4992 0429 50       		.byte	0x50
 4993 042a 9F       		.byte	0x9f
 4994 042b 00000000 		.4byte	0
 4995 042f 00000000 		.4byte	0
 4996              	.LLST31:
 4997 0433 2A000000 		.4byte	.LVL91
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 156


 4998 0437 34000000 		.4byte	.LVL93
 4999 043b 0100     		.2byte	0x1
 5000 043d 5A       		.byte	0x5a
 5001 043e 46000000 		.4byte	.LVL94
 5002 0442 50000000 		.4byte	.LVL96
 5003 0446 0100     		.2byte	0x1
 5004 0448 5A       		.byte	0x5a
 5005 0449 62000000 		.4byte	.LVL97
 5006 044d 6C000000 		.4byte	.LVL99
 5007 0451 0100     		.2byte	0x1
 5008 0453 5A       		.byte	0x5a
 5009 0454 7E000000 		.4byte	.LVL100
 5010 0458 88000000 		.4byte	.LVL102
 5011 045c 0100     		.2byte	0x1
 5012 045e 5A       		.byte	0x5a
 5013 045f 90000000 		.4byte	.LVL103
 5014 0463 02010000 		.4byte	.LVL114
 5015 0467 0100     		.2byte	0x1
 5016 0469 5A       		.byte	0x5a
 5017 046a 00000000 		.4byte	0
 5018 046e 00000000 		.4byte	0
 5019              	.LLST32:
 5020 0472 32000000 		.4byte	.LVL92
 5021 0476 34000000 		.4byte	.LVL93
 5022 047a 0100     		.2byte	0x1
 5023 047c 59       		.byte	0x59
 5024 047d 4E000000 		.4byte	.LVL95
 5025 0481 50000000 		.4byte	.LVL96
 5026 0485 0100     		.2byte	0x1
 5027 0487 59       		.byte	0x59
 5028 0488 6A000000 		.4byte	.LVL98
 5029 048c 6C000000 		.4byte	.LVL99
 5030 0490 0100     		.2byte	0x1
 5031 0492 59       		.byte	0x59
 5032 0493 86000000 		.4byte	.LVL101
 5033 0497 88000000 		.4byte	.LVL102
 5034 049b 0100     		.2byte	0x1
 5035 049d 59       		.byte	0x59
 5036 049e 98000000 		.4byte	.LVL104
 5037 04a2 02010000 		.4byte	.LVL114
 5038 04a6 0100     		.2byte	0x1
 5039 04a8 59       		.byte	0x59
 5040 04a9 00000000 		.4byte	0
 5041 04ad 00000000 		.4byte	0
 5042              	.LLST33:
 5043 04b1 9C000000 		.4byte	.LVL105
 5044 04b5 02010000 		.4byte	.LVL114
 5045 04b9 0100     		.2byte	0x1
 5046 04bb 56       		.byte	0x56
 5047 04bc 00000000 		.4byte	0
 5048 04c0 00000000 		.4byte	0
 5049              	.LLST34:
 5050 04c4 B0000000 		.4byte	.LVL107
 5051 04c8 B4000000 		.4byte	.LVL108
 5052 04cc 0200     		.2byte	0x2
 5053 04ce 49       		.byte	0x49
 5054 04cf 9F       		.byte	0x9f
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 157


 5055 04d0 BC000000 		.4byte	.LVL109
 5056 04d4 02010000 		.4byte	.LVL114
 5057 04d8 0100     		.2byte	0x1
 5058 04da 55       		.byte	0x55
 5059 04db 00000000 		.4byte	0
 5060 04df 00000000 		.4byte	0
 5061              	.LLST35:
 5062 04e3 12000000 		.4byte	.LVL90
 5063 04e7 AA000000 		.4byte	.LVL106
 5064 04eb 0200     		.2byte	0x2
 5065 04ed 91       		.byte	0x91
 5066 04ee 5C       		.sleb128 -36
 5067 04ef B4000000 		.4byte	.LVL108
 5068 04f3 BC000000 		.4byte	.LVL109
 5069 04f7 0200     		.2byte	0x2
 5070 04f9 91       		.byte	0x91
 5071 04fa 5C       		.sleb128 -36
 5072 04fb 02010000 		.4byte	.LVL114
 5073 04ff 08010000 		.4byte	.LVL115
 5074 0503 0200     		.2byte	0x2
 5075 0505 91       		.byte	0x91
 5076 0506 5C       		.sleb128 -36
 5077 0507 00000000 		.4byte	0
 5078 050b 00000000 		.4byte	0
 5079              	.LLST36:
 5080 050f 00000000 		.4byte	.LVL118
 5081 0513 26000000 		.4byte	.LVL120
 5082 0517 0100     		.2byte	0x1
 5083 0519 50       		.byte	0x50
 5084 051a 26000000 		.4byte	.LVL120
 5085 051e 42000000 		.4byte	.LVL125
 5086 0522 0100     		.2byte	0x1
 5087 0524 54       		.byte	0x54
 5088 0525 00000000 		.4byte	0
 5089 0529 00000000 		.4byte	0
 5090              	.LLST37:
 5091 052d 04000000 		.4byte	.LVL119
 5092 0531 42000000 		.4byte	.LVL124
 5093 0535 0200     		.2byte	0x2
 5094 0537 30       		.byte	0x30
 5095 0538 9F       		.byte	0x9f
 5096 0539 42000000 		.4byte	.LVL124
 5097 053d 54000000 		.4byte	.LFE9
 5098 0541 0100     		.2byte	0x1
 5099 0543 50       		.byte	0x50
 5100 0544 00000000 		.4byte	0
 5101 0548 00000000 		.4byte	0
 5102              	.LLST38:
 5103 054c 00000000 		.4byte	.LVL126
 5104 0550 14000000 		.4byte	.LVL127
 5105 0554 0100     		.2byte	0x1
 5106 0556 50       		.byte	0x50
 5107 0557 14000000 		.4byte	.LVL127
 5108 055b 18000000 		.4byte	.LVL128
 5109 055f 0100     		.2byte	0x1
 5110 0561 53       		.byte	0x53
 5111 0562 18000000 		.4byte	.LVL128
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 158


 5112 0566 44000000 		.4byte	.LFE13
 5113 056a 0400     		.2byte	0x4
 5114 056c F3       		.byte	0xf3
 5115 056d 01       		.uleb128 0x1
 5116 056e 50       		.byte	0x50
 5117 056f 9F       		.byte	0x9f
 5118 0570 00000000 		.4byte	0
 5119 0574 00000000 		.4byte	0
 5120              	.LLST39:
 5121 0578 00000000 		.4byte	.LVL131
 5122 057c 1A000000 		.4byte	.LVL132
 5123 0580 0100     		.2byte	0x1
 5124 0582 50       		.byte	0x50
 5125 0583 1A000000 		.4byte	.LVL132
 5126 0587 4C000000 		.4byte	.LFE35
 5127 058b 0400     		.2byte	0x4
 5128 058d F3       		.byte	0xf3
 5129 058e 01       		.uleb128 0x1
 5130 058f 50       		.byte	0x50
 5131 0590 9F       		.byte	0x9f
 5132 0591 00000000 		.4byte	0
 5133 0595 00000000 		.4byte	0
 5134              	.LLST40:
 5135 0599 00000000 		.4byte	.LVL136
 5136 059d 02000000 		.4byte	.LVL137
 5137 05a1 0100     		.2byte	0x1
 5138 05a3 50       		.byte	0x50
 5139 05a4 02000000 		.4byte	.LVL137
 5140 05a8 10000000 		.4byte	.LFE42
 5141 05ac 0400     		.2byte	0x4
 5142 05ae F3       		.byte	0xf3
 5143 05af 01       		.uleb128 0x1
 5144 05b0 50       		.byte	0x50
 5145 05b1 9F       		.byte	0x9f
 5146 05b2 00000000 		.4byte	0
 5147 05b6 00000000 		.4byte	0
 5148              	.LLST41:
 5149 05ba 0C000000 		.4byte	.LVL140
 5150 05be 1C000000 		.4byte	.LVL143
 5151 05c2 0100     		.2byte	0x1
 5152 05c4 54       		.byte	0x54
 5153 05c5 1E000000 		.4byte	.LVL144
 5154 05c9 22000000 		.4byte	.LVL145
 5155 05cd 0100     		.2byte	0x1
 5156 05cf 54       		.byte	0x54
 5157 05d0 00000000 		.4byte	0
 5158 05d4 00000000 		.4byte	0
 5159              	.LLST42:
 5160 05d8 02000000 		.4byte	.LVL146
 5161 05dc 06000000 		.4byte	.LVL147
 5162 05e0 0200     		.2byte	0x2
 5163 05e2 30       		.byte	0x30
 5164 05e3 9F       		.byte	0x9f
 5165 05e4 06000000 		.4byte	.LVL147
 5166 05e8 1B000000 		.4byte	.LVL149-1
 5167 05ec 0100     		.2byte	0x1
 5168 05ee 53       		.byte	0x53
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 159


 5169 05ef 00000000 		.4byte	0
 5170 05f3 00000000 		.4byte	0
 5171              	.LLST43:
 5172 05f7 00000000 		.4byte	.LVL156
 5173 05fb 06000000 		.4byte	.LVL157
 5174 05ff 0100     		.2byte	0x1
 5175 0601 50       		.byte	0x50
 5176 0602 06000000 		.4byte	.LVL157
 5177 0606 10000000 		.4byte	.LFE49
 5178 060a 0400     		.2byte	0x4
 5179 060c F3       		.byte	0xf3
 5180 060d 01       		.uleb128 0x1
 5181 060e 50       		.byte	0x50
 5182 060f 9F       		.byte	0x9f
 5183 0610 00000000 		.4byte	0
 5184 0614 00000000 		.4byte	0
 5185              	.LLST44:
 5186 0618 00000000 		.4byte	.LVL158
 5187 061c 02000000 		.4byte	.LVL159
 5188 0620 0100     		.2byte	0x1
 5189 0622 50       		.byte	0x50
 5190 0623 02000000 		.4byte	.LVL159
 5191 0627 0C000000 		.4byte	.LFE50
 5192 062b 0400     		.2byte	0x4
 5193 062d F3       		.byte	0xf3
 5194 062e 01       		.uleb128 0x1
 5195 062f 50       		.byte	0x50
 5196 0630 9F       		.byte	0x9f
 5197 0631 00000000 		.4byte	0
 5198 0635 00000000 		.4byte	0
 5199              	.LLST45:
 5200 0639 00000000 		.4byte	.LVL161
 5201 063d 0A000000 		.4byte	.LVL163
 5202 0641 0100     		.2byte	0x1
 5203 0643 50       		.byte	0x50
 5204 0644 0A000000 		.4byte	.LVL163
 5205 0648 20000000 		.4byte	.LFE53
 5206 064c 0400     		.2byte	0x4
 5207 064e F3       		.byte	0xf3
 5208 064f 01       		.uleb128 0x1
 5209 0650 50       		.byte	0x50
 5210 0651 9F       		.byte	0x9f
 5211 0652 00000000 		.4byte	0
 5212 0656 00000000 		.4byte	0
 5213              	.LLST46:
 5214 065a 08000000 		.4byte	.LVL162
 5215 065e 12000000 		.4byte	.LVL164
 5216 0662 0100     		.2byte	0x1
 5217 0664 52       		.byte	0x52
 5218 0665 12000000 		.4byte	.LVL164
 5219 0669 20000000 		.4byte	.LFE53
 5220 066d 0100     		.2byte	0x1
 5221 066f 50       		.byte	0x50
 5222 0670 00000000 		.4byte	0
 5223 0674 00000000 		.4byte	0
 5224              	.LLST47:
 5225 0678 00000000 		.4byte	.LVL165
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 160


 5226 067c 0A000000 		.4byte	.LVL167
 5227 0680 0100     		.2byte	0x1
 5228 0682 50       		.byte	0x50
 5229 0683 0A000000 		.4byte	.LVL167
 5230 0687 20000000 		.4byte	.LFE54
 5231 068b 0400     		.2byte	0x4
 5232 068d F3       		.byte	0xf3
 5233 068e 01       		.uleb128 0x1
 5234 068f 50       		.byte	0x50
 5235 0690 9F       		.byte	0x9f
 5236 0691 00000000 		.4byte	0
 5237 0695 00000000 		.4byte	0
 5238              	.LLST48:
 5239 0699 08000000 		.4byte	.LVL166
 5240 069d 12000000 		.4byte	.LVL168
 5241 06a1 0100     		.2byte	0x1
 5242 06a3 52       		.byte	0x52
 5243 06a4 12000000 		.4byte	.LVL168
 5244 06a8 20000000 		.4byte	.LFE54
 5245 06ac 0100     		.2byte	0x1
 5246 06ae 50       		.byte	0x50
 5247 06af 00000000 		.4byte	0
 5248 06b3 00000000 		.4byte	0
 5249              	.LLST49:
 5250 06b7 00000000 		.4byte	.LVL169
 5251 06bb 0A000000 		.4byte	.LVL171
 5252 06bf 0100     		.2byte	0x1
 5253 06c1 50       		.byte	0x50
 5254 06c2 0A000000 		.4byte	.LVL171
 5255 06c6 20000000 		.4byte	.LFE55
 5256 06ca 0400     		.2byte	0x4
 5257 06cc F3       		.byte	0xf3
 5258 06cd 01       		.uleb128 0x1
 5259 06ce 50       		.byte	0x50
 5260 06cf 9F       		.byte	0x9f
 5261 06d0 00000000 		.4byte	0
 5262 06d4 00000000 		.4byte	0
 5263              	.LLST50:
 5264 06d8 08000000 		.4byte	.LVL170
 5265 06dc 12000000 		.4byte	.LVL172
 5266 06e0 0100     		.2byte	0x1
 5267 06e2 52       		.byte	0x52
 5268 06e3 12000000 		.4byte	.LVL172
 5269 06e7 20000000 		.4byte	.LFE55
 5270 06eb 0100     		.2byte	0x1
 5271 06ed 50       		.byte	0x50
 5272 06ee 00000000 		.4byte	0
 5273 06f2 00000000 		.4byte	0
 5274              	.LLST51:
 5275 06f6 00000000 		.4byte	.LVL173
 5276 06fa 08000000 		.4byte	.LVL174
 5277 06fe 0100     		.2byte	0x1
 5278 0700 50       		.byte	0x50
 5279 0701 08000000 		.4byte	.LVL174
 5280 0705 1C000000 		.4byte	.LVL178
 5281 0709 0400     		.2byte	0x4
 5282 070b F3       		.byte	0xf3
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 161


 5283 070c 01       		.uleb128 0x1
 5284 070d 50       		.byte	0x50
 5285 070e 9F       		.byte	0x9f
 5286 070f 1C000000 		.4byte	.LVL178
 5287 0713 22000000 		.4byte	.LVL179
 5288 0717 0100     		.2byte	0x1
 5289 0719 50       		.byte	0x50
 5290 071a 22000000 		.4byte	.LVL179
 5291 071e 36000000 		.4byte	.LVL183
 5292 0722 0400     		.2byte	0x4
 5293 0724 F3       		.byte	0xf3
 5294 0725 01       		.uleb128 0x1
 5295 0726 50       		.byte	0x50
 5296 0727 9F       		.byte	0x9f
 5297 0728 36000000 		.4byte	.LVL183
 5298 072c 3C000000 		.4byte	.LVL184
 5299 0730 0100     		.2byte	0x1
 5300 0732 50       		.byte	0x50
 5301 0733 3C000000 		.4byte	.LVL184
 5302 0737 50000000 		.4byte	.LVL188
 5303 073b 0400     		.2byte	0x4
 5304 073d F3       		.byte	0xf3
 5305 073e 01       		.uleb128 0x1
 5306 073f 50       		.byte	0x50
 5307 0740 9F       		.byte	0x9f
 5308 0741 50000000 		.4byte	.LVL188
 5309 0745 52000000 		.4byte	.LVL189
 5310 0749 0100     		.2byte	0x1
 5311 074b 50       		.byte	0x50
 5312 074c 52000000 		.4byte	.LVL189
 5313 0750 68000000 		.4byte	.LFE56
 5314 0754 0400     		.2byte	0x4
 5315 0756 F3       		.byte	0xf3
 5316 0757 01       		.uleb128 0x1
 5317 0758 50       		.byte	0x50
 5318 0759 9F       		.byte	0x9f
 5319 075a 00000000 		.4byte	0
 5320 075e 00000000 		.4byte	0
 5321              	.LLST52:
 5322 0762 00000000 		.4byte	.LVL173
 5323 0766 10000000 		.4byte	.LVL176
 5324 076a 0100     		.2byte	0x1
 5325 076c 51       		.byte	0x51
 5326 076d 10000000 		.4byte	.LVL176
 5327 0771 1C000000 		.4byte	.LVL178
 5328 0775 0400     		.2byte	0x4
 5329 0777 F3       		.byte	0xf3
 5330 0778 01       		.uleb128 0x1
 5331 0779 51       		.byte	0x51
 5332 077a 9F       		.byte	0x9f
 5333 077b 1C000000 		.4byte	.LVL178
 5334 077f 2A000000 		.4byte	.LVL181
 5335 0783 0100     		.2byte	0x1
 5336 0785 51       		.byte	0x51
 5337 0786 2A000000 		.4byte	.LVL181
 5338 078a 36000000 		.4byte	.LVL183
 5339 078e 0400     		.2byte	0x4
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 162


 5340 0790 F3       		.byte	0xf3
 5341 0791 01       		.uleb128 0x1
 5342 0792 51       		.byte	0x51
 5343 0793 9F       		.byte	0x9f
 5344 0794 36000000 		.4byte	.LVL183
 5345 0798 44000000 		.4byte	.LVL186
 5346 079c 0100     		.2byte	0x1
 5347 079e 51       		.byte	0x51
 5348 079f 44000000 		.4byte	.LVL186
 5349 07a3 50000000 		.4byte	.LVL188
 5350 07a7 0400     		.2byte	0x4
 5351 07a9 F3       		.byte	0xf3
 5352 07aa 01       		.uleb128 0x1
 5353 07ab 51       		.byte	0x51
 5354 07ac 9F       		.byte	0x9f
 5355 07ad 50000000 		.4byte	.LVL188
 5356 07b1 55000000 		.4byte	.LVL190-1
 5357 07b5 0100     		.2byte	0x1
 5358 07b7 51       		.byte	0x51
 5359 07b8 55000000 		.4byte	.LVL190-1
 5360 07bc 68000000 		.4byte	.LFE56
 5361 07c0 0400     		.2byte	0x4
 5362 07c2 F3       		.byte	0xf3
 5363 07c3 01       		.uleb128 0x1
 5364 07c4 51       		.byte	0x51
 5365 07c5 9F       		.byte	0x9f
 5366 07c6 00000000 		.4byte	0
 5367 07ca 00000000 		.4byte	0
 5368              	.LLST53:
 5369 07ce 0E000000 		.4byte	.LVL175
 5370 07d2 18000000 		.4byte	.LVL177
 5371 07d6 0100     		.2byte	0x1
 5372 07d8 52       		.byte	0x52
 5373 07d9 18000000 		.4byte	.LVL177
 5374 07dd 1C000000 		.4byte	.LVL178
 5375 07e1 0100     		.2byte	0x1
 5376 07e3 51       		.byte	0x51
 5377 07e4 28000000 		.4byte	.LVL180
 5378 07e8 32000000 		.4byte	.LVL182
 5379 07ec 0100     		.2byte	0x1
 5380 07ee 52       		.byte	0x52
 5381 07ef 32000000 		.4byte	.LVL182
 5382 07f3 36000000 		.4byte	.LVL183
 5383 07f7 0100     		.2byte	0x1
 5384 07f9 51       		.byte	0x51
 5385 07fa 42000000 		.4byte	.LVL185
 5386 07fe 4C000000 		.4byte	.LVL187
 5387 0802 0100     		.2byte	0x1
 5388 0804 52       		.byte	0x52
 5389 0805 4C000000 		.4byte	.LVL187
 5390 0809 50000000 		.4byte	.LVL188
 5391 080d 0100     		.2byte	0x1
 5392 080f 51       		.byte	0x51
 5393 0810 00000000 		.4byte	0
 5394 0814 00000000 		.4byte	0
 5395              		.section	.debug_aranges,"",%progbits
 5396 0000 CC010000 		.4byte	0x1cc
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 163


 5397 0004 0200     		.2byte	0x2
 5398 0006 00000000 		.4byte	.Ldebug_info0
 5399 000a 04       		.byte	0x4
 5400 000b 00       		.byte	0
 5401 000c 0000     		.2byte	0
 5402 000e 0000     		.2byte	0
 5403 0010 00000000 		.4byte	.LFB2
 5404 0014 14000000 		.4byte	.LFE2-.LFB2
 5405 0018 00000000 		.4byte	.LFB3
 5406 001c 10000000 		.4byte	.LFE3-.LFB3
 5407 0020 00000000 		.4byte	.LFB4
 5408 0024 20000000 		.4byte	.LFE4-.LFB4
 5409 0028 00000000 		.4byte	.LFB5
 5410 002c 38000000 		.4byte	.LFE5-.LFB5
 5411 0030 00000000 		.4byte	.LFB6
 5412 0034 1C000000 		.4byte	.LFE6-.LFB6
 5413 0038 00000000 		.4byte	.LFB7
 5414 003c 30000000 		.4byte	.LFE7-.LFB7
 5415 0040 00000000 		.4byte	.LFB10
 5416 0044 24000000 		.4byte	.LFE10-.LFB10
 5417 0048 00000000 		.4byte	.LFB11
 5418 004c 10000000 		.4byte	.LFE11-.LFB11
 5419 0050 00000000 		.4byte	.LFB14
 5420 0054 20000000 		.4byte	.LFE14-.LFB14
 5421 0058 00000000 		.4byte	.LFB15
 5422 005c 10000000 		.4byte	.LFE15-.LFB15
 5423 0060 00000000 		.4byte	.LFB16
 5424 0064 0C000000 		.4byte	.LFE16-.LFB16
 5425 0068 00000000 		.4byte	.LFB17
 5426 006c 14000000 		.4byte	.LFE17-.LFB17
 5427 0070 00000000 		.4byte	.LFB18
 5428 0074 10000000 		.4byte	.LFE18-.LFB18
 5429 0078 00000000 		.4byte	.LFB19
 5430 007c 0C000000 		.4byte	.LFE19-.LFB19
 5431 0080 00000000 		.4byte	.LFB26
 5432 0084 14000000 		.4byte	.LFE26-.LFB26
 5433 0088 00000000 		.4byte	.LFB27
 5434 008c 18000000 		.4byte	.LFE27-.LFB27
 5435 0090 00000000 		.4byte	.LFB28
 5436 0094 14000000 		.4byte	.LFE28-.LFB28
 5437 0098 00000000 		.4byte	.LFB29
 5438 009c 14000000 		.4byte	.LFE29-.LFB29
 5439 00a0 00000000 		.4byte	.LFB30
 5440 00a4 14000000 		.4byte	.LFE30-.LFB30
 5441 00a8 00000000 		.4byte	.LFB31
 5442 00ac 04000000 		.4byte	.LFE31-.LFB31
 5443 00b0 00000000 		.4byte	.LFB12
 5444 00b4 38000000 		.4byte	.LFE12-.LFB12
 5445 00b8 00000000 		.4byte	.LFB20
 5446 00bc 20000000 		.4byte	.LFE20-.LFB20
 5447 00c0 00000000 		.4byte	.LFB21
 5448 00c4 1C000000 		.4byte	.LFE21-.LFB21
 5449 00c8 00000000 		.4byte	.LFB22
 5450 00cc 22000000 		.4byte	.LFE22-.LFB22
 5451 00d0 00000000 		.4byte	.LFB23
 5452 00d4 1E000000 		.4byte	.LFE23-.LFB23
 5453 00d8 00000000 		.4byte	.LFB24
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 164


 5454 00dc 4C000000 		.4byte	.LFE24-.LFB24
 5455 00e0 00000000 		.4byte	.LFB25
 5456 00e4 2C000000 		.4byte	.LFE25-.LFB25
 5457 00e8 00000000 		.4byte	.LFB32
 5458 00ec 18000000 		.4byte	.LFE32-.LFB32
 5459 00f0 00000000 		.4byte	.LFB33
 5460 00f4 30000000 		.4byte	.LFE33-.LFB33
 5461 00f8 00000000 		.4byte	.LFB34
 5462 00fc 14000000 		.4byte	.LFE34-.LFB34
 5463 0100 00000000 		.4byte	.LFB8
 5464 0104 64010000 		.4byte	.LFE8-.LFB8
 5465 0108 00000000 		.4byte	.LFB9
 5466 010c 54000000 		.4byte	.LFE9-.LFB9
 5467 0110 00000000 		.4byte	.LFB13
 5468 0114 44000000 		.4byte	.LFE13-.LFB13
 5469 0118 00000000 		.4byte	.LFB35
 5470 011c 4C000000 		.4byte	.LFE35-.LFB35
 5471 0120 00000000 		.4byte	.LFB39
 5472 0124 10000000 		.4byte	.LFE39-.LFB39
 5473 0128 00000000 		.4byte	.LFB40
 5474 012c 10000000 		.4byte	.LFE40-.LFB40
 5475 0130 00000000 		.4byte	.LFB38
 5476 0134 18000000 		.4byte	.LFE38-.LFB38
 5477 0138 00000000 		.4byte	.LFB41
 5478 013c 10000000 		.4byte	.LFE41-.LFB41
 5479 0140 00000000 		.4byte	.LFB42
 5480 0144 10000000 		.4byte	.LFE42-.LFB42
 5481 0148 00000000 		.4byte	.LFB43
 5482 014c 10000000 		.4byte	.LFE43-.LFB43
 5483 0150 00000000 		.4byte	.LFB44
 5484 0154 10000000 		.4byte	.LFE44-.LFB44
 5485 0158 00000000 		.4byte	.LFB45
 5486 015c 20000000 		.4byte	.LFE45-.LFB45
 5487 0160 00000000 		.4byte	.LFB46
 5488 0164 10000000 		.4byte	.LFE46-.LFB46
 5489 0168 00000000 		.4byte	.LFB47
 5490 016c 10000000 		.4byte	.LFE47-.LFB47
 5491 0170 00000000 		.4byte	.LFB51
 5492 0174 28000000 		.4byte	.LFE51-.LFB51
 5493 0178 00000000 		.4byte	.LFB48
 5494 017c 0C000000 		.4byte	.LFE48-.LFB48
 5495 0180 00000000 		.4byte	.LFB37
 5496 0184 44000000 		.4byte	.LFE37-.LFB37
 5497 0188 00000000 		.4byte	.LFB36
 5498 018c 20000000 		.4byte	.LFE36-.LFB36
 5499 0190 00000000 		.4byte	.LFB49
 5500 0194 10000000 		.4byte	.LFE49-.LFB49
 5501 0198 00000000 		.4byte	.LFB50
 5502 019c 0C000000 		.4byte	.LFE50-.LFB50
 5503 01a0 00000000 		.4byte	.LFB52
 5504 01a4 70000000 		.4byte	.LFE52-.LFB52
 5505 01a8 00000000 		.4byte	.LFB53
 5506 01ac 20000000 		.4byte	.LFE53-.LFB53
 5507 01b0 00000000 		.4byte	.LFB54
 5508 01b4 20000000 		.4byte	.LFE54-.LFB54
 5509 01b8 00000000 		.4byte	.LFB55
 5510 01bc 20000000 		.4byte	.LFE55-.LFB55
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 165


 5511 01c0 00000000 		.4byte	.LFB56
 5512 01c4 68000000 		.4byte	.LFE56-.LFB56
 5513 01c8 00000000 		.4byte	0
 5514 01cc 00000000 		.4byte	0
 5515              		.section	.debug_ranges,"",%progbits
 5516              	.Ldebug_ranges0:
 5517 0000 00000000 		.4byte	.LFB2
 5518 0004 14000000 		.4byte	.LFE2
 5519 0008 00000000 		.4byte	.LFB3
 5520 000c 10000000 		.4byte	.LFE3
 5521 0010 00000000 		.4byte	.LFB4
 5522 0014 20000000 		.4byte	.LFE4
 5523 0018 00000000 		.4byte	.LFB5
 5524 001c 38000000 		.4byte	.LFE5
 5525 0020 00000000 		.4byte	.LFB6
 5526 0024 1C000000 		.4byte	.LFE6
 5527 0028 00000000 		.4byte	.LFB7
 5528 002c 30000000 		.4byte	.LFE7
 5529 0030 00000000 		.4byte	.LFB10
 5530 0034 24000000 		.4byte	.LFE10
 5531 0038 00000000 		.4byte	.LFB11
 5532 003c 10000000 		.4byte	.LFE11
 5533 0040 00000000 		.4byte	.LFB14
 5534 0044 20000000 		.4byte	.LFE14
 5535 0048 00000000 		.4byte	.LFB15
 5536 004c 10000000 		.4byte	.LFE15
 5537 0050 00000000 		.4byte	.LFB16
 5538 0054 0C000000 		.4byte	.LFE16
 5539 0058 00000000 		.4byte	.LFB17
 5540 005c 14000000 		.4byte	.LFE17
 5541 0060 00000000 		.4byte	.LFB18
 5542 0064 10000000 		.4byte	.LFE18
 5543 0068 00000000 		.4byte	.LFB19
 5544 006c 0C000000 		.4byte	.LFE19
 5545 0070 00000000 		.4byte	.LFB26
 5546 0074 14000000 		.4byte	.LFE26
 5547 0078 00000000 		.4byte	.LFB27
 5548 007c 18000000 		.4byte	.LFE27
 5549 0080 00000000 		.4byte	.LFB28
 5550 0084 14000000 		.4byte	.LFE28
 5551 0088 00000000 		.4byte	.LFB29
 5552 008c 14000000 		.4byte	.LFE29
 5553 0090 00000000 		.4byte	.LFB30
 5554 0094 14000000 		.4byte	.LFE30
 5555 0098 00000000 		.4byte	.LFB31
 5556 009c 04000000 		.4byte	.LFE31
 5557 00a0 00000000 		.4byte	.LFB12
 5558 00a4 38000000 		.4byte	.LFE12
 5559 00a8 00000000 		.4byte	.LFB20
 5560 00ac 20000000 		.4byte	.LFE20
 5561 00b0 00000000 		.4byte	.LFB21
 5562 00b4 1C000000 		.4byte	.LFE21
 5563 00b8 00000000 		.4byte	.LFB22
 5564 00bc 22000000 		.4byte	.LFE22
 5565 00c0 00000000 		.4byte	.LFB23
 5566 00c4 1E000000 		.4byte	.LFE23
 5567 00c8 00000000 		.4byte	.LFB24
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 166


 5568 00cc 4C000000 		.4byte	.LFE24
 5569 00d0 00000000 		.4byte	.LFB25
 5570 00d4 2C000000 		.4byte	.LFE25
 5571 00d8 00000000 		.4byte	.LFB32
 5572 00dc 18000000 		.4byte	.LFE32
 5573 00e0 00000000 		.4byte	.LFB33
 5574 00e4 30000000 		.4byte	.LFE33
 5575 00e8 00000000 		.4byte	.LFB34
 5576 00ec 14000000 		.4byte	.LFE34
 5577 00f0 00000000 		.4byte	.LFB8
 5578 00f4 64010000 		.4byte	.LFE8
 5579 00f8 00000000 		.4byte	.LFB9
 5580 00fc 54000000 		.4byte	.LFE9
 5581 0100 00000000 		.4byte	.LFB13
 5582 0104 44000000 		.4byte	.LFE13
 5583 0108 00000000 		.4byte	.LFB35
 5584 010c 4C000000 		.4byte	.LFE35
 5585 0110 00000000 		.4byte	.LFB39
 5586 0114 10000000 		.4byte	.LFE39
 5587 0118 00000000 		.4byte	.LFB40
 5588 011c 10000000 		.4byte	.LFE40
 5589 0120 00000000 		.4byte	.LFB38
 5590 0124 18000000 		.4byte	.LFE38
 5591 0128 00000000 		.4byte	.LFB41
 5592 012c 10000000 		.4byte	.LFE41
 5593 0130 00000000 		.4byte	.LFB42
 5594 0134 10000000 		.4byte	.LFE42
 5595 0138 00000000 		.4byte	.LFB43
 5596 013c 10000000 		.4byte	.LFE43
 5597 0140 00000000 		.4byte	.LFB44
 5598 0144 10000000 		.4byte	.LFE44
 5599 0148 00000000 		.4byte	.LFB45
 5600 014c 20000000 		.4byte	.LFE45
 5601 0150 00000000 		.4byte	.LFB46
 5602 0154 10000000 		.4byte	.LFE46
 5603 0158 00000000 		.4byte	.LFB47
 5604 015c 10000000 		.4byte	.LFE47
 5605 0160 00000000 		.4byte	.LFB51
 5606 0164 28000000 		.4byte	.LFE51
 5607 0168 00000000 		.4byte	.LFB48
 5608 016c 0C000000 		.4byte	.LFE48
 5609 0170 00000000 		.4byte	.LFB37
 5610 0174 44000000 		.4byte	.LFE37
 5611 0178 00000000 		.4byte	.LFB36
 5612 017c 20000000 		.4byte	.LFE36
 5613 0180 00000000 		.4byte	.LFB49
 5614 0184 10000000 		.4byte	.LFE49
 5615 0188 00000000 		.4byte	.LFB50
 5616 018c 0C000000 		.4byte	.LFE50
 5617 0190 00000000 		.4byte	.LFB52
 5618 0194 70000000 		.4byte	.LFE52
 5619 0198 00000000 		.4byte	.LFB53
 5620 019c 20000000 		.4byte	.LFE53
 5621 01a0 00000000 		.4byte	.LFB54
 5622 01a4 20000000 		.4byte	.LFE54
 5623 01a8 00000000 		.4byte	.LFB55
 5624 01ac 20000000 		.4byte	.LFE55
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 167


 5625 01b0 00000000 		.4byte	.LFB56
 5626 01b4 68000000 		.4byte	.LFE56
 5627 01b8 00000000 		.4byte	0
 5628 01bc 00000000 		.4byte	0
 5629              		.section	.debug_line,"",%progbits
 5630              	.Ldebug_line0:
 5631 0000 4F050000 		.section	.debug_str,"MS",%progbits,1
 5631      02004D00 
 5631      00000201 
 5631      FB0E0D00 
 5631      01010101 
 5632              	.LASF57:
 5633 0000 72616D56 		.ascii	"ramVectorTable\000"
 5633      6563746F 
 5633      72546162 
 5633      6C6500
 5634              	.LASF73:
 5635 000f 62675472 		.ascii	"bgTrim4\000"
 5635      696D3400 
 5636              	.LASF10:
 5637 0017 75696E74 		.ascii	"uint16\000"
 5637      313600
 5638              	.LASF43:
 5639 001e 696E7453 		.ascii	"intState\000"
 5639      74617465 
 5639      00
 5640              	.LASF26:
 5641 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5641      73436C6B 
 5641      57726974 
 5641      65486663 
 5641      6C6B4469 
 5642              	.LASF117:
 5643 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 5643      73436C6B 
 5643      50756D70 
 5643      436F6E66 
 5643      696700
 5644              	.LASF56:
 5645 0053 6F6C6449 		.ascii	"oldIsr\000"
 5645      737200
 5646              	.LASF99:
 5647 005a 72657456 		.ascii	"retVal\000"
 5647      616C00
 5648              	.LASF42:
 5649 0061 43794469 		.ascii	"CyDisableInts\000"
 5649      7361626C 
 5649      65496E74 
 5649      7300
 5650              	.LASF76:
 5651 006f 63757272 		.ascii	"currentImoTrim2Value\000"
 5651      656E7449 
 5651      6D6F5472 
 5651      696D3256 
 5651      616C7565 
 5652              	.LASF121:
 5653 0084 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 168


 5653      43313120 
 5653      352E342E 
 5653      31203230 
 5653      31363036 
 5654 00b7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 5654      20726576 
 5654      6973696F 
 5654      6E203233 
 5654      37373135 
 5655 00ea 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 5655      66756E63 
 5655      74696F6E 
 5655      2D736563 
 5655      74696F6E 
 5656              	.LASF7:
 5657 0112 6C6F6E67 		.ascii	"long long unsigned int\000"
 5657      206C6F6E 
 5657      6720756E 
 5657      7369676E 
 5657      65642069 
 5658              	.LASF115:
 5659 0129 43795379 		.ascii	"CySysTickInitVar\000"
 5659      73546963 
 5659      6B496E69 
 5659      74566172 
 5659      00
 5660              	.LASF44:
 5661 013a 4379456E 		.ascii	"CyEnableInts\000"
 5661      61626C65 
 5661      496E7473 
 5661      00
 5662              	.LASF109:
 5663 0147 696E7465 		.ascii	"interfaceNumber\000"
 5663      72666163 
 5663      654E756D 
 5663      62657200 
 5664              	.LASF66:
 5665 0157 4379536F 		.ascii	"CySoftwareReset\000"
 5665      66747761 
 5665      72655265 
 5665      73657400 
 5666              	.LASF83:
 5667 0167 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5667      73546963 
 5667      6B456E61 
 5667      626C6549 
 5667      6E746572 
 5668              	.LASF48:
 5669 0180 4379496E 		.ascii	"CyIntGetState\000"
 5669      74476574 
 5669      53746174 
 5669      6500
 5670              	.LASF6:
 5671 018e 6C6F6E67 		.ascii	"long long int\000"
 5671      206C6F6E 
 5671      6720696E 
 5671      7400
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 169


 5672              	.LASF0:
 5673 019c 7369676E 		.ascii	"signed char\000"
 5673      65642063 
 5673      68617200 
 5674              	.LASF72:
 5675 01a8 66726571 		.ascii	"freq\000"
 5675      00
 5676              	.LASF81:
 5677 01ad 43794465 		.ascii	"CyDelayFreq\000"
 5677      6C617946 
 5677      72657100 
 5678              	.LASF24:
 5679 01b9 696E7465 		.ascii	"interruptState\000"
 5679      72727570 
 5679      74537461 
 5679      746500
 5680              	.LASF88:
 5681 01c8 43795379 		.ascii	"CySysTickGetReload\000"
 5681      73546963 
 5681      6B476574 
 5681      52656C6F 
 5681      616400
 5682              	.LASF4:
 5683 01db 6C6F6E67 		.ascii	"long int\000"
 5683      20696E74 
 5683      00
 5684              	.LASF49:
 5685 01e4 4379496E 		.ascii	"CyIntDisable\000"
 5685      74446973 
 5685      61626C65 
 5685      00
 5686              	.LASF100:
 5687 01f1 43795379 		.ascii	"CySysTickGetCallback\000"
 5687      73546963 
 5687      6B476574 
 5687      43616C6C 
 5687      6261636B 
 5688              	.LASF9:
 5689 0206 75696E74 		.ascii	"uint8\000"
 5689      3800
 5690              	.LASF112:
 5691 020c 63796465 		.ascii	"cydelayFreqKhz\000"
 5691      6C617946 
 5691      7265714B 
 5691      687A00
 5692              	.LASF29:
 5693 021b 656E6162 		.ascii	"enable\000"
 5693      6C6500
 5694              	.LASF123:
 5695 0222 433A5C55 		.ascii	"C:\\Users\\Ade0n\\Desktop\\PR\\CyberPong\\CyberPong"
 5695      73657273 
 5695      5C416465 
 5695      306E5C44 
 5695      65736B74 
 5696 024f 2E637964 		.ascii	".cydsn\000"
 5696      736E00
 5697              	.LASF63:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 170


 5698 0256 73686966 		.ascii	"shift\000"
 5698      7400
 5699              	.LASF38:
 5700 025c 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5700      734C7664 
 5700      436C6561 
 5700      72496E74 
 5700      65727275 
 5701              	.LASF11:
 5702 0273 75696E74 		.ascii	"uint32\000"
 5702      333200
 5703              	.LASF35:
 5704 027a 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 5704      73436C6B 
 5704      45636F52 
 5704      65616453 
 5704      74617475 
 5705              	.LASF45:
 5706 0290 6D61736B 		.ascii	"mask\000"
 5706      00
 5707              	.LASF34:
 5708 0295 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5708      73436C6B 
 5708      47657453 
 5708      7973636C 
 5708      6B536F75 
 5709              	.LASF65:
 5710 02ad 4379496E 		.ascii	"CyIntGetPriority\000"
 5710      74476574 
 5710      5072696F 
 5710      72697479 
 5710      00
 5711              	.LASF114:
 5712 02be 63796465 		.ascii	"cydelay32kMs\000"
 5712      6C617933 
 5712      326B4D73 
 5712      00
 5713              	.LASF95:
 5714 02cb 43795379 		.ascii	"CySysTickInit\000"
 5714      73546963 
 5714      6B496E69 
 5714      7400
 5715              	.LASF64:
 5716 02d9 76616C75 		.ascii	"value\000"
 5716      6500
 5717              	.LASF91:
 5718 02df 636C6F63 		.ascii	"clockSource\000"
 5718      6B536F75 
 5718      72636500 
 5719              	.LASF101:
 5720 02eb 43794765 		.ascii	"CyGetUniqueId\000"
 5720      74556E69 
 5720      71756549 
 5720      6400
 5721              	.LASF93:
 5722 02f9 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5722      73546963 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 171


 5722      6B476574 
 5722      436F756E 
 5722      74466C61 
 5723              	.LASF8:
 5724 030f 756E7369 		.ascii	"unsigned int\000"
 5724      676E6564 
 5724      20696E74 
 5724      00
 5725              	.LASF94:
 5726 031c 43795379 		.ascii	"CySysTickClear\000"
 5726      73546963 
 5726      6B436C65 
 5726      617200
 5727              	.LASF5:
 5728 032b 6C6F6E67 		.ascii	"long unsigned int\000"
 5728      20756E73 
 5728      69676E65 
 5728      6420696E 
 5728      7400
 5729              	.LASF87:
 5730 033d 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5730      734C7664 
 5730      47657449 
 5730      6E746572 
 5730      72757074 
 5731              	.LASF23:
 5732 0358 43795379 		.ascii	"CySysClkImoStop\000"
 5732      73436C6B 
 5732      496D6F53 
 5732      746F7000 
 5733              	.LASF118:
 5734 0368 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5734      74657243 
 5734      72697469 
 5734      63616C53 
 5734      65637469 
 5735              	.LASF50:
 5736 037f 4379496E 		.ascii	"CyIntSetPending\000"
 5736      74536574 
 5736      50656E64 
 5736      696E6700 
 5737              	.LASF39:
 5738 038f 43795379 		.ascii	"CySysGetResetReason\000"
 5738      73476574 
 5738      52657365 
 5738      74526561 
 5738      736F6E00 
 5739              	.LASF3:
 5740 03a3 73686F72 		.ascii	"short unsigned int\000"
 5740      7420756E 
 5740      7369676E 
 5740      65642069 
 5740      6E7400
 5741              	.LASF105:
 5742 03b6 72656754 		.ascii	"regTmp\000"
 5742      6D7000
 5743              	.LASF90:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 172


 5744 03bd 43795379 		.ascii	"CySysTickSetClockSource\000"
 5744      73546963 
 5744      6B536574 
 5744      436C6F63 
 5744      6B536F75 
 5745              	.LASF59:
 5746 03d5 4379496E 		.ascii	"CyIntSetVector\000"
 5746      74536574 
 5746      56656374 
 5746      6F7200
 5747              	.LASF47:
 5748 03e4 6E756D62 		.ascii	"number\000"
 5748      657200
 5749              	.LASF62:
 5750 03eb 7072696F 		.ascii	"priority\000"
 5750      72697479 
 5750      00
 5751              	.LASF71:
 5752 03f4 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5752      73436C6B 
 5752      57726974 
 5752      65496D6F 
 5752      46726571 
 5753              	.LASF106:
 5754 0409 43795379 		.ascii	"CySysSetFlashAccessArbPriority\000"
 5754      73536574 
 5754      466C6173 
 5754      68416363 
 5754      65737341 
 5755              	.LASF54:
 5756 0428 4379496E 		.ascii	"CyIntSetSysVector\000"
 5756      74536574 
 5756      53797356 
 5756      6563746F 
 5756      7200
 5757              	.LASF27:
 5758 043a 43795379 		.ascii	"CySysEnablePumpClock\000"
 5758      73456E61 
 5758      626C6550 
 5758      756D7043 
 5758      6C6F636B 
 5759              	.LASF17:
 5760 044f 72656733 		.ascii	"reg32\000"
 5760      3200
 5761              	.LASF96:
 5762 0455 43795379 		.ascii	"CySysTickStart\000"
 5762      73546963 
 5762      6B537461 
 5762      727400
 5763              	.LASF41:
 5764 0464 72657475 		.ascii	"returnStatus\000"
 5764      726E5374 
 5764      61747573 
 5764      00
 5765              	.LASF104:
 5766 0471 736F7572 		.ascii	"source\000"
 5766      636500
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 173


 5767              	.LASF20:
 5768 0478 73697A65 		.ascii	"sizetype\000"
 5768      74797065 
 5768      00
 5769              	.LASF108:
 5770 0481 43795379 		.ascii	"CySysSetPeripheralAccessArbPriority\000"
 5770      73536574 
 5770      50657269 
 5770      70686572 
 5770      616C4163 
 5771              	.LASF51:
 5772 04a5 4379496E 		.ascii	"CyIntClearPending\000"
 5772      74436C65 
 5772      61725065 
 5772      6E64696E 
 5772      6700
 5773              	.LASF19:
 5774 04b7 6C6F6E67 		.ascii	"long double\000"
 5774      20646F75 
 5774      626C6500 
 5775              	.LASF55:
 5776 04c3 61646472 		.ascii	"address\000"
 5776      65737300 
 5777              	.LASF74:
 5778 04cb 62675472 		.ascii	"bgTrim5\000"
 5778      696D3500 
 5779              	.LASF30:
 5780 04d3 73797363 		.ascii	"sysclkSource\000"
 5780      6C6B536F 
 5780      75726365 
 5780      00
 5781              	.LASF98:
 5782 04e0 66756E63 		.ascii	"function\000"
 5782      74696F6E 
 5782      00
 5783              	.LASF116:
 5784 04e9 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5784      6F467265 
 5784      714D687A 
 5784      32526567 
 5784      00
 5785              	.LASF89:
 5786 04fa 43795379 		.ascii	"CySysTickGetValue\000"
 5786      73546963 
 5786      6B476574 
 5786      56616C75 
 5786      6500
 5787              	.LASF111:
 5788 050c 63796465 		.ascii	"cydelayFreqHz\000"
 5788      6C617946 
 5788      72657148 
 5788      7A00
 5789              	.LASF61:
 5790 051a 4379496E 		.ascii	"CyIntSetPriority\000"
 5790      74536574 
 5790      5072696F 
 5790      72697479 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 174


 5790      00
 5791              	.LASF12:
 5792 052b 666C6F61 		.ascii	"float\000"
 5792      7400
 5793              	.LASF119:
 5794 0531 43794578 		.ascii	"CyExitCriticalSection\000"
 5794      69744372 
 5794      69746963 
 5794      616C5365 
 5794      6374696F 
 5795              	.LASF79:
 5796 0547 43795379 		.ascii	"CySysLvdEnable\000"
 5796      734C7664 
 5796      456E6162 
 5796      6C6500
 5797              	.LASF21:
 5798 0556 63795379 		.ascii	"cySysTickCallback\000"
 5798      73546963 
 5798      6B43616C 
 5798      6C626163 
 5798      6B00
 5799              	.LASF60:
 5800 0568 4379496E 		.ascii	"CyIntGetVector\000"
 5800      74476574 
 5800      56656374 
 5800      6F7200
 5801              	.LASF68:
 5802 0577 6D696C6C 		.ascii	"milliseconds\000"
 5802      69736563 
 5802      6F6E6473 
 5802      00
 5803              	.LASF120:
 5804 0584 43794465 		.ascii	"CyDelayCycles\000"
 5804      6C617943 
 5804      79636C65 
 5804      7300
 5805              	.LASF16:
 5806 0592 72656738 		.ascii	"reg8\000"
 5806      00
 5807              	.LASF80:
 5808 0597 74687265 		.ascii	"threshold\000"
 5808      73686F6C 
 5808      6400
 5809              	.LASF52:
 5810 05a1 43794861 		.ascii	"CyHalt\000"
 5810      6C7400
 5811              	.LASF103:
 5812 05a8 43795379 		.ascii	"CySysSetRamAccessArbPriority\000"
 5812      73536574 
 5812      52616D41 
 5812      63636573 
 5812      73417262 
 5813              	.LASF1:
 5814 05c5 756E7369 		.ascii	"unsigned char\000"
 5814      676E6564 
 5814      20636861 
 5814      7200
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 175


 5815              	.LASF2:
 5816 05d3 73686F72 		.ascii	"short int\000"
 5816      7420696E 
 5816      7400
 5817              	.LASF46:
 5818 05dd 4379496E 		.ascii	"CyIntEnable\000"
 5818      74456E61 
 5818      626C6500 
 5819              	.LASF58:
 5820 05e9 4379496E 		.ascii	"CyIntGetSysVector\000"
 5820      74476574 
 5820      53797356 
 5820      6563746F 
 5820      7200
 5821              	.LASF28:
 5822 05fb 636C6B53 		.ascii	"clkSelect\000"
 5822      656C6563 
 5822      7400
 5823              	.LASF77:
 5824 0605 43795379 		.ascii	"CySysClkEcoStart\000"
 5824      73436C6B 
 5824      45636F53 
 5824      74617274 
 5824      00
 5825              	.LASF69:
 5826 0616 43794465 		.ascii	"CyDelayUs\000"
 5826      6C617955 
 5826      7300
 5827              	.LASF40:
 5828 0620 72656173 		.ascii	"reason\000"
 5828      6F6E00
 5829              	.LASF14:
 5830 0627 63686172 		.ascii	"char\000"
 5830      00
 5831              	.LASF18:
 5832 062c 63796973 		.ascii	"cyisraddress\000"
 5832      72616464 
 5832      72657373 
 5832      00
 5833              	.LASF84:
 5834 0639 43795379 		.ascii	"CySysTickEnable\000"
 5834      73546963 
 5834      6B456E61 
 5834      626C6500 
 5835              	.LASF31:
 5836 0649 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5836      73436C6B 
 5836      57726974 
 5836      65537973 
 5836      636C6B44 
 5837              	.LASF97:
 5838 0660 43795379 		.ascii	"CySysTickSetCallback\000"
 5838      73546963 
 5838      6B536574 
 5838      43616C6C 
 5838      6261636B 
 5839              	.LASF110:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 176


 5840 0675 43795379 		.ascii	"CySysTickCallbacks\000"
 5840      73546963 
 5840      6B43616C 
 5840      6C626163 
 5840      6B7300
 5841              	.LASF102:
 5842 0688 756E6971 		.ascii	"uniqueId\000"
 5842      75654964 
 5842      00
 5843              	.LASF67:
 5844 0691 43794465 		.ascii	"CyDelay\000"
 5844      6C617900 
 5845              	.LASF92:
 5846 0699 43795379 		.ascii	"CySysTickGetClockSource\000"
 5846      73546963 
 5846      6B476574 
 5846      436C6F63 
 5846      6B536F75 
 5847              	.LASF85:
 5848 06b1 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5848      73546963 
 5848      6B446973 
 5848      61626C65 
 5848      496E7465 
 5849              	.LASF37:
 5850 06cb 43795379 		.ascii	"CySysLvdDisable\000"
 5850      734C7664 
 5850      44697361 
 5850      626C6500 
 5851              	.LASF113:
 5852 06db 63796465 		.ascii	"cydelayFreqMhz\000"
 5852      6C617946 
 5852      7265714D 
 5852      687A00
 5853              	.LASF33:
 5854 06ea 43795379 		.ascii	"CySysClkEcoStop\000"
 5854      73436C6B 
 5854      45636F53 
 5854      746F7000 
 5855              	.LASF107:
 5856 06fa 43795379 		.ascii	"CySysSetDmacAccessArbPriority\000"
 5856      73536574 
 5856      446D6163 
 5856      41636365 
 5856      73734172 
 5857              	.LASF82:
 5858 0718 43795379 		.ascii	"CySysTickStop\000"
 5858      73546963 
 5858      6B53746F 
 5858      7000
 5859              	.LASF78:
 5860 0726 74696D65 		.ascii	"timeoutUs\000"
 5860      6F757455 
 5860      7300
 5861              	.LASF32:
 5862 0730 64697669 		.ascii	"divider\000"
 5862      64657200 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\ccRoWx9f.s 			page 177


 5863              	.LASF53:
 5864 0738 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 5864      73436C6B 
 5864      57726974 
 5864      6545636F 
 5864      44697600 
 5865              	.LASF15:
 5866 074c 63797374 		.ascii	"cystatus\000"
 5866      61747573 
 5866      00
 5867              	.LASF22:
 5868 0755 43795379 		.ascii	"CySysClkImoStart\000"
 5868      73436C6B 
 5868      496D6F53 
 5868      74617274 
 5868      00
 5869              	.LASF75:
 5870 0766 6E657749 		.ascii	"newImoTrim2Value\000"
 5870      6D6F5472 
 5870      696D3256 
 5870      616C7565 
 5870      00
 5871              	.LASF122:
 5872 0777 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5872      72617465 
 5872      645F536F 
 5872      75726365 
 5872      5C50536F 
 5873              	.LASF70:
 5874 0796 6D696372 		.ascii	"microseconds\000"
 5874      6F736563 
 5874      6F6E6473 
 5874      00
 5875              	.LASF25:
 5876 07a3 746D7052 		.ascii	"tmpReg\000"
 5876      656700
 5877              	.LASF86:
 5878 07aa 43795379 		.ascii	"CySysTickSetReload\000"
 5878      73546963 
 5878      6B536574 
 5878      52656C6F 
 5878      616400
 5879              	.LASF124:
 5880 07bd 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5880      73546963 
 5880      6B536572 
 5880      76696365 
 5880      43616C6C 
 5881              	.LASF36:
 5882 07d7 72657475 		.ascii	"returnValue\000"
 5882      726E5661 
 5882      6C756500 
 5883              	.LASF13:
 5884 07e3 646F7562 		.ascii	"double\000"
 5884      6C6500
 5885              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
