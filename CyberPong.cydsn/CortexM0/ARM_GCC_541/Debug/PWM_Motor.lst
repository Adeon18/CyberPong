ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_Motor.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.PWM_Motor_Stop,"ax",%progbits
  20              		.align	2
  21              		.global	PWM_Motor_Stop
  22              		.code	16
  23              		.thumb_func
  24              		.type	PWM_Motor_Stop, %function
  25              	PWM_Motor_Stop:
  26              	.LFB5:
  27              		.file 1 "Generated_Source\\PSoC4\\PWM_Motor.c"
   1:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM_Motor.c **** * File Name: PWM_Motor.c
   3:Generated_Source\PSoC4/PWM_Motor.c **** * Version 2.10
   4:Generated_Source\PSoC4/PWM_Motor.c **** *
   5:Generated_Source\PSoC4/PWM_Motor.c **** * Description:
   6:Generated_Source\PSoC4/PWM_Motor.c **** *  This file provides the source code to the API for the PWM_Motor
   7:Generated_Source\PSoC4/PWM_Motor.c **** *  component
   8:Generated_Source\PSoC4/PWM_Motor.c **** *
   9:Generated_Source\PSoC4/PWM_Motor.c **** * Note:
  10:Generated_Source\PSoC4/PWM_Motor.c **** *  None
  11:Generated_Source\PSoC4/PWM_Motor.c **** *
  12:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
  13:Generated_Source\PSoC4/PWM_Motor.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/PWM_Motor.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/PWM_Motor.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/PWM_Motor.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/PWM_Motor.c **** 
  19:Generated_Source\PSoC4/PWM_Motor.c **** #include "PWM_Motor.h"
  20:Generated_Source\PSoC4/PWM_Motor.c **** 
  21:Generated_Source\PSoC4/PWM_Motor.c **** uint8 PWM_Motor_initVar = 0u;
  22:Generated_Source\PSoC4/PWM_Motor.c **** 
  23:Generated_Source\PSoC4/PWM_Motor.c **** 
  24:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_Init
  26:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
  27:Generated_Source\PSoC4/PWM_Motor.c **** *
  28:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
  29:Generated_Source\PSoC4/PWM_Motor.c **** *  Initialize/Restore default PWM_Motor configuration.
  30:Generated_Source\PSoC4/PWM_Motor.c **** *
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 2


  31:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
  32:Generated_Source\PSoC4/PWM_Motor.c **** *  None
  33:Generated_Source\PSoC4/PWM_Motor.c **** *
  34:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
  35:Generated_Source\PSoC4/PWM_Motor.c **** *  None
  36:Generated_Source\PSoC4/PWM_Motor.c **** *
  37:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_Init(void)
  39:Generated_Source\PSoC4/PWM_Motor.c **** {
  40:Generated_Source\PSoC4/PWM_Motor.c **** 
  41:Generated_Source\PSoC4/PWM_Motor.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/PWM_Motor.c ****     #if (PWM_Motor__QUAD == PWM_Motor_CONFIG)
  43:Generated_Source\PSoC4/PWM_Motor.c ****         PWM_Motor_CONTROL_REG = PWM_Motor_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/PWM_Motor.c ****         
  45:Generated_Source\PSoC4/PWM_Motor.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/PWM_Motor.c ****         PWM_Motor_TRIG_CONTROL1_REG  = PWM_Motor_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/PWM_Motor.c **** 
  48:Generated_Source\PSoC4/PWM_Motor.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/PWM_Motor.c ****         PWM_Motor_SetInterruptMode(PWM_Motor_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/PWM_Motor.c ****         
  51:Generated_Source\PSoC4/PWM_Motor.c ****          /* Set other values */
  52:Generated_Source\PSoC4/PWM_Motor.c ****         PWM_Motor_SetCounterMode(PWM_Motor_COUNT_DOWN);
  53:Generated_Source\PSoC4/PWM_Motor.c ****         PWM_Motor_WritePeriod(PWM_Motor_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/PWM_Motor.c ****         PWM_Motor_WriteCounter(PWM_Motor_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/PWM_Motor.c ****     #endif  /* (PWM_Motor__QUAD == PWM_Motor_CONFIG) */
  56:Generated_Source\PSoC4/PWM_Motor.c **** 
  57:Generated_Source\PSoC4/PWM_Motor.c ****     #if (PWM_Motor__TIMER == PWM_Motor_CONFIG)
  58:Generated_Source\PSoC4/PWM_Motor.c ****         PWM_Motor_CONTROL_REG = PWM_Motor_CTRL_TIMER_BASE_CONFIG;
  59:Generated_Source\PSoC4/PWM_Motor.c ****         
  60:Generated_Source\PSoC4/PWM_Motor.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/PWM_Motor.c ****         PWM_Motor_TRIG_CONTROL1_REG  = PWM_Motor_TIMER_SIGNALS_MODES;
  62:Generated_Source\PSoC4/PWM_Motor.c ****     
  63:Generated_Source\PSoC4/PWM_Motor.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/PWM_Motor.c ****         PWM_Motor_SetInterruptMode(PWM_Motor_TC_INTERRUPT_MASK);
  65:Generated_Source\PSoC4/PWM_Motor.c ****         
  66:Generated_Source\PSoC4/PWM_Motor.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/PWM_Motor.c ****         PWM_Motor_WritePeriod(PWM_Motor_TC_PERIOD_VALUE );
  68:Generated_Source\PSoC4/PWM_Motor.c **** 
  69:Generated_Source\PSoC4/PWM_Motor.c ****         #if (PWM_Motor__COMPARE == PWM_Motor_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/PWM_Motor.c ****             PWM_Motor_WriteCompare(PWM_Motor_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/PWM_Motor.c **** 
  72:Generated_Source\PSoC4/PWM_Motor.c ****             #if (1u == PWM_Motor_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/PWM_Motor.c ****                 PWM_Motor_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/PWM_Motor.c ****                 PWM_Motor_WriteCompareBuf(PWM_Motor_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/PWM_Motor.c ****             #endif  /* (1u == PWM_Motor_TC_COMPARE_SWAP) */
  76:Generated_Source\PSoC4/PWM_Motor.c ****         #endif  /* (PWM_Motor__COMPARE == PWM_Motor_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/PWM_Motor.c **** 
  78:Generated_Source\PSoC4/PWM_Motor.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/PWM_Motor.c ****         #if (PWM_Motor_CY_TCPWM_V2 && PWM_Motor_TIMER_UPDOWN_CNT_USED && !PWM_Motor_CY_TCPWM_4000)
  80:Generated_Source\PSoC4/PWM_Motor.c ****             PWM_Motor_WriteCounter(1u);
  81:Generated_Source\PSoC4/PWM_Motor.c ****         #elif(PWM_Motor__COUNT_DOWN == PWM_Motor_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/PWM_Motor.c ****             PWM_Motor_WriteCounter(PWM_Motor_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/PWM_Motor.c ****         #else
  84:Generated_Source\PSoC4/PWM_Motor.c ****             PWM_Motor_WriteCounter(0u);
  85:Generated_Source\PSoC4/PWM_Motor.c ****         #endif /* (PWM_Motor_CY_TCPWM_V2 && PWM_Motor_TIMER_UPDOWN_CNT_USED && !PWM_Motor_CY_TCPWM_
  86:Generated_Source\PSoC4/PWM_Motor.c ****     #endif  /* (PWM_Motor__TIMER == PWM_Motor_CONFIG) */
  87:Generated_Source\PSoC4/PWM_Motor.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 3


  88:Generated_Source\PSoC4/PWM_Motor.c ****     #if (PWM_Motor__PWM_SEL == PWM_Motor_CONFIG)
  89:Generated_Source\PSoC4/PWM_Motor.c ****         PWM_Motor_CONTROL_REG = PWM_Motor_CTRL_PWM_BASE_CONFIG;
  90:Generated_Source\PSoC4/PWM_Motor.c **** 
  91:Generated_Source\PSoC4/PWM_Motor.c ****         #if (PWM_Motor__PWM_PR == PWM_Motor_PWM_MODE)
  92:Generated_Source\PSoC4/PWM_Motor.c ****             PWM_Motor_CONTROL_REG |= PWM_Motor_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/PWM_Motor.c ****             PWM_Motor_WriteCounter(PWM_Motor_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/PWM_Motor.c ****         #else
  95:Generated_Source\PSoC4/PWM_Motor.c ****             PWM_Motor_CONTROL_REG |= PWM_Motor_CTRL_PWM_ALIGN | PWM_Motor_CTRL_PWM_KILL_EVENT;
  96:Generated_Source\PSoC4/PWM_Motor.c ****             
  97:Generated_Source\PSoC4/PWM_Motor.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/PWM_Motor.c ****             #if (PWM_Motor_CY_TCPWM_V2 && PWM_Motor_PWM_UPDOWN_CNT_USED && !PWM_Motor_CY_TCPWM_4000
  99:Generated_Source\PSoC4/PWM_Motor.c ****                 PWM_Motor_WriteCounter(1u);
 100:Generated_Source\PSoC4/PWM_Motor.c ****             #elif (PWM_Motor__RIGHT == PWM_Motor_PWM_ALIGN)
 101:Generated_Source\PSoC4/PWM_Motor.c ****                 PWM_Motor_WriteCounter(PWM_Motor_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/PWM_Motor.c ****             #else 
 103:Generated_Source\PSoC4/PWM_Motor.c ****                 PWM_Motor_WriteCounter(0u);
 104:Generated_Source\PSoC4/PWM_Motor.c ****             #endif  /* (PWM_Motor_CY_TCPWM_V2 && PWM_Motor_PWM_UPDOWN_CNT_USED && !PWM_Motor_CY_TCP
 105:Generated_Source\PSoC4/PWM_Motor.c ****         #endif  /* (PWM_Motor__PWM_PR == PWM_Motor_PWM_MODE) */
 106:Generated_Source\PSoC4/PWM_Motor.c **** 
 107:Generated_Source\PSoC4/PWM_Motor.c ****         #if (PWM_Motor__PWM_DT == PWM_Motor_PWM_MODE)
 108:Generated_Source\PSoC4/PWM_Motor.c ****             PWM_Motor_CONTROL_REG |= PWM_Motor_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/PWM_Motor.c ****         #endif  /* (PWM_Motor__PWM_DT == PWM_Motor_PWM_MODE) */
 110:Generated_Source\PSoC4/PWM_Motor.c **** 
 111:Generated_Source\PSoC4/PWM_Motor.c ****         #if (PWM_Motor__PWM == PWM_Motor_PWM_MODE)
 112:Generated_Source\PSoC4/PWM_Motor.c ****             PWM_Motor_CONTROL_REG |= PWM_Motor_CTRL_PWM_PRESCALER;
 113:Generated_Source\PSoC4/PWM_Motor.c ****         #endif  /* (PWM_Motor__PWM == PWM_Motor_PWM_MODE) */
 114:Generated_Source\PSoC4/PWM_Motor.c **** 
 115:Generated_Source\PSoC4/PWM_Motor.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/PWM_Motor.c ****         PWM_Motor_TRIG_CONTROL1_REG  = PWM_Motor_PWM_SIGNALS_MODES;
 117:Generated_Source\PSoC4/PWM_Motor.c ****     
 118:Generated_Source\PSoC4/PWM_Motor.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/PWM_Motor.c ****         PWM_Motor_SetInterruptMode(PWM_Motor_PWM_INTERRUPT_MASK);
 120:Generated_Source\PSoC4/PWM_Motor.c **** 
 121:Generated_Source\PSoC4/PWM_Motor.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/PWM_Motor.c ****         #if (PWM_Motor__PWM_PR == PWM_Motor_PWM_MODE)
 123:Generated_Source\PSoC4/PWM_Motor.c ****             PWM_Motor_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/PWM_Motor.c ****                     (PWM_Motor_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/PWM_Motor.c ****                     PWM_Motor_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/PWM_Motor.c ****                     PWM_Motor_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/PWM_Motor.c ****         #else
 128:Generated_Source\PSoC4/PWM_Motor.c ****             #if (PWM_Motor__LEFT == PWM_Motor_PWM_ALIGN)
 129:Generated_Source\PSoC4/PWM_Motor.c ****                 PWM_Motor_TRIG_CONTROL2_REG = PWM_Motor_PWM_MODE_LEFT;
 130:Generated_Source\PSoC4/PWM_Motor.c ****             #endif  /* ( PWM_Motor_PWM_LEFT == PWM_Motor_PWM_ALIGN) */
 131:Generated_Source\PSoC4/PWM_Motor.c **** 
 132:Generated_Source\PSoC4/PWM_Motor.c ****             #if (PWM_Motor__RIGHT == PWM_Motor_PWM_ALIGN)
 133:Generated_Source\PSoC4/PWM_Motor.c ****                 PWM_Motor_TRIG_CONTROL2_REG = PWM_Motor_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/PWM_Motor.c ****             #endif  /* ( PWM_Motor_PWM_RIGHT == PWM_Motor_PWM_ALIGN) */
 135:Generated_Source\PSoC4/PWM_Motor.c **** 
 136:Generated_Source\PSoC4/PWM_Motor.c ****             #if (PWM_Motor__CENTER == PWM_Motor_PWM_ALIGN)
 137:Generated_Source\PSoC4/PWM_Motor.c ****                 PWM_Motor_TRIG_CONTROL2_REG = PWM_Motor_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/PWM_Motor.c ****             #endif  /* ( PWM_Motor_PWM_CENTER == PWM_Motor_PWM_ALIGN) */
 139:Generated_Source\PSoC4/PWM_Motor.c **** 
 140:Generated_Source\PSoC4/PWM_Motor.c ****             #if (PWM_Motor__ASYMMETRIC == PWM_Motor_PWM_ALIGN)
 141:Generated_Source\PSoC4/PWM_Motor.c ****                 PWM_Motor_TRIG_CONTROL2_REG = PWM_Motor_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/PWM_Motor.c ****             #endif  /* (PWM_Motor__ASYMMETRIC == PWM_Motor_PWM_ALIGN) */
 143:Generated_Source\PSoC4/PWM_Motor.c ****         #endif  /* (PWM_Motor__PWM_PR == PWM_Motor_PWM_MODE) */
 144:Generated_Source\PSoC4/PWM_Motor.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 4


 145:Generated_Source\PSoC4/PWM_Motor.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/PWM_Motor.c ****         PWM_Motor_WritePeriod(PWM_Motor_PWM_PERIOD_VALUE );
 147:Generated_Source\PSoC4/PWM_Motor.c ****         PWM_Motor_WriteCompare(PWM_Motor_PWM_COMPARE_VALUE);
 148:Generated_Source\PSoC4/PWM_Motor.c **** 
 149:Generated_Source\PSoC4/PWM_Motor.c ****         #if (1u == PWM_Motor_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/PWM_Motor.c ****             PWM_Motor_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/PWM_Motor.c ****             PWM_Motor_WriteCompareBuf(PWM_Motor_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/PWM_Motor.c ****         #endif  /* (1u == PWM_Motor_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/PWM_Motor.c **** 
 154:Generated_Source\PSoC4/PWM_Motor.c ****         #if (1u == PWM_Motor_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/PWM_Motor.c ****             PWM_Motor_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/PWM_Motor.c ****             PWM_Motor_WritePeriodBuf(PWM_Motor_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/PWM_Motor.c ****         #endif  /* (1u == PWM_Motor_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/PWM_Motor.c ****     #endif  /* (PWM_Motor__PWM_SEL == PWM_Motor_CONFIG) */
 159:Generated_Source\PSoC4/PWM_Motor.c ****     
 160:Generated_Source\PSoC4/PWM_Motor.c **** }
 161:Generated_Source\PSoC4/PWM_Motor.c **** 
 162:Generated_Source\PSoC4/PWM_Motor.c **** 
 163:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_Enable
 165:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 166:Generated_Source\PSoC4/PWM_Motor.c **** *
 167:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 168:Generated_Source\PSoC4/PWM_Motor.c **** *  Enables the PWM_Motor.
 169:Generated_Source\PSoC4/PWM_Motor.c **** *
 170:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 171:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 172:Generated_Source\PSoC4/PWM_Motor.c **** *
 173:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 174:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 175:Generated_Source\PSoC4/PWM_Motor.c **** *
 176:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_Enable(void)
 178:Generated_Source\PSoC4/PWM_Motor.c **** {
 179:Generated_Source\PSoC4/PWM_Motor.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/PWM_Motor.c **** 
 181:Generated_Source\PSoC4/PWM_Motor.c ****     enableInterrupts = CyEnterCriticalSection();
 182:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_BLOCK_CONTROL_REG |= PWM_Motor_MASK;
 183:Generated_Source\PSoC4/PWM_Motor.c ****     CyExitCriticalSection(enableInterrupts);
 184:Generated_Source\PSoC4/PWM_Motor.c **** 
 185:Generated_Source\PSoC4/PWM_Motor.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/PWM_Motor.c ****     #if (PWM_Motor__PWM_SEL == PWM_Motor_CONFIG)
 187:Generated_Source\PSoC4/PWM_Motor.c ****         #if (0u == PWM_Motor_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/PWM_Motor.c ****             PWM_Motor_TriggerCommand(PWM_Motor_MASK, PWM_Motor_CMD_START);
 189:Generated_Source\PSoC4/PWM_Motor.c ****         #endif /* (0u == PWM_Motor_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/PWM_Motor.c ****     #endif /* (PWM_Motor__PWM_SEL == PWM_Motor_CONFIG) */
 191:Generated_Source\PSoC4/PWM_Motor.c **** 
 192:Generated_Source\PSoC4/PWM_Motor.c ****     #if (PWM_Motor__TIMER == PWM_Motor_CONFIG)
 193:Generated_Source\PSoC4/PWM_Motor.c ****         #if (0u == PWM_Motor_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/PWM_Motor.c ****             PWM_Motor_TriggerCommand(PWM_Motor_MASK, PWM_Motor_CMD_START);
 195:Generated_Source\PSoC4/PWM_Motor.c ****         #endif /* (0u == PWM_Motor_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/PWM_Motor.c ****     #endif /* (PWM_Motor__TIMER == PWM_Motor_CONFIG) */
 197:Generated_Source\PSoC4/PWM_Motor.c ****     
 198:Generated_Source\PSoC4/PWM_Motor.c ****     #if (PWM_Motor__QUAD == PWM_Motor_CONFIG)
 199:Generated_Source\PSoC4/PWM_Motor.c ****         #if (0u != PWM_Motor_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/PWM_Motor.c ****             PWM_Motor_TriggerCommand(PWM_Motor_MASK, PWM_Motor_CMD_RELOAD);
 201:Generated_Source\PSoC4/PWM_Motor.c ****         #endif /* (0u != PWM_Motor_QUAD_AUTO_START) */
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 5


 202:Generated_Source\PSoC4/PWM_Motor.c ****     #endif  /* (PWM_Motor__QUAD == PWM_Motor_CONFIG) */
 203:Generated_Source\PSoC4/PWM_Motor.c **** }
 204:Generated_Source\PSoC4/PWM_Motor.c **** 
 205:Generated_Source\PSoC4/PWM_Motor.c **** 
 206:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_Start
 208:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 209:Generated_Source\PSoC4/PWM_Motor.c **** *
 210:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 211:Generated_Source\PSoC4/PWM_Motor.c **** *  Initializes the PWM_Motor with default customizer
 212:Generated_Source\PSoC4/PWM_Motor.c **** *  values when called the first time and enables the PWM_Motor.
 213:Generated_Source\PSoC4/PWM_Motor.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/PWM_Motor.c **** *  just enabled.
 215:Generated_Source\PSoC4/PWM_Motor.c **** *
 216:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 217:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 218:Generated_Source\PSoC4/PWM_Motor.c **** *
 219:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 220:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 221:Generated_Source\PSoC4/PWM_Motor.c **** *
 222:Generated_Source\PSoC4/PWM_Motor.c **** * Global variables:
 223:Generated_Source\PSoC4/PWM_Motor.c **** *  PWM_Motor_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/PWM_Motor.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/PWM_Motor.c **** *  to 1 the first time PWM_Motor_Start() is called. This allows
 226:Generated_Source\PSoC4/PWM_Motor.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/PWM_Motor.c **** *  calls to the PWM_Motor_Start() routine.
 228:Generated_Source\PSoC4/PWM_Motor.c **** *
 229:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_Start(void)
 231:Generated_Source\PSoC4/PWM_Motor.c **** {
 232:Generated_Source\PSoC4/PWM_Motor.c ****     if (0u == PWM_Motor_initVar)
 233:Generated_Source\PSoC4/PWM_Motor.c ****     {
 234:Generated_Source\PSoC4/PWM_Motor.c ****         PWM_Motor_Init();
 235:Generated_Source\PSoC4/PWM_Motor.c ****         PWM_Motor_initVar = 1u;
 236:Generated_Source\PSoC4/PWM_Motor.c ****     }
 237:Generated_Source\PSoC4/PWM_Motor.c **** 
 238:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_Enable();
 239:Generated_Source\PSoC4/PWM_Motor.c **** }
 240:Generated_Source\PSoC4/PWM_Motor.c **** 
 241:Generated_Source\PSoC4/PWM_Motor.c **** 
 242:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_Stop
 244:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 245:Generated_Source\PSoC4/PWM_Motor.c **** *
 246:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 247:Generated_Source\PSoC4/PWM_Motor.c **** *  Disables the PWM_Motor.
 248:Generated_Source\PSoC4/PWM_Motor.c **** *
 249:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 250:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 251:Generated_Source\PSoC4/PWM_Motor.c **** *
 252:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 253:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 254:Generated_Source\PSoC4/PWM_Motor.c **** *
 255:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_Stop(void)
 257:Generated_Source\PSoC4/PWM_Motor.c **** {
  28              		.loc 1 257 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 6


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 258:Generated_Source\PSoC4/PWM_Motor.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/PWM_Motor.c **** 
 260:Generated_Source\PSoC4/PWM_Motor.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 260 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
 261:Generated_Source\PSoC4/PWM_Motor.c **** 
 262:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_BLOCK_CONTROL_REG &= (uint32)~PWM_Motor_MASK;
  39              		.loc 1 262 0
  40 0006 044A     		ldr	r2, .L2
  41 0008 1368     		ldr	r3, [r2]
  42 000a 0221     		movs	r1, #2
  43 000c 8B43     		bics	r3, r1
  44 000e 1360     		str	r3, [r2]
 263:Generated_Source\PSoC4/PWM_Motor.c **** 
 264:Generated_Source\PSoC4/PWM_Motor.c ****     CyExitCriticalSection(enableInterrupts);
  45              		.loc 1 264 0
  46 0010 FFF7FEFF 		bl	CyExitCriticalSection
  47              	.LVL1:
 265:Generated_Source\PSoC4/PWM_Motor.c **** }
  48              		.loc 1 265 0
  49              		@ sp needed
  50 0014 10BD     		pop	{r4, pc}
  51              	.L3:
  52 0016 C046     		.align	2
  53              	.L2:
  54 0018 00002040 		.word	1075838976
  55              		.cfi_endproc
  56              	.LFE5:
  57              		.size	PWM_Motor_Stop, .-PWM_Motor_Stop
  58              		.section	.text.PWM_Motor_SetMode,"ax",%progbits
  59              		.align	2
  60              		.global	PWM_Motor_SetMode
  61              		.code	16
  62              		.thumb_func
  63              		.type	PWM_Motor_SetMode, %function
  64              	PWM_Motor_SetMode:
  65              	.LFB6:
 266:Generated_Source\PSoC4/PWM_Motor.c **** 
 267:Generated_Source\PSoC4/PWM_Motor.c **** 
 268:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_SetMode
 270:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 271:Generated_Source\PSoC4/PWM_Motor.c **** *
 272:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 273:Generated_Source\PSoC4/PWM_Motor.c **** *  Sets the operation mode of the PWM_Motor. This function is used when
 274:Generated_Source\PSoC4/PWM_Motor.c **** *  configured as a generic PWM_Motor and the actual mode of operation is
 275:Generated_Source\PSoC4/PWM_Motor.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/PWM_Motor.c **** *
 277:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 7


 278:Generated_Source\PSoC4/PWM_Motor.c **** *  mode: Mode for the PWM_Motor to operate in
 279:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
 280:Generated_Source\PSoC4/PWM_Motor.c **** *   - PWM_Motor_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/PWM_Motor.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/PWM_Motor.c **** *         - PWM_Motor_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/PWM_Motor.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/PWM_Motor.c **** *         - PWM_Motor_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/PWM_Motor.c **** *         - PWM_Motor_MODE_PWM - PWM
 286:Generated_Source\PSoC4/PWM_Motor.c **** *         - PWM_Motor_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/PWM_Motor.c **** *         - PWM_Motor_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/PWM_Motor.c **** *
 289:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 290:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 291:Generated_Source\PSoC4/PWM_Motor.c **** *
 292:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/PWM_Motor.c **** {
  66              		.loc 1 294 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 0, uses_anonymous_args = 0
  70              	.LVL2:
  71 0000 10B5     		push	{r4, lr}
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 4, -8
  74              		.cfi_offset 14, -4
  75 0002 0400     		movs	r4, r0
 295:Generated_Source\PSoC4/PWM_Motor.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/PWM_Motor.c **** 
 297:Generated_Source\PSoC4/PWM_Motor.c ****     enableInterrupts = CyEnterCriticalSection();
  76              		.loc 1 297 0
  77 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  78              	.LVL3:
 298:Generated_Source\PSoC4/PWM_Motor.c **** 
 299:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG &= (uint32)~PWM_Motor_MODE_MASK;
  79              		.loc 1 299 0
  80 0008 054B     		ldr	r3, .L5
  81 000a 1968     		ldr	r1, [r3]
  82 000c 054A     		ldr	r2, .L5+4
  83 000e 0A40     		ands	r2, r1
  84 0010 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG |= mode;
  85              		.loc 1 300 0
  86 0012 1A68     		ldr	r2, [r3]
  87 0014 1443     		orrs	r4, r2
  88              	.LVL4:
  89 0016 1C60     		str	r4, [r3]
 301:Generated_Source\PSoC4/PWM_Motor.c **** 
 302:Generated_Source\PSoC4/PWM_Motor.c ****     CyExitCriticalSection(enableInterrupts);
  90              		.loc 1 302 0
  91 0018 FFF7FEFF 		bl	CyExitCriticalSection
  92              	.LVL5:
 303:Generated_Source\PSoC4/PWM_Motor.c **** }
  93              		.loc 1 303 0
  94              		@ sp needed
  95 001c 10BD     		pop	{r4, pc}
  96              	.L6:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 8


  97 001e C046     		.align	2
  98              	.L5:
  99 0020 40012040 		.word	1075839296
 100 0024 FFFFFFF8 		.word	-117440513
 101              		.cfi_endproc
 102              	.LFE6:
 103              		.size	PWM_Motor_SetMode, .-PWM_Motor_SetMode
 104              		.section	.text.PWM_Motor_SetQDMode,"ax",%progbits
 105              		.align	2
 106              		.global	PWM_Motor_SetQDMode
 107              		.code	16
 108              		.thumb_func
 109              		.type	PWM_Motor_SetQDMode, %function
 110              	PWM_Motor_SetQDMode:
 111              	.LFB7:
 304:Generated_Source\PSoC4/PWM_Motor.c **** 
 305:Generated_Source\PSoC4/PWM_Motor.c **** 
 306:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_SetQDMode
 308:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 309:Generated_Source\PSoC4/PWM_Motor.c **** *
 310:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 311:Generated_Source\PSoC4/PWM_Motor.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/PWM_Motor.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/PWM_Motor.c **** *
 314:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 315:Generated_Source\PSoC4/PWM_Motor.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
 317:Generated_Source\PSoC4/PWM_Motor.c **** *         - PWM_Motor_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/PWM_Motor.c **** *         - PWM_Motor_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/PWM_Motor.c **** *         - PWM_Motor_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/PWM_Motor.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/PWM_Motor.c **** *
 322:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 323:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 324:Generated_Source\PSoC4/PWM_Motor.c **** *
 325:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/PWM_Motor.c **** {
 112              		.loc 1 327 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              	.LVL6:
 117 0000 10B5     		push	{r4, lr}
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 4, -8
 120              		.cfi_offset 14, -4
 121 0002 0400     		movs	r4, r0
 328:Generated_Source\PSoC4/PWM_Motor.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/PWM_Motor.c **** 
 330:Generated_Source\PSoC4/PWM_Motor.c ****     enableInterrupts = CyEnterCriticalSection();
 122              		.loc 1 330 0
 123 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 124              	.LVL7:
 331:Generated_Source\PSoC4/PWM_Motor.c **** 
 332:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG &= (uint32)~PWM_Motor_QUAD_MODE_MASK;
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 9


 125              		.loc 1 332 0
 126 0008 054B     		ldr	r3, .L8
 127 000a 1968     		ldr	r1, [r3]
 128 000c 054A     		ldr	r2, .L8+4
 129 000e 0A40     		ands	r2, r1
 130 0010 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG |= qdMode;
 131              		.loc 1 333 0
 132 0012 1A68     		ldr	r2, [r3]
 133 0014 1443     		orrs	r4, r2
 134              	.LVL8:
 135 0016 1C60     		str	r4, [r3]
 334:Generated_Source\PSoC4/PWM_Motor.c **** 
 335:Generated_Source\PSoC4/PWM_Motor.c ****     CyExitCriticalSection(enableInterrupts);
 136              		.loc 1 335 0
 137 0018 FFF7FEFF 		bl	CyExitCriticalSection
 138              	.LVL9:
 336:Generated_Source\PSoC4/PWM_Motor.c **** }
 139              		.loc 1 336 0
 140              		@ sp needed
 141 001c 10BD     		pop	{r4, pc}
 142              	.L9:
 143 001e C046     		.align	2
 144              	.L8:
 145 0020 40012040 		.word	1075839296
 146 0024 FFFF8FFF 		.word	-7340033
 147              		.cfi_endproc
 148              	.LFE7:
 149              		.size	PWM_Motor_SetQDMode, .-PWM_Motor_SetQDMode
 150              		.section	.text.PWM_Motor_SetPrescaler,"ax",%progbits
 151              		.align	2
 152              		.global	PWM_Motor_SetPrescaler
 153              		.code	16
 154              		.thumb_func
 155              		.type	PWM_Motor_SetPrescaler, %function
 156              	PWM_Motor_SetPrescaler:
 157              	.LFB8:
 337:Generated_Source\PSoC4/PWM_Motor.c **** 
 338:Generated_Source\PSoC4/PWM_Motor.c **** 
 339:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_SetPrescaler
 341:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 342:Generated_Source\PSoC4/PWM_Motor.c **** *
 343:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 344:Generated_Source\PSoC4/PWM_Motor.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/PWM_Motor.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/PWM_Motor.c **** *
 347:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 348:Generated_Source\PSoC4/PWM_Motor.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
 350:Generated_Source\PSoC4/PWM_Motor.c **** *         - PWM_Motor_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/PWM_Motor.c **** *         - PWM_Motor_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/PWM_Motor.c **** *         - PWM_Motor_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/PWM_Motor.c **** *         - PWM_Motor_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/PWM_Motor.c **** *         - PWM_Motor_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/PWM_Motor.c **** *         - PWM_Motor_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/PWM_Motor.c **** *         - PWM_Motor_PRESCALE_DIVBY64   - Divide by 64
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 10


 357:Generated_Source\PSoC4/PWM_Motor.c **** *         - PWM_Motor_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/PWM_Motor.c **** *
 359:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 360:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 361:Generated_Source\PSoC4/PWM_Motor.c **** *
 362:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_SetPrescaler(uint32 prescaler)
 364:Generated_Source\PSoC4/PWM_Motor.c **** {
 158              		.loc 1 364 0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              	.LVL10:
 163 0000 10B5     		push	{r4, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 4, -8
 166              		.cfi_offset 14, -4
 167 0002 0400     		movs	r4, r0
 365:Generated_Source\PSoC4/PWM_Motor.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/PWM_Motor.c **** 
 367:Generated_Source\PSoC4/PWM_Motor.c ****     enableInterrupts = CyEnterCriticalSection();
 168              		.loc 1 367 0
 169 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 170              	.LVL11:
 368:Generated_Source\PSoC4/PWM_Motor.c **** 
 369:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG &= (uint32)~PWM_Motor_PRESCALER_MASK;
 171              		.loc 1 369 0
 172 0008 054B     		ldr	r3, .L11
 173 000a 1968     		ldr	r1, [r3]
 174 000c 054A     		ldr	r2, .L11+4
 175 000e 0A40     		ands	r2, r1
 176 0010 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG |= prescaler;
 177              		.loc 1 370 0
 178 0012 1A68     		ldr	r2, [r3]
 179 0014 1443     		orrs	r4, r2
 180              	.LVL12:
 181 0016 1C60     		str	r4, [r3]
 371:Generated_Source\PSoC4/PWM_Motor.c **** 
 372:Generated_Source\PSoC4/PWM_Motor.c ****     CyExitCriticalSection(enableInterrupts);
 182              		.loc 1 372 0
 183 0018 FFF7FEFF 		bl	CyExitCriticalSection
 184              	.LVL13:
 373:Generated_Source\PSoC4/PWM_Motor.c **** }
 185              		.loc 1 373 0
 186              		@ sp needed
 187 001c 10BD     		pop	{r4, pc}
 188              	.L12:
 189 001e C046     		.align	2
 190              	.L11:
 191 0020 40012040 		.word	1075839296
 192 0024 FF00FFFF 		.word	-65281
 193              		.cfi_endproc
 194              	.LFE8:
 195              		.size	PWM_Motor_SetPrescaler, .-PWM_Motor_SetPrescaler
 196              		.section	.text.PWM_Motor_SetOneShot,"ax",%progbits
 197              		.align	2
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 11


 198              		.global	PWM_Motor_SetOneShot
 199              		.code	16
 200              		.thumb_func
 201              		.type	PWM_Motor_SetOneShot, %function
 202              	PWM_Motor_SetOneShot:
 203              	.LFB9:
 374:Generated_Source\PSoC4/PWM_Motor.c **** 
 375:Generated_Source\PSoC4/PWM_Motor.c **** 
 376:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_SetOneShot
 378:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 379:Generated_Source\PSoC4/PWM_Motor.c **** *
 380:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 381:Generated_Source\PSoC4/PWM_Motor.c **** *  Writes the register that controls whether the PWM_Motor runs
 382:Generated_Source\PSoC4/PWM_Motor.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/PWM_Motor.c **** *  PWM_Motor operates in the continuous mode.
 384:Generated_Source\PSoC4/PWM_Motor.c **** *
 385:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 386:Generated_Source\PSoC4/PWM_Motor.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
 388:Generated_Source\PSoC4/PWM_Motor.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/PWM_Motor.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/PWM_Motor.c **** *
 391:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 392:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 393:Generated_Source\PSoC4/PWM_Motor.c **** *
 394:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/PWM_Motor.c **** {
 204              		.loc 1 396 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              	.LVL14:
 209 0000 70B5     		push	{r4, r5, r6, lr}
 210              		.cfi_def_cfa_offset 16
 211              		.cfi_offset 4, -16
 212              		.cfi_offset 5, -12
 213              		.cfi_offset 6, -8
 214              		.cfi_offset 14, -4
 215 0002 0400     		movs	r4, r0
 397:Generated_Source\PSoC4/PWM_Motor.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/PWM_Motor.c **** 
 399:Generated_Source\PSoC4/PWM_Motor.c ****     enableInterrupts = CyEnterCriticalSection();
 216              		.loc 1 399 0
 217 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 218              	.LVL15:
 400:Generated_Source\PSoC4/PWM_Motor.c **** 
 401:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG &= (uint32)~PWM_Motor_ONESHOT_MASK;
 219              		.loc 1 401 0
 220 0008 0749     		ldr	r1, .L14
 221 000a 0A68     		ldr	r2, [r1]
 222 000c 074B     		ldr	r3, .L14+4
 223 000e 1340     		ands	r3, r2
 224 0010 0B60     		str	r3, [r1]
 402:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_Motor_1BIT_MASK) <<
 225              		.loc 1 402 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 12


 226 0012 0D68     		ldr	r5, [r1]
 227 0014 A304     		lsls	r3, r4, #18
 228 0016 8022     		movs	r2, #128
 229 0018 D202     		lsls	r2, r2, #11
 230 001a 1340     		ands	r3, r2
 231 001c 2B43     		orrs	r3, r5
 232 001e 0B60     		str	r3, [r1]
 403:Generated_Source\PSoC4/PWM_Motor.c ****                                                                PWM_Motor_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/PWM_Motor.c **** 
 405:Generated_Source\PSoC4/PWM_Motor.c ****     CyExitCriticalSection(enableInterrupts);
 233              		.loc 1 405 0
 234 0020 FFF7FEFF 		bl	CyExitCriticalSection
 235              	.LVL16:
 406:Generated_Source\PSoC4/PWM_Motor.c **** }
 236              		.loc 1 406 0
 237              		@ sp needed
 238              	.LVL17:
 239 0024 70BD     		pop	{r4, r5, r6, pc}
 240              	.L15:
 241 0026 C046     		.align	2
 242              	.L14:
 243 0028 40012040 		.word	1075839296
 244 002c FFFFFBFF 		.word	-262145
 245              		.cfi_endproc
 246              	.LFE9:
 247              		.size	PWM_Motor_SetOneShot, .-PWM_Motor_SetOneShot
 248              		.section	.text.PWM_Motor_SetPWMMode,"ax",%progbits
 249              		.align	2
 250              		.global	PWM_Motor_SetPWMMode
 251              		.code	16
 252              		.thumb_func
 253              		.type	PWM_Motor_SetPWMMode, %function
 254              	PWM_Motor_SetPWMMode:
 255              	.LFB10:
 407:Generated_Source\PSoC4/PWM_Motor.c **** 
 408:Generated_Source\PSoC4/PWM_Motor.c **** 
 409:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_SetPWMMode
 411:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 412:Generated_Source\PSoC4/PWM_Motor.c **** *
 413:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 414:Generated_Source\PSoC4/PWM_Motor.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/PWM_Motor.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/PWM_Motor.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/PWM_Motor.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/PWM_Motor.c **** *  the mode.
 419:Generated_Source\PSoC4/PWM_Motor.c **** *
 420:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 421:Generated_Source\PSoC4/PWM_Motor.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/PWM_Motor.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
 424:Generated_Source\PSoC4/PWM_Motor.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/PWM_Motor.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/PWM_Motor.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/PWM_Motor.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/PWM_Motor.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/PWM_Motor.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 13


 430:Generated_Source\PSoC4/PWM_Motor.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/PWM_Motor.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/PWM_Motor.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/PWM_Motor.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/PWM_Motor.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/PWM_Motor.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/PWM_Motor.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/PWM_Motor.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/PWM_Motor.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/PWM_Motor.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/PWM_Motor.c **** *
 445:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 446:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 447:Generated_Source\PSoC4/PWM_Motor.c **** *
 448:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/PWM_Motor.c **** {
 256              		.loc 1 450 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 261              	.LVL18:
 451:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_TRIG_CONTROL2_REG = (modeMask & PWM_Motor_6BIT_MASK);
 262              		.loc 1 451 0
 263 0000 3F23     		movs	r3, #63
 264 0002 1840     		ands	r0, r3
 265              	.LVL19:
 266 0004 014B     		ldr	r3, .L17
 267 0006 1860     		str	r0, [r3]
 452:Generated_Source\PSoC4/PWM_Motor.c **** }
 268              		.loc 1 452 0
 269              		@ sp needed
 270 0008 7047     		bx	lr
 271              	.L18:
 272 000a C046     		.align	2
 273              	.L17:
 274 000c 68012040 		.word	1075839336
 275              		.cfi_endproc
 276              	.LFE10:
 277              		.size	PWM_Motor_SetPWMMode, .-PWM_Motor_SetPWMMode
 278              		.section	.text.PWM_Motor_SetPWMSyncKill,"ax",%progbits
 279              		.align	2
 280              		.global	PWM_Motor_SetPWMSyncKill
 281              		.code	16
 282              		.thumb_func
 283              		.type	PWM_Motor_SetPWMSyncKill, %function
 284              	PWM_Motor_SetPWMSyncKill:
 285              	.LFB11:
 453:Generated_Source\PSoC4/PWM_Motor.c **** 
 454:Generated_Source\PSoC4/PWM_Motor.c **** 
 455:Generated_Source\PSoC4/PWM_Motor.c **** 
 456:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 14


 457:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_SetPWMSyncKill
 458:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 459:Generated_Source\PSoC4/PWM_Motor.c **** *
 460:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 461:Generated_Source\PSoC4/PWM_Motor.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/PWM_Motor.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/PWM_Motor.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/PWM_Motor.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/PWM_Motor.c **** *
 466:Generated_Source\PSoC4/PWM_Motor.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/PWM_Motor.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/PWM_Motor.c **** *
 469:Generated_Source\PSoC4/PWM_Motor.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/PWM_Motor.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/PWM_Motor.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/PWM_Motor.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/PWM_Motor.c **** 
 474:Generated_Source\PSoC4/PWM_Motor.c **** *
 475:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 476:Generated_Source\PSoC4/PWM_Motor.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
 478:Generated_Source\PSoC4/PWM_Motor.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/PWM_Motor.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/PWM_Motor.c **** *
 481:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 482:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 483:Generated_Source\PSoC4/PWM_Motor.c **** *
 484:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/PWM_Motor.c **** {
 286              		.loc 1 486 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              	.LVL20:
 291 0000 70B5     		push	{r4, r5, r6, lr}
 292              		.cfi_def_cfa_offset 16
 293              		.cfi_offset 4, -16
 294              		.cfi_offset 5, -12
 295              		.cfi_offset 6, -8
 296              		.cfi_offset 14, -4
 297 0002 0400     		movs	r4, r0
 487:Generated_Source\PSoC4/PWM_Motor.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/PWM_Motor.c **** 
 489:Generated_Source\PSoC4/PWM_Motor.c ****     enableInterrupts = CyEnterCriticalSection();
 298              		.loc 1 489 0
 299 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 300              	.LVL21:
 490:Generated_Source\PSoC4/PWM_Motor.c **** 
 491:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG &= (uint32)~PWM_Motor_PWM_SYNC_KILL_MASK;
 301              		.loc 1 491 0
 302 0008 064A     		ldr	r2, .L20
 303 000a 1368     		ldr	r3, [r2]
 304 000c 0421     		movs	r1, #4
 305 000e 8B43     		bics	r3, r1
 306 0010 1360     		str	r3, [r2]
 492:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_Motor_1BIT_MASK)  <<
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 15


 307              		.loc 1 492 0
 308 0012 1568     		ldr	r5, [r2]
 309 0014 A300     		lsls	r3, r4, #2
 310 0016 1940     		ands	r1, r3
 311 0018 0C00     		movs	r4, r1
 312              	.LVL22:
 313 001a 2C43     		orrs	r4, r5
 314 001c 1460     		str	r4, [r2]
 493:Generated_Source\PSoC4/PWM_Motor.c ****                                                PWM_Motor_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/PWM_Motor.c **** 
 495:Generated_Source\PSoC4/PWM_Motor.c ****     CyExitCriticalSection(enableInterrupts);
 315              		.loc 1 495 0
 316 001e FFF7FEFF 		bl	CyExitCriticalSection
 317              	.LVL23:
 496:Generated_Source\PSoC4/PWM_Motor.c **** }
 318              		.loc 1 496 0
 319              		@ sp needed
 320 0022 70BD     		pop	{r4, r5, r6, pc}
 321              	.L21:
 322              		.align	2
 323              	.L20:
 324 0024 40012040 		.word	1075839296
 325              		.cfi_endproc
 326              	.LFE11:
 327              		.size	PWM_Motor_SetPWMSyncKill, .-PWM_Motor_SetPWMSyncKill
 328              		.section	.text.PWM_Motor_SetPWMStopOnKill,"ax",%progbits
 329              		.align	2
 330              		.global	PWM_Motor_SetPWMStopOnKill
 331              		.code	16
 332              		.thumb_func
 333              		.type	PWM_Motor_SetPWMStopOnKill, %function
 334              	PWM_Motor_SetPWMStopOnKill:
 335              	.LFB12:
 497:Generated_Source\PSoC4/PWM_Motor.c **** 
 498:Generated_Source\PSoC4/PWM_Motor.c **** 
 499:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_SetPWMStopOnKill
 501:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 502:Generated_Source\PSoC4/PWM_Motor.c **** *
 503:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 504:Generated_Source\PSoC4/PWM_Motor.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/PWM_Motor.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/PWM_Motor.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/PWM_Motor.c **** *
 508:Generated_Source\PSoC4/PWM_Motor.c **** *
 509:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 510:Generated_Source\PSoC4/PWM_Motor.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
 512:Generated_Source\PSoC4/PWM_Motor.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/PWM_Motor.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/PWM_Motor.c **** *
 515:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 516:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 517:Generated_Source\PSoC4/PWM_Motor.c **** *
 518:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/PWM_Motor.c **** {
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 16


 336              		.loc 1 520 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              	.LVL24:
 341 0000 70B5     		push	{r4, r5, r6, lr}
 342              		.cfi_def_cfa_offset 16
 343              		.cfi_offset 4, -16
 344              		.cfi_offset 5, -12
 345              		.cfi_offset 6, -8
 346              		.cfi_offset 14, -4
 347 0002 0400     		movs	r4, r0
 521:Generated_Source\PSoC4/PWM_Motor.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/PWM_Motor.c **** 
 523:Generated_Source\PSoC4/PWM_Motor.c ****     enableInterrupts = CyEnterCriticalSection();
 348              		.loc 1 523 0
 349 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 350              	.LVL25:
 524:Generated_Source\PSoC4/PWM_Motor.c **** 
 525:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG &= (uint32)~PWM_Motor_PWM_STOP_KILL_MASK;
 351              		.loc 1 525 0
 352 0008 064A     		ldr	r2, .L23
 353 000a 1368     		ldr	r3, [r2]
 354 000c 0821     		movs	r1, #8
 355 000e 8B43     		bics	r3, r1
 356 0010 1360     		str	r3, [r2]
 526:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_Motor_1BIT_MASK)  <<
 357              		.loc 1 526 0
 358 0012 1568     		ldr	r5, [r2]
 359 0014 E300     		lsls	r3, r4, #3
 360 0016 1940     		ands	r1, r3
 361 0018 0C00     		movs	r4, r1
 362              	.LVL26:
 363 001a 2C43     		orrs	r4, r5
 364 001c 1460     		str	r4, [r2]
 527:Generated_Source\PSoC4/PWM_Motor.c ****                                                          PWM_Motor_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/PWM_Motor.c **** 
 529:Generated_Source\PSoC4/PWM_Motor.c ****     CyExitCriticalSection(enableInterrupts);
 365              		.loc 1 529 0
 366 001e FFF7FEFF 		bl	CyExitCriticalSection
 367              	.LVL27:
 530:Generated_Source\PSoC4/PWM_Motor.c **** }
 368              		.loc 1 530 0
 369              		@ sp needed
 370 0022 70BD     		pop	{r4, r5, r6, pc}
 371              	.L24:
 372              		.align	2
 373              	.L23:
 374 0024 40012040 		.word	1075839296
 375              		.cfi_endproc
 376              	.LFE12:
 377              		.size	PWM_Motor_SetPWMStopOnKill, .-PWM_Motor_SetPWMStopOnKill
 378              		.section	.text.PWM_Motor_SetPWMDeadTime,"ax",%progbits
 379              		.align	2
 380              		.global	PWM_Motor_SetPWMDeadTime
 381              		.code	16
 382              		.thumb_func
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 17


 383              		.type	PWM_Motor_SetPWMDeadTime, %function
 384              	PWM_Motor_SetPWMDeadTime:
 385              	.LFB13:
 531:Generated_Source\PSoC4/PWM_Motor.c **** 
 532:Generated_Source\PSoC4/PWM_Motor.c **** 
 533:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_SetPWMDeadTime
 535:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 536:Generated_Source\PSoC4/PWM_Motor.c **** *
 537:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 538:Generated_Source\PSoC4/PWM_Motor.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/PWM_Motor.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/PWM_Motor.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/PWM_Motor.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/PWM_Motor.c **** 
 543:Generated_Source\PSoC4/PWM_Motor.c **** *
 544:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 545:Generated_Source\PSoC4/PWM_Motor.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/PWM_Motor.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/PWM_Motor.c **** *
 548:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 549:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 550:Generated_Source\PSoC4/PWM_Motor.c **** *
 551:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/PWM_Motor.c **** {
 386              		.loc 1 553 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390              	.LVL28:
 391 0000 10B5     		push	{r4, lr}
 392              		.cfi_def_cfa_offset 8
 393              		.cfi_offset 4, -8
 394              		.cfi_offset 14, -4
 395 0002 0400     		movs	r4, r0
 554:Generated_Source\PSoC4/PWM_Motor.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/PWM_Motor.c **** 
 556:Generated_Source\PSoC4/PWM_Motor.c ****     enableInterrupts = CyEnterCriticalSection();
 396              		.loc 1 556 0
 397 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 398              	.LVL29:
 557:Generated_Source\PSoC4/PWM_Motor.c **** 
 558:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG &= (uint32)~PWM_Motor_PRESCALER_MASK;
 399              		.loc 1 558 0
 400 0008 064B     		ldr	r3, .L26
 401 000a 1968     		ldr	r1, [r3]
 402 000c 064A     		ldr	r2, .L26+4
 403 000e 0A40     		ands	r2, r1
 404 0010 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG |= ((uint32)((deadTime & PWM_Motor_8BIT_MASK) <<
 405              		.loc 1 559 0
 406 0012 1A68     		ldr	r2, [r3]
 407 0014 2406     		lsls	r4, r4, #24
 408              	.LVL30:
 409 0016 240C     		lsrs	r4, r4, #16
 410 0018 1443     		orrs	r4, r2
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 18


 411 001a 1C60     		str	r4, [r3]
 560:Generated_Source\PSoC4/PWM_Motor.c ****                                                           PWM_Motor_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/PWM_Motor.c **** 
 562:Generated_Source\PSoC4/PWM_Motor.c ****     CyExitCriticalSection(enableInterrupts);
 412              		.loc 1 562 0
 413 001c FFF7FEFF 		bl	CyExitCriticalSection
 414              	.LVL31:
 563:Generated_Source\PSoC4/PWM_Motor.c **** }
 415              		.loc 1 563 0
 416              		@ sp needed
 417 0020 10BD     		pop	{r4, pc}
 418              	.L27:
 419 0022 C046     		.align	2
 420              	.L26:
 421 0024 40012040 		.word	1075839296
 422 0028 FF00FFFF 		.word	-65281
 423              		.cfi_endproc
 424              	.LFE13:
 425              		.size	PWM_Motor_SetPWMDeadTime, .-PWM_Motor_SetPWMDeadTime
 426              		.section	.text.PWM_Motor_SetPWMInvert,"ax",%progbits
 427              		.align	2
 428              		.global	PWM_Motor_SetPWMInvert
 429              		.code	16
 430              		.thumb_func
 431              		.type	PWM_Motor_SetPWMInvert, %function
 432              	PWM_Motor_SetPWMInvert:
 433              	.LFB14:
 564:Generated_Source\PSoC4/PWM_Motor.c **** 
 565:Generated_Source\PSoC4/PWM_Motor.c **** 
 566:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_SetPWMInvert
 568:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 569:Generated_Source\PSoC4/PWM_Motor.c **** *
 570:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 571:Generated_Source\PSoC4/PWM_Motor.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/PWM_Motor.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/PWM_Motor.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/PWM_Motor.c **** *
 575:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 576:Generated_Source\PSoC4/PWM_Motor.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
 578:Generated_Source\PSoC4/PWM_Motor.c **** *         - PWM_Motor_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/PWM_Motor.c **** *         - PWM_Motor_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/PWM_Motor.c **** *
 581:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 582:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 583:Generated_Source\PSoC4/PWM_Motor.c **** *
 584:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/PWM_Motor.c **** {
 434              		.loc 1 586 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              	.LVL32:
 439 0000 10B5     		push	{r4, lr}
 440              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 19


 441              		.cfi_offset 4, -8
 442              		.cfi_offset 14, -4
 443 0002 0400     		movs	r4, r0
 587:Generated_Source\PSoC4/PWM_Motor.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/PWM_Motor.c **** 
 589:Generated_Source\PSoC4/PWM_Motor.c ****     enableInterrupts = CyEnterCriticalSection();
 444              		.loc 1 589 0
 445 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 446              	.LVL33:
 590:Generated_Source\PSoC4/PWM_Motor.c **** 
 591:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG &= (uint32)~PWM_Motor_INV_OUT_MASK;
 447              		.loc 1 591 0
 448 0008 054B     		ldr	r3, .L29
 449 000a 1968     		ldr	r1, [r3]
 450 000c 054A     		ldr	r2, .L29+4
 451 000e 0A40     		ands	r2, r1
 452 0010 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG |= mask;
 453              		.loc 1 592 0
 454 0012 1A68     		ldr	r2, [r3]
 455 0014 1443     		orrs	r4, r2
 456              	.LVL34:
 457 0016 1C60     		str	r4, [r3]
 593:Generated_Source\PSoC4/PWM_Motor.c **** 
 594:Generated_Source\PSoC4/PWM_Motor.c ****     CyExitCriticalSection(enableInterrupts);
 458              		.loc 1 594 0
 459 0018 FFF7FEFF 		bl	CyExitCriticalSection
 460              	.LVL35:
 595:Generated_Source\PSoC4/PWM_Motor.c **** }
 461              		.loc 1 595 0
 462              		@ sp needed
 463 001c 10BD     		pop	{r4, pc}
 464              	.L30:
 465 001e C046     		.align	2
 466              	.L29:
 467 0020 40012040 		.word	1075839296
 468 0024 FFFFCFFF 		.word	-3145729
 469              		.cfi_endproc
 470              	.LFE14:
 471              		.size	PWM_Motor_SetPWMInvert, .-PWM_Motor_SetPWMInvert
 472              		.section	.text.PWM_Motor_WriteCounter,"ax",%progbits
 473              		.align	2
 474              		.global	PWM_Motor_WriteCounter
 475              		.code	16
 476              		.thumb_func
 477              		.type	PWM_Motor_WriteCounter, %function
 478              	PWM_Motor_WriteCounter:
 479              	.LFB15:
 596:Generated_Source\PSoC4/PWM_Motor.c **** 
 597:Generated_Source\PSoC4/PWM_Motor.c **** 
 598:Generated_Source\PSoC4/PWM_Motor.c **** 
 599:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_WriteCounter
 601:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 602:Generated_Source\PSoC4/PWM_Motor.c **** *
 603:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 604:Generated_Source\PSoC4/PWM_Motor.c **** *  Writes a new 16bit counter value directly into the counter register, thus
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 20


 605:Generated_Source\PSoC4/PWM_Motor.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/PWM_Motor.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/PWM_Motor.c **** *
 608:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 609:Generated_Source\PSoC4/PWM_Motor.c **** *  count: value to write
 610:Generated_Source\PSoC4/PWM_Motor.c **** *
 611:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 612:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 613:Generated_Source\PSoC4/PWM_Motor.c **** *
 614:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/PWM_Motor.c **** {
 480              		.loc 1 616 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              		@ link register save eliminated.
 485              	.LVL36:
 617:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_COUNTER_REG = (count & PWM_Motor_16BIT_MASK);
 486              		.loc 1 617 0
 487 0000 0004     		lsls	r0, r0, #16
 488              	.LVL37:
 489 0002 000C     		lsrs	r0, r0, #16
 490 0004 014B     		ldr	r3, .L32
 491 0006 1860     		str	r0, [r3]
 618:Generated_Source\PSoC4/PWM_Motor.c **** }
 492              		.loc 1 618 0
 493              		@ sp needed
 494 0008 7047     		bx	lr
 495              	.L33:
 496 000a C046     		.align	2
 497              	.L32:
 498 000c 48012040 		.word	1075839304
 499              		.cfi_endproc
 500              	.LFE15:
 501              		.size	PWM_Motor_WriteCounter, .-PWM_Motor_WriteCounter
 502              		.section	.text.PWM_Motor_ReadCounter,"ax",%progbits
 503              		.align	2
 504              		.global	PWM_Motor_ReadCounter
 505              		.code	16
 506              		.thumb_func
 507              		.type	PWM_Motor_ReadCounter, %function
 508              	PWM_Motor_ReadCounter:
 509              	.LFB16:
 619:Generated_Source\PSoC4/PWM_Motor.c **** 
 620:Generated_Source\PSoC4/PWM_Motor.c **** 
 621:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_ReadCounter
 623:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 624:Generated_Source\PSoC4/PWM_Motor.c **** *
 625:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 626:Generated_Source\PSoC4/PWM_Motor.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/PWM_Motor.c **** *
 628:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 629:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 630:Generated_Source\PSoC4/PWM_Motor.c **** *
 631:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 21


 632:Generated_Source\PSoC4/PWM_Motor.c **** *  Current counter value
 633:Generated_Source\PSoC4/PWM_Motor.c **** *
 634:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/PWM_Motor.c **** uint32 PWM_Motor_ReadCounter(void)
 636:Generated_Source\PSoC4/PWM_Motor.c **** {
 510              		.loc 1 636 0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 514              		@ link register save eliminated.
 637:Generated_Source\PSoC4/PWM_Motor.c ****     return (PWM_Motor_COUNTER_REG & PWM_Motor_16BIT_MASK);
 515              		.loc 1 637 0
 516 0000 024B     		ldr	r3, .L35
 517 0002 1868     		ldr	r0, [r3]
 518 0004 0004     		lsls	r0, r0, #16
 519 0006 000C     		lsrs	r0, r0, #16
 638:Generated_Source\PSoC4/PWM_Motor.c **** }
 520              		.loc 1 638 0
 521              		@ sp needed
 522 0008 7047     		bx	lr
 523              	.L36:
 524 000a C046     		.align	2
 525              	.L35:
 526 000c 48012040 		.word	1075839304
 527              		.cfi_endproc
 528              	.LFE16:
 529              		.size	PWM_Motor_ReadCounter, .-PWM_Motor_ReadCounter
 530              		.section	.text.PWM_Motor_SetCounterMode,"ax",%progbits
 531              		.align	2
 532              		.global	PWM_Motor_SetCounterMode
 533              		.code	16
 534              		.thumb_func
 535              		.type	PWM_Motor_SetCounterMode, %function
 536              	PWM_Motor_SetCounterMode:
 537              	.LFB17:
 639:Generated_Source\PSoC4/PWM_Motor.c **** 
 640:Generated_Source\PSoC4/PWM_Motor.c **** 
 641:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_SetCounterMode
 643:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 644:Generated_Source\PSoC4/PWM_Motor.c **** *
 645:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 646:Generated_Source\PSoC4/PWM_Motor.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/PWM_Motor.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/PWM_Motor.c **** *
 649:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 650:Generated_Source\PSoC4/PWM_Motor.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
 652:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/PWM_Motor.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/PWM_Motor.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/PWM_Motor.c **** *                                         and period
 659:Generated_Source\PSoC4/PWM_Motor.c **** *
 660:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 22


 661:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 662:Generated_Source\PSoC4/PWM_Motor.c **** *
 663:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/PWM_Motor.c **** {
 538              		.loc 1 665 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 0, uses_anonymous_args = 0
 542              	.LVL38:
 543 0000 10B5     		push	{r4, lr}
 544              		.cfi_def_cfa_offset 8
 545              		.cfi_offset 4, -8
 546              		.cfi_offset 14, -4
 547 0002 0400     		movs	r4, r0
 666:Generated_Source\PSoC4/PWM_Motor.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/PWM_Motor.c **** 
 668:Generated_Source\PSoC4/PWM_Motor.c ****     enableInterrupts = CyEnterCriticalSection();
 548              		.loc 1 668 0
 549 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 550              	.LVL39:
 669:Generated_Source\PSoC4/PWM_Motor.c **** 
 670:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG &= (uint32)~PWM_Motor_UPDOWN_MASK;
 551              		.loc 1 670 0
 552 0008 054B     		ldr	r3, .L38
 553 000a 1968     		ldr	r1, [r3]
 554 000c 054A     		ldr	r2, .L38+4
 555 000e 0A40     		ands	r2, r1
 556 0010 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG |= counterMode;
 557              		.loc 1 671 0
 558 0012 1A68     		ldr	r2, [r3]
 559 0014 1443     		orrs	r4, r2
 560              	.LVL40:
 561 0016 1C60     		str	r4, [r3]
 672:Generated_Source\PSoC4/PWM_Motor.c **** 
 673:Generated_Source\PSoC4/PWM_Motor.c ****     CyExitCriticalSection(enableInterrupts);
 562              		.loc 1 673 0
 563 0018 FFF7FEFF 		bl	CyExitCriticalSection
 564              	.LVL41:
 674:Generated_Source\PSoC4/PWM_Motor.c **** }
 565              		.loc 1 674 0
 566              		@ sp needed
 567 001c 10BD     		pop	{r4, pc}
 568              	.L39:
 569 001e C046     		.align	2
 570              	.L38:
 571 0020 40012040 		.word	1075839296
 572 0024 FFFFFCFF 		.word	-196609
 573              		.cfi_endproc
 574              	.LFE17:
 575              		.size	PWM_Motor_SetCounterMode, .-PWM_Motor_SetCounterMode
 576              		.section	.text.PWM_Motor_WritePeriod,"ax",%progbits
 577              		.align	2
 578              		.global	PWM_Motor_WritePeriod
 579              		.code	16
 580              		.thumb_func
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 23


 581              		.type	PWM_Motor_WritePeriod, %function
 582              	PWM_Motor_WritePeriod:
 583              	.LFB18:
 675:Generated_Source\PSoC4/PWM_Motor.c **** 
 676:Generated_Source\PSoC4/PWM_Motor.c **** 
 677:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_WritePeriod
 679:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 680:Generated_Source\PSoC4/PWM_Motor.c **** *
 681:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 682:Generated_Source\PSoC4/PWM_Motor.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/PWM_Motor.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/PWM_Motor.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/PWM_Motor.c **** *
 686:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 687:Generated_Source\PSoC4/PWM_Motor.c **** *  period: Period value
 688:Generated_Source\PSoC4/PWM_Motor.c **** *
 689:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 690:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 691:Generated_Source\PSoC4/PWM_Motor.c **** *
 692:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/PWM_Motor.c **** {
 584              		.loc 1 694 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589              	.LVL42:
 695:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_PERIOD_REG = (period & PWM_Motor_16BIT_MASK);
 590              		.loc 1 695 0
 591 0000 0004     		lsls	r0, r0, #16
 592              	.LVL43:
 593 0002 000C     		lsrs	r0, r0, #16
 594 0004 014B     		ldr	r3, .L41
 595 0006 1860     		str	r0, [r3]
 696:Generated_Source\PSoC4/PWM_Motor.c **** }
 596              		.loc 1 696 0
 597              		@ sp needed
 598 0008 7047     		bx	lr
 599              	.L42:
 600 000a C046     		.align	2
 601              	.L41:
 602 000c 54012040 		.word	1075839316
 603              		.cfi_endproc
 604              	.LFE18:
 605              		.size	PWM_Motor_WritePeriod, .-PWM_Motor_WritePeriod
 606              		.section	.text.PWM_Motor_ReadPeriod,"ax",%progbits
 607              		.align	2
 608              		.global	PWM_Motor_ReadPeriod
 609              		.code	16
 610              		.thumb_func
 611              		.type	PWM_Motor_ReadPeriod, %function
 612              	PWM_Motor_ReadPeriod:
 613              	.LFB19:
 697:Generated_Source\PSoC4/PWM_Motor.c **** 
 698:Generated_Source\PSoC4/PWM_Motor.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 24


 699:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_ReadPeriod
 701:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 702:Generated_Source\PSoC4/PWM_Motor.c **** *
 703:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 704:Generated_Source\PSoC4/PWM_Motor.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/PWM_Motor.c **** *
 706:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 707:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 708:Generated_Source\PSoC4/PWM_Motor.c **** *
 709:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 710:Generated_Source\PSoC4/PWM_Motor.c **** *  Period value
 711:Generated_Source\PSoC4/PWM_Motor.c **** *
 712:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/PWM_Motor.c **** uint32 PWM_Motor_ReadPeriod(void)
 714:Generated_Source\PSoC4/PWM_Motor.c **** {
 614              		.loc 1 714 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 0, uses_anonymous_args = 0
 618              		@ link register save eliminated.
 715:Generated_Source\PSoC4/PWM_Motor.c ****     return (PWM_Motor_PERIOD_REG & PWM_Motor_16BIT_MASK);
 619              		.loc 1 715 0
 620 0000 024B     		ldr	r3, .L44
 621 0002 1868     		ldr	r0, [r3]
 622 0004 0004     		lsls	r0, r0, #16
 623 0006 000C     		lsrs	r0, r0, #16
 716:Generated_Source\PSoC4/PWM_Motor.c **** }
 624              		.loc 1 716 0
 625              		@ sp needed
 626 0008 7047     		bx	lr
 627              	.L45:
 628 000a C046     		.align	2
 629              	.L44:
 630 000c 54012040 		.word	1075839316
 631              		.cfi_endproc
 632              	.LFE19:
 633              		.size	PWM_Motor_ReadPeriod, .-PWM_Motor_ReadPeriod
 634              		.section	.text.PWM_Motor_SetCompareSwap,"ax",%progbits
 635              		.align	2
 636              		.global	PWM_Motor_SetCompareSwap
 637              		.code	16
 638              		.thumb_func
 639              		.type	PWM_Motor_SetCompareSwap, %function
 640              	PWM_Motor_SetCompareSwap:
 641              	.LFB20:
 717:Generated_Source\PSoC4/PWM_Motor.c **** 
 718:Generated_Source\PSoC4/PWM_Motor.c **** 
 719:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_SetCompareSwap
 721:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 722:Generated_Source\PSoC4/PWM_Motor.c **** *
 723:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 724:Generated_Source\PSoC4/PWM_Motor.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/PWM_Motor.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/PWM_Motor.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/PWM_Motor.c **** *  following a hardware switch event.
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 25


 728:Generated_Source\PSoC4/PWM_Motor.c **** *
 729:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 730:Generated_Source\PSoC4/PWM_Motor.c **** *  swapEnable
 731:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
 732:Generated_Source\PSoC4/PWM_Motor.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/PWM_Motor.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/PWM_Motor.c **** *
 735:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 736:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 737:Generated_Source\PSoC4/PWM_Motor.c **** *
 738:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/PWM_Motor.c **** {
 642              		.loc 1 740 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646              	.LVL44:
 647 0000 10B5     		push	{r4, lr}
 648              		.cfi_def_cfa_offset 8
 649              		.cfi_offset 4, -8
 650              		.cfi_offset 14, -4
 651 0002 0400     		movs	r4, r0
 741:Generated_Source\PSoC4/PWM_Motor.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/PWM_Motor.c **** 
 743:Generated_Source\PSoC4/PWM_Motor.c ****     enableInterrupts = CyEnterCriticalSection();
 652              		.loc 1 743 0
 653 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 654              	.LVL45:
 744:Generated_Source\PSoC4/PWM_Motor.c **** 
 745:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG &= (uint32)~PWM_Motor_RELOAD_CC_MASK;
 655              		.loc 1 745 0
 656 0008 054B     		ldr	r3, .L47
 657 000a 1A68     		ldr	r2, [r3]
 658 000c 0121     		movs	r1, #1
 659 000e 8A43     		bics	r2, r1
 660 0010 1A60     		str	r2, [r3]
 746:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG |= (swapEnable & PWM_Motor_1BIT_MASK);
 661              		.loc 1 746 0
 662 0012 1A68     		ldr	r2, [r3]
 663 0014 0C40     		ands	r4, r1
 664              	.LVL46:
 665 0016 1443     		orrs	r4, r2
 666 0018 1C60     		str	r4, [r3]
 747:Generated_Source\PSoC4/PWM_Motor.c **** 
 748:Generated_Source\PSoC4/PWM_Motor.c ****     CyExitCriticalSection(enableInterrupts);
 667              		.loc 1 748 0
 668 001a FFF7FEFF 		bl	CyExitCriticalSection
 669              	.LVL47:
 749:Generated_Source\PSoC4/PWM_Motor.c **** }
 670              		.loc 1 749 0
 671              		@ sp needed
 672 001e 10BD     		pop	{r4, pc}
 673              	.L48:
 674              		.align	2
 675              	.L47:
 676 0020 40012040 		.word	1075839296
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 26


 677              		.cfi_endproc
 678              	.LFE20:
 679              		.size	PWM_Motor_SetCompareSwap, .-PWM_Motor_SetCompareSwap
 680              		.section	.text.PWM_Motor_WritePeriodBuf,"ax",%progbits
 681              		.align	2
 682              		.global	PWM_Motor_WritePeriodBuf
 683              		.code	16
 684              		.thumb_func
 685              		.type	PWM_Motor_WritePeriodBuf, %function
 686              	PWM_Motor_WritePeriodBuf:
 687              	.LFB21:
 750:Generated_Source\PSoC4/PWM_Motor.c **** 
 751:Generated_Source\PSoC4/PWM_Motor.c **** 
 752:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_WritePeriodBuf
 754:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 755:Generated_Source\PSoC4/PWM_Motor.c **** *
 756:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 757:Generated_Source\PSoC4/PWM_Motor.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/PWM_Motor.c **** *
 759:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 760:Generated_Source\PSoC4/PWM_Motor.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/PWM_Motor.c **** *
 762:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 763:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 764:Generated_Source\PSoC4/PWM_Motor.c **** *
 765:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/PWM_Motor.c **** {
 688              		.loc 1 767 0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692              		@ link register save eliminated.
 693              	.LVL48:
 768:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_PERIOD_BUF_REG = (periodBuf & PWM_Motor_16BIT_MASK);
 694              		.loc 1 768 0
 695 0000 0004     		lsls	r0, r0, #16
 696              	.LVL49:
 697 0002 000C     		lsrs	r0, r0, #16
 698 0004 014B     		ldr	r3, .L50
 699 0006 1860     		str	r0, [r3]
 769:Generated_Source\PSoC4/PWM_Motor.c **** }
 700              		.loc 1 769 0
 701              		@ sp needed
 702 0008 7047     		bx	lr
 703              	.L51:
 704 000a C046     		.align	2
 705              	.L50:
 706 000c 58012040 		.word	1075839320
 707              		.cfi_endproc
 708              	.LFE21:
 709              		.size	PWM_Motor_WritePeriodBuf, .-PWM_Motor_WritePeriodBuf
 710              		.section	.text.PWM_Motor_ReadPeriodBuf,"ax",%progbits
 711              		.align	2
 712              		.global	PWM_Motor_ReadPeriodBuf
 713              		.code	16
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 27


 714              		.thumb_func
 715              		.type	PWM_Motor_ReadPeriodBuf, %function
 716              	PWM_Motor_ReadPeriodBuf:
 717              	.LFB22:
 770:Generated_Source\PSoC4/PWM_Motor.c **** 
 771:Generated_Source\PSoC4/PWM_Motor.c **** 
 772:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_ReadPeriodBuf
 774:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 775:Generated_Source\PSoC4/PWM_Motor.c **** *
 776:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 777:Generated_Source\PSoC4/PWM_Motor.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/PWM_Motor.c **** *
 779:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 780:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 781:Generated_Source\PSoC4/PWM_Motor.c **** *
 782:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 783:Generated_Source\PSoC4/PWM_Motor.c **** *  Period value
 784:Generated_Source\PSoC4/PWM_Motor.c **** *
 785:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/PWM_Motor.c **** uint32 PWM_Motor_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/PWM_Motor.c **** {
 718              		.loc 1 787 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 0, uses_anonymous_args = 0
 722              		@ link register save eliminated.
 788:Generated_Source\PSoC4/PWM_Motor.c ****     return (PWM_Motor_PERIOD_BUF_REG & PWM_Motor_16BIT_MASK);
 723              		.loc 1 788 0
 724 0000 024B     		ldr	r3, .L53
 725 0002 1868     		ldr	r0, [r3]
 726 0004 0004     		lsls	r0, r0, #16
 727 0006 000C     		lsrs	r0, r0, #16
 789:Generated_Source\PSoC4/PWM_Motor.c **** }
 728              		.loc 1 789 0
 729              		@ sp needed
 730 0008 7047     		bx	lr
 731              	.L54:
 732 000a C046     		.align	2
 733              	.L53:
 734 000c 58012040 		.word	1075839320
 735              		.cfi_endproc
 736              	.LFE22:
 737              		.size	PWM_Motor_ReadPeriodBuf, .-PWM_Motor_ReadPeriodBuf
 738              		.section	.text.PWM_Motor_SetPeriodSwap,"ax",%progbits
 739              		.align	2
 740              		.global	PWM_Motor_SetPeriodSwap
 741              		.code	16
 742              		.thumb_func
 743              		.type	PWM_Motor_SetPeriodSwap, %function
 744              	PWM_Motor_SetPeriodSwap:
 745              	.LFB23:
 790:Generated_Source\PSoC4/PWM_Motor.c **** 
 791:Generated_Source\PSoC4/PWM_Motor.c **** 
 792:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_SetPeriodSwap
 794:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 28


 795:Generated_Source\PSoC4/PWM_Motor.c **** *
 796:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 797:Generated_Source\PSoC4/PWM_Motor.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/PWM_Motor.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/PWM_Motor.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/PWM_Motor.c **** *  switch event.
 801:Generated_Source\PSoC4/PWM_Motor.c **** *
 802:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 803:Generated_Source\PSoC4/PWM_Motor.c **** *  swapEnable
 804:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
 805:Generated_Source\PSoC4/PWM_Motor.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/PWM_Motor.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/PWM_Motor.c **** *
 808:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 809:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 810:Generated_Source\PSoC4/PWM_Motor.c **** *
 811:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/PWM_Motor.c **** {
 746              		.loc 1 813 0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750              	.LVL50:
 751 0000 70B5     		push	{r4, r5, r6, lr}
 752              		.cfi_def_cfa_offset 16
 753              		.cfi_offset 4, -16
 754              		.cfi_offset 5, -12
 755              		.cfi_offset 6, -8
 756              		.cfi_offset 14, -4
 757 0002 0400     		movs	r4, r0
 814:Generated_Source\PSoC4/PWM_Motor.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/PWM_Motor.c **** 
 816:Generated_Source\PSoC4/PWM_Motor.c ****     enableInterrupts = CyEnterCriticalSection();
 758              		.loc 1 816 0
 759 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 760              	.LVL51:
 817:Generated_Source\PSoC4/PWM_Motor.c **** 
 818:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG &= (uint32)~PWM_Motor_RELOAD_PERIOD_MASK;
 761              		.loc 1 818 0
 762 0008 064A     		ldr	r2, .L56
 763 000a 1368     		ldr	r3, [r2]
 764 000c 0221     		movs	r1, #2
 765 000e 8B43     		bics	r3, r1
 766 0010 1360     		str	r3, [r2]
 819:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_CONTROL_REG |= ((uint32)((swapEnable & PWM_Motor_1BIT_MASK) <<
 767              		.loc 1 819 0
 768 0012 1568     		ldr	r5, [r2]
 769 0014 6300     		lsls	r3, r4, #1
 770 0016 1940     		ands	r1, r3
 771 0018 0C00     		movs	r4, r1
 772              	.LVL52:
 773 001a 2C43     		orrs	r4, r5
 774 001c 1460     		str	r4, [r2]
 820:Generated_Source\PSoC4/PWM_Motor.c ****                                                             PWM_Motor_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/PWM_Motor.c **** 
 822:Generated_Source\PSoC4/PWM_Motor.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 29


 775              		.loc 1 822 0
 776 001e FFF7FEFF 		bl	CyExitCriticalSection
 777              	.LVL53:
 823:Generated_Source\PSoC4/PWM_Motor.c **** }
 778              		.loc 1 823 0
 779              		@ sp needed
 780 0022 70BD     		pop	{r4, r5, r6, pc}
 781              	.L57:
 782              		.align	2
 783              	.L56:
 784 0024 40012040 		.word	1075839296
 785              		.cfi_endproc
 786              	.LFE23:
 787              		.size	PWM_Motor_SetPeriodSwap, .-PWM_Motor_SetPeriodSwap
 788              		.section	.text.PWM_Motor_WriteCompare,"ax",%progbits
 789              		.align	2
 790              		.global	PWM_Motor_WriteCompare
 791              		.code	16
 792              		.thumb_func
 793              		.type	PWM_Motor_WriteCompare, %function
 794              	PWM_Motor_WriteCompare:
 795              	.LFB24:
 824:Generated_Source\PSoC4/PWM_Motor.c **** 
 825:Generated_Source\PSoC4/PWM_Motor.c **** 
 826:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_WriteCompare
 828:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 829:Generated_Source\PSoC4/PWM_Motor.c **** *
 830:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 831:Generated_Source\PSoC4/PWM_Motor.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/PWM_Motor.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/PWM_Motor.c **** *
 834:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 835:Generated_Source\PSoC4/PWM_Motor.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/PWM_Motor.c **** *
 837:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 838:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 839:Generated_Source\PSoC4/PWM_Motor.c **** *
 840:Generated_Source\PSoC4/PWM_Motor.c **** * Note:
 841:Generated_Source\PSoC4/PWM_Motor.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/PWM_Motor.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/PWM_Motor.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/PWM_Motor.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/PWM_Motor.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/PWM_Motor.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/PWM_Motor.c **** *
 848:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/PWM_Motor.c **** {
 796              		.loc 1 850 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 0
 799              		@ frame_needed = 0, uses_anonymous_args = 0
 800              		@ link register save eliminated.
 801              	.LVL54:
 851:Generated_Source\PSoC4/PWM_Motor.c ****     #if (PWM_Motor_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/PWM_Motor.c ****         uint32 currentMode;
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 30


 853:Generated_Source\PSoC4/PWM_Motor.c ****     #endif /* (PWM_Motor_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/PWM_Motor.c **** 
 855:Generated_Source\PSoC4/PWM_Motor.c ****     #if (PWM_Motor_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/PWM_Motor.c ****         currentMode = ((PWM_Motor_CONTROL_REG & PWM_Motor_UPDOWN_MASK) >> PWM_Motor_UPDOWN_SHIFT);
 857:Generated_Source\PSoC4/PWM_Motor.c **** 
 858:Generated_Source\PSoC4/PWM_Motor.c ****         if (((uint32)PWM_Motor__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/PWM_Motor.c ****         {
 860:Generated_Source\PSoC4/PWM_Motor.c ****             compare++;
 861:Generated_Source\PSoC4/PWM_Motor.c ****         }
 862:Generated_Source\PSoC4/PWM_Motor.c ****         else if (((uint32)PWM_Motor__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/PWM_Motor.c ****         {
 864:Generated_Source\PSoC4/PWM_Motor.c ****             compare--;
 865:Generated_Source\PSoC4/PWM_Motor.c ****         }
 866:Generated_Source\PSoC4/PWM_Motor.c ****         else
 867:Generated_Source\PSoC4/PWM_Motor.c ****         {
 868:Generated_Source\PSoC4/PWM_Motor.c ****         }
 869:Generated_Source\PSoC4/PWM_Motor.c ****         
 870:Generated_Source\PSoC4/PWM_Motor.c ****     
 871:Generated_Source\PSoC4/PWM_Motor.c ****     #endif /* (PWM_Motor_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/PWM_Motor.c ****     
 873:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_COMP_CAP_REG = (compare & PWM_Motor_16BIT_MASK);
 802              		.loc 1 873 0
 803 0000 0004     		lsls	r0, r0, #16
 804              	.LVL55:
 805 0002 000C     		lsrs	r0, r0, #16
 806 0004 014B     		ldr	r3, .L59
 807 0006 1860     		str	r0, [r3]
 874:Generated_Source\PSoC4/PWM_Motor.c **** }
 808              		.loc 1 874 0
 809              		@ sp needed
 810 0008 7047     		bx	lr
 811              	.L60:
 812 000a C046     		.align	2
 813              	.L59:
 814 000c 4C012040 		.word	1075839308
 815              		.cfi_endproc
 816              	.LFE24:
 817              		.size	PWM_Motor_WriteCompare, .-PWM_Motor_WriteCompare
 818              		.section	.text.PWM_Motor_ReadCompare,"ax",%progbits
 819              		.align	2
 820              		.global	PWM_Motor_ReadCompare
 821              		.code	16
 822              		.thumb_func
 823              		.type	PWM_Motor_ReadCompare, %function
 824              	PWM_Motor_ReadCompare:
 825              	.LFB25:
 875:Generated_Source\PSoC4/PWM_Motor.c **** 
 876:Generated_Source\PSoC4/PWM_Motor.c **** 
 877:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_ReadCompare
 879:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 880:Generated_Source\PSoC4/PWM_Motor.c **** *
 881:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 882:Generated_Source\PSoC4/PWM_Motor.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/PWM_Motor.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/PWM_Motor.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/PWM_Motor.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 31


 886:Generated_Source\PSoC4/PWM_Motor.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/PWM_Motor.c **** *
 888:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 889:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 890:Generated_Source\PSoC4/PWM_Motor.c **** *
 891:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 892:Generated_Source\PSoC4/PWM_Motor.c **** *  Compare value
 893:Generated_Source\PSoC4/PWM_Motor.c **** *
 894:Generated_Source\PSoC4/PWM_Motor.c **** * Note:
 895:Generated_Source\PSoC4/PWM_Motor.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/PWM_Motor.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/PWM_Motor.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/PWM_Motor.c **** *
 899:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/PWM_Motor.c **** uint32 PWM_Motor_ReadCompare(void)
 901:Generated_Source\PSoC4/PWM_Motor.c **** {
 826              		.loc 1 901 0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830              		@ link register save eliminated.
 902:Generated_Source\PSoC4/PWM_Motor.c ****     #if (PWM_Motor_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/PWM_Motor.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/PWM_Motor.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/PWM_Motor.c ****     #endif /* (PWM_Motor_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/PWM_Motor.c **** 
 907:Generated_Source\PSoC4/PWM_Motor.c ****     #if (PWM_Motor_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/PWM_Motor.c ****         currentMode = ((PWM_Motor_CONTROL_REG & PWM_Motor_UPDOWN_MASK) >> PWM_Motor_UPDOWN_SHIFT);
 909:Generated_Source\PSoC4/PWM_Motor.c ****         
 910:Generated_Source\PSoC4/PWM_Motor.c ****         regVal = PWM_Motor_COMP_CAP_REG;
 911:Generated_Source\PSoC4/PWM_Motor.c ****         
 912:Generated_Source\PSoC4/PWM_Motor.c ****         if (((uint32)PWM_Motor__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/PWM_Motor.c ****         {
 914:Generated_Source\PSoC4/PWM_Motor.c ****             regVal--;
 915:Generated_Source\PSoC4/PWM_Motor.c ****         }
 916:Generated_Source\PSoC4/PWM_Motor.c ****         else if (((uint32)PWM_Motor__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/PWM_Motor.c ****         {
 918:Generated_Source\PSoC4/PWM_Motor.c ****             regVal++;
 919:Generated_Source\PSoC4/PWM_Motor.c ****         }
 920:Generated_Source\PSoC4/PWM_Motor.c ****         else
 921:Generated_Source\PSoC4/PWM_Motor.c ****         {
 922:Generated_Source\PSoC4/PWM_Motor.c ****         }
 923:Generated_Source\PSoC4/PWM_Motor.c **** 
 924:Generated_Source\PSoC4/PWM_Motor.c ****         return (regVal & PWM_Motor_16BIT_MASK);
 925:Generated_Source\PSoC4/PWM_Motor.c ****     #else
 926:Generated_Source\PSoC4/PWM_Motor.c ****         return (PWM_Motor_COMP_CAP_REG & PWM_Motor_16BIT_MASK);
 831              		.loc 1 926 0
 832 0000 024B     		ldr	r3, .L62
 833 0002 1868     		ldr	r0, [r3]
 834 0004 0004     		lsls	r0, r0, #16
 835 0006 000C     		lsrs	r0, r0, #16
 927:Generated_Source\PSoC4/PWM_Motor.c ****     #endif /* (PWM_Motor_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/PWM_Motor.c **** }
 836              		.loc 1 928 0
 837              		@ sp needed
 838 0008 7047     		bx	lr
 839              	.L63:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 32


 840 000a C046     		.align	2
 841              	.L62:
 842 000c 4C012040 		.word	1075839308
 843              		.cfi_endproc
 844              	.LFE25:
 845              		.size	PWM_Motor_ReadCompare, .-PWM_Motor_ReadCompare
 846              		.section	.text.PWM_Motor_WriteCompareBuf,"ax",%progbits
 847              		.align	2
 848              		.global	PWM_Motor_WriteCompareBuf
 849              		.code	16
 850              		.thumb_func
 851              		.type	PWM_Motor_WriteCompareBuf, %function
 852              	PWM_Motor_WriteCompareBuf:
 853              	.LFB26:
 929:Generated_Source\PSoC4/PWM_Motor.c **** 
 930:Generated_Source\PSoC4/PWM_Motor.c **** 
 931:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_WriteCompareBuf
 933:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 934:Generated_Source\PSoC4/PWM_Motor.c **** *
 935:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 936:Generated_Source\PSoC4/PWM_Motor.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/PWM_Motor.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/PWM_Motor.c **** *
 939:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 940:Generated_Source\PSoC4/PWM_Motor.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/PWM_Motor.c **** *
 942:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 943:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 944:Generated_Source\PSoC4/PWM_Motor.c **** *
 945:Generated_Source\PSoC4/PWM_Motor.c **** * Note:
 946:Generated_Source\PSoC4/PWM_Motor.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/PWM_Motor.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/PWM_Motor.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/PWM_Motor.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/PWM_Motor.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/PWM_Motor.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/PWM_Motor.c **** *
 953:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/PWM_Motor.c **** {
 854              		.loc 1 955 0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 858              		@ link register save eliminated.
 859              	.LVL56:
 956:Generated_Source\PSoC4/PWM_Motor.c ****     #if (PWM_Motor_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/PWM_Motor.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/PWM_Motor.c ****     #endif /* (PWM_Motor_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/PWM_Motor.c **** 
 960:Generated_Source\PSoC4/PWM_Motor.c ****     #if (PWM_Motor_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/PWM_Motor.c ****         currentMode = ((PWM_Motor_CONTROL_REG & PWM_Motor_UPDOWN_MASK) >> PWM_Motor_UPDOWN_SHIFT);
 962:Generated_Source\PSoC4/PWM_Motor.c **** 
 963:Generated_Source\PSoC4/PWM_Motor.c ****         if (((uint32)PWM_Motor__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/PWM_Motor.c ****         {
 965:Generated_Source\PSoC4/PWM_Motor.c ****             compareBuf++;
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 33


 966:Generated_Source\PSoC4/PWM_Motor.c ****         }
 967:Generated_Source\PSoC4/PWM_Motor.c ****         else if (((uint32)PWM_Motor__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/PWM_Motor.c ****         {
 969:Generated_Source\PSoC4/PWM_Motor.c ****             compareBuf --;
 970:Generated_Source\PSoC4/PWM_Motor.c ****         }
 971:Generated_Source\PSoC4/PWM_Motor.c ****         else
 972:Generated_Source\PSoC4/PWM_Motor.c ****         {
 973:Generated_Source\PSoC4/PWM_Motor.c ****         }
 974:Generated_Source\PSoC4/PWM_Motor.c ****     #endif /* (PWM_Motor_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/PWM_Motor.c ****     
 976:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_COMP_CAP_BUF_REG = (compareBuf & PWM_Motor_16BIT_MASK);
 860              		.loc 1 976 0
 861 0000 0004     		lsls	r0, r0, #16
 862              	.LVL57:
 863 0002 000C     		lsrs	r0, r0, #16
 864 0004 014B     		ldr	r3, .L65
 865 0006 1860     		str	r0, [r3]
 977:Generated_Source\PSoC4/PWM_Motor.c **** }
 866              		.loc 1 977 0
 867              		@ sp needed
 868 0008 7047     		bx	lr
 869              	.L66:
 870 000a C046     		.align	2
 871              	.L65:
 872 000c 50012040 		.word	1075839312
 873              		.cfi_endproc
 874              	.LFE26:
 875              		.size	PWM_Motor_WriteCompareBuf, .-PWM_Motor_WriteCompareBuf
 876              		.section	.text.PWM_Motor_ReadCompareBuf,"ax",%progbits
 877              		.align	2
 878              		.global	PWM_Motor_ReadCompareBuf
 879              		.code	16
 880              		.thumb_func
 881              		.type	PWM_Motor_ReadCompareBuf, %function
 882              	PWM_Motor_ReadCompareBuf:
 883              	.LFB27:
 978:Generated_Source\PSoC4/PWM_Motor.c **** 
 979:Generated_Source\PSoC4/PWM_Motor.c **** 
 980:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_ReadCompareBuf
 982:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
 983:Generated_Source\PSoC4/PWM_Motor.c **** *
 984:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
 985:Generated_Source\PSoC4/PWM_Motor.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/PWM_Motor.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/PWM_Motor.c **** *
 988:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
 989:Generated_Source\PSoC4/PWM_Motor.c **** *  None
 990:Generated_Source\PSoC4/PWM_Motor.c **** *
 991:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
 992:Generated_Source\PSoC4/PWM_Motor.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/PWM_Motor.c **** *
 994:Generated_Source\PSoC4/PWM_Motor.c **** * Note:
 995:Generated_Source\PSoC4/PWM_Motor.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/PWM_Motor.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/PWM_Motor.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/PWM_Motor.c **** *
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 34


 999:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/PWM_Motor.c **** uint32 PWM_Motor_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/PWM_Motor.c **** {
 884              		.loc 1 1001 0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888              		@ link register save eliminated.
1002:Generated_Source\PSoC4/PWM_Motor.c ****     #if (PWM_Motor_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/PWM_Motor.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/PWM_Motor.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/PWM_Motor.c ****     #endif /* (PWM_Motor_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/PWM_Motor.c **** 
1007:Generated_Source\PSoC4/PWM_Motor.c ****     #if (PWM_Motor_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/PWM_Motor.c ****         currentMode = ((PWM_Motor_CONTROL_REG & PWM_Motor_UPDOWN_MASK) >> PWM_Motor_UPDOWN_SHIFT);
1009:Generated_Source\PSoC4/PWM_Motor.c **** 
1010:Generated_Source\PSoC4/PWM_Motor.c ****         regVal = PWM_Motor_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/PWM_Motor.c ****         
1012:Generated_Source\PSoC4/PWM_Motor.c ****         if (((uint32)PWM_Motor__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/PWM_Motor.c ****         {
1014:Generated_Source\PSoC4/PWM_Motor.c ****             regVal--;
1015:Generated_Source\PSoC4/PWM_Motor.c ****         }
1016:Generated_Source\PSoC4/PWM_Motor.c ****         else if (((uint32)PWM_Motor__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/PWM_Motor.c ****         {
1018:Generated_Source\PSoC4/PWM_Motor.c ****             regVal++;
1019:Generated_Source\PSoC4/PWM_Motor.c ****         }
1020:Generated_Source\PSoC4/PWM_Motor.c ****         else
1021:Generated_Source\PSoC4/PWM_Motor.c ****         {
1022:Generated_Source\PSoC4/PWM_Motor.c ****         }
1023:Generated_Source\PSoC4/PWM_Motor.c **** 
1024:Generated_Source\PSoC4/PWM_Motor.c ****         return (regVal & PWM_Motor_16BIT_MASK);
1025:Generated_Source\PSoC4/PWM_Motor.c ****     #else
1026:Generated_Source\PSoC4/PWM_Motor.c ****         return (PWM_Motor_COMP_CAP_BUF_REG & PWM_Motor_16BIT_MASK);
 889              		.loc 1 1026 0
 890 0000 024B     		ldr	r3, .L68
 891 0002 1868     		ldr	r0, [r3]
 892 0004 0004     		lsls	r0, r0, #16
 893 0006 000C     		lsrs	r0, r0, #16
1027:Generated_Source\PSoC4/PWM_Motor.c ****     #endif /* (PWM_Motor_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/PWM_Motor.c **** }
 894              		.loc 1 1028 0
 895              		@ sp needed
 896 0008 7047     		bx	lr
 897              	.L69:
 898 000a C046     		.align	2
 899              	.L68:
 900 000c 50012040 		.word	1075839312
 901              		.cfi_endproc
 902              	.LFE27:
 903              		.size	PWM_Motor_ReadCompareBuf, .-PWM_Motor_ReadCompareBuf
 904              		.section	.text.PWM_Motor_ReadCapture,"ax",%progbits
 905              		.align	2
 906              		.global	PWM_Motor_ReadCapture
 907              		.code	16
 908              		.thumb_func
 909              		.type	PWM_Motor_ReadCapture, %function
 910              	PWM_Motor_ReadCapture:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 35


 911              	.LFB28:
1029:Generated_Source\PSoC4/PWM_Motor.c **** 
1030:Generated_Source\PSoC4/PWM_Motor.c **** 
1031:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_ReadCapture
1033:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
1034:Generated_Source\PSoC4/PWM_Motor.c **** *
1035:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
1036:Generated_Source\PSoC4/PWM_Motor.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/PWM_Motor.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/PWM_Motor.c **** *
1039:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
1040:Generated_Source\PSoC4/PWM_Motor.c **** *  None
1041:Generated_Source\PSoC4/PWM_Motor.c **** *
1042:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
1043:Generated_Source\PSoC4/PWM_Motor.c **** *  Capture value
1044:Generated_Source\PSoC4/PWM_Motor.c **** *
1045:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/PWM_Motor.c **** uint32 PWM_Motor_ReadCapture(void)
1047:Generated_Source\PSoC4/PWM_Motor.c **** {
 912              		.loc 1 1047 0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 0
 915              		@ frame_needed = 0, uses_anonymous_args = 0
 916              		@ link register save eliminated.
1048:Generated_Source\PSoC4/PWM_Motor.c ****     return (PWM_Motor_COMP_CAP_REG & PWM_Motor_16BIT_MASK);
 917              		.loc 1 1048 0
 918 0000 024B     		ldr	r3, .L71
 919 0002 1868     		ldr	r0, [r3]
 920 0004 0004     		lsls	r0, r0, #16
 921 0006 000C     		lsrs	r0, r0, #16
1049:Generated_Source\PSoC4/PWM_Motor.c **** }
 922              		.loc 1 1049 0
 923              		@ sp needed
 924 0008 7047     		bx	lr
 925              	.L72:
 926 000a C046     		.align	2
 927              	.L71:
 928 000c 4C012040 		.word	1075839308
 929              		.cfi_endproc
 930              	.LFE28:
 931              		.size	PWM_Motor_ReadCapture, .-PWM_Motor_ReadCapture
 932              		.section	.text.PWM_Motor_ReadCaptureBuf,"ax",%progbits
 933              		.align	2
 934              		.global	PWM_Motor_ReadCaptureBuf
 935              		.code	16
 936              		.thumb_func
 937              		.type	PWM_Motor_ReadCaptureBuf, %function
 938              	PWM_Motor_ReadCaptureBuf:
 939              	.LFB29:
1050:Generated_Source\PSoC4/PWM_Motor.c **** 
1051:Generated_Source\PSoC4/PWM_Motor.c **** 
1052:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_ReadCaptureBuf
1054:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
1055:Generated_Source\PSoC4/PWM_Motor.c **** *
1056:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 36


1057:Generated_Source\PSoC4/PWM_Motor.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/PWM_Motor.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/PWM_Motor.c **** *
1060:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
1061:Generated_Source\PSoC4/PWM_Motor.c **** *  None
1062:Generated_Source\PSoC4/PWM_Motor.c **** *
1063:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
1064:Generated_Source\PSoC4/PWM_Motor.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/PWM_Motor.c **** *
1066:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/PWM_Motor.c **** uint32 PWM_Motor_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/PWM_Motor.c **** {
 940              		.loc 1 1068 0
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 0
 943              		@ frame_needed = 0, uses_anonymous_args = 0
 944              		@ link register save eliminated.
1069:Generated_Source\PSoC4/PWM_Motor.c ****     return (PWM_Motor_COMP_CAP_BUF_REG & PWM_Motor_16BIT_MASK);
 945              		.loc 1 1069 0
 946 0000 024B     		ldr	r3, .L74
 947 0002 1868     		ldr	r0, [r3]
 948 0004 0004     		lsls	r0, r0, #16
 949 0006 000C     		lsrs	r0, r0, #16
1070:Generated_Source\PSoC4/PWM_Motor.c **** }
 950              		.loc 1 1070 0
 951              		@ sp needed
 952 0008 7047     		bx	lr
 953              	.L75:
 954 000a C046     		.align	2
 955              	.L74:
 956 000c 50012040 		.word	1075839312
 957              		.cfi_endproc
 958              	.LFE29:
 959              		.size	PWM_Motor_ReadCaptureBuf, .-PWM_Motor_ReadCaptureBuf
 960              		.section	.text.PWM_Motor_SetCaptureMode,"ax",%progbits
 961              		.align	2
 962              		.global	PWM_Motor_SetCaptureMode
 963              		.code	16
 964              		.thumb_func
 965              		.type	PWM_Motor_SetCaptureMode, %function
 966              	PWM_Motor_SetCaptureMode:
 967              	.LFB30:
1071:Generated_Source\PSoC4/PWM_Motor.c **** 
1072:Generated_Source\PSoC4/PWM_Motor.c **** 
1073:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_SetCaptureMode
1075:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
1076:Generated_Source\PSoC4/PWM_Motor.c **** *
1077:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
1078:Generated_Source\PSoC4/PWM_Motor.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/PWM_Motor.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/PWM_Motor.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/PWM_Motor.c **** *
1082:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
1083:Generated_Source\PSoC4/PWM_Motor.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
1085:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_TRIG_LEVEL     - Level
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 37


1086:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/PWM_Motor.c **** *
1090:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
1091:Generated_Source\PSoC4/PWM_Motor.c **** *  None
1092:Generated_Source\PSoC4/PWM_Motor.c **** *
1093:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/PWM_Motor.c **** {
 968              		.loc 1 1095 0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 0
 971              		@ frame_needed = 0, uses_anonymous_args = 0
 972              	.LVL58:
 973 0000 10B5     		push	{r4, lr}
 974              		.cfi_def_cfa_offset 8
 975              		.cfi_offset 4, -8
 976              		.cfi_offset 14, -4
 977 0002 0400     		movs	r4, r0
1096:Generated_Source\PSoC4/PWM_Motor.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/PWM_Motor.c **** 
1098:Generated_Source\PSoC4/PWM_Motor.c ****     enableInterrupts = CyEnterCriticalSection();
 978              		.loc 1 1098 0
 979 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 980              	.LVL59:
1099:Generated_Source\PSoC4/PWM_Motor.c **** 
1100:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_TRIG_CONTROL1_REG &= (uint32)~PWM_Motor_CAPTURE_MASK;
 981              		.loc 1 1100 0
 982 0008 054B     		ldr	r3, .L77
 983 000a 1A68     		ldr	r2, [r3]
 984 000c 0321     		movs	r1, #3
 985 000e 8A43     		bics	r2, r1
 986 0010 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_TRIG_CONTROL1_REG |= triggerMode;
 987              		.loc 1 1101 0
 988 0012 1A68     		ldr	r2, [r3]
 989 0014 1443     		orrs	r4, r2
 990              	.LVL60:
 991 0016 1C60     		str	r4, [r3]
1102:Generated_Source\PSoC4/PWM_Motor.c **** 
1103:Generated_Source\PSoC4/PWM_Motor.c ****     CyExitCriticalSection(enableInterrupts);
 992              		.loc 1 1103 0
 993 0018 FFF7FEFF 		bl	CyExitCriticalSection
 994              	.LVL61:
1104:Generated_Source\PSoC4/PWM_Motor.c **** }
 995              		.loc 1 1104 0
 996              		@ sp needed
 997 001c 10BD     		pop	{r4, pc}
 998              	.L78:
 999 001e C046     		.align	2
 1000              	.L77:
 1001 0020 64012040 		.word	1075839332
 1002              		.cfi_endproc
 1003              	.LFE30:
 1004              		.size	PWM_Motor_SetCaptureMode, .-PWM_Motor_SetCaptureMode
 1005              		.section	.text.PWM_Motor_SetReloadMode,"ax",%progbits
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 38


 1006              		.align	2
 1007              		.global	PWM_Motor_SetReloadMode
 1008              		.code	16
 1009              		.thumb_func
 1010              		.type	PWM_Motor_SetReloadMode, %function
 1011              	PWM_Motor_SetReloadMode:
 1012              	.LFB31:
1105:Generated_Source\PSoC4/PWM_Motor.c **** 
1106:Generated_Source\PSoC4/PWM_Motor.c **** 
1107:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_SetReloadMode
1109:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
1110:Generated_Source\PSoC4/PWM_Motor.c **** *
1111:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
1112:Generated_Source\PSoC4/PWM_Motor.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/PWM_Motor.c **** *  input.
1114:Generated_Source\PSoC4/PWM_Motor.c **** *
1115:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
1116:Generated_Source\PSoC4/PWM_Motor.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
1118:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/PWM_Motor.c **** *
1123:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
1124:Generated_Source\PSoC4/PWM_Motor.c **** *  None
1125:Generated_Source\PSoC4/PWM_Motor.c **** *
1126:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/PWM_Motor.c **** {
 1013              		.loc 1 1128 0
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 0
 1016              		@ frame_needed = 0, uses_anonymous_args = 0
 1017              	.LVL62:
 1018 0000 10B5     		push	{r4, lr}
 1019              		.cfi_def_cfa_offset 8
 1020              		.cfi_offset 4, -8
 1021              		.cfi_offset 14, -4
 1022 0002 0400     		movs	r4, r0
1129:Generated_Source\PSoC4/PWM_Motor.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/PWM_Motor.c **** 
1131:Generated_Source\PSoC4/PWM_Motor.c ****     enableInterrupts = CyEnterCriticalSection();
 1023              		.loc 1 1131 0
 1024 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1025              	.LVL63:
1132:Generated_Source\PSoC4/PWM_Motor.c **** 
1133:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_TRIG_CONTROL1_REG &= (uint32)~PWM_Motor_RELOAD_MASK;
 1026              		.loc 1 1133 0
 1027 0008 054B     		ldr	r3, .L80
 1028 000a 1A68     		ldr	r2, [r3]
 1029 000c 3021     		movs	r1, #48
 1030 000e 8A43     		bics	r2, r1
 1031 0010 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_Motor_RELOAD_SHIFT));
 1032              		.loc 1 1134 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 39


 1033 0012 1A68     		ldr	r2, [r3]
 1034 0014 2401     		lsls	r4, r4, #4
 1035              	.LVL64:
 1036 0016 1443     		orrs	r4, r2
 1037 0018 1C60     		str	r4, [r3]
1135:Generated_Source\PSoC4/PWM_Motor.c **** 
1136:Generated_Source\PSoC4/PWM_Motor.c ****     CyExitCriticalSection(enableInterrupts);
 1038              		.loc 1 1136 0
 1039 001a FFF7FEFF 		bl	CyExitCriticalSection
 1040              	.LVL65:
1137:Generated_Source\PSoC4/PWM_Motor.c **** }
 1041              		.loc 1 1137 0
 1042              		@ sp needed
 1043 001e 10BD     		pop	{r4, pc}
 1044              	.L81:
 1045              		.align	2
 1046              	.L80:
 1047 0020 64012040 		.word	1075839332
 1048              		.cfi_endproc
 1049              	.LFE31:
 1050              		.size	PWM_Motor_SetReloadMode, .-PWM_Motor_SetReloadMode
 1051              		.section	.text.PWM_Motor_SetStartMode,"ax",%progbits
 1052              		.align	2
 1053              		.global	PWM_Motor_SetStartMode
 1054              		.code	16
 1055              		.thumb_func
 1056              		.type	PWM_Motor_SetStartMode, %function
 1057              	PWM_Motor_SetStartMode:
 1058              	.LFB32:
1138:Generated_Source\PSoC4/PWM_Motor.c **** 
1139:Generated_Source\PSoC4/PWM_Motor.c **** 
1140:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_SetStartMode
1142:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
1143:Generated_Source\PSoC4/PWM_Motor.c **** *
1144:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
1145:Generated_Source\PSoC4/PWM_Motor.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/PWM_Motor.c **** *  phiB input.
1147:Generated_Source\PSoC4/PWM_Motor.c **** *
1148:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
1149:Generated_Source\PSoC4/PWM_Motor.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
1151:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/PWM_Motor.c **** *
1156:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
1157:Generated_Source\PSoC4/PWM_Motor.c **** *  None
1158:Generated_Source\PSoC4/PWM_Motor.c **** *
1159:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/PWM_Motor.c **** {
 1059              		.loc 1 1161 0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 0
 1062              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 40


 1063              	.LVL66:
 1064 0000 10B5     		push	{r4, lr}
 1065              		.cfi_def_cfa_offset 8
 1066              		.cfi_offset 4, -8
 1067              		.cfi_offset 14, -4
 1068 0002 0400     		movs	r4, r0
1162:Generated_Source\PSoC4/PWM_Motor.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/PWM_Motor.c **** 
1164:Generated_Source\PSoC4/PWM_Motor.c ****     enableInterrupts = CyEnterCriticalSection();
 1069              		.loc 1 1164 0
 1070 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1071              	.LVL67:
1165:Generated_Source\PSoC4/PWM_Motor.c **** 
1166:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_TRIG_CONTROL1_REG &= (uint32)~PWM_Motor_START_MASK;
 1072              		.loc 1 1166 0
 1073 0008 054B     		ldr	r3, .L83
 1074 000a 1968     		ldr	r1, [r3]
 1075 000c 054A     		ldr	r2, .L83+4
 1076 000e 0A40     		ands	r2, r1
 1077 0010 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_Motor_START_SHIFT));
 1078              		.loc 1 1167 0
 1079 0012 1A68     		ldr	r2, [r3]
 1080 0014 2402     		lsls	r4, r4, #8
 1081              	.LVL68:
 1082 0016 1443     		orrs	r4, r2
 1083 0018 1C60     		str	r4, [r3]
1168:Generated_Source\PSoC4/PWM_Motor.c **** 
1169:Generated_Source\PSoC4/PWM_Motor.c ****     CyExitCriticalSection(enableInterrupts);
 1084              		.loc 1 1169 0
 1085 001a FFF7FEFF 		bl	CyExitCriticalSection
 1086              	.LVL69:
1170:Generated_Source\PSoC4/PWM_Motor.c **** }
 1087              		.loc 1 1170 0
 1088              		@ sp needed
 1089 001e 10BD     		pop	{r4, pc}
 1090              	.L84:
 1091              		.align	2
 1092              	.L83:
 1093 0020 64012040 		.word	1075839332
 1094 0024 FFFCFFFF 		.word	-769
 1095              		.cfi_endproc
 1096              	.LFE32:
 1097              		.size	PWM_Motor_SetStartMode, .-PWM_Motor_SetStartMode
 1098              		.section	.text.PWM_Motor_SetStopMode,"ax",%progbits
 1099              		.align	2
 1100              		.global	PWM_Motor_SetStopMode
 1101              		.code	16
 1102              		.thumb_func
 1103              		.type	PWM_Motor_SetStopMode, %function
 1104              	PWM_Motor_SetStopMode:
 1105              	.LFB33:
1171:Generated_Source\PSoC4/PWM_Motor.c **** 
1172:Generated_Source\PSoC4/PWM_Motor.c **** 
1173:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_SetStopMode
1175:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 41


1176:Generated_Source\PSoC4/PWM_Motor.c **** *
1177:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
1178:Generated_Source\PSoC4/PWM_Motor.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/PWM_Motor.c **** *
1180:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
1181:Generated_Source\PSoC4/PWM_Motor.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
1183:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/PWM_Motor.c **** *
1188:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
1189:Generated_Source\PSoC4/PWM_Motor.c **** *  None
1190:Generated_Source\PSoC4/PWM_Motor.c **** *
1191:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/PWM_Motor.c **** {
 1106              		.loc 1 1193 0
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 0
 1109              		@ frame_needed = 0, uses_anonymous_args = 0
 1110              	.LVL70:
 1111 0000 10B5     		push	{r4, lr}
 1112              		.cfi_def_cfa_offset 8
 1113              		.cfi_offset 4, -8
 1114              		.cfi_offset 14, -4
 1115 0002 0400     		movs	r4, r0
1194:Generated_Source\PSoC4/PWM_Motor.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/PWM_Motor.c **** 
1196:Generated_Source\PSoC4/PWM_Motor.c ****     enableInterrupts = CyEnterCriticalSection();
 1116              		.loc 1 1196 0
 1117 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1118              	.LVL71:
1197:Generated_Source\PSoC4/PWM_Motor.c **** 
1198:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_TRIG_CONTROL1_REG &= (uint32)~PWM_Motor_STOP_MASK;
 1119              		.loc 1 1198 0
 1120 0008 054B     		ldr	r3, .L86
 1121 000a 1A68     		ldr	r2, [r3]
 1122 000c C021     		movs	r1, #192
 1123 000e 8A43     		bics	r2, r1
 1124 0010 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_Motor_STOP_SHIFT));
 1125              		.loc 1 1199 0
 1126 0012 1A68     		ldr	r2, [r3]
 1127 0014 A401     		lsls	r4, r4, #6
 1128              	.LVL72:
 1129 0016 1443     		orrs	r4, r2
 1130 0018 1C60     		str	r4, [r3]
1200:Generated_Source\PSoC4/PWM_Motor.c **** 
1201:Generated_Source\PSoC4/PWM_Motor.c ****     CyExitCriticalSection(enableInterrupts);
 1131              		.loc 1 1201 0
 1132 001a FFF7FEFF 		bl	CyExitCriticalSection
 1133              	.LVL73:
1202:Generated_Source\PSoC4/PWM_Motor.c **** }
 1134              		.loc 1 1202 0
 1135              		@ sp needed
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 42


 1136 001e 10BD     		pop	{r4, pc}
 1137              	.L87:
 1138              		.align	2
 1139              	.L86:
 1140 0020 64012040 		.word	1075839332
 1141              		.cfi_endproc
 1142              	.LFE33:
 1143              		.size	PWM_Motor_SetStopMode, .-PWM_Motor_SetStopMode
 1144              		.section	.text.PWM_Motor_SetCountMode,"ax",%progbits
 1145              		.align	2
 1146              		.global	PWM_Motor_SetCountMode
 1147              		.code	16
 1148              		.thumb_func
 1149              		.type	PWM_Motor_SetCountMode, %function
 1150              	PWM_Motor_SetCountMode:
 1151              	.LFB34:
1203:Generated_Source\PSoC4/PWM_Motor.c **** 
1204:Generated_Source\PSoC4/PWM_Motor.c **** 
1205:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_SetCountMode
1207:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
1208:Generated_Source\PSoC4/PWM_Motor.c **** *
1209:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
1210:Generated_Source\PSoC4/PWM_Motor.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/PWM_Motor.c **** *  input.
1212:Generated_Source\PSoC4/PWM_Motor.c **** *
1213:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
1214:Generated_Source\PSoC4/PWM_Motor.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
1216:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/PWM_Motor.c **** *
1221:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
1222:Generated_Source\PSoC4/PWM_Motor.c **** *  None
1223:Generated_Source\PSoC4/PWM_Motor.c **** *
1224:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/PWM_Motor.c **** {
 1152              		.loc 1 1226 0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 0
 1155              		@ frame_needed = 0, uses_anonymous_args = 0
 1156              	.LVL74:
 1157 0000 10B5     		push	{r4, lr}
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 4, -8
 1160              		.cfi_offset 14, -4
 1161 0002 0400     		movs	r4, r0
1227:Generated_Source\PSoC4/PWM_Motor.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/PWM_Motor.c **** 
1229:Generated_Source\PSoC4/PWM_Motor.c ****     enableInterrupts = CyEnterCriticalSection();
 1162              		.loc 1 1229 0
 1163 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1164              	.LVL75:
1230:Generated_Source\PSoC4/PWM_Motor.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 43


1231:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_TRIG_CONTROL1_REG &= (uint32)~PWM_Motor_COUNT_MASK;
 1165              		.loc 1 1231 0
 1166 0008 054B     		ldr	r3, .L89
 1167 000a 1A68     		ldr	r2, [r3]
 1168 000c 0C21     		movs	r1, #12
 1169 000e 8A43     		bics	r2, r1
 1170 0010 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_Motor_COUNT_SHIFT));
 1171              		.loc 1 1232 0
 1172 0012 1A68     		ldr	r2, [r3]
 1173 0014 A400     		lsls	r4, r4, #2
 1174              	.LVL76:
 1175 0016 1443     		orrs	r4, r2
 1176 0018 1C60     		str	r4, [r3]
1233:Generated_Source\PSoC4/PWM_Motor.c **** 
1234:Generated_Source\PSoC4/PWM_Motor.c ****     CyExitCriticalSection(enableInterrupts);
 1177              		.loc 1 1234 0
 1178 001a FFF7FEFF 		bl	CyExitCriticalSection
 1179              	.LVL77:
1235:Generated_Source\PSoC4/PWM_Motor.c **** }
 1180              		.loc 1 1235 0
 1181              		@ sp needed
 1182 001e 10BD     		pop	{r4, pc}
 1183              	.L90:
 1184              		.align	2
 1185              	.L89:
 1186 0020 64012040 		.word	1075839332
 1187              		.cfi_endproc
 1188              	.LFE34:
 1189              		.size	PWM_Motor_SetCountMode, .-PWM_Motor_SetCountMode
 1190              		.section	.text.PWM_Motor_TriggerCommand,"ax",%progbits
 1191              		.align	2
 1192              		.global	PWM_Motor_TriggerCommand
 1193              		.code	16
 1194              		.thumb_func
 1195              		.type	PWM_Motor_TriggerCommand, %function
 1196              	PWM_Motor_TriggerCommand:
 1197              	.LFB35:
1236:Generated_Source\PSoC4/PWM_Motor.c **** 
1237:Generated_Source\PSoC4/PWM_Motor.c **** 
1238:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_TriggerCommand
1240:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
1241:Generated_Source\PSoC4/PWM_Motor.c **** *
1242:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
1243:Generated_Source\PSoC4/PWM_Motor.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/PWM_Motor.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/PWM_Motor.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/PWM_Motor.c **** *
1247:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
1248:Generated_Source\PSoC4/PWM_Motor.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/PWM_Motor.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/PWM_Motor.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/PWM_Motor.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/PWM_Motor.c **** *        define.
1253:Generated_Source\PSoC4/PWM_Motor.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/PWM_Motor.c **** *           Timer/Counter with Capture and PWM modes.
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 44


1255:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
1256:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/PWM_Motor.c **** *
1261:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
1262:Generated_Source\PSoC4/PWM_Motor.c **** *  None
1263:Generated_Source\PSoC4/PWM_Motor.c **** *
1264:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/PWM_Motor.c **** {
 1198              		.loc 1 1266 0
 1199              		.cfi_startproc
 1200              		@ args = 0, pretend = 0, frame = 0
 1201              		@ frame_needed = 0, uses_anonymous_args = 0
 1202              	.LVL78:
 1203 0000 70B5     		push	{r4, r5, r6, lr}
 1204              		.cfi_def_cfa_offset 16
 1205              		.cfi_offset 4, -16
 1206              		.cfi_offset 5, -12
 1207              		.cfi_offset 6, -8
 1208              		.cfi_offset 14, -4
 1209 0002 0400     		movs	r4, r0
 1210 0004 0D00     		movs	r5, r1
1267:Generated_Source\PSoC4/PWM_Motor.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/PWM_Motor.c **** 
1269:Generated_Source\PSoC4/PWM_Motor.c ****     enableInterrupts = CyEnterCriticalSection();
 1211              		.loc 1 1269 0
 1212 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1213              	.LVL79:
1270:Generated_Source\PSoC4/PWM_Motor.c **** 
1271:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_COMMAND_REG = ((uint32)(mask << command));
 1214              		.loc 1 1271 0
 1215 000a AC40     		lsls	r4, r4, r5
 1216              	.LVL80:
 1217 000c 024B     		ldr	r3, .L92
 1218 000e 1C60     		str	r4, [r3]
1272:Generated_Source\PSoC4/PWM_Motor.c **** 
1273:Generated_Source\PSoC4/PWM_Motor.c ****     CyExitCriticalSection(enableInterrupts);
 1219              		.loc 1 1273 0
 1220 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1221              	.LVL81:
1274:Generated_Source\PSoC4/PWM_Motor.c **** }
 1222              		.loc 1 1274 0
 1223              		@ sp needed
 1224              	.LVL82:
 1225 0014 70BD     		pop	{r4, r5, r6, pc}
 1226              	.L93:
 1227 0016 C046     		.align	2
 1228              	.L92:
 1229 0018 08002040 		.word	1075838984
 1230              		.cfi_endproc
 1231              	.LFE35:
 1232              		.size	PWM_Motor_TriggerCommand, .-PWM_Motor_TriggerCommand
 1233              		.section	.text.PWM_Motor_Enable,"ax",%progbits
 1234              		.align	2
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 45


 1235              		.global	PWM_Motor_Enable
 1236              		.code	16
 1237              		.thumb_func
 1238              		.type	PWM_Motor_Enable, %function
 1239              	PWM_Motor_Enable:
 1240              	.LFB3:
 178:Generated_Source\PSoC4/PWM_Motor.c ****     uint8 enableInterrupts;
 1241              		.loc 1 178 0
 1242              		.cfi_startproc
 1243              		@ args = 0, pretend = 0, frame = 0
 1244              		@ frame_needed = 0, uses_anonymous_args = 0
 1245 0000 10B5     		push	{r4, lr}
 1246              		.cfi_def_cfa_offset 8
 1247              		.cfi_offset 4, -8
 1248              		.cfi_offset 14, -4
 181:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_BLOCK_CONTROL_REG |= PWM_Motor_MASK;
 1249              		.loc 1 181 0
 1250 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1251              	.LVL83:
 182:Generated_Source\PSoC4/PWM_Motor.c ****     CyExitCriticalSection(enableInterrupts);
 1252              		.loc 1 182 0
 1253 0006 064A     		ldr	r2, .L95
 1254 0008 1168     		ldr	r1, [r2]
 1255 000a 0223     		movs	r3, #2
 1256 000c 0B43     		orrs	r3, r1
 1257 000e 1360     		str	r3, [r2]
 183:Generated_Source\PSoC4/PWM_Motor.c **** 
 1258              		.loc 1 183 0
 1259 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1260              	.LVL84:
 188:Generated_Source\PSoC4/PWM_Motor.c ****         #endif /* (0u == PWM_Motor_PWM_START_SIGNAL_PRESENT) */
 1261              		.loc 1 188 0
 1262 0014 1821     		movs	r1, #24
 1263 0016 0220     		movs	r0, #2
 1264 0018 FFF7FEFF 		bl	PWM_Motor_TriggerCommand
 1265              	.LVL85:
 203:Generated_Source\PSoC4/PWM_Motor.c **** 
 1266              		.loc 1 203 0
 1267              		@ sp needed
 1268 001c 10BD     		pop	{r4, pc}
 1269              	.L96:
 1270 001e C046     		.align	2
 1271              	.L95:
 1272 0020 00002040 		.word	1075838976
 1273              		.cfi_endproc
 1274              	.LFE3:
 1275              		.size	PWM_Motor_Enable, .-PWM_Motor_Enable
 1276              		.section	.text.PWM_Motor_ReadStatus,"ax",%progbits
 1277              		.align	2
 1278              		.global	PWM_Motor_ReadStatus
 1279              		.code	16
 1280              		.thumb_func
 1281              		.type	PWM_Motor_ReadStatus, %function
 1282              	PWM_Motor_ReadStatus:
 1283              	.LFB36:
1275:Generated_Source\PSoC4/PWM_Motor.c **** 
1276:Generated_Source\PSoC4/PWM_Motor.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 46


1277:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_ReadStatus
1279:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
1280:Generated_Source\PSoC4/PWM_Motor.c **** *
1281:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
1282:Generated_Source\PSoC4/PWM_Motor.c **** *  Reads the status of the PWM_Motor.
1283:Generated_Source\PSoC4/PWM_Motor.c **** *
1284:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
1285:Generated_Source\PSoC4/PWM_Motor.c **** *  None
1286:Generated_Source\PSoC4/PWM_Motor.c **** *
1287:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
1288:Generated_Source\PSoC4/PWM_Motor.c **** *  Status
1289:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
1290:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/PWM_Motor.c **** *
1293:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/PWM_Motor.c **** uint32 PWM_Motor_ReadStatus(void)
1295:Generated_Source\PSoC4/PWM_Motor.c **** {
 1284              		.loc 1 1295 0
 1285              		.cfi_startproc
 1286              		@ args = 0, pretend = 0, frame = 0
 1287              		@ frame_needed = 0, uses_anonymous_args = 0
 1288              		@ link register save eliminated.
1296:Generated_Source\PSoC4/PWM_Motor.c ****     return ((PWM_Motor_STATUS_REG >> PWM_Motor_RUNNING_STATUS_SHIFT) |
 1289              		.loc 1 1296 0
 1290 0000 034B     		ldr	r3, .L98
 1291 0002 1868     		ldr	r0, [r3]
 1292 0004 820F     		lsrs	r2, r0, #30
1297:Generated_Source\PSoC4/PWM_Motor.c ****             (PWM_Motor_STATUS_REG & PWM_Motor_STATUS_DOWN));
 1293              		.loc 1 1297 0
 1294 0006 1B68     		ldr	r3, [r3]
 1295 0008 0120     		movs	r0, #1
 1296 000a 1840     		ands	r0, r3
1296:Generated_Source\PSoC4/PWM_Motor.c ****     return ((PWM_Motor_STATUS_REG >> PWM_Motor_RUNNING_STATUS_SHIFT) |
 1297              		.loc 1 1296 0
 1298 000c 1043     		orrs	r0, r2
1298:Generated_Source\PSoC4/PWM_Motor.c **** }
 1299              		.loc 1 1298 0
 1300              		@ sp needed
 1301 000e 7047     		bx	lr
 1302              	.L99:
 1303              		.align	2
 1304              	.L98:
 1305 0010 44012040 		.word	1075839300
 1306              		.cfi_endproc
 1307              	.LFE36:
 1308              		.size	PWM_Motor_ReadStatus, .-PWM_Motor_ReadStatus
 1309              		.section	.text.PWM_Motor_SetInterruptMode,"ax",%progbits
 1310              		.align	2
 1311              		.global	PWM_Motor_SetInterruptMode
 1312              		.code	16
 1313              		.thumb_func
 1314              		.type	PWM_Motor_SetInterruptMode, %function
 1315              	PWM_Motor_SetInterruptMode:
 1316              	.LFB37:
1299:Generated_Source\PSoC4/PWM_Motor.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 47


1300:Generated_Source\PSoC4/PWM_Motor.c **** 
1301:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_SetInterruptMode
1303:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
1304:Generated_Source\PSoC4/PWM_Motor.c **** *
1305:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
1306:Generated_Source\PSoC4/PWM_Motor.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/PWM_Motor.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/PWM_Motor.c **** *
1309:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
1310:Generated_Source\PSoC4/PWM_Motor.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
1312:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/PWM_Motor.c **** *
1315:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
1316:Generated_Source\PSoC4/PWM_Motor.c **** *  None
1317:Generated_Source\PSoC4/PWM_Motor.c **** *
1318:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/PWM_Motor.c **** {
 1317              		.loc 1 1320 0
 1318              		.cfi_startproc
 1319              		@ args = 0, pretend = 0, frame = 0
 1320              		@ frame_needed = 0, uses_anonymous_args = 0
 1321              		@ link register save eliminated.
 1322              	.LVL86:
1321:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_INTERRUPT_MASK_REG =  interruptMask;
 1323              		.loc 1 1321 0
 1324 0000 014B     		ldr	r3, .L101
 1325 0002 1860     		str	r0, [r3]
1322:Generated_Source\PSoC4/PWM_Motor.c **** }
 1326              		.loc 1 1322 0
 1327              		@ sp needed
 1328 0004 7047     		bx	lr
 1329              	.L102:
 1330 0006 C046     		.align	2
 1331              	.L101:
 1332 0008 78012040 		.word	1075839352
 1333              		.cfi_endproc
 1334              	.LFE37:
 1335              		.size	PWM_Motor_SetInterruptMode, .-PWM_Motor_SetInterruptMode
 1336              		.section	.text.PWM_Motor_Init,"ax",%progbits
 1337              		.align	2
 1338              		.global	PWM_Motor_Init
 1339              		.code	16
 1340              		.thumb_func
 1341              		.type	PWM_Motor_Init, %function
 1342              	PWM_Motor_Init:
 1343              	.LFB2:
  39:Generated_Source\PSoC4/PWM_Motor.c **** 
 1344              		.loc 1 39 0
 1345              		.cfi_startproc
 1346              		@ args = 0, pretend = 0, frame = 0
 1347              		@ frame_needed = 0, uses_anonymous_args = 0
 1348 0000 10B5     		push	{r4, lr}
 1349              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 48


 1350              		.cfi_offset 4, -8
 1351              		.cfi_offset 14, -4
  89:Generated_Source\PSoC4/PWM_Motor.c **** 
 1352              		.loc 1 89 0
 1353 0002 0E4C     		ldr	r4, .L104
 1354 0004 8023     		movs	r3, #128
 1355 0006 DB04     		lsls	r3, r3, #19
 1356 0008 2360     		str	r3, [r4]
  95:Generated_Source\PSoC4/PWM_Motor.c ****             
 1357              		.loc 1 95 0
 1358 000a 2368     		ldr	r3, [r4]
 1359 000c 2360     		str	r3, [r4]
 103:Generated_Source\PSoC4/PWM_Motor.c ****             #endif  /* (PWM_Motor_CY_TCPWM_V2 && PWM_Motor_PWM_UPDOWN_CNT_USED && !PWM_Motor_CY_TCP
 1360              		.loc 1 103 0
 1361 000e 0020     		movs	r0, #0
 1362 0010 FFF7FEFF 		bl	PWM_Motor_WriteCounter
 1363              	.LVL87:
 112:Generated_Source\PSoC4/PWM_Motor.c ****         #endif  /* (PWM_Motor__PWM == PWM_Motor_PWM_MODE) */
 1364              		.loc 1 112 0
 1365 0014 2368     		ldr	r3, [r4]
 1366 0016 2360     		str	r3, [r4]
 116:Generated_Source\PSoC4/PWM_Motor.c ****     
 1367              		.loc 1 116 0
 1368 0018 0C22     		movs	r2, #12
 1369 001a 094B     		ldr	r3, .L104+4
 1370 001c 1A60     		str	r2, [r3]
 119:Generated_Source\PSoC4/PWM_Motor.c **** 
 1371              		.loc 1 119 0
 1372 001e 0120     		movs	r0, #1
 1373 0020 FFF7FEFF 		bl	PWM_Motor_SetInterruptMode
 1374              	.LVL88:
 129:Generated_Source\PSoC4/PWM_Motor.c ****             #endif  /* ( PWM_Motor_PWM_LEFT == PWM_Motor_PWM_ALIGN) */
 1375              		.loc 1 129 0
 1376 0024 3122     		movs	r2, #49
 1377 0026 074B     		ldr	r3, .L104+8
 1378 0028 1A60     		str	r2, [r3]
 146:Generated_Source\PSoC4/PWM_Motor.c ****         PWM_Motor_WriteCompare(PWM_Motor_PWM_COMPARE_VALUE);
 1379              		.loc 1 146 0
 1380 002a 8020     		movs	r0, #128
 1381 002c 4000     		lsls	r0, r0, #1
 1382 002e FFF7FEFF 		bl	PWM_Motor_WritePeriod
 1383              	.LVL89:
 147:Generated_Source\PSoC4/PWM_Motor.c **** 
 1384              		.loc 1 147 0
 1385 0032 FA20     		movs	r0, #250
 1386 0034 FFF7FEFF 		bl	PWM_Motor_WriteCompare
 1387              	.LVL90:
 160:Generated_Source\PSoC4/PWM_Motor.c **** 
 1388              		.loc 1 160 0
 1389              		@ sp needed
 1390 0038 10BD     		pop	{r4, pc}
 1391              	.L105:
 1392 003a C046     		.align	2
 1393              	.L104:
 1394 003c 40012040 		.word	1075839296
 1395 0040 64012040 		.word	1075839332
 1396 0044 68012040 		.word	1075839336
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 49


 1397              		.cfi_endproc
 1398              	.LFE2:
 1399              		.size	PWM_Motor_Init, .-PWM_Motor_Init
 1400              		.section	.text.PWM_Motor_Start,"ax",%progbits
 1401              		.align	2
 1402              		.global	PWM_Motor_Start
 1403              		.code	16
 1404              		.thumb_func
 1405              		.type	PWM_Motor_Start, %function
 1406              	PWM_Motor_Start:
 1407              	.LFB4:
 231:Generated_Source\PSoC4/PWM_Motor.c ****     if (0u == PWM_Motor_initVar)
 1408              		.loc 1 231 0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 0
 1411              		@ frame_needed = 0, uses_anonymous_args = 0
 1412 0000 10B5     		push	{r4, lr}
 1413              		.cfi_def_cfa_offset 8
 1414              		.cfi_offset 4, -8
 1415              		.cfi_offset 14, -4
 232:Generated_Source\PSoC4/PWM_Motor.c ****     {
 1416              		.loc 1 232 0
 1417 0002 064B     		ldr	r3, .L108
 1418 0004 1B78     		ldrb	r3, [r3]
 1419 0006 002B     		cmp	r3, #0
 1420 0008 04D1     		bne	.L107
 234:Generated_Source\PSoC4/PWM_Motor.c ****         PWM_Motor_initVar = 1u;
 1421              		.loc 1 234 0
 1422 000a FFF7FEFF 		bl	PWM_Motor_Init
 1423              	.LVL91:
 235:Generated_Source\PSoC4/PWM_Motor.c ****     }
 1424              		.loc 1 235 0
 1425 000e 0122     		movs	r2, #1
 1426 0010 024B     		ldr	r3, .L108
 1427 0012 1A70     		strb	r2, [r3]
 1428              	.L107:
 238:Generated_Source\PSoC4/PWM_Motor.c **** }
 1429              		.loc 1 238 0
 1430 0014 FFF7FEFF 		bl	PWM_Motor_Enable
 1431              	.LVL92:
 239:Generated_Source\PSoC4/PWM_Motor.c **** 
 1432              		.loc 1 239 0
 1433              		@ sp needed
 1434 0018 10BD     		pop	{r4, pc}
 1435              	.L109:
 1436 001a C046     		.align	2
 1437              	.L108:
 1438 001c 00000000 		.word	.LANCHOR0
 1439              		.cfi_endproc
 1440              	.LFE4:
 1441              		.size	PWM_Motor_Start, .-PWM_Motor_Start
 1442              		.section	.text.PWM_Motor_GetInterruptSourceMasked,"ax",%progbits
 1443              		.align	2
 1444              		.global	PWM_Motor_GetInterruptSourceMasked
 1445              		.code	16
 1446              		.thumb_func
 1447              		.type	PWM_Motor_GetInterruptSourceMasked, %function
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 50


 1448              	PWM_Motor_GetInterruptSourceMasked:
 1449              	.LFB38:
1323:Generated_Source\PSoC4/PWM_Motor.c **** 
1324:Generated_Source\PSoC4/PWM_Motor.c **** 
1325:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
1328:Generated_Source\PSoC4/PWM_Motor.c **** *
1329:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
1330:Generated_Source\PSoC4/PWM_Motor.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/PWM_Motor.c **** *
1332:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
1333:Generated_Source\PSoC4/PWM_Motor.c **** *   None
1334:Generated_Source\PSoC4/PWM_Motor.c **** *
1335:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
1336:Generated_Source\PSoC4/PWM_Motor.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
1338:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/PWM_Motor.c **** *
1341:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/PWM_Motor.c **** uint32 PWM_Motor_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/PWM_Motor.c **** {
 1450              		.loc 1 1343 0
 1451              		.cfi_startproc
 1452              		@ args = 0, pretend = 0, frame = 0
 1453              		@ frame_needed = 0, uses_anonymous_args = 0
 1454              		@ link register save eliminated.
1344:Generated_Source\PSoC4/PWM_Motor.c ****     return (PWM_Motor_INTERRUPT_MASKED_REG);
 1455              		.loc 1 1344 0
 1456 0000 014B     		ldr	r3, .L111
 1457 0002 1868     		ldr	r0, [r3]
1345:Generated_Source\PSoC4/PWM_Motor.c **** }
 1458              		.loc 1 1345 0
 1459              		@ sp needed
 1460 0004 7047     		bx	lr
 1461              	.L112:
 1462 0006 C046     		.align	2
 1463              	.L111:
 1464 0008 7C012040 		.word	1075839356
 1465              		.cfi_endproc
 1466              	.LFE38:
 1467              		.size	PWM_Motor_GetInterruptSourceMasked, .-PWM_Motor_GetInterruptSourceMasked
 1468              		.section	.text.PWM_Motor_GetInterruptSource,"ax",%progbits
 1469              		.align	2
 1470              		.global	PWM_Motor_GetInterruptSource
 1471              		.code	16
 1472              		.thumb_func
 1473              		.type	PWM_Motor_GetInterruptSource, %function
 1474              	PWM_Motor_GetInterruptSource:
 1475              	.LFB39:
1346:Generated_Source\PSoC4/PWM_Motor.c **** 
1347:Generated_Source\PSoC4/PWM_Motor.c **** 
1348:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_GetInterruptSource
1350:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
1351:Generated_Source\PSoC4/PWM_Motor.c **** *
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 51


1352:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
1353:Generated_Source\PSoC4/PWM_Motor.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/PWM_Motor.c **** *
1355:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
1356:Generated_Source\PSoC4/PWM_Motor.c **** *  None
1357:Generated_Source\PSoC4/PWM_Motor.c **** *
1358:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
1359:Generated_Source\PSoC4/PWM_Motor.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
1361:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/PWM_Motor.c **** *
1364:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/PWM_Motor.c **** uint32 PWM_Motor_GetInterruptSource(void)
1366:Generated_Source\PSoC4/PWM_Motor.c **** {
 1476              		.loc 1 1366 0
 1477              		.cfi_startproc
 1478              		@ args = 0, pretend = 0, frame = 0
 1479              		@ frame_needed = 0, uses_anonymous_args = 0
 1480              		@ link register save eliminated.
1367:Generated_Source\PSoC4/PWM_Motor.c ****     return (PWM_Motor_INTERRUPT_REQ_REG);
 1481              		.loc 1 1367 0
 1482 0000 014B     		ldr	r3, .L114
 1483 0002 1868     		ldr	r0, [r3]
1368:Generated_Source\PSoC4/PWM_Motor.c **** }
 1484              		.loc 1 1368 0
 1485              		@ sp needed
 1486 0004 7047     		bx	lr
 1487              	.L115:
 1488 0006 C046     		.align	2
 1489              	.L114:
 1490 0008 70012040 		.word	1075839344
 1491              		.cfi_endproc
 1492              	.LFE39:
 1493              		.size	PWM_Motor_GetInterruptSource, .-PWM_Motor_GetInterruptSource
 1494              		.section	.text.PWM_Motor_ClearInterrupt,"ax",%progbits
 1495              		.align	2
 1496              		.global	PWM_Motor_ClearInterrupt
 1497              		.code	16
 1498              		.thumb_func
 1499              		.type	PWM_Motor_ClearInterrupt, %function
 1500              	PWM_Motor_ClearInterrupt:
 1501              	.LFB40:
1369:Generated_Source\PSoC4/PWM_Motor.c **** 
1370:Generated_Source\PSoC4/PWM_Motor.c **** 
1371:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_ClearInterrupt
1373:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
1374:Generated_Source\PSoC4/PWM_Motor.c **** *
1375:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
1376:Generated_Source\PSoC4/PWM_Motor.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/PWM_Motor.c **** *
1378:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
1379:Generated_Source\PSoC4/PWM_Motor.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
1381:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_INTR_MASK_CC_MATCH - Compare count / capture mask
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 52


1383:Generated_Source\PSoC4/PWM_Motor.c **** *
1384:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
1385:Generated_Source\PSoC4/PWM_Motor.c **** *  None
1386:Generated_Source\PSoC4/PWM_Motor.c **** *
1387:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/PWM_Motor.c **** {
 1502              		.loc 1 1389 0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 0
 1505              		@ frame_needed = 0, uses_anonymous_args = 0
 1506              		@ link register save eliminated.
 1507              	.LVL93:
1390:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_INTERRUPT_REQ_REG = interruptMask;
 1508              		.loc 1 1390 0
 1509 0000 014B     		ldr	r3, .L117
 1510 0002 1860     		str	r0, [r3]
1391:Generated_Source\PSoC4/PWM_Motor.c **** }
 1511              		.loc 1 1391 0
 1512              		@ sp needed
 1513 0004 7047     		bx	lr
 1514              	.L118:
 1515 0006 C046     		.align	2
 1516              	.L117:
 1517 0008 70012040 		.word	1075839344
 1518              		.cfi_endproc
 1519              	.LFE40:
 1520              		.size	PWM_Motor_ClearInterrupt, .-PWM_Motor_ClearInterrupt
 1521              		.section	.text.PWM_Motor_SetInterrupt,"ax",%progbits
 1522              		.align	2
 1523              		.global	PWM_Motor_SetInterrupt
 1524              		.code	16
 1525              		.thumb_func
 1526              		.type	PWM_Motor_SetInterrupt, %function
 1527              	PWM_Motor_SetInterrupt:
 1528              	.LFB41:
1392:Generated_Source\PSoC4/PWM_Motor.c **** 
1393:Generated_Source\PSoC4/PWM_Motor.c **** 
1394:Generated_Source\PSoC4/PWM_Motor.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/PWM_Motor.c **** * Function Name: PWM_Motor_SetInterrupt
1396:Generated_Source\PSoC4/PWM_Motor.c **** ********************************************************************************
1397:Generated_Source\PSoC4/PWM_Motor.c **** *
1398:Generated_Source\PSoC4/PWM_Motor.c **** * Summary:
1399:Generated_Source\PSoC4/PWM_Motor.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/PWM_Motor.c **** *
1401:Generated_Source\PSoC4/PWM_Motor.c **** * Parameters:
1402:Generated_Source\PSoC4/PWM_Motor.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/PWM_Motor.c **** *   Values:
1404:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/PWM_Motor.c **** *     - PWM_Motor_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/PWM_Motor.c **** *
1407:Generated_Source\PSoC4/PWM_Motor.c **** * Return:
1408:Generated_Source\PSoC4/PWM_Motor.c **** *  None
1409:Generated_Source\PSoC4/PWM_Motor.c **** *
1410:Generated_Source\PSoC4/PWM_Motor.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/PWM_Motor.c **** void PWM_Motor_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/PWM_Motor.c **** {
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 53


 1529              		.loc 1 1412 0
 1530              		.cfi_startproc
 1531              		@ args = 0, pretend = 0, frame = 0
 1532              		@ frame_needed = 0, uses_anonymous_args = 0
 1533              		@ link register save eliminated.
 1534              	.LVL94:
1413:Generated_Source\PSoC4/PWM_Motor.c ****     PWM_Motor_INTERRUPT_SET_REG = interruptMask;
 1535              		.loc 1 1413 0
 1536 0000 014B     		ldr	r3, .L120
 1537 0002 1860     		str	r0, [r3]
1414:Generated_Source\PSoC4/PWM_Motor.c **** }
 1538              		.loc 1 1414 0
 1539              		@ sp needed
 1540 0004 7047     		bx	lr
 1541              	.L121:
 1542 0006 C046     		.align	2
 1543              	.L120:
 1544 0008 74012040 		.word	1075839348
 1545              		.cfi_endproc
 1546              	.LFE41:
 1547              		.size	PWM_Motor_SetInterrupt, .-PWM_Motor_SetInterrupt
 1548              		.global	PWM_Motor_initVar
 1549              		.bss
 1550              		.set	.LANCHOR0,. + 0
 1551              		.type	PWM_Motor_initVar, %object
 1552              		.size	PWM_Motor_initVar, 1
 1553              	PWM_Motor_initVar:
 1554 0000 00       		.space	1
 1555              		.text
 1556              	.Letext0:
 1557              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1558              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1559              		.section	.debug_info,"",%progbits
 1560              	.Ldebug_info0:
 1561 0000 06090000 		.4byte	0x906
 1562 0004 0400     		.2byte	0x4
 1563 0006 00000000 		.4byte	.Ldebug_abbrev0
 1564 000a 04       		.byte	0x4
 1565 000b 01       		.uleb128 0x1
 1566 000c 5F000000 		.4byte	.LASF79
 1567 0010 0C       		.byte	0xc
 1568 0011 67020000 		.4byte	.LASF80
 1569 0015 90030000 		.4byte	.LASF81
 1570 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1571 001d 00000000 		.4byte	0
 1572 0021 00000000 		.4byte	.Ldebug_line0
 1573 0025 02       		.uleb128 0x2
 1574 0026 01       		.byte	0x1
 1575 0027 06       		.byte	0x6
 1576 0028 99010000 		.4byte	.LASF0
 1577 002c 02       		.uleb128 0x2
 1578 002d 01       		.byte	0x1
 1579 002e 08       		.byte	0x8
 1580 002f 5C040000 		.4byte	.LASF1
 1581 0033 02       		.uleb128 0x2
 1582 0034 02       		.byte	0x2
 1583 0035 05       		.byte	0x5
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 54


 1584 0036 8C040000 		.4byte	.LASF2
 1585 003a 02       		.uleb128 0x2
 1586 003b 02       		.byte	0x2
 1587 003c 07       		.byte	0x7
 1588 003d 2D030000 		.4byte	.LASF3
 1589 0041 02       		.uleb128 0x2
 1590 0042 04       		.byte	0x4
 1591 0043 05       		.byte	0x5
 1592 0044 C8010000 		.4byte	.LASF4
 1593 0048 02       		.uleb128 0x2
 1594 0049 04       		.byte	0x4
 1595 004a 07       		.byte	0x7
 1596 004b E9020000 		.4byte	.LASF5
 1597 004f 02       		.uleb128 0x2
 1598 0050 08       		.byte	0x8
 1599 0051 05       		.byte	0x5
 1600 0052 8B010000 		.4byte	.LASF6
 1601 0056 02       		.uleb128 0x2
 1602 0057 08       		.byte	0x8
 1603 0058 07       		.byte	0x7
 1604 0059 F4000000 		.4byte	.LASF7
 1605 005d 03       		.uleb128 0x3
 1606 005e 04       		.byte	0x4
 1607 005f 05       		.byte	0x5
 1608 0060 696E7400 		.ascii	"int\000"
 1609 0064 02       		.uleb128 0x2
 1610 0065 04       		.byte	0x4
 1611 0066 07       		.byte	0x7
 1612 0067 93020000 		.4byte	.LASF8
 1613 006b 04       		.uleb128 0x4
 1614 006c D1010000 		.4byte	.LASF9
 1615 0070 02       		.byte	0x2
 1616 0071 FB01     		.2byte	0x1fb
 1617 0073 2C000000 		.4byte	0x2c
 1618 0077 04       		.uleb128 0x4
 1619 0078 1E020000 		.4byte	.LASF10
 1620 007c 02       		.byte	0x2
 1621 007d FD01     		.2byte	0x1fd
 1622 007f 48000000 		.4byte	0x48
 1623 0083 02       		.uleb128 0x2
 1624 0084 04       		.byte	0x4
 1625 0085 04       		.byte	0x4
 1626 0086 3E040000 		.4byte	.LASF11
 1627 008a 02       		.uleb128 0x2
 1628 008b 08       		.byte	0x8
 1629 008c 04       		.byte	0x4
 1630 008d 03020000 		.4byte	.LASF12
 1631 0091 02       		.uleb128 0x2
 1632 0092 01       		.byte	0x1
 1633 0093 08       		.byte	0x8
 1634 0094 D5040000 		.4byte	.LASF13
 1635 0098 04       		.uleb128 0x4
 1636 0099 8A030000 		.4byte	.LASF14
 1637 009d 02       		.byte	0x2
 1638 009e A702     		.2byte	0x2a7
 1639 00a0 A4000000 		.4byte	0xa4
 1640 00a4 05       		.uleb128 0x5
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 55


 1641 00a5 77000000 		.4byte	0x77
 1642 00a9 02       		.uleb128 0x2
 1643 00aa 08       		.byte	0x8
 1644 00ab 04       		.byte	0x4
 1645 00ac DC030000 		.4byte	.LASF15
 1646 00b0 02       		.uleb128 0x2
 1647 00b1 04       		.byte	0x4
 1648 00b2 07       		.byte	0x7
 1649 00b3 D3030000 		.4byte	.LASF16
 1650 00b7 06       		.uleb128 0x6
 1651 00b8 EC050000 		.4byte	.LASF17
 1652 00bc 01       		.byte	0x1
 1653 00bd 0001     		.2byte	0x100
 1654 00bf 00000000 		.4byte	.LFB5
 1655 00c3 1C000000 		.4byte	.LFE5-.LFB5
 1656 00c7 01       		.uleb128 0x1
 1657 00c8 9C       		.byte	0x9c
 1658 00c9 F0000000 		.4byte	0xf0
 1659 00cd 07       		.uleb128 0x7
 1660 00ce 9B050000 		.4byte	.LASF19
 1661 00d2 01       		.byte	0x1
 1662 00d3 0201     		.2byte	0x102
 1663 00d5 6B000000 		.4byte	0x6b
 1664 00d9 00000000 		.4byte	.LLST0
 1665 00dd 08       		.uleb128 0x8
 1666 00de 06000000 		.4byte	.LVL0
 1667 00e2 F3080000 		.4byte	0x8f3
 1668 00e6 08       		.uleb128 0x8
 1669 00e7 14000000 		.4byte	.LVL1
 1670 00eb FE080000 		.4byte	0x8fe
 1671 00ef 00       		.byte	0
 1672 00f0 06       		.uleb128 0x6
 1673 00f1 04030000 		.4byte	.LASF18
 1674 00f5 01       		.byte	0x1
 1675 00f6 2501     		.2byte	0x125
 1676 00f8 00000000 		.4byte	.LFB6
 1677 00fc 28000000 		.4byte	.LFE6-.LFB6
 1678 0100 01       		.uleb128 0x1
 1679 0101 9C       		.byte	0x9c
 1680 0102 39010000 		.4byte	0x139
 1681 0106 09       		.uleb128 0x9
 1682 0107 DA040000 		.4byte	.LASF21
 1683 010b 01       		.byte	0x1
 1684 010c 2501     		.2byte	0x125
 1685 010e 77000000 		.4byte	0x77
 1686 0112 13000000 		.4byte	.LLST1
 1687 0116 07       		.uleb128 0x7
 1688 0117 9B050000 		.4byte	.LASF19
 1689 011b 01       		.byte	0x1
 1690 011c 2701     		.2byte	0x127
 1691 011e 6B000000 		.4byte	0x6b
 1692 0122 3F000000 		.4byte	.LLST2
 1693 0126 08       		.uleb128 0x8
 1694 0127 08000000 		.4byte	.LVL3
 1695 012b F3080000 		.4byte	0x8f3
 1696 012f 08       		.uleb128 0x8
 1697 0130 1C000000 		.4byte	.LVL5
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 56


 1698 0134 FE080000 		.4byte	0x8fe
 1699 0138 00       		.byte	0
 1700 0139 06       		.uleb128 0x6
 1701 013a 0A020000 		.4byte	.LASF20
 1702 013e 01       		.byte	0x1
 1703 013f 4601     		.2byte	0x146
 1704 0141 00000000 		.4byte	.LFB7
 1705 0145 28000000 		.4byte	.LFE7-.LFB7
 1706 0149 01       		.uleb128 0x1
 1707 014a 9C       		.byte	0x9c
 1708 014b 82010000 		.4byte	0x182
 1709 014f 09       		.uleb128 0x9
 1710 0150 4E010000 		.4byte	.LASF22
 1711 0154 01       		.byte	0x1
 1712 0155 4601     		.2byte	0x146
 1713 0157 77000000 		.4byte	0x77
 1714 015b 52000000 		.4byte	.LLST3
 1715 015f 07       		.uleb128 0x7
 1716 0160 9B050000 		.4byte	.LASF19
 1717 0164 01       		.byte	0x1
 1718 0165 4801     		.2byte	0x148
 1719 0167 6B000000 		.4byte	0x6b
 1720 016b 7E000000 		.4byte	.LLST4
 1721 016f 08       		.uleb128 0x8
 1722 0170 08000000 		.4byte	.LVL7
 1723 0174 F3080000 		.4byte	0x8f3
 1724 0178 08       		.uleb128 0x8
 1725 0179 1C000000 		.4byte	.LVL9
 1726 017d FE080000 		.4byte	0x8fe
 1727 0181 00       		.byte	0
 1728 0182 06       		.uleb128 0x6
 1729 0183 D7010000 		.4byte	.LASF23
 1730 0187 01       		.byte	0x1
 1731 0188 6B01     		.2byte	0x16b
 1732 018a 00000000 		.4byte	.LFB8
 1733 018e 28000000 		.4byte	.LFE8-.LFB8
 1734 0192 01       		.uleb128 0x1
 1735 0193 9C       		.byte	0x9c
 1736 0194 CB010000 		.4byte	0x1cb
 1737 0198 09       		.uleb128 0x9
 1738 0199 52040000 		.4byte	.LASF24
 1739 019d 01       		.byte	0x1
 1740 019e 6B01     		.2byte	0x16b
 1741 01a0 77000000 		.4byte	0x77
 1742 01a4 91000000 		.4byte	.LLST5
 1743 01a8 07       		.uleb128 0x7
 1744 01a9 9B050000 		.4byte	.LASF19
 1745 01ad 01       		.byte	0x1
 1746 01ae 6D01     		.2byte	0x16d
 1747 01b0 6B000000 		.4byte	0x6b
 1748 01b4 BD000000 		.4byte	.LLST6
 1749 01b8 08       		.uleb128 0x8
 1750 01b9 08000000 		.4byte	.LVL11
 1751 01bd F3080000 		.4byte	0x8f3
 1752 01c1 08       		.uleb128 0x8
 1753 01c2 1C000000 		.4byte	.LVL13
 1754 01c6 FE080000 		.4byte	0x8fe
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 57


 1755 01ca 00       		.byte	0
 1756 01cb 06       		.uleb128 0x6
 1757 01cc 39010000 		.4byte	.LASF25
 1758 01d0 01       		.byte	0x1
 1759 01d1 8B01     		.2byte	0x18b
 1760 01d3 00000000 		.4byte	.LFB9
 1761 01d7 30000000 		.4byte	.LFE9-.LFB9
 1762 01db 01       		.uleb128 0x1
 1763 01dc 9C       		.byte	0x9c
 1764 01dd 14020000 		.4byte	0x214
 1765 01e1 09       		.uleb128 0x9
 1766 01e2 63030000 		.4byte	.LASF26
 1767 01e6 01       		.byte	0x1
 1768 01e7 8B01     		.2byte	0x18b
 1769 01e9 77000000 		.4byte	0x77
 1770 01ed D0000000 		.4byte	.LLST7
 1771 01f1 07       		.uleb128 0x7
 1772 01f2 9B050000 		.4byte	.LASF19
 1773 01f6 01       		.byte	0x1
 1774 01f7 8D01     		.2byte	0x18d
 1775 01f9 6B000000 		.4byte	0x6b
 1776 01fd FC000000 		.4byte	.LLST8
 1777 0201 08       		.uleb128 0x8
 1778 0202 08000000 		.4byte	.LVL15
 1779 0206 F3080000 		.4byte	0x8f3
 1780 020a 08       		.uleb128 0x8
 1781 020b 24000000 		.4byte	.LVL16
 1782 020f FE080000 		.4byte	0x8fe
 1783 0213 00       		.byte	0
 1784 0214 06       		.uleb128 0x6
 1785 0215 EE010000 		.4byte	.LASF27
 1786 0219 01       		.byte	0x1
 1787 021a C101     		.2byte	0x1c1
 1788 021c 00000000 		.4byte	.LFB10
 1789 0220 10000000 		.4byte	.LFE10-.LFB10
 1790 0224 01       		.uleb128 0x1
 1791 0225 9C       		.byte	0x9c
 1792 0226 3B020000 		.4byte	0x23b
 1793 022a 09       		.uleb128 0x9
 1794 022b FB020000 		.4byte	.LASF28
 1795 022f 01       		.byte	0x1
 1796 0230 C101     		.2byte	0x1c1
 1797 0232 77000000 		.4byte	0x77
 1798 0236 0F010000 		.4byte	.LLST9
 1799 023a 00       		.byte	0
 1800 023b 06       		.uleb128 0x6
 1801 023c 72010000 		.4byte	.LASF29
 1802 0240 01       		.byte	0x1
 1803 0241 E501     		.2byte	0x1e5
 1804 0243 00000000 		.4byte	.LFB11
 1805 0247 28000000 		.4byte	.LFE11-.LFB11
 1806 024b 01       		.uleb128 0x1
 1807 024c 9C       		.byte	0x9c
 1808 024d 84020000 		.4byte	0x284
 1809 0251 09       		.uleb128 0x9
 1810 0252 DD050000 		.4byte	.LASF30
 1811 0256 01       		.byte	0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 58


 1812 0257 E501     		.2byte	0x1e5
 1813 0259 77000000 		.4byte	0x77
 1814 025d 30010000 		.4byte	.LLST10
 1815 0261 07       		.uleb128 0x7
 1816 0262 9B050000 		.4byte	.LASF19
 1817 0266 01       		.byte	0x1
 1818 0267 E701     		.2byte	0x1e7
 1819 0269 6B000000 		.4byte	0x6b
 1820 026d 5C010000 		.4byte	.LLST11
 1821 0271 08       		.uleb128 0x8
 1822 0272 08000000 		.4byte	.LVL21
 1823 0276 F3080000 		.4byte	0x8f3
 1824 027a 08       		.uleb128 0x8
 1825 027b 22000000 		.4byte	.LVL23
 1826 027f FE080000 		.4byte	0x8fe
 1827 0283 00       		.byte	0
 1828 0284 06       		.uleb128 0x6
 1829 0285 A5010000 		.4byte	.LASF31
 1830 0289 01       		.byte	0x1
 1831 028a 0702     		.2byte	0x207
 1832 028c 00000000 		.4byte	.LFB12
 1833 0290 28000000 		.4byte	.LFE12-.LFB12
 1834 0294 01       		.uleb128 0x1
 1835 0295 9C       		.byte	0x9c
 1836 0296 CD020000 		.4byte	0x2cd
 1837 029a 09       		.uleb128 0x9
 1838 029b 7B040000 		.4byte	.LASF32
 1839 029f 01       		.byte	0x1
 1840 02a0 0702     		.2byte	0x207
 1841 02a2 77000000 		.4byte	0x77
 1842 02a6 6F010000 		.4byte	.LLST12
 1843 02aa 07       		.uleb128 0x7
 1844 02ab 9B050000 		.4byte	.LASF19
 1845 02af 01       		.byte	0x1
 1846 02b0 0902     		.2byte	0x209
 1847 02b2 6B000000 		.4byte	0x6b
 1848 02b6 9B010000 		.4byte	.LLST13
 1849 02ba 08       		.uleb128 0x8
 1850 02bb 08000000 		.4byte	.LVL25
 1851 02bf F3080000 		.4byte	0x8f3
 1852 02c3 08       		.uleb128 0x8
 1853 02c4 22000000 		.4byte	.LVL27
 1854 02c8 FE080000 		.4byte	0x8fe
 1855 02cc 00       		.byte	0
 1856 02cd 06       		.uleb128 0x6
 1857 02ce 71030000 		.4byte	.LASF33
 1858 02d2 01       		.byte	0x1
 1859 02d3 2802     		.2byte	0x228
 1860 02d5 00000000 		.4byte	.LFB13
 1861 02d9 2C000000 		.4byte	.LFE13-.LFB13
 1862 02dd 01       		.uleb128 0x1
 1863 02de 9C       		.byte	0x9c
 1864 02df 16030000 		.4byte	0x316
 1865 02e3 09       		.uleb128 0x9
 1866 02e4 8A020000 		.4byte	.LASF34
 1867 02e8 01       		.byte	0x1
 1868 02e9 2802     		.2byte	0x228
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 59


 1869 02eb 77000000 		.4byte	0x77
 1870 02ef AE010000 		.4byte	.LLST14
 1871 02f3 07       		.uleb128 0x7
 1872 02f4 9B050000 		.4byte	.LASF19
 1873 02f8 01       		.byte	0x1
 1874 02f9 2A02     		.2byte	0x22a
 1875 02fb 6B000000 		.4byte	0x6b
 1876 02ff DA010000 		.4byte	.LLST15
 1877 0303 08       		.uleb128 0x8
 1878 0304 08000000 		.4byte	.LVL29
 1879 0308 F3080000 		.4byte	0x8f3
 1880 030c 08       		.uleb128 0x8
 1881 030d 20000000 		.4byte	.LVL31
 1882 0311 FE080000 		.4byte	0x8fe
 1883 0315 00       		.byte	0
 1884 0316 06       		.uleb128 0x6
 1885 0317 31000000 		.4byte	.LASF35
 1886 031b 01       		.byte	0x1
 1887 031c 4902     		.2byte	0x249
 1888 031e 00000000 		.4byte	.LFB14
 1889 0322 28000000 		.4byte	.LFE14-.LFB14
 1890 0326 01       		.uleb128 0x1
 1891 0327 9C       		.byte	0x9c
 1892 0328 5F030000 		.4byte	0x35f
 1893 032c 09       		.uleb128 0x9
 1894 032d 4A020000 		.4byte	.LASF36
 1895 0331 01       		.byte	0x1
 1896 0332 4902     		.2byte	0x249
 1897 0334 77000000 		.4byte	0x77
 1898 0338 ED010000 		.4byte	.LLST16
 1899 033c 07       		.uleb128 0x7
 1900 033d 9B050000 		.4byte	.LASF19
 1901 0341 01       		.byte	0x1
 1902 0342 4B02     		.2byte	0x24b
 1903 0344 6B000000 		.4byte	0x6b
 1904 0348 19020000 		.4byte	.LLST17
 1905 034c 08       		.uleb128 0x8
 1906 034d 08000000 		.4byte	.LVL33
 1907 0351 F3080000 		.4byte	0x8f3
 1908 0355 08       		.uleb128 0x8
 1909 0356 1C000000 		.4byte	.LVL35
 1910 035a FE080000 		.4byte	0x8fe
 1911 035e 00       		.byte	0
 1912 035f 06       		.uleb128 0x6
 1913 0360 39060000 		.4byte	.LASF37
 1914 0364 01       		.byte	0x1
 1915 0365 6702     		.2byte	0x267
 1916 0367 00000000 		.4byte	.LFB15
 1917 036b 10000000 		.4byte	.LFE15-.LFB15
 1918 036f 01       		.uleb128 0x1
 1919 0370 9C       		.byte	0x9c
 1920 0371 86030000 		.4byte	0x386
 1921 0375 09       		.uleb128 0x9
 1922 0376 00000000 		.4byte	.LASF38
 1923 037a 01       		.byte	0x1
 1924 037b 6702     		.2byte	0x267
 1925 037d 77000000 		.4byte	0x77
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 60


 1926 0381 2C020000 		.4byte	.LLST18
 1927 0385 00       		.byte	0
 1928 0386 0A       		.uleb128 0xa
 1929 0387 C7050000 		.4byte	.LASF43
 1930 038b 01       		.byte	0x1
 1931 038c 7B02     		.2byte	0x27b
 1932 038e 77000000 		.4byte	0x77
 1933 0392 00000000 		.4byte	.LFB16
 1934 0396 10000000 		.4byte	.LFE16-.LFB16
 1935 039a 01       		.uleb128 0x1
 1936 039b 9C       		.byte	0x9c
 1937 039c 06       		.uleb128 0x6
 1938 039d F5040000 		.4byte	.LASF39
 1939 03a1 01       		.byte	0x1
 1940 03a2 9802     		.2byte	0x298
 1941 03a4 00000000 		.4byte	.LFB17
 1942 03a8 28000000 		.4byte	.LFE17-.LFB17
 1943 03ac 01       		.uleb128 0x1
 1944 03ad 9C       		.byte	0x9c
 1945 03ae E5030000 		.4byte	0x3e5
 1946 03b2 09       		.uleb128 0x9
 1947 03b3 25050000 		.4byte	.LASF40
 1948 03b7 01       		.byte	0x1
 1949 03b8 9802     		.2byte	0x298
 1950 03ba 77000000 		.4byte	0x77
 1951 03be 4D020000 		.4byte	.LLST19
 1952 03c2 07       		.uleb128 0x7
 1953 03c3 9B050000 		.4byte	.LASF19
 1954 03c7 01       		.byte	0x1
 1955 03c8 9A02     		.2byte	0x29a
 1956 03ca 6B000000 		.4byte	0x6b
 1957 03ce 79020000 		.4byte	.LLST20
 1958 03d2 08       		.uleb128 0x8
 1959 03d3 08000000 		.4byte	.LVL39
 1960 03d7 F3080000 		.4byte	0x8f3
 1961 03db 08       		.uleb128 0x8
 1962 03dc 1C000000 		.4byte	.LVL41
 1963 03e0 FE080000 		.4byte	0x8fe
 1964 03e4 00       		.byte	0
 1965 03e5 06       		.uleb128 0x6
 1966 03e6 E8030000 		.4byte	.LASF41
 1967 03ea 01       		.byte	0x1
 1968 03eb B502     		.2byte	0x2b5
 1969 03ed 00000000 		.4byte	.LFB18
 1970 03f1 10000000 		.4byte	.LFE18-.LFB18
 1971 03f5 01       		.uleb128 0x1
 1972 03f6 9C       		.byte	0x9c
 1973 03f7 0C040000 		.4byte	0x40c
 1974 03fb 09       		.uleb128 0x9
 1975 03fc ED000000 		.4byte	.LASF42
 1976 0400 01       		.byte	0x1
 1977 0401 B502     		.2byte	0x2b5
 1978 0403 77000000 		.4byte	0x77
 1979 0407 8C020000 		.4byte	.LLST21
 1980 040b 00       		.byte	0
 1981 040c 0A       		.uleb128 0xa
 1982 040d 1C000000 		.4byte	.LASF44
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 61


 1983 0411 01       		.byte	0x1
 1984 0412 C902     		.2byte	0x2c9
 1985 0414 77000000 		.4byte	0x77
 1986 0418 00000000 		.4byte	.LFB19
 1987 041c 10000000 		.4byte	.LFE19-.LFB19
 1988 0420 01       		.uleb128 0x1
 1989 0421 9C       		.byte	0x9c
 1990 0422 06       		.uleb128 0x6
 1991 0423 D0020000 		.4byte	.LASF45
 1992 0427 01       		.byte	0x1
 1993 0428 E302     		.2byte	0x2e3
 1994 042a 00000000 		.4byte	.LFB20
 1995 042e 24000000 		.4byte	.LFE20-.LFB20
 1996 0432 01       		.uleb128 0x1
 1997 0433 9C       		.byte	0x9c
 1998 0434 6B040000 		.4byte	0x46b
 1999 0438 09       		.uleb128 0x9
 2000 0439 FB050000 		.4byte	.LASF46
 2001 043d 01       		.byte	0x1
 2002 043e E302     		.2byte	0x2e3
 2003 0440 77000000 		.4byte	0x77
 2004 0444 AD020000 		.4byte	.LLST22
 2005 0448 07       		.uleb128 0x7
 2006 0449 9B050000 		.4byte	.LASF19
 2007 044d 01       		.byte	0x1
 2008 044e E502     		.2byte	0x2e5
 2009 0450 6B000000 		.4byte	0x6b
 2010 0454 D9020000 		.4byte	.LLST23
 2011 0458 08       		.uleb128 0x8
 2012 0459 08000000 		.4byte	.LVL45
 2013 045d F3080000 		.4byte	0x8f3
 2014 0461 08       		.uleb128 0x8
 2015 0462 1E000000 		.4byte	.LVL47
 2016 0466 FE080000 		.4byte	0x8fe
 2017 046a 00       		.byte	0
 2018 046b 06       		.uleb128 0x6
 2019 046c 55050000 		.4byte	.LASF47
 2020 0470 01       		.byte	0x1
 2021 0471 FE02     		.2byte	0x2fe
 2022 0473 00000000 		.4byte	.LFB21
 2023 0477 10000000 		.4byte	.LFE21-.LFB21
 2024 047b 01       		.uleb128 0x1
 2025 047c 9C       		.byte	0x9c
 2026 047d 92040000 		.4byte	0x492
 2027 0481 09       		.uleb128 0x9
 2028 0482 50060000 		.4byte	.LASF48
 2029 0486 01       		.byte	0x1
 2030 0487 FE02     		.2byte	0x2fe
 2031 0489 77000000 		.4byte	0x77
 2032 048d EC020000 		.4byte	.LLST24
 2033 0491 00       		.byte	0
 2034 0492 0A       		.uleb128 0xa
 2035 0493 83050000 		.4byte	.LASF49
 2036 0497 01       		.byte	0x1
 2037 0498 1203     		.2byte	0x312
 2038 049a 77000000 		.4byte	0x77
 2039 049e 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 62


 2040 04a2 10000000 		.4byte	.LFE22-.LFB22
 2041 04a6 01       		.uleb128 0x1
 2042 04a7 9C       		.byte	0x9c
 2043 04a8 06       		.uleb128 0x6
 2044 04a9 4F020000 		.4byte	.LASF50
 2045 04ad 01       		.byte	0x1
 2046 04ae 2C03     		.2byte	0x32c
 2047 04b0 00000000 		.4byte	.LFB23
 2048 04b4 28000000 		.4byte	.LFE23-.LFB23
 2049 04b8 01       		.uleb128 0x1
 2050 04b9 9C       		.byte	0x9c
 2051 04ba F1040000 		.4byte	0x4f1
 2052 04be 09       		.uleb128 0x9
 2053 04bf FB050000 		.4byte	.LASF46
 2054 04c3 01       		.byte	0x1
 2055 04c4 2C03     		.2byte	0x32c
 2056 04c6 77000000 		.4byte	0x77
 2057 04ca 0D030000 		.4byte	.LLST25
 2058 04ce 07       		.uleb128 0x7
 2059 04cf 9B050000 		.4byte	.LASF19
 2060 04d3 01       		.byte	0x1
 2061 04d4 2E03     		.2byte	0x32e
 2062 04d6 6B000000 		.4byte	0x6b
 2063 04da 39030000 		.4byte	.LLST26
 2064 04de 08       		.uleb128 0x8
 2065 04df 08000000 		.4byte	.LVL51
 2066 04e3 F3080000 		.4byte	0x8f3
 2067 04e7 08       		.uleb128 0x8
 2068 04e8 22000000 		.4byte	.LVL53
 2069 04ec FE080000 		.4byte	0x8fe
 2070 04f0 00       		.byte	0
 2071 04f1 06       		.uleb128 0x6
 2072 04f2 0E050000 		.4byte	.LASF51
 2073 04f6 01       		.byte	0x1
 2074 04f7 5103     		.2byte	0x351
 2075 04f9 00000000 		.4byte	.LFB24
 2076 04fd 10000000 		.4byte	.LFE24-.LFB24
 2077 0501 01       		.uleb128 0x1
 2078 0502 9C       		.byte	0x9c
 2079 0503 18050000 		.4byte	0x518
 2080 0507 09       		.uleb128 0x9
 2081 0508 C0010000 		.4byte	.LASF52
 2082 050c 01       		.byte	0x1
 2083 050d 5103     		.2byte	0x351
 2084 050f 77000000 		.4byte	0x77
 2085 0513 4C030000 		.4byte	.LLST27
 2086 0517 00       		.byte	0
 2087 0518 0A       		.uleb128 0xa
 2088 0519 DF040000 		.4byte	.LASF53
 2089 051d 01       		.byte	0x1
 2090 051e 8403     		.2byte	0x384
 2091 0520 77000000 		.4byte	0x77
 2092 0524 00000000 		.4byte	.LFB25
 2093 0528 10000000 		.4byte	.LFE25-.LFB25
 2094 052c 01       		.uleb128 0x1
 2095 052d 9C       		.byte	0x9c
 2096 052e 06       		.uleb128 0x6
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 63


 2097 052f 1F060000 		.4byte	.LASF54
 2098 0533 01       		.byte	0x1
 2099 0534 BA03     		.2byte	0x3ba
 2100 0536 00000000 		.4byte	.LFB26
 2101 053a 10000000 		.4byte	.LFE26-.LFB26
 2102 053e 01       		.uleb128 0x1
 2103 053f 9C       		.byte	0x9c
 2104 0540 55050000 		.4byte	0x555
 2105 0544 09       		.uleb128 0x9
 2106 0545 31050000 		.4byte	.LASF55
 2107 0549 01       		.byte	0x1
 2108 054a BA03     		.2byte	0x3ba
 2109 054c 77000000 		.4byte	0x77
 2110 0550 6D030000 		.4byte	.LLST28
 2111 0554 00       		.byte	0
 2112 0555 0A       		.uleb128 0xa
 2113 0556 AF020000 		.4byte	.LASF56
 2114 055a 01       		.byte	0x1
 2115 055b E803     		.2byte	0x3e8
 2116 055d 77000000 		.4byte	0x77
 2117 0561 00000000 		.4byte	.LFB27
 2118 0565 10000000 		.4byte	.LFE27-.LFB27
 2119 0569 01       		.uleb128 0x1
 2120 056a 9C       		.byte	0x9c
 2121 056b 0A       		.uleb128 0xa
 2122 056c 96040000 		.4byte	.LASF57
 2123 0570 01       		.byte	0x1
 2124 0571 1604     		.2byte	0x416
 2125 0573 77000000 		.4byte	0x77
 2126 0577 00000000 		.4byte	.LFB28
 2127 057b 10000000 		.4byte	.LFE28-.LFB28
 2128 057f 01       		.uleb128 0x1
 2129 0580 9C       		.byte	0x9c
 2130 0581 0A       		.uleb128 0xa
 2131 0582 06060000 		.4byte	.LASF58
 2132 0586 01       		.byte	0x1
 2133 0587 2B04     		.2byte	0x42b
 2134 0589 77000000 		.4byte	0x77
 2135 058d 00000000 		.4byte	.LFB29
 2136 0591 10000000 		.4byte	.LFE29-.LFB29
 2137 0595 01       		.uleb128 0x1
 2138 0596 9C       		.byte	0x9c
 2139 0597 06       		.uleb128 0x6
 2140 0598 3C050000 		.4byte	.LASF59
 2141 059c 01       		.byte	0x1
 2142 059d 4604     		.2byte	0x446
 2143 059f 00000000 		.4byte	.LFB30
 2144 05a3 24000000 		.4byte	.LFE30-.LFB30
 2145 05a7 01       		.uleb128 0x1
 2146 05a8 9C       		.byte	0x9c
 2147 05a9 E0050000 		.4byte	0x5e0
 2148 05ad 09       		.uleb128 0x9
 2149 05ae 3E020000 		.4byte	.LASF60
 2150 05b2 01       		.byte	0x1
 2151 05b3 4604     		.2byte	0x446
 2152 05b5 77000000 		.4byte	0x77
 2153 05b9 8E030000 		.4byte	.LLST29
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 64


 2154 05bd 07       		.uleb128 0x7
 2155 05be 9B050000 		.4byte	.LASF19
 2156 05c2 01       		.byte	0x1
 2157 05c3 4804     		.2byte	0x448
 2158 05c5 6B000000 		.4byte	0x6b
 2159 05c9 BA030000 		.4byte	.LLST30
 2160 05cd 08       		.uleb128 0x8
 2161 05ce 08000000 		.4byte	.LVL59
 2162 05d2 F3080000 		.4byte	0x8f3
 2163 05d6 08       		.uleb128 0x8
 2164 05d7 1C000000 		.4byte	.LVL61
 2165 05db FE080000 		.4byte	0x8fe
 2166 05df 00       		.byte	0
 2167 05e0 06       		.uleb128 0x6
 2168 05e1 21010000 		.4byte	.LASF61
 2169 05e5 01       		.byte	0x1
 2170 05e6 6704     		.2byte	0x467
 2171 05e8 00000000 		.4byte	.LFB31
 2172 05ec 24000000 		.4byte	.LFE31-.LFB31
 2173 05f0 01       		.uleb128 0x1
 2174 05f1 9C       		.byte	0x9c
 2175 05f2 29060000 		.4byte	0x629
 2176 05f6 09       		.uleb128 0x9
 2177 05f7 3E020000 		.4byte	.LASF60
 2178 05fb 01       		.byte	0x1
 2179 05fc 6704     		.2byte	0x467
 2180 05fe 77000000 		.4byte	0x77
 2181 0602 CD030000 		.4byte	.LLST31
 2182 0606 07       		.uleb128 0x7
 2183 0607 9B050000 		.4byte	.LASF19
 2184 060b 01       		.byte	0x1
 2185 060c 6904     		.2byte	0x469
 2186 060e 6B000000 		.4byte	0x6b
 2187 0612 F9030000 		.4byte	.LLST32
 2188 0616 08       		.uleb128 0x8
 2189 0617 08000000 		.4byte	.LVL63
 2190 061b F3080000 		.4byte	0x8f3
 2191 061f 08       		.uleb128 0x8
 2192 0620 1E000000 		.4byte	.LVL65
 2193 0624 FE080000 		.4byte	0x8fe
 2194 0628 00       		.byte	0
 2195 0629 06       		.uleb128 0x6
 2196 062a 48000000 		.4byte	.LASF62
 2197 062e 01       		.byte	0x1
 2198 062f 8804     		.2byte	0x488
 2199 0631 00000000 		.4byte	.LFB32
 2200 0635 28000000 		.4byte	.LFE32-.LFB32
 2201 0639 01       		.uleb128 0x1
 2202 063a 9C       		.byte	0x9c
 2203 063b 72060000 		.4byte	0x672
 2204 063f 09       		.uleb128 0x9
 2205 0640 3E020000 		.4byte	.LASF60
 2206 0644 01       		.byte	0x1
 2207 0645 8804     		.2byte	0x488
 2208 0647 77000000 		.4byte	0x77
 2209 064b 0C040000 		.4byte	.LLST33
 2210 064f 07       		.uleb128 0x7
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 65


 2211 0650 9B050000 		.4byte	.LASF19
 2212 0654 01       		.byte	0x1
 2213 0655 8A04     		.2byte	0x48a
 2214 0657 6B000000 		.4byte	0x6b
 2215 065b 38040000 		.4byte	.LLST34
 2216 065f 08       		.uleb128 0x8
 2217 0660 08000000 		.4byte	.LVL67
 2218 0664 F3080000 		.4byte	0x8f3
 2219 0668 08       		.uleb128 0x8
 2220 0669 1E000000 		.4byte	.LVL69
 2221 066d FE080000 		.4byte	0x8fe
 2222 0671 00       		.byte	0
 2223 0672 06       		.uleb128 0x6
 2224 0673 0B010000 		.4byte	.LASF63
 2225 0677 01       		.byte	0x1
 2226 0678 A804     		.2byte	0x4a8
 2227 067a 00000000 		.4byte	.LFB33
 2228 067e 24000000 		.4byte	.LFE33-.LFB33
 2229 0682 01       		.uleb128 0x1
 2230 0683 9C       		.byte	0x9c
 2231 0684 BB060000 		.4byte	0x6bb
 2232 0688 09       		.uleb128 0x9
 2233 0689 3E020000 		.4byte	.LASF60
 2234 068d 01       		.byte	0x1
 2235 068e A804     		.2byte	0x4a8
 2236 0690 77000000 		.4byte	0x77
 2237 0694 4B040000 		.4byte	.LLST35
 2238 0698 07       		.uleb128 0x7
 2239 0699 9B050000 		.4byte	.LASF19
 2240 069d 01       		.byte	0x1
 2241 069e AA04     		.2byte	0x4aa
 2242 06a0 6B000000 		.4byte	0x6b
 2243 06a4 77040000 		.4byte	.LLST36
 2244 06a8 08       		.uleb128 0x8
 2245 06a9 08000000 		.4byte	.LVL71
 2246 06ad F3080000 		.4byte	0x8f3
 2247 06b1 08       		.uleb128 0x8
 2248 06b2 1E000000 		.4byte	.LVL73
 2249 06b6 FE080000 		.4byte	0x8fe
 2250 06ba 00       		.byte	0
 2251 06bb 06       		.uleb128 0x6
 2252 06bc AC040000 		.4byte	.LASF64
 2253 06c0 01       		.byte	0x1
 2254 06c1 C904     		.2byte	0x4c9
 2255 06c3 00000000 		.4byte	.LFB34
 2256 06c7 24000000 		.4byte	.LFE34-.LFB34
 2257 06cb 01       		.uleb128 0x1
 2258 06cc 9C       		.byte	0x9c
 2259 06cd 04070000 		.4byte	0x704
 2260 06d1 09       		.uleb128 0x9
 2261 06d2 3E020000 		.4byte	.LASF60
 2262 06d6 01       		.byte	0x1
 2263 06d7 C904     		.2byte	0x4c9
 2264 06d9 77000000 		.4byte	0x77
 2265 06dd 8A040000 		.4byte	.LLST37
 2266 06e1 07       		.uleb128 0x7
 2267 06e2 9B050000 		.4byte	.LASF19
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 66


 2268 06e6 01       		.byte	0x1
 2269 06e7 CB04     		.2byte	0x4cb
 2270 06e9 6B000000 		.4byte	0x6b
 2271 06ed B6040000 		.4byte	.LLST38
 2272 06f1 08       		.uleb128 0x8
 2273 06f2 08000000 		.4byte	.LVL75
 2274 06f6 F3080000 		.4byte	0x8f3
 2275 06fa 08       		.uleb128 0x8
 2276 06fb 1E000000 		.4byte	.LVL77
 2277 06ff FE080000 		.4byte	0x8fe
 2278 0703 00       		.byte	0
 2279 0704 06       		.uleb128 0x6
 2280 0705 FE030000 		.4byte	.LASF65
 2281 0709 01       		.byte	0x1
 2282 070a F104     		.2byte	0x4f1
 2283 070c 00000000 		.4byte	.LFB35
 2284 0710 1C000000 		.4byte	.LFE35-.LFB35
 2285 0714 01       		.uleb128 0x1
 2286 0715 9C       		.byte	0x9c
 2287 0716 5D070000 		.4byte	0x75d
 2288 071a 09       		.uleb128 0x9
 2289 071b 4A020000 		.4byte	.LASF36
 2290 071f 01       		.byte	0x1
 2291 0720 F104     		.2byte	0x4f1
 2292 0722 77000000 		.4byte	0x77
 2293 0726 C9040000 		.4byte	.LLST39
 2294 072a 09       		.uleb128 0x9
 2295 072b C8020000 		.4byte	.LASF66
 2296 072f 01       		.byte	0x1
 2297 0730 F104     		.2byte	0x4f1
 2298 0732 77000000 		.4byte	0x77
 2299 0736 F5040000 		.4byte	.LLST40
 2300 073a 07       		.uleb128 0x7
 2301 073b 9B050000 		.4byte	.LASF19
 2302 073f 01       		.byte	0x1
 2303 0740 F304     		.2byte	0x4f3
 2304 0742 6B000000 		.4byte	0x6b
 2305 0746 21050000 		.4byte	.LLST41
 2306 074a 08       		.uleb128 0x8
 2307 074b 0A000000 		.4byte	.LVL79
 2308 074f F3080000 		.4byte	0x8f3
 2309 0753 08       		.uleb128 0x8
 2310 0754 14000000 		.4byte	.LVL81
 2311 0758 FE080000 		.4byte	0x8fe
 2312 075c 00       		.byte	0
 2313 075d 0B       		.uleb128 0xb
 2314 075e 6A040000 		.4byte	.LASF67
 2315 0762 01       		.byte	0x1
 2316 0763 B1       		.byte	0xb1
 2317 0764 00000000 		.4byte	.LFB3
 2318 0768 24000000 		.4byte	.LFE3-.LFB3
 2319 076c 01       		.uleb128 0x1
 2320 076d 9C       		.byte	0x9c
 2321 076e A8070000 		.4byte	0x7a8
 2322 0772 0C       		.uleb128 0xc
 2323 0773 9B050000 		.4byte	.LASF19
 2324 0777 01       		.byte	0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 67


 2325 0778 B3       		.byte	0xb3
 2326 0779 6B000000 		.4byte	0x6b
 2327 077d 34050000 		.4byte	.LLST42
 2328 0781 08       		.uleb128 0x8
 2329 0782 06000000 		.4byte	.LVL83
 2330 0786 F3080000 		.4byte	0x8f3
 2331 078a 08       		.uleb128 0x8
 2332 078b 14000000 		.4byte	.LVL84
 2333 078f FE080000 		.4byte	0x8fe
 2334 0793 0D       		.uleb128 0xd
 2335 0794 1C000000 		.4byte	.LVL85
 2336 0798 04070000 		.4byte	0x704
 2337 079c 0E       		.uleb128 0xe
 2338 079d 01       		.uleb128 0x1
 2339 079e 50       		.byte	0x50
 2340 079f 01       		.uleb128 0x1
 2341 07a0 32       		.byte	0x32
 2342 07a1 0E       		.uleb128 0xe
 2343 07a2 01       		.uleb128 0x1
 2344 07a3 51       		.byte	0x51
 2345 07a4 01       		.uleb128 0x1
 2346 07a5 48       		.byte	0x48
 2347 07a6 00       		.byte	0
 2348 07a7 00       		.byte	0
 2349 07a8 0A       		.uleb128 0xa
 2350 07a9 6E050000 		.4byte	.LASF68
 2351 07ad 01       		.byte	0x1
 2352 07ae 0E05     		.2byte	0x50e
 2353 07b0 77000000 		.4byte	0x77
 2354 07b4 00000000 		.4byte	.LFB36
 2355 07b8 14000000 		.4byte	.LFE36-.LFB36
 2356 07bc 01       		.uleb128 0x1
 2357 07bd 9C       		.byte	0x9c
 2358 07be 06       		.uleb128 0x6
 2359 07bf AC050000 		.4byte	.LASF69
 2360 07c3 01       		.byte	0x1
 2361 07c4 2705     		.2byte	0x527
 2362 07c6 00000000 		.4byte	.LFB37
 2363 07ca 0C000000 		.4byte	.LFE37-.LFB37
 2364 07ce 01       		.uleb128 0x1
 2365 07cf 9C       		.byte	0x9c
 2366 07d0 E3070000 		.4byte	0x7e3
 2367 07d4 0F       		.uleb128 0xf
 2368 07d5 44040000 		.4byte	.LASF70
 2369 07d9 01       		.byte	0x1
 2370 07da 2705     		.2byte	0x527
 2371 07dc 77000000 		.4byte	0x77
 2372 07e0 01       		.uleb128 0x1
 2373 07e1 50       		.byte	0x50
 2374 07e2 00       		.byte	0
 2375 07e3 0B       		.uleb128 0xb
 2376 07e4 A0020000 		.4byte	.LASF71
 2377 07e8 01       		.byte	0x1
 2378 07e9 26       		.byte	0x26
 2379 07ea 00000000 		.4byte	.LFB2
 2380 07ee 48000000 		.4byte	.LFE2-.LFB2
 2381 07f2 01       		.uleb128 0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 68


 2382 07f3 9C       		.byte	0x9c
 2383 07f4 44080000 		.4byte	0x844
 2384 07f8 10       		.uleb128 0x10
 2385 07f9 14000000 		.4byte	.LVL87
 2386 07fd 5F030000 		.4byte	0x35f
 2387 0801 0B080000 		.4byte	0x80b
 2388 0805 0E       		.uleb128 0xe
 2389 0806 01       		.uleb128 0x1
 2390 0807 50       		.byte	0x50
 2391 0808 01       		.uleb128 0x1
 2392 0809 30       		.byte	0x30
 2393 080a 00       		.byte	0
 2394 080b 10       		.uleb128 0x10
 2395 080c 24000000 		.4byte	.LVL88
 2396 0810 BE070000 		.4byte	0x7be
 2397 0814 1E080000 		.4byte	0x81e
 2398 0818 0E       		.uleb128 0xe
 2399 0819 01       		.uleb128 0x1
 2400 081a 50       		.byte	0x50
 2401 081b 01       		.uleb128 0x1
 2402 081c 31       		.byte	0x31
 2403 081d 00       		.byte	0
 2404 081e 10       		.uleb128 0x10
 2405 081f 32000000 		.4byte	.LVL89
 2406 0823 E5030000 		.4byte	0x3e5
 2407 0827 33080000 		.4byte	0x833
 2408 082b 0E       		.uleb128 0xe
 2409 082c 01       		.uleb128 0x1
 2410 082d 50       		.byte	0x50
 2411 082e 03       		.uleb128 0x3
 2412 082f 0A       		.byte	0xa
 2413 0830 0001     		.2byte	0x100
 2414 0832 00       		.byte	0
 2415 0833 0D       		.uleb128 0xd
 2416 0834 38000000 		.4byte	.LVL90
 2417 0838 F1040000 		.4byte	0x4f1
 2418 083c 0E       		.uleb128 0xe
 2419 083d 01       		.uleb128 0x1
 2420 083e 50       		.byte	0x50
 2421 083f 02       		.uleb128 0x2
 2422 0840 08       		.byte	0x8
 2423 0841 FA       		.byte	0xfa
 2424 0842 00       		.byte	0
 2425 0843 00       		.byte	0
 2426 0844 0B       		.uleb128 0xb
 2427 0845 2E040000 		.4byte	.LASF72
 2428 0849 01       		.byte	0x1
 2429 084a E6       		.byte	0xe6
 2430 084b 00000000 		.4byte	.LFB4
 2431 084f 20000000 		.4byte	.LFE4-.LFB4
 2432 0853 01       		.uleb128 0x1
 2433 0854 9C       		.byte	0x9c
 2434 0855 6C080000 		.4byte	0x86c
 2435 0859 08       		.uleb128 0x8
 2436 085a 0E000000 		.4byte	.LVL91
 2437 085e E3070000 		.4byte	0x7e3
 2438 0862 08       		.uleb128 0x8
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 69


 2439 0863 18000000 		.4byte	.LVL92
 2440 0867 5D070000 		.4byte	0x75d
 2441 086b 00       		.byte	0
 2442 086c 0A       		.uleb128 0xa
 2443 086d 40030000 		.4byte	.LASF73
 2444 0871 01       		.byte	0x1
 2445 0872 3E05     		.2byte	0x53e
 2446 0874 77000000 		.4byte	0x77
 2447 0878 00000000 		.4byte	.LFB38
 2448 087c 0C000000 		.4byte	.LFE38-.LFB38
 2449 0880 01       		.uleb128 0x1
 2450 0881 9C       		.byte	0x9c
 2451 0882 0A       		.uleb128 0xa
 2452 0883 55010000 		.4byte	.LASF74
 2453 0887 01       		.byte	0x1
 2454 0888 5505     		.2byte	0x555
 2455 088a 77000000 		.4byte	0x77
 2456 088e 00000000 		.4byte	.LFB39
 2457 0892 0C000000 		.4byte	.LFE39-.LFB39
 2458 0896 01       		.uleb128 0x1
 2459 0897 9C       		.byte	0x9c
 2460 0898 06       		.uleb128 0x6
 2461 0899 25020000 		.4byte	.LASF75
 2462 089d 01       		.byte	0x1
 2463 089e 6C05     		.2byte	0x56c
 2464 08a0 00000000 		.4byte	.LFB40
 2465 08a4 0C000000 		.4byte	.LFE40-.LFB40
 2466 08a8 01       		.uleb128 0x1
 2467 08a9 9C       		.byte	0x9c
 2468 08aa BD080000 		.4byte	0x8bd
 2469 08ae 0F       		.uleb128 0xf
 2470 08af 44040000 		.4byte	.LASF70
 2471 08b3 01       		.byte	0x1
 2472 08b4 6C05     		.2byte	0x56c
 2473 08b6 77000000 		.4byte	0x77
 2474 08ba 01       		.uleb128 0x1
 2475 08bb 50       		.byte	0x50
 2476 08bc 00       		.byte	0
 2477 08bd 06       		.uleb128 0x6
 2478 08be 17040000 		.4byte	.LASF76
 2479 08c2 01       		.byte	0x1
 2480 08c3 8305     		.2byte	0x583
 2481 08c5 00000000 		.4byte	.LFB41
 2482 08c9 0C000000 		.4byte	.LFE41-.LFB41
 2483 08cd 01       		.uleb128 0x1
 2484 08ce 9C       		.byte	0x9c
 2485 08cf E2080000 		.4byte	0x8e2
 2486 08d3 0F       		.uleb128 0xf
 2487 08d4 44040000 		.4byte	.LASF70
 2488 08d8 01       		.byte	0x1
 2489 08d9 8305     		.2byte	0x583
 2490 08db 77000000 		.4byte	0x77
 2491 08df 01       		.uleb128 0x1
 2492 08e0 50       		.byte	0x50
 2493 08e1 00       		.byte	0
 2494 08e2 11       		.uleb128 0x11
 2495 08e3 C3040000 		.4byte	.LASF82
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 70


 2496 08e7 01       		.byte	0x1
 2497 08e8 15       		.byte	0x15
 2498 08e9 6B000000 		.4byte	0x6b
 2499 08ed 05       		.uleb128 0x5
 2500 08ee 03       		.byte	0x3
 2501 08ef 00000000 		.4byte	PWM_Motor_initVar
 2502 08f3 12       		.uleb128 0x12
 2503 08f4 16030000 		.4byte	.LASF77
 2504 08f8 16030000 		.4byte	.LASF77
 2505 08fc 03       		.byte	0x3
 2506 08fd F8       		.byte	0xf8
 2507 08fe 12       		.uleb128 0x12
 2508 08ff 06000000 		.4byte	.LASF78
 2509 0903 06000000 		.4byte	.LASF78
 2510 0907 03       		.byte	0x3
 2511 0908 F9       		.byte	0xf9
 2512 0909 00       		.byte	0
 2513              		.section	.debug_abbrev,"",%progbits
 2514              	.Ldebug_abbrev0:
 2515 0000 01       		.uleb128 0x1
 2516 0001 11       		.uleb128 0x11
 2517 0002 01       		.byte	0x1
 2518 0003 25       		.uleb128 0x25
 2519 0004 0E       		.uleb128 0xe
 2520 0005 13       		.uleb128 0x13
 2521 0006 0B       		.uleb128 0xb
 2522 0007 03       		.uleb128 0x3
 2523 0008 0E       		.uleb128 0xe
 2524 0009 1B       		.uleb128 0x1b
 2525 000a 0E       		.uleb128 0xe
 2526 000b 55       		.uleb128 0x55
 2527 000c 17       		.uleb128 0x17
 2528 000d 11       		.uleb128 0x11
 2529 000e 01       		.uleb128 0x1
 2530 000f 10       		.uleb128 0x10
 2531 0010 17       		.uleb128 0x17
 2532 0011 00       		.byte	0
 2533 0012 00       		.byte	0
 2534 0013 02       		.uleb128 0x2
 2535 0014 24       		.uleb128 0x24
 2536 0015 00       		.byte	0
 2537 0016 0B       		.uleb128 0xb
 2538 0017 0B       		.uleb128 0xb
 2539 0018 3E       		.uleb128 0x3e
 2540 0019 0B       		.uleb128 0xb
 2541 001a 03       		.uleb128 0x3
 2542 001b 0E       		.uleb128 0xe
 2543 001c 00       		.byte	0
 2544 001d 00       		.byte	0
 2545 001e 03       		.uleb128 0x3
 2546 001f 24       		.uleb128 0x24
 2547 0020 00       		.byte	0
 2548 0021 0B       		.uleb128 0xb
 2549 0022 0B       		.uleb128 0xb
 2550 0023 3E       		.uleb128 0x3e
 2551 0024 0B       		.uleb128 0xb
 2552 0025 03       		.uleb128 0x3
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 71


 2553 0026 08       		.uleb128 0x8
 2554 0027 00       		.byte	0
 2555 0028 00       		.byte	0
 2556 0029 04       		.uleb128 0x4
 2557 002a 16       		.uleb128 0x16
 2558 002b 00       		.byte	0
 2559 002c 03       		.uleb128 0x3
 2560 002d 0E       		.uleb128 0xe
 2561 002e 3A       		.uleb128 0x3a
 2562 002f 0B       		.uleb128 0xb
 2563 0030 3B       		.uleb128 0x3b
 2564 0031 05       		.uleb128 0x5
 2565 0032 49       		.uleb128 0x49
 2566 0033 13       		.uleb128 0x13
 2567 0034 00       		.byte	0
 2568 0035 00       		.byte	0
 2569 0036 05       		.uleb128 0x5
 2570 0037 35       		.uleb128 0x35
 2571 0038 00       		.byte	0
 2572 0039 49       		.uleb128 0x49
 2573 003a 13       		.uleb128 0x13
 2574 003b 00       		.byte	0
 2575 003c 00       		.byte	0
 2576 003d 06       		.uleb128 0x6
 2577 003e 2E       		.uleb128 0x2e
 2578 003f 01       		.byte	0x1
 2579 0040 3F       		.uleb128 0x3f
 2580 0041 19       		.uleb128 0x19
 2581 0042 03       		.uleb128 0x3
 2582 0043 0E       		.uleb128 0xe
 2583 0044 3A       		.uleb128 0x3a
 2584 0045 0B       		.uleb128 0xb
 2585 0046 3B       		.uleb128 0x3b
 2586 0047 05       		.uleb128 0x5
 2587 0048 27       		.uleb128 0x27
 2588 0049 19       		.uleb128 0x19
 2589 004a 11       		.uleb128 0x11
 2590 004b 01       		.uleb128 0x1
 2591 004c 12       		.uleb128 0x12
 2592 004d 06       		.uleb128 0x6
 2593 004e 40       		.uleb128 0x40
 2594 004f 18       		.uleb128 0x18
 2595 0050 9742     		.uleb128 0x2117
 2596 0052 19       		.uleb128 0x19
 2597 0053 01       		.uleb128 0x1
 2598 0054 13       		.uleb128 0x13
 2599 0055 00       		.byte	0
 2600 0056 00       		.byte	0
 2601 0057 07       		.uleb128 0x7
 2602 0058 34       		.uleb128 0x34
 2603 0059 00       		.byte	0
 2604 005a 03       		.uleb128 0x3
 2605 005b 0E       		.uleb128 0xe
 2606 005c 3A       		.uleb128 0x3a
 2607 005d 0B       		.uleb128 0xb
 2608 005e 3B       		.uleb128 0x3b
 2609 005f 05       		.uleb128 0x5
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 72


 2610 0060 49       		.uleb128 0x49
 2611 0061 13       		.uleb128 0x13
 2612 0062 02       		.uleb128 0x2
 2613 0063 17       		.uleb128 0x17
 2614 0064 00       		.byte	0
 2615 0065 00       		.byte	0
 2616 0066 08       		.uleb128 0x8
 2617 0067 898201   		.uleb128 0x4109
 2618 006a 00       		.byte	0
 2619 006b 11       		.uleb128 0x11
 2620 006c 01       		.uleb128 0x1
 2621 006d 31       		.uleb128 0x31
 2622 006e 13       		.uleb128 0x13
 2623 006f 00       		.byte	0
 2624 0070 00       		.byte	0
 2625 0071 09       		.uleb128 0x9
 2626 0072 05       		.uleb128 0x5
 2627 0073 00       		.byte	0
 2628 0074 03       		.uleb128 0x3
 2629 0075 0E       		.uleb128 0xe
 2630 0076 3A       		.uleb128 0x3a
 2631 0077 0B       		.uleb128 0xb
 2632 0078 3B       		.uleb128 0x3b
 2633 0079 05       		.uleb128 0x5
 2634 007a 49       		.uleb128 0x49
 2635 007b 13       		.uleb128 0x13
 2636 007c 02       		.uleb128 0x2
 2637 007d 17       		.uleb128 0x17
 2638 007e 00       		.byte	0
 2639 007f 00       		.byte	0
 2640 0080 0A       		.uleb128 0xa
 2641 0081 2E       		.uleb128 0x2e
 2642 0082 00       		.byte	0
 2643 0083 3F       		.uleb128 0x3f
 2644 0084 19       		.uleb128 0x19
 2645 0085 03       		.uleb128 0x3
 2646 0086 0E       		.uleb128 0xe
 2647 0087 3A       		.uleb128 0x3a
 2648 0088 0B       		.uleb128 0xb
 2649 0089 3B       		.uleb128 0x3b
 2650 008a 05       		.uleb128 0x5
 2651 008b 27       		.uleb128 0x27
 2652 008c 19       		.uleb128 0x19
 2653 008d 49       		.uleb128 0x49
 2654 008e 13       		.uleb128 0x13
 2655 008f 11       		.uleb128 0x11
 2656 0090 01       		.uleb128 0x1
 2657 0091 12       		.uleb128 0x12
 2658 0092 06       		.uleb128 0x6
 2659 0093 40       		.uleb128 0x40
 2660 0094 18       		.uleb128 0x18
 2661 0095 9742     		.uleb128 0x2117
 2662 0097 19       		.uleb128 0x19
 2663 0098 00       		.byte	0
 2664 0099 00       		.byte	0
 2665 009a 0B       		.uleb128 0xb
 2666 009b 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 73


 2667 009c 01       		.byte	0x1
 2668 009d 3F       		.uleb128 0x3f
 2669 009e 19       		.uleb128 0x19
 2670 009f 03       		.uleb128 0x3
 2671 00a0 0E       		.uleb128 0xe
 2672 00a1 3A       		.uleb128 0x3a
 2673 00a2 0B       		.uleb128 0xb
 2674 00a3 3B       		.uleb128 0x3b
 2675 00a4 0B       		.uleb128 0xb
 2676 00a5 27       		.uleb128 0x27
 2677 00a6 19       		.uleb128 0x19
 2678 00a7 11       		.uleb128 0x11
 2679 00a8 01       		.uleb128 0x1
 2680 00a9 12       		.uleb128 0x12
 2681 00aa 06       		.uleb128 0x6
 2682 00ab 40       		.uleb128 0x40
 2683 00ac 18       		.uleb128 0x18
 2684 00ad 9742     		.uleb128 0x2117
 2685 00af 19       		.uleb128 0x19
 2686 00b0 01       		.uleb128 0x1
 2687 00b1 13       		.uleb128 0x13
 2688 00b2 00       		.byte	0
 2689 00b3 00       		.byte	0
 2690 00b4 0C       		.uleb128 0xc
 2691 00b5 34       		.uleb128 0x34
 2692 00b6 00       		.byte	0
 2693 00b7 03       		.uleb128 0x3
 2694 00b8 0E       		.uleb128 0xe
 2695 00b9 3A       		.uleb128 0x3a
 2696 00ba 0B       		.uleb128 0xb
 2697 00bb 3B       		.uleb128 0x3b
 2698 00bc 0B       		.uleb128 0xb
 2699 00bd 49       		.uleb128 0x49
 2700 00be 13       		.uleb128 0x13
 2701 00bf 02       		.uleb128 0x2
 2702 00c0 17       		.uleb128 0x17
 2703 00c1 00       		.byte	0
 2704 00c2 00       		.byte	0
 2705 00c3 0D       		.uleb128 0xd
 2706 00c4 898201   		.uleb128 0x4109
 2707 00c7 01       		.byte	0x1
 2708 00c8 11       		.uleb128 0x11
 2709 00c9 01       		.uleb128 0x1
 2710 00ca 31       		.uleb128 0x31
 2711 00cb 13       		.uleb128 0x13
 2712 00cc 00       		.byte	0
 2713 00cd 00       		.byte	0
 2714 00ce 0E       		.uleb128 0xe
 2715 00cf 8A8201   		.uleb128 0x410a
 2716 00d2 00       		.byte	0
 2717 00d3 02       		.uleb128 0x2
 2718 00d4 18       		.uleb128 0x18
 2719 00d5 9142     		.uleb128 0x2111
 2720 00d7 18       		.uleb128 0x18
 2721 00d8 00       		.byte	0
 2722 00d9 00       		.byte	0
 2723 00da 0F       		.uleb128 0xf
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 74


 2724 00db 05       		.uleb128 0x5
 2725 00dc 00       		.byte	0
 2726 00dd 03       		.uleb128 0x3
 2727 00de 0E       		.uleb128 0xe
 2728 00df 3A       		.uleb128 0x3a
 2729 00e0 0B       		.uleb128 0xb
 2730 00e1 3B       		.uleb128 0x3b
 2731 00e2 05       		.uleb128 0x5
 2732 00e3 49       		.uleb128 0x49
 2733 00e4 13       		.uleb128 0x13
 2734 00e5 02       		.uleb128 0x2
 2735 00e6 18       		.uleb128 0x18
 2736 00e7 00       		.byte	0
 2737 00e8 00       		.byte	0
 2738 00e9 10       		.uleb128 0x10
 2739 00ea 898201   		.uleb128 0x4109
 2740 00ed 01       		.byte	0x1
 2741 00ee 11       		.uleb128 0x11
 2742 00ef 01       		.uleb128 0x1
 2743 00f0 31       		.uleb128 0x31
 2744 00f1 13       		.uleb128 0x13
 2745 00f2 01       		.uleb128 0x1
 2746 00f3 13       		.uleb128 0x13
 2747 00f4 00       		.byte	0
 2748 00f5 00       		.byte	0
 2749 00f6 11       		.uleb128 0x11
 2750 00f7 34       		.uleb128 0x34
 2751 00f8 00       		.byte	0
 2752 00f9 03       		.uleb128 0x3
 2753 00fa 0E       		.uleb128 0xe
 2754 00fb 3A       		.uleb128 0x3a
 2755 00fc 0B       		.uleb128 0xb
 2756 00fd 3B       		.uleb128 0x3b
 2757 00fe 0B       		.uleb128 0xb
 2758 00ff 49       		.uleb128 0x49
 2759 0100 13       		.uleb128 0x13
 2760 0101 3F       		.uleb128 0x3f
 2761 0102 19       		.uleb128 0x19
 2762 0103 02       		.uleb128 0x2
 2763 0104 18       		.uleb128 0x18
 2764 0105 00       		.byte	0
 2765 0106 00       		.byte	0
 2766 0107 12       		.uleb128 0x12
 2767 0108 2E       		.uleb128 0x2e
 2768 0109 00       		.byte	0
 2769 010a 3F       		.uleb128 0x3f
 2770 010b 19       		.uleb128 0x19
 2771 010c 3C       		.uleb128 0x3c
 2772 010d 19       		.uleb128 0x19
 2773 010e 6E       		.uleb128 0x6e
 2774 010f 0E       		.uleb128 0xe
 2775 0110 03       		.uleb128 0x3
 2776 0111 0E       		.uleb128 0xe
 2777 0112 3A       		.uleb128 0x3a
 2778 0113 0B       		.uleb128 0xb
 2779 0114 3B       		.uleb128 0x3b
 2780 0115 0B       		.uleb128 0xb
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 75


 2781 0116 00       		.byte	0
 2782 0117 00       		.byte	0
 2783 0118 00       		.byte	0
 2784              		.section	.debug_loc,"",%progbits
 2785              	.Ldebug_loc0:
 2786              	.LLST0:
 2787 0000 06000000 		.4byte	.LVL0
 2788 0004 13000000 		.4byte	.LVL1-1
 2789 0008 0100     		.2byte	0x1
 2790 000a 50       		.byte	0x50
 2791 000b 00000000 		.4byte	0
 2792 000f 00000000 		.4byte	0
 2793              	.LLST1:
 2794 0013 00000000 		.4byte	.LVL2
 2795 0017 07000000 		.4byte	.LVL3-1
 2796 001b 0100     		.2byte	0x1
 2797 001d 50       		.byte	0x50
 2798 001e 07000000 		.4byte	.LVL3-1
 2799 0022 16000000 		.4byte	.LVL4
 2800 0026 0100     		.2byte	0x1
 2801 0028 54       		.byte	0x54
 2802 0029 16000000 		.4byte	.LVL4
 2803 002d 28000000 		.4byte	.LFE6
 2804 0031 0400     		.2byte	0x4
 2805 0033 F3       		.byte	0xf3
 2806 0034 01       		.uleb128 0x1
 2807 0035 50       		.byte	0x50
 2808 0036 9F       		.byte	0x9f
 2809 0037 00000000 		.4byte	0
 2810 003b 00000000 		.4byte	0
 2811              	.LLST2:
 2812 003f 08000000 		.4byte	.LVL3
 2813 0043 1B000000 		.4byte	.LVL5-1
 2814 0047 0100     		.2byte	0x1
 2815 0049 50       		.byte	0x50
 2816 004a 00000000 		.4byte	0
 2817 004e 00000000 		.4byte	0
 2818              	.LLST3:
 2819 0052 00000000 		.4byte	.LVL6
 2820 0056 07000000 		.4byte	.LVL7-1
 2821 005a 0100     		.2byte	0x1
 2822 005c 50       		.byte	0x50
 2823 005d 07000000 		.4byte	.LVL7-1
 2824 0061 16000000 		.4byte	.LVL8
 2825 0065 0100     		.2byte	0x1
 2826 0067 54       		.byte	0x54
 2827 0068 16000000 		.4byte	.LVL8
 2828 006c 28000000 		.4byte	.LFE7
 2829 0070 0400     		.2byte	0x4
 2830 0072 F3       		.byte	0xf3
 2831 0073 01       		.uleb128 0x1
 2832 0074 50       		.byte	0x50
 2833 0075 9F       		.byte	0x9f
 2834 0076 00000000 		.4byte	0
 2835 007a 00000000 		.4byte	0
 2836              	.LLST4:
 2837 007e 08000000 		.4byte	.LVL7
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 76


 2838 0082 1B000000 		.4byte	.LVL9-1
 2839 0086 0100     		.2byte	0x1
 2840 0088 50       		.byte	0x50
 2841 0089 00000000 		.4byte	0
 2842 008d 00000000 		.4byte	0
 2843              	.LLST5:
 2844 0091 00000000 		.4byte	.LVL10
 2845 0095 07000000 		.4byte	.LVL11-1
 2846 0099 0100     		.2byte	0x1
 2847 009b 50       		.byte	0x50
 2848 009c 07000000 		.4byte	.LVL11-1
 2849 00a0 16000000 		.4byte	.LVL12
 2850 00a4 0100     		.2byte	0x1
 2851 00a6 54       		.byte	0x54
 2852 00a7 16000000 		.4byte	.LVL12
 2853 00ab 28000000 		.4byte	.LFE8
 2854 00af 0400     		.2byte	0x4
 2855 00b1 F3       		.byte	0xf3
 2856 00b2 01       		.uleb128 0x1
 2857 00b3 50       		.byte	0x50
 2858 00b4 9F       		.byte	0x9f
 2859 00b5 00000000 		.4byte	0
 2860 00b9 00000000 		.4byte	0
 2861              	.LLST6:
 2862 00bd 08000000 		.4byte	.LVL11
 2863 00c1 1B000000 		.4byte	.LVL13-1
 2864 00c5 0100     		.2byte	0x1
 2865 00c7 50       		.byte	0x50
 2866 00c8 00000000 		.4byte	0
 2867 00cc 00000000 		.4byte	0
 2868              	.LLST7:
 2869 00d0 00000000 		.4byte	.LVL14
 2870 00d4 07000000 		.4byte	.LVL15-1
 2871 00d8 0100     		.2byte	0x1
 2872 00da 50       		.byte	0x50
 2873 00db 07000000 		.4byte	.LVL15-1
 2874 00df 24000000 		.4byte	.LVL17
 2875 00e3 0100     		.2byte	0x1
 2876 00e5 54       		.byte	0x54
 2877 00e6 24000000 		.4byte	.LVL17
 2878 00ea 30000000 		.4byte	.LFE9
 2879 00ee 0400     		.2byte	0x4
 2880 00f0 F3       		.byte	0xf3
 2881 00f1 01       		.uleb128 0x1
 2882 00f2 50       		.byte	0x50
 2883 00f3 9F       		.byte	0x9f
 2884 00f4 00000000 		.4byte	0
 2885 00f8 00000000 		.4byte	0
 2886              	.LLST8:
 2887 00fc 08000000 		.4byte	.LVL15
 2888 0100 23000000 		.4byte	.LVL16-1
 2889 0104 0100     		.2byte	0x1
 2890 0106 50       		.byte	0x50
 2891 0107 00000000 		.4byte	0
 2892 010b 00000000 		.4byte	0
 2893              	.LLST9:
 2894 010f 00000000 		.4byte	.LVL18
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 77


 2895 0113 04000000 		.4byte	.LVL19
 2896 0117 0100     		.2byte	0x1
 2897 0119 50       		.byte	0x50
 2898 011a 04000000 		.4byte	.LVL19
 2899 011e 10000000 		.4byte	.LFE10
 2900 0122 0400     		.2byte	0x4
 2901 0124 F3       		.byte	0xf3
 2902 0125 01       		.uleb128 0x1
 2903 0126 50       		.byte	0x50
 2904 0127 9F       		.byte	0x9f
 2905 0128 00000000 		.4byte	0
 2906 012c 00000000 		.4byte	0
 2907              	.LLST10:
 2908 0130 00000000 		.4byte	.LVL20
 2909 0134 07000000 		.4byte	.LVL21-1
 2910 0138 0100     		.2byte	0x1
 2911 013a 50       		.byte	0x50
 2912 013b 07000000 		.4byte	.LVL21-1
 2913 013f 1A000000 		.4byte	.LVL22
 2914 0143 0100     		.2byte	0x1
 2915 0145 54       		.byte	0x54
 2916 0146 1A000000 		.4byte	.LVL22
 2917 014a 28000000 		.4byte	.LFE11
 2918 014e 0400     		.2byte	0x4
 2919 0150 F3       		.byte	0xf3
 2920 0151 01       		.uleb128 0x1
 2921 0152 50       		.byte	0x50
 2922 0153 9F       		.byte	0x9f
 2923 0154 00000000 		.4byte	0
 2924 0158 00000000 		.4byte	0
 2925              	.LLST11:
 2926 015c 08000000 		.4byte	.LVL21
 2927 0160 21000000 		.4byte	.LVL23-1
 2928 0164 0100     		.2byte	0x1
 2929 0166 50       		.byte	0x50
 2930 0167 00000000 		.4byte	0
 2931 016b 00000000 		.4byte	0
 2932              	.LLST12:
 2933 016f 00000000 		.4byte	.LVL24
 2934 0173 07000000 		.4byte	.LVL25-1
 2935 0177 0100     		.2byte	0x1
 2936 0179 50       		.byte	0x50
 2937 017a 07000000 		.4byte	.LVL25-1
 2938 017e 1A000000 		.4byte	.LVL26
 2939 0182 0100     		.2byte	0x1
 2940 0184 54       		.byte	0x54
 2941 0185 1A000000 		.4byte	.LVL26
 2942 0189 28000000 		.4byte	.LFE12
 2943 018d 0400     		.2byte	0x4
 2944 018f F3       		.byte	0xf3
 2945 0190 01       		.uleb128 0x1
 2946 0191 50       		.byte	0x50
 2947 0192 9F       		.byte	0x9f
 2948 0193 00000000 		.4byte	0
 2949 0197 00000000 		.4byte	0
 2950              	.LLST13:
 2951 019b 08000000 		.4byte	.LVL25
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 78


 2952 019f 21000000 		.4byte	.LVL27-1
 2953 01a3 0100     		.2byte	0x1
 2954 01a5 50       		.byte	0x50
 2955 01a6 00000000 		.4byte	0
 2956 01aa 00000000 		.4byte	0
 2957              	.LLST14:
 2958 01ae 00000000 		.4byte	.LVL28
 2959 01b2 07000000 		.4byte	.LVL29-1
 2960 01b6 0100     		.2byte	0x1
 2961 01b8 50       		.byte	0x50
 2962 01b9 07000000 		.4byte	.LVL29-1
 2963 01bd 16000000 		.4byte	.LVL30
 2964 01c1 0100     		.2byte	0x1
 2965 01c3 54       		.byte	0x54
 2966 01c4 16000000 		.4byte	.LVL30
 2967 01c8 2C000000 		.4byte	.LFE13
 2968 01cc 0400     		.2byte	0x4
 2969 01ce F3       		.byte	0xf3
 2970 01cf 01       		.uleb128 0x1
 2971 01d0 50       		.byte	0x50
 2972 01d1 9F       		.byte	0x9f
 2973 01d2 00000000 		.4byte	0
 2974 01d6 00000000 		.4byte	0
 2975              	.LLST15:
 2976 01da 08000000 		.4byte	.LVL29
 2977 01de 1F000000 		.4byte	.LVL31-1
 2978 01e2 0100     		.2byte	0x1
 2979 01e4 50       		.byte	0x50
 2980 01e5 00000000 		.4byte	0
 2981 01e9 00000000 		.4byte	0
 2982              	.LLST16:
 2983 01ed 00000000 		.4byte	.LVL32
 2984 01f1 07000000 		.4byte	.LVL33-1
 2985 01f5 0100     		.2byte	0x1
 2986 01f7 50       		.byte	0x50
 2987 01f8 07000000 		.4byte	.LVL33-1
 2988 01fc 16000000 		.4byte	.LVL34
 2989 0200 0100     		.2byte	0x1
 2990 0202 54       		.byte	0x54
 2991 0203 16000000 		.4byte	.LVL34
 2992 0207 28000000 		.4byte	.LFE14
 2993 020b 0400     		.2byte	0x4
 2994 020d F3       		.byte	0xf3
 2995 020e 01       		.uleb128 0x1
 2996 020f 50       		.byte	0x50
 2997 0210 9F       		.byte	0x9f
 2998 0211 00000000 		.4byte	0
 2999 0215 00000000 		.4byte	0
 3000              	.LLST17:
 3001 0219 08000000 		.4byte	.LVL33
 3002 021d 1B000000 		.4byte	.LVL35-1
 3003 0221 0100     		.2byte	0x1
 3004 0223 50       		.byte	0x50
 3005 0224 00000000 		.4byte	0
 3006 0228 00000000 		.4byte	0
 3007              	.LLST18:
 3008 022c 00000000 		.4byte	.LVL36
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 79


 3009 0230 02000000 		.4byte	.LVL37
 3010 0234 0100     		.2byte	0x1
 3011 0236 50       		.byte	0x50
 3012 0237 02000000 		.4byte	.LVL37
 3013 023b 10000000 		.4byte	.LFE15
 3014 023f 0400     		.2byte	0x4
 3015 0241 F3       		.byte	0xf3
 3016 0242 01       		.uleb128 0x1
 3017 0243 50       		.byte	0x50
 3018 0244 9F       		.byte	0x9f
 3019 0245 00000000 		.4byte	0
 3020 0249 00000000 		.4byte	0
 3021              	.LLST19:
 3022 024d 00000000 		.4byte	.LVL38
 3023 0251 07000000 		.4byte	.LVL39-1
 3024 0255 0100     		.2byte	0x1
 3025 0257 50       		.byte	0x50
 3026 0258 07000000 		.4byte	.LVL39-1
 3027 025c 16000000 		.4byte	.LVL40
 3028 0260 0100     		.2byte	0x1
 3029 0262 54       		.byte	0x54
 3030 0263 16000000 		.4byte	.LVL40
 3031 0267 28000000 		.4byte	.LFE17
 3032 026b 0400     		.2byte	0x4
 3033 026d F3       		.byte	0xf3
 3034 026e 01       		.uleb128 0x1
 3035 026f 50       		.byte	0x50
 3036 0270 9F       		.byte	0x9f
 3037 0271 00000000 		.4byte	0
 3038 0275 00000000 		.4byte	0
 3039              	.LLST20:
 3040 0279 08000000 		.4byte	.LVL39
 3041 027d 1B000000 		.4byte	.LVL41-1
 3042 0281 0100     		.2byte	0x1
 3043 0283 50       		.byte	0x50
 3044 0284 00000000 		.4byte	0
 3045 0288 00000000 		.4byte	0
 3046              	.LLST21:
 3047 028c 00000000 		.4byte	.LVL42
 3048 0290 02000000 		.4byte	.LVL43
 3049 0294 0100     		.2byte	0x1
 3050 0296 50       		.byte	0x50
 3051 0297 02000000 		.4byte	.LVL43
 3052 029b 10000000 		.4byte	.LFE18
 3053 029f 0400     		.2byte	0x4
 3054 02a1 F3       		.byte	0xf3
 3055 02a2 01       		.uleb128 0x1
 3056 02a3 50       		.byte	0x50
 3057 02a4 9F       		.byte	0x9f
 3058 02a5 00000000 		.4byte	0
 3059 02a9 00000000 		.4byte	0
 3060              	.LLST22:
 3061 02ad 00000000 		.4byte	.LVL44
 3062 02b1 07000000 		.4byte	.LVL45-1
 3063 02b5 0100     		.2byte	0x1
 3064 02b7 50       		.byte	0x50
 3065 02b8 07000000 		.4byte	.LVL45-1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 80


 3066 02bc 16000000 		.4byte	.LVL46
 3067 02c0 0100     		.2byte	0x1
 3068 02c2 54       		.byte	0x54
 3069 02c3 16000000 		.4byte	.LVL46
 3070 02c7 24000000 		.4byte	.LFE20
 3071 02cb 0400     		.2byte	0x4
 3072 02cd F3       		.byte	0xf3
 3073 02ce 01       		.uleb128 0x1
 3074 02cf 50       		.byte	0x50
 3075 02d0 9F       		.byte	0x9f
 3076 02d1 00000000 		.4byte	0
 3077 02d5 00000000 		.4byte	0
 3078              	.LLST23:
 3079 02d9 08000000 		.4byte	.LVL45
 3080 02dd 1D000000 		.4byte	.LVL47-1
 3081 02e1 0100     		.2byte	0x1
 3082 02e3 50       		.byte	0x50
 3083 02e4 00000000 		.4byte	0
 3084 02e8 00000000 		.4byte	0
 3085              	.LLST24:
 3086 02ec 00000000 		.4byte	.LVL48
 3087 02f0 02000000 		.4byte	.LVL49
 3088 02f4 0100     		.2byte	0x1
 3089 02f6 50       		.byte	0x50
 3090 02f7 02000000 		.4byte	.LVL49
 3091 02fb 10000000 		.4byte	.LFE21
 3092 02ff 0400     		.2byte	0x4
 3093 0301 F3       		.byte	0xf3
 3094 0302 01       		.uleb128 0x1
 3095 0303 50       		.byte	0x50
 3096 0304 9F       		.byte	0x9f
 3097 0305 00000000 		.4byte	0
 3098 0309 00000000 		.4byte	0
 3099              	.LLST25:
 3100 030d 00000000 		.4byte	.LVL50
 3101 0311 07000000 		.4byte	.LVL51-1
 3102 0315 0100     		.2byte	0x1
 3103 0317 50       		.byte	0x50
 3104 0318 07000000 		.4byte	.LVL51-1
 3105 031c 1A000000 		.4byte	.LVL52
 3106 0320 0100     		.2byte	0x1
 3107 0322 54       		.byte	0x54
 3108 0323 1A000000 		.4byte	.LVL52
 3109 0327 28000000 		.4byte	.LFE23
 3110 032b 0400     		.2byte	0x4
 3111 032d F3       		.byte	0xf3
 3112 032e 01       		.uleb128 0x1
 3113 032f 50       		.byte	0x50
 3114 0330 9F       		.byte	0x9f
 3115 0331 00000000 		.4byte	0
 3116 0335 00000000 		.4byte	0
 3117              	.LLST26:
 3118 0339 08000000 		.4byte	.LVL51
 3119 033d 21000000 		.4byte	.LVL53-1
 3120 0341 0100     		.2byte	0x1
 3121 0343 50       		.byte	0x50
 3122 0344 00000000 		.4byte	0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 81


 3123 0348 00000000 		.4byte	0
 3124              	.LLST27:
 3125 034c 00000000 		.4byte	.LVL54
 3126 0350 02000000 		.4byte	.LVL55
 3127 0354 0100     		.2byte	0x1
 3128 0356 50       		.byte	0x50
 3129 0357 02000000 		.4byte	.LVL55
 3130 035b 10000000 		.4byte	.LFE24
 3131 035f 0400     		.2byte	0x4
 3132 0361 F3       		.byte	0xf3
 3133 0362 01       		.uleb128 0x1
 3134 0363 50       		.byte	0x50
 3135 0364 9F       		.byte	0x9f
 3136 0365 00000000 		.4byte	0
 3137 0369 00000000 		.4byte	0
 3138              	.LLST28:
 3139 036d 00000000 		.4byte	.LVL56
 3140 0371 02000000 		.4byte	.LVL57
 3141 0375 0100     		.2byte	0x1
 3142 0377 50       		.byte	0x50
 3143 0378 02000000 		.4byte	.LVL57
 3144 037c 10000000 		.4byte	.LFE26
 3145 0380 0400     		.2byte	0x4
 3146 0382 F3       		.byte	0xf3
 3147 0383 01       		.uleb128 0x1
 3148 0384 50       		.byte	0x50
 3149 0385 9F       		.byte	0x9f
 3150 0386 00000000 		.4byte	0
 3151 038a 00000000 		.4byte	0
 3152              	.LLST29:
 3153 038e 00000000 		.4byte	.LVL58
 3154 0392 07000000 		.4byte	.LVL59-1
 3155 0396 0100     		.2byte	0x1
 3156 0398 50       		.byte	0x50
 3157 0399 07000000 		.4byte	.LVL59-1
 3158 039d 16000000 		.4byte	.LVL60
 3159 03a1 0100     		.2byte	0x1
 3160 03a3 54       		.byte	0x54
 3161 03a4 16000000 		.4byte	.LVL60
 3162 03a8 24000000 		.4byte	.LFE30
 3163 03ac 0400     		.2byte	0x4
 3164 03ae F3       		.byte	0xf3
 3165 03af 01       		.uleb128 0x1
 3166 03b0 50       		.byte	0x50
 3167 03b1 9F       		.byte	0x9f
 3168 03b2 00000000 		.4byte	0
 3169 03b6 00000000 		.4byte	0
 3170              	.LLST30:
 3171 03ba 08000000 		.4byte	.LVL59
 3172 03be 1B000000 		.4byte	.LVL61-1
 3173 03c2 0100     		.2byte	0x1
 3174 03c4 50       		.byte	0x50
 3175 03c5 00000000 		.4byte	0
 3176 03c9 00000000 		.4byte	0
 3177              	.LLST31:
 3178 03cd 00000000 		.4byte	.LVL62
 3179 03d1 07000000 		.4byte	.LVL63-1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 82


 3180 03d5 0100     		.2byte	0x1
 3181 03d7 50       		.byte	0x50
 3182 03d8 07000000 		.4byte	.LVL63-1
 3183 03dc 16000000 		.4byte	.LVL64
 3184 03e0 0100     		.2byte	0x1
 3185 03e2 54       		.byte	0x54
 3186 03e3 16000000 		.4byte	.LVL64
 3187 03e7 24000000 		.4byte	.LFE31
 3188 03eb 0400     		.2byte	0x4
 3189 03ed F3       		.byte	0xf3
 3190 03ee 01       		.uleb128 0x1
 3191 03ef 50       		.byte	0x50
 3192 03f0 9F       		.byte	0x9f
 3193 03f1 00000000 		.4byte	0
 3194 03f5 00000000 		.4byte	0
 3195              	.LLST32:
 3196 03f9 08000000 		.4byte	.LVL63
 3197 03fd 1D000000 		.4byte	.LVL65-1
 3198 0401 0100     		.2byte	0x1
 3199 0403 50       		.byte	0x50
 3200 0404 00000000 		.4byte	0
 3201 0408 00000000 		.4byte	0
 3202              	.LLST33:
 3203 040c 00000000 		.4byte	.LVL66
 3204 0410 07000000 		.4byte	.LVL67-1
 3205 0414 0100     		.2byte	0x1
 3206 0416 50       		.byte	0x50
 3207 0417 07000000 		.4byte	.LVL67-1
 3208 041b 16000000 		.4byte	.LVL68
 3209 041f 0100     		.2byte	0x1
 3210 0421 54       		.byte	0x54
 3211 0422 16000000 		.4byte	.LVL68
 3212 0426 28000000 		.4byte	.LFE32
 3213 042a 0400     		.2byte	0x4
 3214 042c F3       		.byte	0xf3
 3215 042d 01       		.uleb128 0x1
 3216 042e 50       		.byte	0x50
 3217 042f 9F       		.byte	0x9f
 3218 0430 00000000 		.4byte	0
 3219 0434 00000000 		.4byte	0
 3220              	.LLST34:
 3221 0438 08000000 		.4byte	.LVL67
 3222 043c 1D000000 		.4byte	.LVL69-1
 3223 0440 0100     		.2byte	0x1
 3224 0442 50       		.byte	0x50
 3225 0443 00000000 		.4byte	0
 3226 0447 00000000 		.4byte	0
 3227              	.LLST35:
 3228 044b 00000000 		.4byte	.LVL70
 3229 044f 07000000 		.4byte	.LVL71-1
 3230 0453 0100     		.2byte	0x1
 3231 0455 50       		.byte	0x50
 3232 0456 07000000 		.4byte	.LVL71-1
 3233 045a 16000000 		.4byte	.LVL72
 3234 045e 0100     		.2byte	0x1
 3235 0460 54       		.byte	0x54
 3236 0461 16000000 		.4byte	.LVL72
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 83


 3237 0465 24000000 		.4byte	.LFE33
 3238 0469 0400     		.2byte	0x4
 3239 046b F3       		.byte	0xf3
 3240 046c 01       		.uleb128 0x1
 3241 046d 50       		.byte	0x50
 3242 046e 9F       		.byte	0x9f
 3243 046f 00000000 		.4byte	0
 3244 0473 00000000 		.4byte	0
 3245              	.LLST36:
 3246 0477 08000000 		.4byte	.LVL71
 3247 047b 1D000000 		.4byte	.LVL73-1
 3248 047f 0100     		.2byte	0x1
 3249 0481 50       		.byte	0x50
 3250 0482 00000000 		.4byte	0
 3251 0486 00000000 		.4byte	0
 3252              	.LLST37:
 3253 048a 00000000 		.4byte	.LVL74
 3254 048e 07000000 		.4byte	.LVL75-1
 3255 0492 0100     		.2byte	0x1
 3256 0494 50       		.byte	0x50
 3257 0495 07000000 		.4byte	.LVL75-1
 3258 0499 16000000 		.4byte	.LVL76
 3259 049d 0100     		.2byte	0x1
 3260 049f 54       		.byte	0x54
 3261 04a0 16000000 		.4byte	.LVL76
 3262 04a4 24000000 		.4byte	.LFE34
 3263 04a8 0400     		.2byte	0x4
 3264 04aa F3       		.byte	0xf3
 3265 04ab 01       		.uleb128 0x1
 3266 04ac 50       		.byte	0x50
 3267 04ad 9F       		.byte	0x9f
 3268 04ae 00000000 		.4byte	0
 3269 04b2 00000000 		.4byte	0
 3270              	.LLST38:
 3271 04b6 08000000 		.4byte	.LVL75
 3272 04ba 1D000000 		.4byte	.LVL77-1
 3273 04be 0100     		.2byte	0x1
 3274 04c0 50       		.byte	0x50
 3275 04c1 00000000 		.4byte	0
 3276 04c5 00000000 		.4byte	0
 3277              	.LLST39:
 3278 04c9 00000000 		.4byte	.LVL78
 3279 04cd 09000000 		.4byte	.LVL79-1
 3280 04d1 0100     		.2byte	0x1
 3281 04d3 50       		.byte	0x50
 3282 04d4 09000000 		.4byte	.LVL79-1
 3283 04d8 0C000000 		.4byte	.LVL80
 3284 04dc 0100     		.2byte	0x1
 3285 04de 54       		.byte	0x54
 3286 04df 0C000000 		.4byte	.LVL80
 3287 04e3 1C000000 		.4byte	.LFE35
 3288 04e7 0400     		.2byte	0x4
 3289 04e9 F3       		.byte	0xf3
 3290 04ea 01       		.uleb128 0x1
 3291 04eb 50       		.byte	0x50
 3292 04ec 9F       		.byte	0x9f
 3293 04ed 00000000 		.4byte	0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 84


 3294 04f1 00000000 		.4byte	0
 3295              	.LLST40:
 3296 04f5 00000000 		.4byte	.LVL78
 3297 04f9 09000000 		.4byte	.LVL79-1
 3298 04fd 0100     		.2byte	0x1
 3299 04ff 51       		.byte	0x51
 3300 0500 09000000 		.4byte	.LVL79-1
 3301 0504 14000000 		.4byte	.LVL82
 3302 0508 0100     		.2byte	0x1
 3303 050a 55       		.byte	0x55
 3304 050b 14000000 		.4byte	.LVL82
 3305 050f 1C000000 		.4byte	.LFE35
 3306 0513 0400     		.2byte	0x4
 3307 0515 F3       		.byte	0xf3
 3308 0516 01       		.uleb128 0x1
 3309 0517 51       		.byte	0x51
 3310 0518 9F       		.byte	0x9f
 3311 0519 00000000 		.4byte	0
 3312 051d 00000000 		.4byte	0
 3313              	.LLST41:
 3314 0521 0A000000 		.4byte	.LVL79
 3315 0525 13000000 		.4byte	.LVL81-1
 3316 0529 0100     		.2byte	0x1
 3317 052b 50       		.byte	0x50
 3318 052c 00000000 		.4byte	0
 3319 0530 00000000 		.4byte	0
 3320              	.LLST42:
 3321 0534 06000000 		.4byte	.LVL83
 3322 0538 13000000 		.4byte	.LVL84-1
 3323 053c 0100     		.2byte	0x1
 3324 053e 50       		.byte	0x50
 3325 053f 00000000 		.4byte	0
 3326 0543 00000000 		.4byte	0
 3327              		.section	.debug_aranges,"",%progbits
 3328 0000 54010000 		.4byte	0x154
 3329 0004 0200     		.2byte	0x2
 3330 0006 00000000 		.4byte	.Ldebug_info0
 3331 000a 04       		.byte	0x4
 3332 000b 00       		.byte	0
 3333 000c 0000     		.2byte	0
 3334 000e 0000     		.2byte	0
 3335 0010 00000000 		.4byte	.LFB5
 3336 0014 1C000000 		.4byte	.LFE5-.LFB5
 3337 0018 00000000 		.4byte	.LFB6
 3338 001c 28000000 		.4byte	.LFE6-.LFB6
 3339 0020 00000000 		.4byte	.LFB7
 3340 0024 28000000 		.4byte	.LFE7-.LFB7
 3341 0028 00000000 		.4byte	.LFB8
 3342 002c 28000000 		.4byte	.LFE8-.LFB8
 3343 0030 00000000 		.4byte	.LFB9
 3344 0034 30000000 		.4byte	.LFE9-.LFB9
 3345 0038 00000000 		.4byte	.LFB10
 3346 003c 10000000 		.4byte	.LFE10-.LFB10
 3347 0040 00000000 		.4byte	.LFB11
 3348 0044 28000000 		.4byte	.LFE11-.LFB11
 3349 0048 00000000 		.4byte	.LFB12
 3350 004c 28000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 85


 3351 0050 00000000 		.4byte	.LFB13
 3352 0054 2C000000 		.4byte	.LFE13-.LFB13
 3353 0058 00000000 		.4byte	.LFB14
 3354 005c 28000000 		.4byte	.LFE14-.LFB14
 3355 0060 00000000 		.4byte	.LFB15
 3356 0064 10000000 		.4byte	.LFE15-.LFB15
 3357 0068 00000000 		.4byte	.LFB16
 3358 006c 10000000 		.4byte	.LFE16-.LFB16
 3359 0070 00000000 		.4byte	.LFB17
 3360 0074 28000000 		.4byte	.LFE17-.LFB17
 3361 0078 00000000 		.4byte	.LFB18
 3362 007c 10000000 		.4byte	.LFE18-.LFB18
 3363 0080 00000000 		.4byte	.LFB19
 3364 0084 10000000 		.4byte	.LFE19-.LFB19
 3365 0088 00000000 		.4byte	.LFB20
 3366 008c 24000000 		.4byte	.LFE20-.LFB20
 3367 0090 00000000 		.4byte	.LFB21
 3368 0094 10000000 		.4byte	.LFE21-.LFB21
 3369 0098 00000000 		.4byte	.LFB22
 3370 009c 10000000 		.4byte	.LFE22-.LFB22
 3371 00a0 00000000 		.4byte	.LFB23
 3372 00a4 28000000 		.4byte	.LFE23-.LFB23
 3373 00a8 00000000 		.4byte	.LFB24
 3374 00ac 10000000 		.4byte	.LFE24-.LFB24
 3375 00b0 00000000 		.4byte	.LFB25
 3376 00b4 10000000 		.4byte	.LFE25-.LFB25
 3377 00b8 00000000 		.4byte	.LFB26
 3378 00bc 10000000 		.4byte	.LFE26-.LFB26
 3379 00c0 00000000 		.4byte	.LFB27
 3380 00c4 10000000 		.4byte	.LFE27-.LFB27
 3381 00c8 00000000 		.4byte	.LFB28
 3382 00cc 10000000 		.4byte	.LFE28-.LFB28
 3383 00d0 00000000 		.4byte	.LFB29
 3384 00d4 10000000 		.4byte	.LFE29-.LFB29
 3385 00d8 00000000 		.4byte	.LFB30
 3386 00dc 24000000 		.4byte	.LFE30-.LFB30
 3387 00e0 00000000 		.4byte	.LFB31
 3388 00e4 24000000 		.4byte	.LFE31-.LFB31
 3389 00e8 00000000 		.4byte	.LFB32
 3390 00ec 28000000 		.4byte	.LFE32-.LFB32
 3391 00f0 00000000 		.4byte	.LFB33
 3392 00f4 24000000 		.4byte	.LFE33-.LFB33
 3393 00f8 00000000 		.4byte	.LFB34
 3394 00fc 24000000 		.4byte	.LFE34-.LFB34
 3395 0100 00000000 		.4byte	.LFB35
 3396 0104 1C000000 		.4byte	.LFE35-.LFB35
 3397 0108 00000000 		.4byte	.LFB3
 3398 010c 24000000 		.4byte	.LFE3-.LFB3
 3399 0110 00000000 		.4byte	.LFB36
 3400 0114 14000000 		.4byte	.LFE36-.LFB36
 3401 0118 00000000 		.4byte	.LFB37
 3402 011c 0C000000 		.4byte	.LFE37-.LFB37
 3403 0120 00000000 		.4byte	.LFB2
 3404 0124 48000000 		.4byte	.LFE2-.LFB2
 3405 0128 00000000 		.4byte	.LFB4
 3406 012c 20000000 		.4byte	.LFE4-.LFB4
 3407 0130 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 86


 3408 0134 0C000000 		.4byte	.LFE38-.LFB38
 3409 0138 00000000 		.4byte	.LFB39
 3410 013c 0C000000 		.4byte	.LFE39-.LFB39
 3411 0140 00000000 		.4byte	.LFB40
 3412 0144 0C000000 		.4byte	.LFE40-.LFB40
 3413 0148 00000000 		.4byte	.LFB41
 3414 014c 0C000000 		.4byte	.LFE41-.LFB41
 3415 0150 00000000 		.4byte	0
 3416 0154 00000000 		.4byte	0
 3417              		.section	.debug_ranges,"",%progbits
 3418              	.Ldebug_ranges0:
 3419 0000 00000000 		.4byte	.LFB5
 3420 0004 1C000000 		.4byte	.LFE5
 3421 0008 00000000 		.4byte	.LFB6
 3422 000c 28000000 		.4byte	.LFE6
 3423 0010 00000000 		.4byte	.LFB7
 3424 0014 28000000 		.4byte	.LFE7
 3425 0018 00000000 		.4byte	.LFB8
 3426 001c 28000000 		.4byte	.LFE8
 3427 0020 00000000 		.4byte	.LFB9
 3428 0024 30000000 		.4byte	.LFE9
 3429 0028 00000000 		.4byte	.LFB10
 3430 002c 10000000 		.4byte	.LFE10
 3431 0030 00000000 		.4byte	.LFB11
 3432 0034 28000000 		.4byte	.LFE11
 3433 0038 00000000 		.4byte	.LFB12
 3434 003c 28000000 		.4byte	.LFE12
 3435 0040 00000000 		.4byte	.LFB13
 3436 0044 2C000000 		.4byte	.LFE13
 3437 0048 00000000 		.4byte	.LFB14
 3438 004c 28000000 		.4byte	.LFE14
 3439 0050 00000000 		.4byte	.LFB15
 3440 0054 10000000 		.4byte	.LFE15
 3441 0058 00000000 		.4byte	.LFB16
 3442 005c 10000000 		.4byte	.LFE16
 3443 0060 00000000 		.4byte	.LFB17
 3444 0064 28000000 		.4byte	.LFE17
 3445 0068 00000000 		.4byte	.LFB18
 3446 006c 10000000 		.4byte	.LFE18
 3447 0070 00000000 		.4byte	.LFB19
 3448 0074 10000000 		.4byte	.LFE19
 3449 0078 00000000 		.4byte	.LFB20
 3450 007c 24000000 		.4byte	.LFE20
 3451 0080 00000000 		.4byte	.LFB21
 3452 0084 10000000 		.4byte	.LFE21
 3453 0088 00000000 		.4byte	.LFB22
 3454 008c 10000000 		.4byte	.LFE22
 3455 0090 00000000 		.4byte	.LFB23
 3456 0094 28000000 		.4byte	.LFE23
 3457 0098 00000000 		.4byte	.LFB24
 3458 009c 10000000 		.4byte	.LFE24
 3459 00a0 00000000 		.4byte	.LFB25
 3460 00a4 10000000 		.4byte	.LFE25
 3461 00a8 00000000 		.4byte	.LFB26
 3462 00ac 10000000 		.4byte	.LFE26
 3463 00b0 00000000 		.4byte	.LFB27
 3464 00b4 10000000 		.4byte	.LFE27
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 87


 3465 00b8 00000000 		.4byte	.LFB28
 3466 00bc 10000000 		.4byte	.LFE28
 3467 00c0 00000000 		.4byte	.LFB29
 3468 00c4 10000000 		.4byte	.LFE29
 3469 00c8 00000000 		.4byte	.LFB30
 3470 00cc 24000000 		.4byte	.LFE30
 3471 00d0 00000000 		.4byte	.LFB31
 3472 00d4 24000000 		.4byte	.LFE31
 3473 00d8 00000000 		.4byte	.LFB32
 3474 00dc 28000000 		.4byte	.LFE32
 3475 00e0 00000000 		.4byte	.LFB33
 3476 00e4 24000000 		.4byte	.LFE33
 3477 00e8 00000000 		.4byte	.LFB34
 3478 00ec 24000000 		.4byte	.LFE34
 3479 00f0 00000000 		.4byte	.LFB35
 3480 00f4 1C000000 		.4byte	.LFE35
 3481 00f8 00000000 		.4byte	.LFB3
 3482 00fc 24000000 		.4byte	.LFE3
 3483 0100 00000000 		.4byte	.LFB36
 3484 0104 14000000 		.4byte	.LFE36
 3485 0108 00000000 		.4byte	.LFB37
 3486 010c 0C000000 		.4byte	.LFE37
 3487 0110 00000000 		.4byte	.LFB2
 3488 0114 48000000 		.4byte	.LFE2
 3489 0118 00000000 		.4byte	.LFB4
 3490 011c 20000000 		.4byte	.LFE4
 3491 0120 00000000 		.4byte	.LFB38
 3492 0124 0C000000 		.4byte	.LFE38
 3493 0128 00000000 		.4byte	.LFB39
 3494 012c 0C000000 		.4byte	.LFE39
 3495 0130 00000000 		.4byte	.LFB40
 3496 0134 0C000000 		.4byte	.LFE40
 3497 0138 00000000 		.4byte	.LFB41
 3498 013c 0C000000 		.4byte	.LFE41
 3499 0140 00000000 		.4byte	0
 3500 0144 00000000 		.4byte	0
 3501              		.section	.debug_line,"",%progbits
 3502              	.Ldebug_line0:
 3503 0000 7E030000 		.section	.debug_str,"MS",%progbits,1
 3503      02005100 
 3503      00000201 
 3503      FB0E0D00 
 3503      01010101 
 3504              	.LASF38:
 3505 0000 636F756E 		.ascii	"count\000"
 3505      7400
 3506              	.LASF78:
 3507 0006 43794578 		.ascii	"CyExitCriticalSection\000"
 3507      69744372 
 3507      69746963 
 3507      616C5365 
 3507      6374696F 
 3508              	.LASF44:
 3509 001c 50574D5F 		.ascii	"PWM_Motor_ReadPeriod\000"
 3509      4D6F746F 
 3509      725F5265 
 3509      61645065 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 88


 3509      72696F64 
 3510              	.LASF35:
 3511 0031 50574D5F 		.ascii	"PWM_Motor_SetPWMInvert\000"
 3511      4D6F746F 
 3511      725F5365 
 3511      7450574D 
 3511      496E7665 
 3512              	.LASF62:
 3513 0048 50574D5F 		.ascii	"PWM_Motor_SetStartMode\000"
 3513      4D6F746F 
 3513      725F5365 
 3513      74537461 
 3513      72744D6F 
 3514              	.LASF79:
 3515 005f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3515      43313120 
 3515      352E342E 
 3515      31203230 
 3515      31363036 
 3516 0092 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3516      20726576 
 3516      6973696F 
 3516      6E203233 
 3516      37373135 
 3517 00c5 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3517      66756E63 
 3517      74696F6E 
 3517      2D736563 
 3517      74696F6E 
 3518              	.LASF42:
 3519 00ed 70657269 		.ascii	"period\000"
 3519      6F6400
 3520              	.LASF7:
 3521 00f4 6C6F6E67 		.ascii	"long long unsigned int\000"
 3521      206C6F6E 
 3521      6720756E 
 3521      7369676E 
 3521      65642069 
 3522              	.LASF63:
 3523 010b 50574D5F 		.ascii	"PWM_Motor_SetStopMode\000"
 3523      4D6F746F 
 3523      725F5365 
 3523      7453746F 
 3523      704D6F64 
 3524              	.LASF61:
 3525 0121 50574D5F 		.ascii	"PWM_Motor_SetReloadMode\000"
 3525      4D6F746F 
 3525      725F5365 
 3525      7452656C 
 3525      6F61644D 
 3526              	.LASF25:
 3527 0139 50574D5F 		.ascii	"PWM_Motor_SetOneShot\000"
 3527      4D6F746F 
 3527      725F5365 
 3527      744F6E65 
 3527      53686F74 
 3528              	.LASF22:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 89


 3529 014e 71644D6F 		.ascii	"qdMode\000"
 3529      646500
 3530              	.LASF74:
 3531 0155 50574D5F 		.ascii	"PWM_Motor_GetInterruptSource\000"
 3531      4D6F746F 
 3531      725F4765 
 3531      74496E74 
 3531      65727275 
 3532              	.LASF29:
 3533 0172 50574D5F 		.ascii	"PWM_Motor_SetPWMSyncKill\000"
 3533      4D6F746F 
 3533      725F5365 
 3533      7450574D 
 3533      53796E63 
 3534              	.LASF6:
 3535 018b 6C6F6E67 		.ascii	"long long int\000"
 3535      206C6F6E 
 3535      6720696E 
 3535      7400
 3536              	.LASF0:
 3537 0199 7369676E 		.ascii	"signed char\000"
 3537      65642063 
 3537      68617200 
 3538              	.LASF31:
 3539 01a5 50574D5F 		.ascii	"PWM_Motor_SetPWMStopOnKill\000"
 3539      4D6F746F 
 3539      725F5365 
 3539      7450574D 
 3539      53746F70 
 3540              	.LASF52:
 3541 01c0 636F6D70 		.ascii	"compare\000"
 3541      61726500 
 3542              	.LASF4:
 3543 01c8 6C6F6E67 		.ascii	"long int\000"
 3543      20696E74 
 3543      00
 3544              	.LASF9:
 3545 01d1 75696E74 		.ascii	"uint8\000"
 3545      3800
 3546              	.LASF23:
 3547 01d7 50574D5F 		.ascii	"PWM_Motor_SetPrescaler\000"
 3547      4D6F746F 
 3547      725F5365 
 3547      74507265 
 3547      7363616C 
 3548              	.LASF27:
 3549 01ee 50574D5F 		.ascii	"PWM_Motor_SetPWMMode\000"
 3549      4D6F746F 
 3549      725F5365 
 3549      7450574D 
 3549      4D6F6465 
 3550              	.LASF12:
 3551 0203 646F7562 		.ascii	"double\000"
 3551      6C6500
 3552              	.LASF20:
 3553 020a 50574D5F 		.ascii	"PWM_Motor_SetQDMode\000"
 3553      4D6F746F 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 90


 3553      725F5365 
 3553      7451444D 
 3553      6F646500 
 3554              	.LASF10:
 3555 021e 75696E74 		.ascii	"uint32\000"
 3555      333200
 3556              	.LASF75:
 3557 0225 50574D5F 		.ascii	"PWM_Motor_ClearInterrupt\000"
 3557      4D6F746F 
 3557      725F436C 
 3557      65617249 
 3557      6E746572 
 3558              	.LASF60:
 3559 023e 74726967 		.ascii	"triggerMode\000"
 3559      6765724D 
 3559      6F646500 
 3560              	.LASF36:
 3561 024a 6D61736B 		.ascii	"mask\000"
 3561      00
 3562              	.LASF50:
 3563 024f 50574D5F 		.ascii	"PWM_Motor_SetPeriodSwap\000"
 3563      4D6F746F 
 3563      725F5365 
 3563      74506572 
 3563      696F6453 
 3564              	.LASF80:
 3565 0267 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM_Motor.c\000"
 3565      72617465 
 3565      645F536F 
 3565      75726365 
 3565      5C50536F 
 3566              	.LASF34:
 3567 028a 64656164 		.ascii	"deadTime\000"
 3567      54696D65 
 3567      00
 3568              	.LASF8:
 3569 0293 756E7369 		.ascii	"unsigned int\000"
 3569      676E6564 
 3569      20696E74 
 3569      00
 3570              	.LASF71:
 3571 02a0 50574D5F 		.ascii	"PWM_Motor_Init\000"
 3571      4D6F746F 
 3571      725F496E 
 3571      697400
 3572              	.LASF56:
 3573 02af 50574D5F 		.ascii	"PWM_Motor_ReadCompareBuf\000"
 3573      4D6F746F 
 3573      725F5265 
 3573      6164436F 
 3573      6D706172 
 3574              	.LASF66:
 3575 02c8 636F6D6D 		.ascii	"command\000"
 3575      616E6400 
 3576              	.LASF45:
 3577 02d0 50574D5F 		.ascii	"PWM_Motor_SetCompareSwap\000"
 3577      4D6F746F 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 91


 3577      725F5365 
 3577      74436F6D 
 3577      70617265 
 3578              	.LASF5:
 3579 02e9 6C6F6E67 		.ascii	"long unsigned int\000"
 3579      20756E73 
 3579      69676E65 
 3579      6420696E 
 3579      7400
 3580              	.LASF28:
 3581 02fb 6D6F6465 		.ascii	"modeMask\000"
 3581      4D61736B 
 3581      00
 3582              	.LASF18:
 3583 0304 50574D5F 		.ascii	"PWM_Motor_SetMode\000"
 3583      4D6F746F 
 3583      725F5365 
 3583      744D6F64 
 3583      6500
 3584              	.LASF77:
 3585 0316 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3585      74657243 
 3585      72697469 
 3585      63616C53 
 3585      65637469 
 3586              	.LASF3:
 3587 032d 73686F72 		.ascii	"short unsigned int\000"
 3587      7420756E 
 3587      7369676E 
 3587      65642069 
 3587      6E7400
 3588              	.LASF73:
 3589 0340 50574D5F 		.ascii	"PWM_Motor_GetInterruptSourceMasked\000"
 3589      4D6F746F 
 3589      725F4765 
 3589      74496E74 
 3589      65727275 
 3590              	.LASF26:
 3591 0363 6F6E6553 		.ascii	"oneShotEnable\000"
 3591      686F7445 
 3591      6E61626C 
 3591      6500
 3592              	.LASF33:
 3593 0371 50574D5F 		.ascii	"PWM_Motor_SetPWMDeadTime\000"
 3593      4D6F746F 
 3593      725F5365 
 3593      7450574D 
 3593      44656164 
 3594              	.LASF14:
 3595 038a 72656733 		.ascii	"reg32\000"
 3595      3200
 3596              	.LASF81:
 3597 0390 433A5C55 		.ascii	"C:\\Users\\Ade0n\\Desktop\\THE PROJECT\\PRJCT\\Cybe"
 3597      73657273 
 3597      5C416465 
 3597      306E5C44 
 3597      65736B74 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 92


 3598 03bd 72506F6E 		.ascii	"rPong\\CyberPong.cydsn\000"
 3598      675C4379 
 3598      62657250 
 3598      6F6E672E 
 3598      63796473 
 3599              	.LASF16:
 3600 03d3 73697A65 		.ascii	"sizetype\000"
 3600      74797065 
 3600      00
 3601              	.LASF15:
 3602 03dc 6C6F6E67 		.ascii	"long double\000"
 3602      20646F75 
 3602      626C6500 
 3603              	.LASF41:
 3604 03e8 50574D5F 		.ascii	"PWM_Motor_WritePeriod\000"
 3604      4D6F746F 
 3604      725F5772 
 3604      69746550 
 3604      6572696F 
 3605              	.LASF65:
 3606 03fe 50574D5F 		.ascii	"PWM_Motor_TriggerCommand\000"
 3606      4D6F746F 
 3606      725F5472 
 3606      69676765 
 3606      72436F6D 
 3607              	.LASF76:
 3608 0417 50574D5F 		.ascii	"PWM_Motor_SetInterrupt\000"
 3608      4D6F746F 
 3608      725F5365 
 3608      74496E74 
 3608      65727275 
 3609              	.LASF72:
 3610 042e 50574D5F 		.ascii	"PWM_Motor_Start\000"
 3610      4D6F746F 
 3610      725F5374 
 3610      61727400 
 3611              	.LASF11:
 3612 043e 666C6F61 		.ascii	"float\000"
 3612      7400
 3613              	.LASF70:
 3614 0444 696E7465 		.ascii	"interruptMask\000"
 3614      72727570 
 3614      744D6173 
 3614      6B00
 3615              	.LASF24:
 3616 0452 70726573 		.ascii	"prescaler\000"
 3616      63616C65 
 3616      7200
 3617              	.LASF1:
 3618 045c 756E7369 		.ascii	"unsigned char\000"
 3618      676E6564 
 3618      20636861 
 3618      7200
 3619              	.LASF67:
 3620 046a 50574D5F 		.ascii	"PWM_Motor_Enable\000"
 3620      4D6F746F 
 3620      725F456E 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 93


 3620      61626C65 
 3620      00
 3621              	.LASF32:
 3622 047b 73746F70 		.ascii	"stopOnKillEnable\000"
 3622      4F6E4B69 
 3622      6C6C456E 
 3622      61626C65 
 3622      00
 3623              	.LASF2:
 3624 048c 73686F72 		.ascii	"short int\000"
 3624      7420696E 
 3624      7400
 3625              	.LASF57:
 3626 0496 50574D5F 		.ascii	"PWM_Motor_ReadCapture\000"
 3626      4D6F746F 
 3626      725F5265 
 3626      61644361 
 3626      70747572 
 3627              	.LASF64:
 3628 04ac 50574D5F 		.ascii	"PWM_Motor_SetCountMode\000"
 3628      4D6F746F 
 3628      725F5365 
 3628      74436F75 
 3628      6E744D6F 
 3629              	.LASF82:
 3630 04c3 50574D5F 		.ascii	"PWM_Motor_initVar\000"
 3630      4D6F746F 
 3630      725F696E 
 3630      69745661 
 3630      7200
 3631              	.LASF13:
 3632 04d5 63686172 		.ascii	"char\000"
 3632      00
 3633              	.LASF21:
 3634 04da 6D6F6465 		.ascii	"mode\000"
 3634      00
 3635              	.LASF53:
 3636 04df 50574D5F 		.ascii	"PWM_Motor_ReadCompare\000"
 3636      4D6F746F 
 3636      725F5265 
 3636      6164436F 
 3636      6D706172 
 3637              	.LASF39:
 3638 04f5 50574D5F 		.ascii	"PWM_Motor_SetCounterMode\000"
 3638      4D6F746F 
 3638      725F5365 
 3638      74436F75 
 3638      6E746572 
 3639              	.LASF51:
 3640 050e 50574D5F 		.ascii	"PWM_Motor_WriteCompare\000"
 3640      4D6F746F 
 3640      725F5772 
 3640      69746543 
 3640      6F6D7061 
 3641              	.LASF40:
 3642 0525 636F756E 		.ascii	"counterMode\000"
 3642      7465724D 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 94


 3642      6F646500 
 3643              	.LASF55:
 3644 0531 636F6D70 		.ascii	"compareBuf\000"
 3644      61726542 
 3644      756600
 3645              	.LASF59:
 3646 053c 50574D5F 		.ascii	"PWM_Motor_SetCaptureMode\000"
 3646      4D6F746F 
 3646      725F5365 
 3646      74436170 
 3646      74757265 
 3647              	.LASF47:
 3648 0555 50574D5F 		.ascii	"PWM_Motor_WritePeriodBuf\000"
 3648      4D6F746F 
 3648      725F5772 
 3648      69746550 
 3648      6572696F 
 3649              	.LASF68:
 3650 056e 50574D5F 		.ascii	"PWM_Motor_ReadStatus\000"
 3650      4D6F746F 
 3650      725F5265 
 3650      61645374 
 3650      61747573 
 3651              	.LASF49:
 3652 0583 50574D5F 		.ascii	"PWM_Motor_ReadPeriodBuf\000"
 3652      4D6F746F 
 3652      725F5265 
 3652      61645065 
 3652      72696F64 
 3653              	.LASF19:
 3654 059b 656E6162 		.ascii	"enableInterrupts\000"
 3654      6C65496E 
 3654      74657272 
 3654      75707473 
 3654      00
 3655              	.LASF69:
 3656 05ac 50574D5F 		.ascii	"PWM_Motor_SetInterruptMode\000"
 3656      4D6F746F 
 3656      725F5365 
 3656      74496E74 
 3656      65727275 
 3657              	.LASF43:
 3658 05c7 50574D5F 		.ascii	"PWM_Motor_ReadCounter\000"
 3658      4D6F746F 
 3658      725F5265 
 3658      6164436F 
 3658      756E7465 
 3659              	.LASF30:
 3660 05dd 73796E63 		.ascii	"syncKillEnable\000"
 3660      4B696C6C 
 3660      456E6162 
 3660      6C6500
 3661              	.LASF17:
 3662 05ec 50574D5F 		.ascii	"PWM_Motor_Stop\000"
 3662      4D6F746F 
 3662      725F5374 
 3662      6F7000
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc5IlpNy.s 			page 95


 3663              	.LASF46:
 3664 05fb 73776170 		.ascii	"swapEnable\000"
 3664      456E6162 
 3664      6C6500
 3665              	.LASF58:
 3666 0606 50574D5F 		.ascii	"PWM_Motor_ReadCaptureBuf\000"
 3666      4D6F746F 
 3666      725F5265 
 3666      61644361 
 3666      70747572 
 3667              	.LASF54:
 3668 061f 50574D5F 		.ascii	"PWM_Motor_WriteCompareBuf\000"
 3668      4D6F746F 
 3668      725F5772 
 3668      69746543 
 3668      6F6D7061 
 3669              	.LASF37:
 3670 0639 50574D5F 		.ascii	"PWM_Motor_WriteCounter\000"
 3670      4D6F746F 
 3670      725F5772 
 3670      69746543 
 3670      6F756E74 
 3671              	.LASF48:
 3672 0650 70657269 		.ascii	"periodBuf\000"
 3672      6F644275 
 3672      6600
 3673              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
