ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"FanController.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.FanController_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	FanController_Enable
  22              		.code	16
  23              		.thumb_func
  24              		.type	FanController_Enable, %function
  25              	FanController_Enable:
  26              	.LFB5:
  27              		.file 1 "Generated_Source\\PSoC4\\FanController.c"
   1:Generated_Source\PSoC4/FanController.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/FanController.c **** * File Name: FanController.c
   3:Generated_Source\PSoC4/FanController.c **** * Version 4.10
   4:Generated_Source\PSoC4/FanController.c **** *
   5:Generated_Source\PSoC4/FanController.c **** * Description:
   6:Generated_Source\PSoC4/FanController.c **** *  This file contains the API files for the FanController component.
   7:Generated_Source\PSoC4/FanController.c **** *  The FanController component supports up to 16 pulse width modulator (PWM)
   8:Generated_Source\PSoC4/FanController.c **** *  controlled 4-wire fans and through an intuitive graphical interface,
   9:Generated_Source\PSoC4/FanController.c **** *  enabling designers to quickly configure the number of fans, their electro-
  10:Generated_Source\PSoC4/FanController.c **** *  mechanical properties, organization into banks (if desired) and the control
  11:Generated_Source\PSoC4/FanController.c **** *  algorithm type: firmware or hardware based.
  12:Generated_Source\PSoC4/FanController.c **** *
  13:Generated_Source\PSoC4/FanController.c **** *  Refer to AN66627 "PSoC(R) 3 and PSoC 5 - Intelligent Fan Controller" for
  14:Generated_Source\PSoC4/FanController.c **** *  more details and example projects.
  15:Generated_Source\PSoC4/FanController.c **** *
  16:Generated_Source\PSoC4/FanController.c **** * Note:
  17:Generated_Source\PSoC4/FanController.c **** *
  18:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
  19:Generated_Source\PSoC4/FanController.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  20:Generated_Source\PSoC4/FanController.c **** * You may use this file only in accordance with the license, terms, conditions,
  21:Generated_Source\PSoC4/FanController.c **** * disclaimers, and limitations in the end user license agreement accompanying
  22:Generated_Source\PSoC4/FanController.c **** * the software package with which this file was provided.
  23:Generated_Source\PSoC4/FanController.c **** ********************************************************************************/
  24:Generated_Source\PSoC4/FanController.c **** 
  25:Generated_Source\PSoC4/FanController.c **** #include "FanController.h"
  26:Generated_Source\PSoC4/FanController.c **** #include "CyLib.h"
  27:Generated_Source\PSoC4/FanController.c **** 
  28:Generated_Source\PSoC4/FanController.c **** #if(CY_PSOC4)
  29:Generated_Source\PSoC4/FanController.c ****     #include "FanController_DataSend.h"
  30:Generated_Source\PSoC4/FanController.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 2


  31:Generated_Source\PSoC4/FanController.c ****     #if(FanController_NUMBER_OF_FAN_OUTPUTS == 1u)
  32:Generated_Source\PSoC4/FanController.c ****         #include "FanController_FW_PWM1.h"
  33:Generated_Source\PSoC4/FanController.c ****     #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 2u)
  34:Generated_Source\PSoC4/FanController.c ****         #include "FanController_FW_PWM1.h"
  35:Generated_Source\PSoC4/FanController.c ****         #include "FanController_FW_PWM2.h"
  36:Generated_Source\PSoC4/FanController.c ****     #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 3u)
  37:Generated_Source\PSoC4/FanController.c ****         #include "FanController_FW_PWM1.h"
  38:Generated_Source\PSoC4/FanController.c ****         #include "FanController_FW_PWM2.h"
  39:Generated_Source\PSoC4/FanController.c ****         #include "FanController_FW_PWM3.h"
  40:Generated_Source\PSoC4/FanController.c ****     #else
  41:Generated_Source\PSoC4/FanController.c ****         #include "FanController_FW_PWM1.h"
  42:Generated_Source\PSoC4/FanController.c ****         #include "FanController_FW_PWM2.h"
  43:Generated_Source\PSoC4/FanController.c ****         #include "FanController_FW_PWM3.h"
  44:Generated_Source\PSoC4/FanController.c ****         #include "FanController_FW_PWM4.h"
  45:Generated_Source\PSoC4/FanController.c ****     #endif /* (FanController_NUMBER_OF_FAN_OUTPUTS == 1u) */
  46:Generated_Source\PSoC4/FanController.c **** 
  47:Generated_Source\PSoC4/FanController.c **** #endif /* (CY_PSOC4) */
  48:Generated_Source\PSoC4/FanController.c **** 
  49:Generated_Source\PSoC4/FanController.c **** #if(FanController_IS_AUTO_FIRMWARE_MODE)
  50:Generated_Source\PSoC4/FanController.c ****     #include "FanController_PID_ISR.h"
  51:Generated_Source\PSoC4/FanController.c **** #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
  52:Generated_Source\PSoC4/FanController.c **** 
  53:Generated_Source\PSoC4/FanController.c **** 
  54:Generated_Source\PSoC4/FanController.c **** /*******************************************************************************
  55:Generated_Source\PSoC4/FanController.c **** * Variables
  56:Generated_Source\PSoC4/FanController.c **** *
  57:Generated_Source\PSoC4/FanController.c **** * Fan Control Data Structure declaration and initialization can be found at the
  58:Generated_Source\PSoC4/FanController.c **** * end of this file due to its large size.
  59:Generated_Source\PSoC4/FanController.c **** ********************************************************************************/
  60:Generated_Source\PSoC4/FanController.c **** uint8   FanController_initVar = 0u;
  61:Generated_Source\PSoC4/FanController.c **** 
  62:Generated_Source\PSoC4/FanController.c **** #if (CY_PSOC4)
  63:Generated_Source\PSoC4/FanController.c ****     uint16 FanController_alertMask = 0u;
  64:Generated_Source\PSoC4/FanController.c ****     uint16 FanController_stallStatus = 0u;
  65:Generated_Source\PSoC4/FanController.c **** #else
  66:Generated_Source\PSoC4/FanController.c ****     
  67:Generated_Source\PSoC4/FanController.c ****     /* Stores channel number of Tachometer out DMA */
  68:Generated_Source\PSoC4/FanController.c ****     static uint8 FanController_TachOutDMA_channel = 0u;
  69:Generated_Source\PSoC4/FanController.c **** 
  70:Generated_Source\PSoC4/FanController.c ****     #if(FanController_IS_AUTO_HARDWARE_MODE)
  71:Generated_Source\PSoC4/FanController.c ****         
  72:Generated_Source\PSoC4/FanController.c ****         /* Stores channel number of Tachometer in DMA */
  73:Generated_Source\PSoC4/FanController.c ****         static uint8 FanController_TachInDMA_channel = 0u;
  74:Generated_Source\PSoC4/FanController.c **** 
  75:Generated_Source\PSoC4/FanController.c ****     #endif /* FanController_IS_AUTO_HARDWARE_MODE */
  76:Generated_Source\PSoC4/FanController.c **** 
  77:Generated_Source\PSoC4/FanController.c **** #endif /* (CY_PSOC4) */
  78:Generated_Source\PSoC4/FanController.c **** 
  79:Generated_Source\PSoC4/FanController.c **** /* Arrays for storing PID parameters and saturation ranges */
  80:Generated_Source\PSoC4/FanController.c **** #if(FanController_IS_AUTO_FIRMWARE_MODE)
  81:Generated_Source\PSoC4/FanController.c ****     int16 FanController_pidA1[FanController_NUMBER_OF_FANS];
  82:Generated_Source\PSoC4/FanController.c ****     int16 FanController_pidA2[FanController_NUMBER_OF_FANS];
  83:Generated_Source\PSoC4/FanController.c ****     int16 FanController_pidA3[FanController_NUMBER_OF_FANS];
  84:Generated_Source\PSoC4/FanController.c **** 
  85:Generated_Source\PSoC4/FanController.c ****     uint32 FanController_outputSatL[FanController_NUMBER_OF_FANS];
  86:Generated_Source\PSoC4/FanController.c ****     uint32 FanController_outputSatH[FanController_NUMBER_OF_FANS];
  87:Generated_Source\PSoC4/FanController.c **** #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 3


  88:Generated_Source\PSoC4/FanController.c **** 
  89:Generated_Source\PSoC4/FanController.c **** #if(!FanController_IS_MANUAL_MODE)
  90:Generated_Source\PSoC4/FanController.c ****     /* An array to store desired fans speeds */
  91:Generated_Source\PSoC4/FanController.c ****     uint16 FanController_desiredFansSpeed[FanController_NUMBER_OF_FANS];
  92:Generated_Source\PSoC4/FanController.c **** #endif /* (!FanController_IS_MANUAL_MODE) */
  93:Generated_Source\PSoC4/FanController.c **** 
  94:Generated_Source\PSoC4/FanController.c **** 
  95:Generated_Source\PSoC4/FanController.c **** /*******************************************************************************
  96:Generated_Source\PSoC4/FanController.c **** * Private API Prototypes
  97:Generated_Source\PSoC4/FanController.c **** ********************************************************************************/
  98:Generated_Source\PSoC4/FanController.c **** #if (!CY_PSOC4)
  99:Generated_Source\PSoC4/FanController.c ****     static void  FanController_SetupDMA(void) CYREENTRANT;
 100:Generated_Source\PSoC4/FanController.c ****     static uint8 FanController_TachOutDMA_DmaInitialize(uint8 burstCount, uint8 requestPerBurst,
 101:Generated_Source\PSoC4/FanController.c ****                                                     uint16 upperSrcAddress, uint16 upperDestAddress
 102:Generated_Source\PSoC4/FanController.c ****     static void  FanController_TachOutDMA_DmaRelease(void) CYREENTRANT;
 103:Generated_Source\PSoC4/FanController.c **** 
 104:Generated_Source\PSoC4/FanController.c ****     #if(FanController_IS_AUTO_HARDWARE_MODE)
 105:Generated_Source\PSoC4/FanController.c **** 
 106:Generated_Source\PSoC4/FanController.c ****         static uint8 FanController_TachInDMA_DmaInitialize(uint8 burstCount, uint8 requestPerBurst,
 107:Generated_Source\PSoC4/FanController.c ****                                                         uint16 upperSrcAddress, uint16 upperDestAdd
 108:Generated_Source\PSoC4/FanController.c ****         static void  FanController_TachInDMA_DmaRelease(void) CYREENTRANT;
 109:Generated_Source\PSoC4/FanController.c **** 
 110:Generated_Source\PSoC4/FanController.c ****     #endif /* FanController_IS_AUTO_HARDWARE_MODE */
 111:Generated_Source\PSoC4/FanController.c **** 
 112:Generated_Source\PSoC4/FanController.c **** #endif /* (!CY_PSOC4) */
 113:Generated_Source\PSoC4/FanController.c **** 
 114:Generated_Source\PSoC4/FanController.c **** 
 115:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 116:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_Start
 117:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 118:Generated_Source\PSoC4/FanController.c **** *
 119:Generated_Source\PSoC4/FanController.c **** * Summary:
 120:Generated_Source\PSoC4/FanController.c **** *  Initializes component if not already initialized, then re-enables it.
 121:Generated_Source\PSoC4/FanController.c **** *
 122:Generated_Source\PSoC4/FanController.c **** * Parameters:
 123:Generated_Source\PSoC4/FanController.c **** *  None
 124:Generated_Source\PSoC4/FanController.c **** *
 125:Generated_Source\PSoC4/FanController.c **** * Return:
 126:Generated_Source\PSoC4/FanController.c **** *  None
 127:Generated_Source\PSoC4/FanController.c **** *
 128:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 129:Generated_Source\PSoC4/FanController.c **** *  None
 130:Generated_Source\PSoC4/FanController.c **** *
 131:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 132:Generated_Source\PSoC4/FanController.c **** void FanController_Start(void) 
 133:Generated_Source\PSoC4/FanController.c **** {
 134:Generated_Source\PSoC4/FanController.c ****     /* If not already initialized, then initialize hardware and variables */
 135:Generated_Source\PSoC4/FanController.c ****     if(FanController_initVar == 0u)
 136:Generated_Source\PSoC4/FanController.c ****     {
 137:Generated_Source\PSoC4/FanController.c ****         FanController_Init();
 138:Generated_Source\PSoC4/FanController.c ****         FanController_initVar = 1u;
 139:Generated_Source\PSoC4/FanController.c ****     }
 140:Generated_Source\PSoC4/FanController.c ****     FanController_Enable();
 141:Generated_Source\PSoC4/FanController.c **** }
 142:Generated_Source\PSoC4/FanController.c **** 
 143:Generated_Source\PSoC4/FanController.c **** 
 144:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 4


 145:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_Stop
 146:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 147:Generated_Source\PSoC4/FanController.c **** *
 148:Generated_Source\PSoC4/FanController.c **** * Summary:
 149:Generated_Source\PSoC4/FanController.c **** *  Stop the fan controller component.  Disables all hardware sub-components,
 150:Generated_Source\PSoC4/FanController.c **** *  drives fan outputs high and de-asserts the alert pin.
 151:Generated_Source\PSoC4/FanController.c **** *
 152:Generated_Source\PSoC4/FanController.c **** * Parameters:
 153:Generated_Source\PSoC4/FanController.c **** *  None
 154:Generated_Source\PSoC4/FanController.c **** *
 155:Generated_Source\PSoC4/FanController.c **** * Return:
 156:Generated_Source\PSoC4/FanController.c **** *  None
 157:Generated_Source\PSoC4/FanController.c **** *
 158:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 159:Generated_Source\PSoC4/FanController.c **** *  All PWM outputs to fans will be driven high (100% duty cycle).
 160:Generated_Source\PSoC4/FanController.c **** *  Alert output de-asserted.
 161:Generated_Source\PSoC4/FanController.c **** *
 162:Generated_Source\PSoC4/FanController.c **** ******************************************************************************/
 163:Generated_Source\PSoC4/FanController.c **** void FanController_Stop(void) 
 164:Generated_Source\PSoC4/FanController.c **** {
 165:Generated_Source\PSoC4/FanController.c ****     /* Turn off the hardware sub-components */
 166:Generated_Source\PSoC4/FanController.c ****     FanController_GLOBAL_CONTROL_REG = 0u;
 167:Generated_Source\PSoC4/FanController.c **** 
 168:Generated_Source\PSoC4/FanController.c ****     /* De-assert the alert pin */
 169:Generated_Source\PSoC4/FanController.c ****     FanController_DisableAlert();
 170:Generated_Source\PSoC4/FanController.c **** 
 171:Generated_Source\PSoC4/FanController.c ****     #if (!CY_PSOC4)
 172:Generated_Source\PSoC4/FanController.c **** 
 173:Generated_Source\PSoC4/FanController.c ****         /* Release DMA resources */
 174:Generated_Source\PSoC4/FanController.c ****         FanController_TachOutDMA_DmaRelease();
 175:Generated_Source\PSoC4/FanController.c **** 
 176:Generated_Source\PSoC4/FanController.c ****         #if(FanController_IS_AUTO_HARDWARE_MODE)
 177:Generated_Source\PSoC4/FanController.c ****             FanController_TachInDMA_DmaRelease();
 178:Generated_Source\PSoC4/FanController.c ****         #endif /* FanController_IS_AUTO_HARDWARE_MODE */
 179:Generated_Source\PSoC4/FanController.c **** 
 180:Generated_Source\PSoC4/FanController.c ****     #else
 181:Generated_Source\PSoC4/FanController.c **** 
 182:Generated_Source\PSoC4/FanController.c ****         /* Disable PWMs */
 183:Generated_Source\PSoC4/FanController.c ****         #if(FanController_NUMBER_OF_FAN_OUTPUTS == 1u)
 184:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Stop();
 185:Generated_Source\PSoC4/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 2u)
 186:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Stop();
 187:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM2_Stop();
 188:Generated_Source\PSoC4/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 3u)
 189:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Stop();
 190:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM2_Stop();
 191:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM3_Stop();
 192:Generated_Source\PSoC4/FanController.c ****         #else
 193:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Stop();
 194:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM2_Stop();
 195:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM3_Stop();
 196:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM4_Stop();
 197:Generated_Source\PSoC4/FanController.c ****         #endif /* (FanController_NUMBER_OF_FAN_OUTPUTS == 1u) */
 198:Generated_Source\PSoC4/FanController.c **** 
 199:Generated_Source\PSoC4/FanController.c ****     #endif /* (!CY_PSOC4) */
 200:Generated_Source\PSoC4/FanController.c **** }
 201:Generated_Source\PSoC4/FanController.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 5


 202:Generated_Source\PSoC4/FanController.c **** 
 203:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 204:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_Init
 205:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 206:Generated_Source\PSoC4/FanController.c **** *
 207:Generated_Source\PSoC4/FanController.c **** * Summary:
 208:Generated_Source\PSoC4/FanController.c **** *  Sets up DMA channels and transaction descriptors. Configures PWMs and
 209:Generated_Source\PSoC4/FanController.c **** *  Tachometer hardware blocks. Also it configures interrupts if they are used
 210:Generated_Source\PSoC4/FanController.c **** *  in the component.
 211:Generated_Source\PSoC4/FanController.c **** *
 212:Generated_Source\PSoC4/FanController.c **** * Parameters:
 213:Generated_Source\PSoC4/FanController.c **** *  None
 214:Generated_Source\PSoC4/FanController.c **** *
 215:Generated_Source\PSoC4/FanController.c **** * Return:
 216:Generated_Source\PSoC4/FanController.c **** *  None
 217:Generated_Source\PSoC4/FanController.c **** *
 218:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 219:Generated_Source\PSoC4/FanController.c **** *  Allocates DMA channels and transaction descriptors (TDs).
 220:Generated_Source\PSoC4/FanController.c **** *
 221:Generated_Source\PSoC4/FanController.c **** ******************************************************************************/
 222:Generated_Source\PSoC4/FanController.c **** void FanController_Init(void) 
 223:Generated_Source\PSoC4/FanController.c **** {
 224:Generated_Source\PSoC4/FanController.c ****     uint8 counti;
 225:Generated_Source\PSoC4/FanController.c ****     uint8 interruptState;
 226:Generated_Source\PSoC4/FanController.c **** 
 227:Generated_Source\PSoC4/FanController.c ****     #if (!CY_PSOC4)
 228:Generated_Source\PSoC4/FanController.c ****         
 229:Generated_Source\PSoC4/FanController.c ****         /* Performs configuration of DMA used in the component */
 230:Generated_Source\PSoC4/FanController.c ****         FanController_SetupDMA();
 231:Generated_Source\PSoC4/FanController.c **** 
 232:Generated_Source\PSoC4/FanController.c ****         /***********************************************************************
 233:Generated_Source\PSoC4/FanController.c ****         * Initialize the PWMs
 234:Generated_Source\PSoC4/FanController.c ****         ***********************************************************************/
 235:Generated_Source\PSoC4/FanController.c ****         #if(FanController_IS_AUTO_HARDWARE_MODE)
 236:Generated_Source\PSoC4/FanController.c **** 
 237:Generated_Source\PSoC4/FanController.c ****             /* Configure hardware controlled PWMs */
 238:Generated_Source\PSoC4/FanController.c ****             for (counti = 0u; counti < FanController_NUMBER_OF_FANS; counti++)
 239:Generated_Source\PSoC4/FanController.c ****             {
 240:Generated_Source\PSoC4/FanController.c ****                 /* 8-bit hardware controlled PWM */
 241:Generated_Source\PSoC4/FanController.c ****                 #if(FanController_PWMRES == FanController_PWMRES_EIGHTBIT)
 242:Generated_Source\PSoC4/FanController.c ****                     /* Set max PWM period */
 243:Generated_Source\PSoC4/FanController.c ****                     CY_SET_REG8(FanController_fanDriverRegs[counti].pwmPeriodReg, FanController_PWM
 244:Generated_Source\PSoC4/FanController.c ****                     /* Set max PWM duty cycle (must be <= PWM period) */
 245:Generated_Source\PSoC4/FanController.c ****                     CY_SET_REG8(FanController_fanDriverRegs[counti].pwmMaxDutyReg, FanController_PW
 246:Generated_Source\PSoC4/FanController.c ****                 /* 10-bit hardware controlled PWM */
 247:Generated_Source\PSoC4/FanController.c ****                 #else
 248:Generated_Source\PSoC4/FanController.c ****                     /* Set max PWM period */
 249:Generated_Source\PSoC4/FanController.c ****                     CY_SET_REG16(FanController_fanDriverRegs[counti].pwmPeriodReg, FanController_PW
 250:Generated_Source\PSoC4/FanController.c ****                     /* Set max PWM duty cycle (must be <= PWM period) */
 251:Generated_Source\PSoC4/FanController.c ****                     CY_SET_REG16(FanController_fanDriverRegs[counti].pwmMaxDutyReg, FanController_P
 252:Generated_Source\PSoC4/FanController.c ****                 #endif /* FanController_PWMRES == FanController_PWMRES_EIGHTBIT */
 253:Generated_Source\PSoC4/FanController.c **** 
 254:Generated_Source\PSoC4/FanController.c ****                 /* Set initial duty cycle */
 255:Generated_Source\PSoC4/FanController.c ****                 FanController_SetDutyCycle((counti + 1u), FanController_fanProperties[counti].initD
 256:Generated_Source\PSoC4/FanController.c ****                 /* Set initial speed */
 257:Generated_Source\PSoC4/FanController.c ****                 FanController_SetDesiredSpeed((counti + 1u), FanController_fanProperties[counti].in
 258:Generated_Source\PSoC4/FanController.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 6


 259:Generated_Source\PSoC4/FanController.c ****                 /* Enable cnt7 to track speed regulation errors */
 260:Generated_Source\PSoC4/FanController.c ****                 CY_SET_REG8(FanController_fanDriverRegs[counti].errorCountReg,
 261:Generated_Source\PSoC4/FanController.c ****                     CY_GET_REG8(FanController_fanDriverRegs[counti].errorCountReg) | FanController_
 262:Generated_Source\PSoC4/FanController.c ****             }
 263:Generated_Source\PSoC4/FanController.c **** 
 264:Generated_Source\PSoC4/FanController.c ****         #else
 265:Generated_Source\PSoC4/FanController.c **** 
 266:Generated_Source\PSoC4/FanController.c ****             /* Configure firmware controlled PWMs */
 267:Generated_Source\PSoC4/FanController.c ****             for (counti = 0u; counti < FanController_FANPWM_COUNT; counti++)
 268:Generated_Source\PSoC4/FanController.c ****             {
 269:Generated_Source\PSoC4/FanController.c ****                 /* 8-bit firmware controlled PWM */
 270:Generated_Source\PSoC4/FanController.c ****                 #if (FanController_PWMRES == FanController_PWMRES_EIGHTBIT)
 271:Generated_Source\PSoC4/FanController.c ****                     CY_SET_REG8(FanController_fanPwmInitRegs[counti].pwmPeriodReg, FanController_PW
 272:Generated_Source\PSoC4/FanController.c **** 
 273:Generated_Source\PSoC4/FanController.c ****                     interruptState = CyEnterCriticalSection();
 274:Generated_Source\PSoC4/FanController.c **** 
 275:Generated_Source\PSoC4/FanController.c ****                     CY_SET_REG8(FanController_fanPwmInitRegs[counti].pwmAuxControlReg,
 276:Generated_Source\PSoC4/FanController.c ****                         CY_GET_REG8(FanController_fanPwmInitRegs[counti].pwmAuxControlReg) |
 277:Generated_Source\PSoC4/FanController.c ****                             FanController_FANPWM_AUX_CTRL_FIFO0_CLR_8);
 278:Generated_Source\PSoC4/FanController.c **** 
 279:Generated_Source\PSoC4/FanController.c ****                     CyExitCriticalSection(interruptState);
 280:Generated_Source\PSoC4/FanController.c **** 
 281:Generated_Source\PSoC4/FanController.c ****                 /* 10-bit firmware controlled PWM */
 282:Generated_Source\PSoC4/FanController.c ****                 #else
 283:Generated_Source\PSoC4/FanController.c ****                     CY_SET_REG16(FanController_fanPwmInitRegs[counti].pwmPeriodReg, FanController_P
 284:Generated_Source\PSoC4/FanController.c **** 
 285:Generated_Source\PSoC4/FanController.c ****                     interruptState = CyEnterCriticalSection();
 286:Generated_Source\PSoC4/FanController.c **** 
 287:Generated_Source\PSoC4/FanController.c ****                     CY_SET_REG16(FanController_fanPwmInitRegs[counti].pwmAuxControlReg,
 288:Generated_Source\PSoC4/FanController.c ****                         CY_GET_REG16(FanController_fanPwmInitRegs[counti].pwmAuxControlReg) |
 289:Generated_Source\PSoC4/FanController.c ****                             FanController_FANPWM_AUX_CTRL_FIFO0_CLR_10);
 290:Generated_Source\PSoC4/FanController.c **** 
 291:Generated_Source\PSoC4/FanController.c ****                     CyExitCriticalSection(interruptState);
 292:Generated_Source\PSoC4/FanController.c **** 
 293:Generated_Source\PSoC4/FanController.c ****                 #endif /* FanController_PWMRES == FanController_PWMRES_EIGHTBIT */
 294:Generated_Source\PSoC4/FanController.c ****             }
 295:Generated_Source\PSoC4/FanController.c **** 
 296:Generated_Source\PSoC4/FanController.c ****             for (counti = 0u; counti < FanController_NUMBER_OF_FAN_OUTPUTS; counti++)
 297:Generated_Source\PSoC4/FanController.c ****             {
 298:Generated_Source\PSoC4/FanController.c ****                 /* Set Desired speed to initial RPM from the customizer */
 299:Generated_Source\PSoC4/FanController.c ****                 FanController_SetDesiredSpeed((counti + 1u), FanController_fanProperties[counti].in
 300:Generated_Source\PSoC4/FanController.c ****             }
 301:Generated_Source\PSoC4/FanController.c **** 
 302:Generated_Source\PSoC4/FanController.c ****         #endif /* ((FanController_IS_AUTO_HARDWARE_MODE) || (FanController_IS_AUTO_FIRMWARE_MODE)) 
 303:Generated_Source\PSoC4/FanController.c **** 
 304:Generated_Source\PSoC4/FanController.c ****     #else
 305:Generated_Source\PSoC4/FanController.c **** 
 306:Generated_Source\PSoC4/FanController.c ****         /***********************************************************************
 307:Generated_Source\PSoC4/FanController.c ****         * Configure the PWMs (TCPWMs)
 308:Generated_Source\PSoC4/FanController.c ****         ***********************************************************************/
 309:Generated_Source\PSoC4/FanController.c **** 
 310:Generated_Source\PSoC4/FanController.c ****         /* Initialize PWMs */
 311:Generated_Source\PSoC4/FanController.c ****         #if(FanController_NUMBER_OF_FAN_OUTPUTS == 1u)
 312:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Init();
 313:Generated_Source\PSoC4/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 2u)
 314:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Init();
 315:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM2_Init();
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 7


 316:Generated_Source\PSoC4/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 3u)
 317:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Init();
 318:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM2_Init();
 319:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM3_Init();
 320:Generated_Source\PSoC4/FanController.c ****         #else
 321:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Init();
 322:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM2_Init();
 323:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM3_Init();
 324:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM4_Init();
 325:Generated_Source\PSoC4/FanController.c ****         #endif /* (FanController_NUMBER_OF_FAN_OUTPUTS == 1u) */
 326:Generated_Source\PSoC4/FanController.c **** 
 327:Generated_Source\PSoC4/FanController.c ****         for (counti = 0u; counti < FanController_NUMBER_OF_FAN_OUTPUTS; counti++)
 328:Generated_Source\PSoC4/FanController.c ****         {
 329:Generated_Source\PSoC4/FanController.c ****             /* Set the hard-coded PWM period */
 330:Generated_Source\PSoC4/FanController.c ****             CY_SET_REG32(FanController_fanPwmInitRegs[counti].pwmPeriodReg, FanController_PWM_PERIO
 331:Generated_Source\PSoC4/FanController.c **** 
 332:Generated_Source\PSoC4/FanController.c ****             #if(FanController_IS_AUTO_FIRMWARE_MODE)
 333:Generated_Source\PSoC4/FanController.c ****                 /* In Auto Firmware Mode it is required to set duty cycle directly on the
 334:Generated_Source\PSoC4/FanController.c ****                 * start.
 335:Generated_Source\PSoC4/FanController.c ****                 */
 336:Generated_Source\PSoC4/FanController.c ****                 FanController_SetDutyCycle((counti + 1u), FanController_fanProperties[counti].initD
 337:Generated_Source\PSoC4/FanController.c ****             #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
 338:Generated_Source\PSoC4/FanController.c **** 
 339:Generated_Source\PSoC4/FanController.c ****             /* Set Desired speed to initial RPM from the customizer */
 340:Generated_Source\PSoC4/FanController.c ****             FanController_SetDesiredSpeed((counti + 1u), FanController_fanProperties[counti].initRp
 341:Generated_Source\PSoC4/FanController.c ****         }
 342:Generated_Source\PSoC4/FanController.c **** 
 343:Generated_Source\PSoC4/FanController.c ****     #endif /* (!CY_PSOC4) */
 344:Generated_Source\PSoC4/FanController.c **** 
 345:Generated_Source\PSoC4/FanController.c ****     /***********************************************************************
 346:Generated_Source\PSoC4/FanController.c ****     * Initialize the Tachometer
 347:Generated_Source\PSoC4/FanController.c ****     ***********************************************************************/
 348:Generated_Source\PSoC4/FanController.c **** 
 349:Generated_Source\PSoC4/FanController.c ****     interruptState = CyEnterCriticalSection();
 350:Generated_Source\PSoC4/FanController.c ****     #if (CY_PSOC4)
 351:Generated_Source\PSoC4/FanController.c ****         /* Clear the tachometer FIFO */
 352:Generated_Source\PSoC4/FanController.c ****         FanController_TACH_CUNTER_AUX_CTL_REG |= FanController_TACH_COUNTER_FIFO_CLR;
 353:Generated_Source\PSoC4/FanController.c ****         FanController_TACH_CUNTER_AUX_CTL_REG &= ((uint8) ~FanController_TACH_COUNTER_FIFO_CLR);
 354:Generated_Source\PSoC4/FanController.c ****     #else
 355:Generated_Source\PSoC4/FanController.c ****         /* Enable count7 hardware block to drive fan address */
 356:Generated_Source\PSoC4/FanController.c ****         FanController_TACH_FAN_COUNTR_AUX_CTL_REG |= FanController_COUNT7_ENABLE;
 357:Generated_Source\PSoC4/FanController.c ****     #endif /* (!CY_PSOC4) */
 358:Generated_Source\PSoC4/FanController.c ****     (void)CyExitCriticalSection(interruptState);
 359:Generated_Source\PSoC4/FanController.c ****     
 360:Generated_Source\PSoC4/FanController.c ****     /* Initialize glitch filter counter */
 361:Generated_Source\PSoC4/FanController.c ****     FanController_TACH_GLITCH_FILTER_PERIOD_REG = FanController_GLITCH_FILTER_VAL;
 362:Generated_Source\PSoC4/FanController.c **** 
 363:Generated_Source\PSoC4/FanController.c ****     #if((!FanController_IS_MANUAL_MODE) && (FanController_DAMPING_FACTOR > 0u))
 364:Generated_Source\PSoC4/FanController.c **** 
 365:Generated_Source\PSoC4/FanController.c ****         /* Set the divider by 10 */
 366:Generated_Source\PSoC4/FanController.c ****         FanController_DAMPING_COUNTER_DIVIDER_REG = FanController_DAMPING_FACTOR_DIVIDER_VAL;
 367:Generated_Source\PSoC4/FanController.c **** 
 368:Generated_Source\PSoC4/FanController.c ****         /* Init lower 8 bits of 16-bit Damping Factor Counter */
 369:Generated_Source\PSoC4/FanController.c ****          FanController_TACH_DAMPING_PERIOD_LOW_LSB_REG = FanController_DAMPING_FACTOR_PERIOD_LOW;
 370:Generated_Source\PSoC4/FanController.c **** 
 371:Generated_Source\PSoC4/FanController.c ****         /* Init high 8 bits of 16-bit Damping Factor Counter */
 372:Generated_Source\PSoC4/FanController.c ****         FanController_TACH_DAMPING_PERIOD_HIGH_LSB_REG = FanController_DAMPING_FACTOR_PERIOD_HIGH;
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 8


 373:Generated_Source\PSoC4/FanController.c **** 
 374:Generated_Source\PSoC4/FanController.c ****     #endif /* ((!FanController_IS_MANUAL_MODE) && (FanController_DAMPING_FACTOR > 0u)) */
 375:Generated_Source\PSoC4/FanController.c **** 
 376:Generated_Source\PSoC4/FanController.c ****     /***********************************************************************
 377:Generated_Source\PSoC4/FanController.c ****     * Initialize the Alert Mask Register based on customizer defaults
 378:Generated_Source\PSoC4/FanController.c ****     ***********************************************************************/
 379:Generated_Source\PSoC4/FanController.c ****     FanController_SetAlertMask(FanController_INIT_ALERT_MASK);
 380:Generated_Source\PSoC4/FanController.c **** 
 381:Generated_Source\PSoC4/FanController.c ****     #if(FanController_IS_AUTO_FIRMWARE_MODE)
 382:Generated_Source\PSoC4/FanController.c ****         /***********************************************************************
 383:Generated_Source\PSoC4/FanController.c ****         * Set PID coefficients for fans
 384:Generated_Source\PSoC4/FanController.c ****         ***********************************************************************/
 385:Generated_Source\PSoC4/FanController.c ****         for(counti = 0u; counti < FanController_NUMBER_OF_FANS; counti++)
 386:Generated_Source\PSoC4/FanController.c ****         {
 387:Generated_Source\PSoC4/FanController.c ****             /* Disable interrupts while updating PID constants */
 388:Generated_Source\PSoC4/FanController.c ****             interruptState = CyEnterCriticalSection();
 389:Generated_Source\PSoC4/FanController.c **** 
 390:Generated_Source\PSoC4/FanController.c ****             /* Initialize both PID parameters and output saturation with
 391:Generated_Source\PSoC4/FanController.c ****             * default values from the customizer.
 392:Generated_Source\PSoC4/FanController.c ****             */
 393:Generated_Source\PSoC4/FanController.c ****             FanController_pidA1[counti] = FanController_PID_A1;
 394:Generated_Source\PSoC4/FanController.c ****             FanController_pidA2[counti] = FanController_PID_A2;
 395:Generated_Source\PSoC4/FanController.c ****             FanController_pidA3[counti] = FanController_PID_A3;
 396:Generated_Source\PSoC4/FanController.c **** 
 397:Generated_Source\PSoC4/FanController.c ****             FanController_outputSatL[counti] = FanController_PID_OUTPUT_SAT_L;
 398:Generated_Source\PSoC4/FanController.c ****             FanController_outputSatH[counti] = FanController_PID_OUTPUT_SAT_H;
 399:Generated_Source\PSoC4/FanController.c ****             CyExitCriticalSection(interruptState);
 400:Generated_Source\PSoC4/FanController.c ****         }
 401:Generated_Source\PSoC4/FanController.c ****     #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
 402:Generated_Source\PSoC4/FanController.c **** 
 403:Generated_Source\PSoC4/FanController.c ****     /***********************************************************************
 404:Generated_Source\PSoC4/FanController.c ****     * Set up required interrupts
 405:Generated_Source\PSoC4/FanController.c ****     ***********************************************************************/
 406:Generated_Source\PSoC4/FanController.c ****     #if(CY_PSOC4)
 407:Generated_Source\PSoC4/FanController.c ****         FanController_DataSend_StartEx(&FanController_DATA_SEND_ISR);
 408:Generated_Source\PSoC4/FanController.c ****     #endif /* (CY_PSOC4) */
 409:Generated_Source\PSoC4/FanController.c **** 
 410:Generated_Source\PSoC4/FanController.c ****     #if(FanController_IS_AUTO_FIRMWARE_MODE)
 411:Generated_Source\PSoC4/FanController.c ****         FanController_PID_ISR_StartEx(&FanController_PID_CONTROL_ISR);
 412:Generated_Source\PSoC4/FanController.c ****     #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
 413:Generated_Source\PSoC4/FanController.c **** }
 414:Generated_Source\PSoC4/FanController.c **** 
 415:Generated_Source\PSoC4/FanController.c **** 
 416:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 417:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_Enable
 418:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 419:Generated_Source\PSoC4/FanController.c **** *
 420:Generated_Source\PSoC4/FanController.c **** * Summary:
 421:Generated_Source\PSoC4/FanController.c **** *  Enables hardware blocks in the component.
 422:Generated_Source\PSoC4/FanController.c **** *
 423:Generated_Source\PSoC4/FanController.c **** * Parameters:
 424:Generated_Source\PSoC4/FanController.c **** *  None
 425:Generated_Source\PSoC4/FanController.c **** *
 426:Generated_Source\PSoC4/FanController.c **** * Return:
 427:Generated_Source\PSoC4/FanController.c **** *  None
 428:Generated_Source\PSoC4/FanController.c **** *
 429:Generated_Source\PSoC4/FanController.c **** * Side Effects:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 9


 430:Generated_Source\PSoC4/FanController.c **** *  None
 431:Generated_Source\PSoC4/FanController.c **** *
 432:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 433:Generated_Source\PSoC4/FanController.c **** void FanController_Enable(void) 
 434:Generated_Source\PSoC4/FanController.c **** {
  28              		.loc 1 434 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 435:Generated_Source\PSoC4/FanController.c ****     uint8 interruptState;
 436:Generated_Source\PSoC4/FanController.c **** 
 437:Generated_Source\PSoC4/FanController.c ****     #if(CY_PSOC4)
 438:Generated_Source\PSoC4/FanController.c ****         /* Ehable PWMs */
 439:Generated_Source\PSoC4/FanController.c ****         #if(FanController_NUMBER_OF_FAN_OUTPUTS == 1u)
 440:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Enable();
  36              		.loc 1 440 0
  37 0002 FFF7FEFF 		bl	FanController_FW_PWM1_Enable
  38              	.LVL0:
 441:Generated_Source\PSoC4/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 2u)
 442:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Enable();
 443:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM2_Enable();
 444:Generated_Source\PSoC4/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 3u)
 445:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Enable();
 446:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM2_Enable();
 447:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM3_Enable();
 448:Generated_Source\PSoC4/FanController.c ****         #else
 449:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Enable();
 450:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM2_Enable();
 451:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM3_Enable();
 452:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM4_Enable();
 453:Generated_Source\PSoC4/FanController.c ****         #endif /*(FanController_NUMBER_OF_FAN_OUTPUTS == 1u) */
 454:Generated_Source\PSoC4/FanController.c **** 
 455:Generated_Source\PSoC4/FanController.c ****     #endif /* (CY_PSOC4) */
 456:Generated_Source\PSoC4/FanController.c **** 
 457:Generated_Source\PSoC4/FanController.c ****     /* Write to control register based on customizer defaults */
 458:Generated_Source\PSoC4/FanController.c ****     FanController_GLOBAL_CONTROL_REG = FanController_ENABLE | FanController_ALERT_PIN_ENABLE |
  39              		.loc 1 458 0
  40 0006 2122     		movs	r2, #33
  41 0008 064B     		ldr	r3, .L2
  42 000a 1A70     		strb	r2, [r3]
 459:Generated_Source\PSoC4/FanController.c ****         ((uint8) (FanController_INIT_ALERT_ENABLE << FanController_ALERT_ENABLE_SHIFT));
 460:Generated_Source\PSoC4/FanController.c **** 
 461:Generated_Source\PSoC4/FanController.c ****     interruptState = CyEnterCriticalSection();
  43              		.loc 1 461 0
  44 000c FFF7FEFF 		bl	CyEnterCriticalSection
  45              	.LVL1:
 462:Generated_Source\PSoC4/FanController.c **** 
 463:Generated_Source\PSoC4/FanController.c ****     /* Enable alerts from the Alert Status register */
 464:Generated_Source\PSoC4/FanController.c ****     FanController_STATUS_ALERT_AUX_CTL_REG |= FanController_STATUS_ALERT_ENABLE;
  46              		.loc 1 464 0
  47 0010 054A     		ldr	r2, .L2+4
  48 0012 1178     		ldrb	r1, [r2]
  49 0014 1023     		movs	r3, #16
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 10


  50 0016 0B43     		orrs	r3, r1
  51 0018 DBB2     		uxtb	r3, r3
  52 001a 1370     		strb	r3, [r2]
 465:Generated_Source\PSoC4/FanController.c ****     
 466:Generated_Source\PSoC4/FanController.c ****     #if(!CY_PSOC4)
 467:Generated_Source\PSoC4/FanController.c ****         
 468:Generated_Source\PSoC4/FanController.c ****         /* Enable DMA channels for operation */
 469:Generated_Source\PSoC4/FanController.c ****         (void) CyDmaChEnable(FanController_TachOutDMA_channel, 1u);
 470:Generated_Source\PSoC4/FanController.c ****         
 471:Generated_Source\PSoC4/FanController.c ****         #if(FanController_IS_AUTO_HARDWARE_MODE)
 472:Generated_Source\PSoC4/FanController.c ****             (void) CyDmaChEnable(FanController_TachInDMA_channel, 1u);
 473:Generated_Source\PSoC4/FanController.c **** 
 474:Generated_Source\PSoC4/FanController.c ****         #endif /* FanController_IS_AUTO_HARDWARE_MODE */
 475:Generated_Source\PSoC4/FanController.c ****     #endif /* !CY_PSOC4 */
 476:Generated_Source\PSoC4/FanController.c ****         
 477:Generated_Source\PSoC4/FanController.c ****     (void) CyExitCriticalSection(interruptState);
  53              		.loc 1 477 0
  54 001c FFF7FEFF 		bl	CyExitCriticalSection
  55              	.LVL2:
 478:Generated_Source\PSoC4/FanController.c **** }
  56              		.loc 1 478 0
  57              		@ sp needed
  58 0020 10BD     		pop	{r4, pc}
  59              	.L3:
  60 0022 C046     		.align	2
  61              	.L2:
  62 0024 71000F40 		.word	1074724977
  63 0028 91000F40 		.word	1074725009
  64              		.cfi_endproc
  65              	.LFE5:
  66              		.size	FanController_Enable, .-FanController_Enable
  67              		.section	.text.FanController_EnableAlert,"ax",%progbits
  68              		.align	2
  69              		.global	FanController_EnableAlert
  70              		.code	16
  71              		.thumb_func
  72              		.type	FanController_EnableAlert, %function
  73              	FanController_EnableAlert:
  74              	.LFB6:
 479:Generated_Source\PSoC4/FanController.c **** 
 480:Generated_Source\PSoC4/FanController.c **** 
 481:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 482:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_EnableAlert
 483:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 484:Generated_Source\PSoC4/FanController.c **** *
 485:Generated_Source\PSoC4/FanController.c **** * Summary:
 486:Generated_Source\PSoC4/FanController.c **** *  Enables alerts from this component. Specifically which alert sources are
 487:Generated_Source\PSoC4/FanController.c **** *  enabled is configured using SetAlertMode() API.  This API only
 488:Generated_Source\PSoC4/FanController.c **** *  enables alert conditions to propagate to the Fan Controller component
 489:Generated_Source\PSoC4/FanController.c **** *  Alert output pin.
 490:Generated_Source\PSoC4/FanController.c **** *
 491:Generated_Source\PSoC4/FanController.c **** * Parameters:
 492:Generated_Source\PSoC4/FanController.c **** *  None
 493:Generated_Source\PSoC4/FanController.c **** *
 494:Generated_Source\PSoC4/FanController.c **** * Return:
 495:Generated_Source\PSoC4/FanController.c **** *  None
 496:Generated_Source\PSoC4/FanController.c **** *
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 11


 497:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 498:Generated_Source\PSoC4/FanController.c **** *  None
 499:Generated_Source\PSoC4/FanController.c **** *
 500:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 501:Generated_Source\PSoC4/FanController.c **** void FanController_EnableAlert(void) 
 502:Generated_Source\PSoC4/FanController.c **** {
  75              		.loc 1 502 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79 0000 10B5     		push	{r4, lr}
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 4, -8
  82              		.cfi_offset 14, -4
 503:Generated_Source\PSoC4/FanController.c ****     uint8 interruptState = CyEnterCriticalSection();
  83              		.loc 1 503 0
  84 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  85              	.LVL3:
 504:Generated_Source\PSoC4/FanController.c **** 
 505:Generated_Source\PSoC4/FanController.c ****     FanController_GLOBAL_CONTROL_REG |= FanController_ALERT_PIN_ENABLE;
  86              		.loc 1 505 0
  87 0006 044A     		ldr	r2, .L5
  88 0008 1178     		ldrb	r1, [r2]
  89 000a 0123     		movs	r3, #1
  90 000c 0B43     		orrs	r3, r1
  91 000e DBB2     		uxtb	r3, r3
  92 0010 1370     		strb	r3, [r2]
 506:Generated_Source\PSoC4/FanController.c **** 
 507:Generated_Source\PSoC4/FanController.c ****     (void) CyExitCriticalSection(interruptState);
  93              		.loc 1 507 0
  94 0012 FFF7FEFF 		bl	CyExitCriticalSection
  95              	.LVL4:
 508:Generated_Source\PSoC4/FanController.c **** }
  96              		.loc 1 508 0
  97              		@ sp needed
  98 0016 10BD     		pop	{r4, pc}
  99              	.L6:
 100              		.align	2
 101              	.L5:
 102 0018 71000F40 		.word	1074724977
 103              		.cfi_endproc
 104              	.LFE6:
 105              		.size	FanController_EnableAlert, .-FanController_EnableAlert
 106              		.section	.text.FanController_DisableAlert,"ax",%progbits
 107              		.align	2
 108              		.global	FanController_DisableAlert
 109              		.code	16
 110              		.thumb_func
 111              		.type	FanController_DisableAlert, %function
 112              	FanController_DisableAlert:
 113              	.LFB7:
 509:Generated_Source\PSoC4/FanController.c **** 
 510:Generated_Source\PSoC4/FanController.c **** 
 511:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 512:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_DisableAlert
 513:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 514:Generated_Source\PSoC4/FanController.c **** *
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 12


 515:Generated_Source\PSoC4/FanController.c **** * Summary:
 516:Generated_Source\PSoC4/FanController.c **** *  Disables alerts from this component. This API only disables alert
 517:Generated_Source\PSoC4/FanController.c **** *  conditions from propagating to the fan controller component Alert output/pin
 518:Generated_Source\PSoC4/FanController.c **** *
 519:Generated_Source\PSoC4/FanController.c **** * Parameters:
 520:Generated_Source\PSoC4/FanController.c **** *  None
 521:Generated_Source\PSoC4/FanController.c **** *
 522:Generated_Source\PSoC4/FanController.c **** * Return:
 523:Generated_Source\PSoC4/FanController.c **** *  None
 524:Generated_Source\PSoC4/FanController.c **** *
 525:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 526:Generated_Source\PSoC4/FanController.c **** *  None
 527:Generated_Source\PSoC4/FanController.c **** *
 528:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 529:Generated_Source\PSoC4/FanController.c **** void FanController_DisableAlert(void) 
 530:Generated_Source\PSoC4/FanController.c **** {
 114              		.loc 1 530 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 10B5     		push	{r4, lr}
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 4, -8
 121              		.cfi_offset 14, -4
 531:Generated_Source\PSoC4/FanController.c ****     uint8 interruptState = CyEnterCriticalSection();
 122              		.loc 1 531 0
 123 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 124              	.LVL5:
 532:Generated_Source\PSoC4/FanController.c **** 
 533:Generated_Source\PSoC4/FanController.c ****     FanController_GLOBAL_CONTROL_REG &= (uint8) ~FanController_ALERT_PIN_ENABLE;
 125              		.loc 1 533 0
 126 0006 044A     		ldr	r2, .L8
 127 0008 1378     		ldrb	r3, [r2]
 128 000a 0121     		movs	r1, #1
 129 000c 8B43     		bics	r3, r1
 130 000e 1370     		strb	r3, [r2]
 534:Generated_Source\PSoC4/FanController.c **** 
 535:Generated_Source\PSoC4/FanController.c ****     (void) CyExitCriticalSection(interruptState);
 131              		.loc 1 535 0
 132 0010 FFF7FEFF 		bl	CyExitCriticalSection
 133              	.LVL6:
 536:Generated_Source\PSoC4/FanController.c **** }
 134              		.loc 1 536 0
 135              		@ sp needed
 136 0014 10BD     		pop	{r4, pc}
 137              	.L9:
 138 0016 C046     		.align	2
 139              	.L8:
 140 0018 71000F40 		.word	1074724977
 141              		.cfi_endproc
 142              	.LFE7:
 143              		.size	FanController_DisableAlert, .-FanController_DisableAlert
 144              		.section	.text.FanController_Stop,"ax",%progbits
 145              		.align	2
 146              		.global	FanController_Stop
 147              		.code	16
 148              		.thumb_func
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 13


 149              		.type	FanController_Stop, %function
 150              	FanController_Stop:
 151              	.LFB3:
 164:Generated_Source\PSoC4/FanController.c ****     /* Turn off the hardware sub-components */
 152              		.loc 1 164 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156 0000 10B5     		push	{r4, lr}
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 4, -8
 159              		.cfi_offset 14, -4
 166:Generated_Source\PSoC4/FanController.c **** 
 160              		.loc 1 166 0
 161 0002 0022     		movs	r2, #0
 162 0004 034B     		ldr	r3, .L11
 163 0006 1A70     		strb	r2, [r3]
 169:Generated_Source\PSoC4/FanController.c **** 
 164              		.loc 1 169 0
 165 0008 FFF7FEFF 		bl	FanController_DisableAlert
 166              	.LVL7:
 184:Generated_Source\PSoC4/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 2u)
 167              		.loc 1 184 0
 168 000c FFF7FEFF 		bl	FanController_FW_PWM1_Stop
 169              	.LVL8:
 200:Generated_Source\PSoC4/FanController.c **** 
 170              		.loc 1 200 0
 171              		@ sp needed
 172 0010 10BD     		pop	{r4, pc}
 173              	.L12:
 174 0012 C046     		.align	2
 175              	.L11:
 176 0014 71000F40 		.word	1074724977
 177              		.cfi_endproc
 178              	.LFE3:
 179              		.size	FanController_Stop, .-FanController_Stop
 180              		.section	.text.FanController_SetAlertMode,"ax",%progbits
 181              		.align	2
 182              		.global	FanController_SetAlertMode
 183              		.code	16
 184              		.thumb_func
 185              		.type	FanController_SetAlertMode, %function
 186              	FanController_SetAlertMode:
 187              	.LFB8:
 537:Generated_Source\PSoC4/FanController.c **** 
 538:Generated_Source\PSoC4/FanController.c **** 
 539:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 540:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_SetAlertMode
 541:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 542:Generated_Source\PSoC4/FanController.c **** *
 543:Generated_Source\PSoC4/FanController.c **** * Summary:
 544:Generated_Source\PSoC4/FanController.c **** *  Enables alert sources from the component.
 545:Generated_Source\PSoC4/FanController.c **** *
 546:Generated_Source\PSoC4/FanController.c **** * Parameters:
 547:Generated_Source\PSoC4/FanController.c **** *  alertMode:
 548:Generated_Source\PSoC4/FanController.c **** *   b0:   STALL_ALERT_ENABLE (1==Enable, 0==Disable)
 549:Generated_Source\PSoC4/FanController.c **** *   b1:   SPEED_ALERT_ENABLE (1==Enable, 0==Disable)
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 14


 550:Generated_Source\PSoC4/FanController.c **** *   b7-2: RESERVED (write with zeroes)
 551:Generated_Source\PSoC4/FanController.c **** *
 552:Generated_Source\PSoC4/FanController.c **** * Return:
 553:Generated_Source\PSoC4/FanController.c **** *  None
 554:Generated_Source\PSoC4/FanController.c **** *
 555:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 556:Generated_Source\PSoC4/FanController.c **** *  None
 557:Generated_Source\PSoC4/FanController.c **** *
 558:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 559:Generated_Source\PSoC4/FanController.c **** void FanController_SetAlertMode(uint8 alertMode) 
 560:Generated_Source\PSoC4/FanController.c **** {
 188              		.loc 1 560 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              	.LVL9:
 193 0000 70B5     		push	{r4, r5, r6, lr}
 194              		.cfi_def_cfa_offset 16
 195              		.cfi_offset 4, -16
 196              		.cfi_offset 5, -12
 197              		.cfi_offset 6, -8
 198              		.cfi_offset 14, -4
 199 0002 0400     		movs	r4, r0
 561:Generated_Source\PSoC4/FanController.c ****     uint8 interruptState = CyEnterCriticalSection();
 200              		.loc 1 561 0
 201 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 202              	.LVL10:
 562:Generated_Source\PSoC4/FanController.c **** 
 563:Generated_Source\PSoC4/FanController.c ****     FanController_GLOBAL_CONTROL_REG = (FanController_GLOBAL_CONTROL_REG &
 203              		.loc 1 563 0
 204 0008 054D     		ldr	r5, .L14
 205 000a 2978     		ldrb	r1, [r5]
 564:Generated_Source\PSoC4/FanController.c ****             (uint8) ~FanController_ALERT_ENABLE_MASK) |
 565:Generated_Source\PSoC4/FanController.c ****                ((uint8) (alertMode << FanController_ALERT_ENABLE_SHIFT) & FanController_ALERT_ENABL
 206              		.loc 1 565 0
 207 000c 6300     		lsls	r3, r4, #1
 563:Generated_Source\PSoC4/FanController.c ****             (uint8) ~FanController_ALERT_ENABLE_MASK) |
 208              		.loc 1 563 0
 209 000e 0622     		movs	r2, #6
 210 0010 9143     		bics	r1, r2
 211 0012 1340     		ands	r3, r2
 212 0014 0B43     		orrs	r3, r1
 213 0016 2B70     		strb	r3, [r5]
 566:Generated_Source\PSoC4/FanController.c **** 
 567:Generated_Source\PSoC4/FanController.c ****     (void) CyExitCriticalSection(interruptState);
 214              		.loc 1 567 0
 215 0018 FFF7FEFF 		bl	CyExitCriticalSection
 216              	.LVL11:
 568:Generated_Source\PSoC4/FanController.c **** }
 217              		.loc 1 568 0
 218              		@ sp needed
 219 001c 70BD     		pop	{r4, r5, r6, pc}
 220              	.L15:
 221 001e C046     		.align	2
 222              	.L14:
 223 0020 71000F40 		.word	1074724977
 224              		.cfi_endproc
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 15


 225              	.LFE8:
 226              		.size	FanController_SetAlertMode, .-FanController_SetAlertMode
 227              		.section	.text.FanController_GetAlertMode,"ax",%progbits
 228              		.align	2
 229              		.global	FanController_GetAlertMode
 230              		.code	16
 231              		.thumb_func
 232              		.type	FanController_GetAlertMode, %function
 233              	FanController_GetAlertMode:
 234              	.LFB9:
 569:Generated_Source\PSoC4/FanController.c **** 
 570:Generated_Source\PSoC4/FanController.c **** 
 571:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 572:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_GetAlertMode
 573:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 574:Generated_Source\PSoC4/FanController.c **** *
 575:Generated_Source\PSoC4/FanController.c **** * Summary:
 576:Generated_Source\PSoC4/FanController.c **** * Returns enabled alert sources from this component.
 577:Generated_Source\PSoC4/FanController.c **** *
 578:Generated_Source\PSoC4/FanController.c **** * Parameters:
 579:Generated_Source\PSoC4/FanController.c **** *  None
 580:Generated_Source\PSoC4/FanController.c **** *
 581:Generated_Source\PSoC4/FanController.c **** * Return:
 582:Generated_Source\PSoC4/FanController.c **** *  alertMode:
 583:Generated_Source\PSoC4/FanController.c **** *   b0:   STALL_ALERT_ENABLE (1==Enable, 0==Disable)
 584:Generated_Source\PSoC4/FanController.c **** *   b1:   SPEED_ALERT_ENABLE (1==Enable, 0==Disable)
 585:Generated_Source\PSoC4/FanController.c **** *   b7-2: RESERVED (write with zeroes)
 586:Generated_Source\PSoC4/FanController.c **** *
 587:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 588:Generated_Source\PSoC4/FanController.c **** *  None
 589:Generated_Source\PSoC4/FanController.c **** *
 590:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 591:Generated_Source\PSoC4/FanController.c **** uint8 FanController_GetAlertMode(void) 
 592:Generated_Source\PSoC4/FanController.c **** {
 235              		.loc 1 592 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 593:Generated_Source\PSoC4/FanController.c ****     return((FanController_GLOBAL_CONTROL_REG & FanController_ALERT_ENABLE_MASK) >>
 240              		.loc 1 593 0
 241 0000 024B     		ldr	r3, .L17
 242 0002 1878     		ldrb	r0, [r3]
 243 0004 0623     		movs	r3, #6
 244 0006 1840     		ands	r0, r3
 245 0008 4008     		lsrs	r0, r0, #1
 594:Generated_Source\PSoC4/FanController.c ****                 FanController_ALERT_ENABLE_SHIFT);
 595:Generated_Source\PSoC4/FanController.c **** }
 246              		.loc 1 595 0
 247              		@ sp needed
 248 000a 7047     		bx	lr
 249              	.L18:
 250              		.align	2
 251              	.L17:
 252 000c 71000F40 		.word	1074724977
 253              		.cfi_endproc
 254              	.LFE9:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 16


 255              		.size	FanController_GetAlertMode, .-FanController_GetAlertMode
 256              		.section	.text.FanController_SetAlertMask,"ax",%progbits
 257              		.align	2
 258              		.global	FanController_SetAlertMask
 259              		.code	16
 260              		.thumb_func
 261              		.type	FanController_SetAlertMask, %function
 262              	FanController_SetAlertMask:
 263              	.LFB10:
 596:Generated_Source\PSoC4/FanController.c **** 
 597:Generated_Source\PSoC4/FanController.c **** 
 598:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 599:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_SetAlertMask
 600:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 601:Generated_Source\PSoC4/FanController.c **** *
 602:Generated_Source\PSoC4/FanController.c **** * Summary:
 603:Generated_Source\PSoC4/FanController.c **** *  Sets the per fan Alert Mask for both Stall and Speed errors.
 604:Generated_Source\PSoC4/FanController.c **** *
 605:Generated_Source\PSoC4/FanController.c **** * Parameters:
 606:Generated_Source\PSoC4/FanController.c **** *  alertMask (1==Enable Alert, 0==Disable Alert)
 607:Generated_Source\PSoC4/FanController.c **** *   b0:   FAN1 ALERT ENABLE/DISABLE
 608:Generated_Source\PSoC4/FanController.c **** *   b1:   FAN2 ALERT ENABLE/DISABLE
 609:Generated_Source\PSoC4/FanController.c **** *   ...
 610:Generated_Source\PSoC4/FanController.c **** *   b15:  FAN16 ALERT ENABLE/DISABLE
 611:Generated_Source\PSoC4/FanController.c **** *
 612:Generated_Source\PSoC4/FanController.c **** * Return:
 613:Generated_Source\PSoC4/FanController.c **** *  None
 614:Generated_Source\PSoC4/FanController.c **** *
 615:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 616:Generated_Source\PSoC4/FanController.c **** *  None
 617:Generated_Source\PSoC4/FanController.c **** *
 618:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 619:Generated_Source\PSoC4/FanController.c **** void FanController_SetAlertMask(uint16 alertMask) 
 620:Generated_Source\PSoC4/FanController.c **** {
 264              		.loc 1 620 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269              	.LVL12:
 621:Generated_Source\PSoC4/FanController.c ****     #if (CY_PSOC4)
 622:Generated_Source\PSoC4/FanController.c ****         FanController_alertMask = alertMask;
 270              		.loc 1 622 0
 271 0000 014B     		ldr	r3, .L20
 272 0002 1880     		strh	r0, [r3]
 623:Generated_Source\PSoC4/FanController.c ****     #else
 624:Generated_Source\PSoC4/FanController.c ****         FanController_ALERT_MASK_LSB_CONTROL_REG = LO8(alertMask);
 625:Generated_Source\PSoC4/FanController.c **** 
 626:Generated_Source\PSoC4/FanController.c ****         #if(FanController_NUMBER_OF_FANS > 8u)
 627:Generated_Source\PSoC4/FanController.c ****             FanController_ALERT_MASK_MSB_CONTROL_REG = HI8(alertMask);
 628:Generated_Source\PSoC4/FanController.c ****         #endif /* FanController_NUMBER_OF_FANS > 8u */
 629:Generated_Source\PSoC4/FanController.c ****     #endif /* (CY_PSOC4) */
 630:Generated_Source\PSoC4/FanController.c **** }
 273              		.loc 1 630 0
 274              		@ sp needed
 275 0004 7047     		bx	lr
 276              	.L21:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 17


 277 0006 C046     		.align	2
 278              	.L20:
 279 0008 00000000 		.word	.LANCHOR0
 280              		.cfi_endproc
 281              	.LFE10:
 282              		.size	FanController_SetAlertMask, .-FanController_SetAlertMask
 283              		.section	.text.FanController_GetAlertMask,"ax",%progbits
 284              		.align	2
 285              		.global	FanController_GetAlertMask
 286              		.code	16
 287              		.thumb_func
 288              		.type	FanController_GetAlertMask, %function
 289              	FanController_GetAlertMask:
 290              	.LFB11:
 631:Generated_Source\PSoC4/FanController.c **** 
 632:Generated_Source\PSoC4/FanController.c **** 
 633:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 634:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_GetAlertMask
 635:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 636:Generated_Source\PSoC4/FanController.c **** *
 637:Generated_Source\PSoC4/FanController.c **** * Summary:
 638:Generated_Source\PSoC4/FanController.c **** *  Gets the current per fan Alert Mask for both Stall and Speed errors.
 639:Generated_Source\PSoC4/FanController.c **** *
 640:Generated_Source\PSoC4/FanController.c **** * Parameters:
 641:Generated_Source\PSoC4/FanController.c **** *  None
 642:Generated_Source\PSoC4/FanController.c **** *
 643:Generated_Source\PSoC4/FanController.c **** * Return:
 644:Generated_Source\PSoC4/FanController.c **** *  alertMask (1==Alert Enabled, 0==Alert Disabled)
 645:Generated_Source\PSoC4/FanController.c **** *   b0:   FAN1 ALERT ENABLE/DISABLE
 646:Generated_Source\PSoC4/FanController.c **** *   b1:   FAN2 ALERT ENABLE/DISABLE
 647:Generated_Source\PSoC4/FanController.c **** *   ...
 648:Generated_Source\PSoC4/FanController.c **** *   b15:  FAN16 ALERT ENABLE/DISABLE
 649:Generated_Source\PSoC4/FanController.c **** *
 650:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 651:Generated_Source\PSoC4/FanController.c **** *  None
 652:Generated_Source\PSoC4/FanController.c **** *
 653:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 654:Generated_Source\PSoC4/FanController.c **** uint16 FanController_GetAlertMask(void) 
 655:Generated_Source\PSoC4/FanController.c **** {
 291              		.loc 1 655 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 656:Generated_Source\PSoC4/FanController.c ****     uint16 alertMask;
 657:Generated_Source\PSoC4/FanController.c **** 
 658:Generated_Source\PSoC4/FanController.c ****     #if (CY_PSOC4)
 659:Generated_Source\PSoC4/FanController.c ****         alertMask = FanController_alertMask;
 296              		.loc 1 659 0
 297 0000 014B     		ldr	r3, .L23
 298 0002 1888     		ldrh	r0, [r3]
 299              	.LVL13:
 660:Generated_Source\PSoC4/FanController.c ****     #else
 661:Generated_Source\PSoC4/FanController.c ****         #if(FanController_NUMBER_OF_FANS > 8u)
 662:Generated_Source\PSoC4/FanController.c ****             alertMask = (uint16)FanController_ALERT_MASK_LSB_CONTROL_REG |
 663:Generated_Source\PSoC4/FanController.c ****                 (uint16)((uint16)FanController_ALERT_MASK_MSB_CONTROL_REG << 8u);
 664:Generated_Source\PSoC4/FanController.c ****         #else
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 18


 665:Generated_Source\PSoC4/FanController.c ****             alertMask = (uint16)FanController_ALERT_MASK_LSB_CONTROL_REG;
 666:Generated_Source\PSoC4/FanController.c ****         #endif /* FanController_NUMBER_OF_FANS > 8u */
 667:Generated_Source\PSoC4/FanController.c ****     #endif /* (CY_PSOC4) */
 668:Generated_Source\PSoC4/FanController.c **** 
 669:Generated_Source\PSoC4/FanController.c ****     return(alertMask);
 670:Generated_Source\PSoC4/FanController.c **** }
 300              		.loc 1 670 0
 301              		@ sp needed
 302 0004 7047     		bx	lr
 303              	.L24:
 304 0006 C046     		.align	2
 305              	.L23:
 306 0008 00000000 		.word	.LANCHOR0
 307              		.cfi_endproc
 308              	.LFE11:
 309              		.size	FanController_GetAlertMask, .-FanController_GetAlertMask
 310              		.section	.text.FanController_GetAlertSource,"ax",%progbits
 311              		.align	2
 312              		.global	FanController_GetAlertSource
 313              		.code	16
 314              		.thumb_func
 315              		.type	FanController_GetAlertSource, %function
 316              	FanController_GetAlertSource:
 317              	.LFB12:
 671:Generated_Source\PSoC4/FanController.c **** 
 672:Generated_Source\PSoC4/FanController.c **** 
 673:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 674:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_GetAlertSource
 675:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 676:Generated_Source\PSoC4/FanController.c **** *
 677:Generated_Source\PSoC4/FanController.c **** * Summary:
 678:Generated_Source\PSoC4/FanController.c **** *  Returns pending alert sources. The alert pin is not de-asserted through
 679:Generated_Source\PSoC4/FanController.c **** *  this API call. If this API call returns a non-zero value, call the
 680:Generated_Source\PSoC4/FanController.c **** *  GetFanStallStatus() or GetFanSpeedStatus() APIs to determine the exact
 681:Generated_Source\PSoC4/FanController.c **** *  source of the alert and simultaneously de-assert the pending alert and
 682:Generated_Source\PSoC4/FanController.c **** *  alert pin.
 683:Generated_Source\PSoC4/FanController.c **** *
 684:Generated_Source\PSoC4/FanController.c **** * Parameters:
 685:Generated_Source\PSoC4/FanController.c **** *  None
 686:Generated_Source\PSoC4/FanController.c **** *
 687:Generated_Source\PSoC4/FanController.c **** * Return:
 688:Generated_Source\PSoC4/FanController.c **** *  alertSource:
 689:Generated_Source\PSoC4/FanController.c **** *   b0:   STALL_ALERT (1==Present, 0==Not Present)
 690:Generated_Source\PSoC4/FanController.c **** *   b1:   SPEED_ALERT (1==Present, 0==Not Present)
 691:Generated_Source\PSoC4/FanController.c **** *   b7-2: RESERVED (returns all zeroes)
 692:Generated_Source\PSoC4/FanController.c **** *
 693:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 694:Generated_Source\PSoC4/FanController.c **** *  None
 695:Generated_Source\PSoC4/FanController.c **** *
 696:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 697:Generated_Source\PSoC4/FanController.c **** uint8 FanController_GetAlertSource(void) 
 698:Generated_Source\PSoC4/FanController.c **** {
 318              		.loc 1 698 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322              		@ link register save eliminated.
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 19


 699:Generated_Source\PSoC4/FanController.c ****     return ((FanController_ALERT_STATUS_REG & FanController_ALERT_STATUS_MASK));
 323              		.loc 1 699 0
 324 0000 024B     		ldr	r3, .L26
 325 0002 1878     		ldrb	r0, [r3]
 326 0004 0323     		movs	r3, #3
 327 0006 1840     		ands	r0, r3
 700:Generated_Source\PSoC4/FanController.c **** }
 328              		.loc 1 700 0
 329              		@ sp needed
 330 0008 7047     		bx	lr
 331              	.L27:
 332 000a C046     		.align	2
 333              	.L26:
 334 000c 61000F40 		.word	1074724961
 335              		.cfi_endproc
 336              	.LFE12:
 337              		.size	FanController_GetAlertSource, .-FanController_GetAlertSource
 338              		.section	.text.FanController_GetFanStallStatus,"ax",%progbits
 339              		.align	2
 340              		.global	FanController_GetFanStallStatus
 341              		.code	16
 342              		.thumb_func
 343              		.type	FanController_GetFanStallStatus, %function
 344              	FanController_GetFanStallStatus:
 345              	.LFB13:
 701:Generated_Source\PSoC4/FanController.c **** 
 702:Generated_Source\PSoC4/FanController.c **** 
 703:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 704:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_GetFanStallStatus
 705:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 706:Generated_Source\PSoC4/FanController.c **** *
 707:Generated_Source\PSoC4/FanController.c **** * Summary:
 708:Generated_Source\PSoC4/FanController.c **** *  Returns the stall status of all fans
 709:Generated_Source\PSoC4/FanController.c **** *
 710:Generated_Source\PSoC4/FanController.c **** * Parameters:
 711:Generated_Source\PSoC4/FanController.c **** *  None
 712:Generated_Source\PSoC4/FanController.c **** *
 713:Generated_Source\PSoC4/FanController.c **** * Return:
 714:Generated_Source\PSoC4/FanController.c **** *  stallStatus (1==Fan Stalled, 0=Fan OK)
 715:Generated_Source\PSoC4/FanController.c **** *   b0:   FAN1 STALL
 716:Generated_Source\PSoC4/FanController.c **** *   b1:   FAN2 STALL
 717:Generated_Source\PSoC4/FanController.c **** *   ...
 718:Generated_Source\PSoC4/FanController.c **** *   b15:  FAN16 STALL
 719:Generated_Source\PSoC4/FanController.c **** *
 720:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 721:Generated_Source\PSoC4/FanController.c **** *  Calling this API de-asserts the alert pin and clears all pending stall
 722:Generated_Source\PSoC4/FanController.c **** *  status alerts.
 723:Generated_Source\PSoC4/FanController.c **** *
 724:Generated_Source\PSoC4/FanController.c **** ******************************************************************************/
 725:Generated_Source\PSoC4/FanController.c **** uint16 FanController_GetFanStallStatus(void) 
 726:Generated_Source\PSoC4/FanController.c **** {
 346              		.loc 1 726 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              		@ link register save eliminated.
 727:Generated_Source\PSoC4/FanController.c ****     uint16 stallStatus;
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 20


 728:Generated_Source\PSoC4/FanController.c **** 
 729:Generated_Source\PSoC4/FanController.c ****     #if (CY_PSOC4)
 730:Generated_Source\PSoC4/FanController.c ****         stallStatus = FanController_stallStatus;
 351              		.loc 1 730 0
 352 0000 044B     		ldr	r3, .L29
 353 0002 5888     		ldrh	r0, [r3, #2]
 354              	.LVL14:
 731:Generated_Source\PSoC4/FanController.c **** 
 732:Generated_Source\PSoC4/FanController.c ****         /* Clear stall status for individual fans */
 733:Generated_Source\PSoC4/FanController.c ****         FanController_stallStatus = 0u;
 355              		.loc 1 733 0
 356 0004 0022     		movs	r2, #0
 357 0006 5A80     		strh	r2, [r3, #2]
 734:Generated_Source\PSoC4/FanController.c **** 
 735:Generated_Source\PSoC4/FanController.c ****         /* Clear the common SW stall signal on the control register */
 736:Generated_Source\PSoC4/FanController.c ****         FanController_GLOBAL_CONTROL_REG &= ((uint8) ~FanController_SW_STALL);
 358              		.loc 1 736 0
 359 0008 034A     		ldr	r2, .L29+4
 360 000a 1178     		ldrb	r1, [r2]
 361 000c 7F23     		movs	r3, #127
 362 000e 0B40     		ands	r3, r1
 363 0010 1370     		strb	r3, [r2]
 737:Generated_Source\PSoC4/FanController.c ****     #else
 738:Generated_Source\PSoC4/FanController.c ****         
 739:Generated_Source\PSoC4/FanController.c ****         #if(FanController_NUMBER_OF_FANS > 8u)
 740:Generated_Source\PSoC4/FanController.c ****             stallStatus = (uint16)FanController_STALL_ERROR_LSB_STATUS_REG |
 741:Generated_Source\PSoC4/FanController.c ****                 (uint16)((uint16)FanController_STALL_ERROR_MSB_STATUS_REG << 8u);
 742:Generated_Source\PSoC4/FanController.c ****         #else
 743:Generated_Source\PSoC4/FanController.c ****             stallStatus = (uint16)FanController_STALL_ERROR_LSB_STATUS_REG;
 744:Generated_Source\PSoC4/FanController.c ****         #endif /* FanController_NUMBER_OF_FANS > 8u */
 745:Generated_Source\PSoC4/FanController.c ****     #endif /* (CY_PSOC4) */
 746:Generated_Source\PSoC4/FanController.c ****         
 747:Generated_Source\PSoC4/FanController.c ****     return(stallStatus);
 748:Generated_Source\PSoC4/FanController.c **** }
 364              		.loc 1 748 0
 365              		@ sp needed
 366 0012 7047     		bx	lr
 367              	.L30:
 368              		.align	2
 369              	.L29:
 370 0014 00000000 		.word	.LANCHOR0
 371 0018 71000F40 		.word	1074724977
 372              		.cfi_endproc
 373              	.LFE13:
 374              		.size	FanController_GetFanStallStatus, .-FanController_GetFanStallStatus
 375              		.section	.text.FanController_GetFanSpeedStatus,"ax",%progbits
 376              		.align	2
 377              		.global	FanController_GetFanSpeedStatus
 378              		.code	16
 379              		.thumb_func
 380              		.type	FanController_GetFanSpeedStatus, %function
 381              	FanController_GetFanSpeedStatus:
 382              	.LFB14:
 749:Generated_Source\PSoC4/FanController.c **** 
 750:Generated_Source\PSoC4/FanController.c **** 
 751:Generated_Source\PSoC4/FanController.c **** #if (!FanController_IS_MANUAL_MODE)
 752:Generated_Source\PSoC4/FanController.c ****     /******************************************************************************
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 21


 753:Generated_Source\PSoC4/FanController.c ****     * Function Name: FanController_GetFanSpeedStatus
 754:Generated_Source\PSoC4/FanController.c ****     *******************************************************************************
 755:Generated_Source\PSoC4/FanController.c ****     *
 756:Generated_Source\PSoC4/FanController.c ****     * Summary:
 757:Generated_Source\PSoC4/FanController.c ****     *  Returns the speed regulation status of all fans.
 758:Generated_Source\PSoC4/FanController.c ****     *  This API is not available if Firmware Controller fan control method is
 759:Generated_Source\PSoC4/FanController.c ****     *  selected.
 760:Generated_Source\PSoC4/FanController.c ****     *
 761:Generated_Source\PSoC4/FanController.c ****     * Parameters:
 762:Generated_Source\PSoC4/FanController.c ****     *  None
 763:Generated_Source\PSoC4/FanController.c ****     *
 764:Generated_Source\PSoC4/FanController.c ****     * Return:
 765:Generated_Source\PSoC4/FanController.c ****     *  speedStatus (1==Fan Speed Failure, 0=Fan OK)
 766:Generated_Source\PSoC4/FanController.c ****     *   b0:   FAN1 SPEED REGULATION FAIL
 767:Generated_Source\PSoC4/FanController.c ****     *   b1:   FAN2 SPEED REGULATION FAIL
 768:Generated_Source\PSoC4/FanController.c ****     *   ...
 769:Generated_Source\PSoC4/FanController.c ****     *   b15:  FAN16 SPEED REGULATION FAIL
 770:Generated_Source\PSoC4/FanController.c ****     *
 771:Generated_Source\PSoC4/FanController.c ****     * Side Effects:
 772:Generated_Source\PSoC4/FanController.c ****     *  Calling this API de-asserts the alert pin and clears all pending speed
 773:Generated_Source\PSoC4/FanController.c ****     *  regulation failure status alerts.
 774:Generated_Source\PSoC4/FanController.c ****     *
 775:Generated_Source\PSoC4/FanController.c ****     ******************************************************************************/
 776:Generated_Source\PSoC4/FanController.c ****     uint16 FanController_GetFanSpeedStatus(void) 
 777:Generated_Source\PSoC4/FanController.c ****     {
 383              		.loc 1 777 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 778:Generated_Source\PSoC4/FanController.c ****         uint16 speedStatus;
 779:Generated_Source\PSoC4/FanController.c **** 
 780:Generated_Source\PSoC4/FanController.c ****         /* In case of Auto Hardware mode speed status is received from hardware
 781:Generated_Source\PSoC4/FanController.c ****         * status register...
 782:Generated_Source\PSoC4/FanController.c ****         */
 783:Generated_Source\PSoC4/FanController.c ****         #if (FanController_IS_AUTO_HARDWARE_MODE)
 784:Generated_Source\PSoC4/FanController.c ****             #if (FanController_NUMBER_OF_FANS > 8u)
 785:Generated_Source\PSoC4/FanController.c ****                 speedStatus = (uint16)FanController_SPEED_ERROR_LSB_STATUS_REG |
 786:Generated_Source\PSoC4/FanController.c ****                     (uint16)((uint16)FanController_SPEED_ERROR_MSB_STATUS_REG << 8u);
 787:Generated_Source\PSoC4/FanController.c ****             #else
 788:Generated_Source\PSoC4/FanController.c ****                 speedStatus = (uint16)FanController_SPEED_ERROR_LSB_STATUS_REG;
 789:Generated_Source\PSoC4/FanController.c ****             #endif /* FanController_NUMBER_OF_FANS > 8u */
 790:Generated_Source\PSoC4/FanController.c ****         #endif /* FanController_IS_AUTO_HARDWARE_MODE */
 791:Generated_Source\PSoC4/FanController.c **** 
 792:Generated_Source\PSoC4/FanController.c ****         /* ... in case of Auto Firmware mode the software status is used. */
 793:Generated_Source\PSoC4/FanController.c ****         #if (FanController_IS_AUTO_FIRMWARE_MODE)
 794:Generated_Source\PSoC4/FanController.c **** 
 795:Generated_Source\PSoC4/FanController.c ****             speedStatus = FanController_speedStatus;
 388              		.loc 1 795 0
 389 0000 024B     		ldr	r3, .L32
 390 0002 1888     		ldrh	r0, [r3]
 391 0004 80B2     		uxth	r0, r0
 392              	.LVL15:
 796:Generated_Source\PSoC4/FanController.c **** 
 797:Generated_Source\PSoC4/FanController.c ****             /* Simulate clear-on-read status */
 798:Generated_Source\PSoC4/FanController.c ****             FanController_speedStatus = 0u;
 393              		.loc 1 798 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 22


 394 0006 0022     		movs	r2, #0
 395 0008 1A80     		strh	r2, [r3]
 799:Generated_Source\PSoC4/FanController.c ****         #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
 800:Generated_Source\PSoC4/FanController.c **** 
 801:Generated_Source\PSoC4/FanController.c ****         return(speedStatus);
 802:Generated_Source\PSoC4/FanController.c ****     }
 396              		.loc 1 802 0
 397              		@ sp needed
 398 000a 7047     		bx	lr
 399              	.L33:
 400              		.align	2
 401              	.L32:
 402 000c 00000000 		.word	FanController_speedStatus
 403              		.cfi_endproc
 404              	.LFE14:
 405              		.size	FanController_GetFanSpeedStatus, .-FanController_GetFanSpeedStatus
 406              		.global	__aeabi_uidiv
 407              		.section	.text.FanController_SetDutyCycle,"ax",%progbits
 408              		.align	2
 409              		.global	FanController_SetDutyCycle
 410              		.code	16
 411              		.thumb_func
 412              		.type	FanController_SetDutyCycle, %function
 413              	FanController_SetDutyCycle:
 414              	.LFB15:
 803:Generated_Source\PSoC4/FanController.c **** 
 804:Generated_Source\PSoC4/FanController.c **** #endif /* (!FanController_IS_MANUAL_MODE) */
 805:Generated_Source\PSoC4/FanController.c **** 
 806:Generated_Source\PSoC4/FanController.c **** 
 807:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 808:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_SetDutyCycle
 809:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 810:Generated_Source\PSoC4/FanController.c **** *
 811:Generated_Source\PSoC4/FanController.c **** * Summary:
 812:Generated_Source\PSoC4/FanController.c **** *  Sets the duty cycle of selected fan or bank in hundredths of a percent,
 813:Generated_Source\PSoC4/FanController.c **** *  i.e. 5000=50% duty cycle. In hardware controlled fan mode, if manual duty
 814:Generated_Source\PSoC4/FanController.c **** *  cycle control is desirable, call the OverrideAutomaticControl(true) API 
 815:Generated_Source\PSoC4/FanController.c **** *  prior to calling this API.
 816:Generated_Source\PSoC4/FanController.c **** *
 817:Generated_Source\PSoC4/FanController.c **** * Parameters:
 818:Generated_Source\PSoC4/FanController.c **** *  uint8 fanOrBankNumber
 819:Generated_Source\PSoC4/FanController.c **** *   Valid range is 1-16 and should not exceed the number of fans or banks in the
 820:Generated_Source\PSoC4/FanController.c **** *   system.
 821:Generated_Source\PSoC4/FanController.c **** *
 822:Generated_Source\PSoC4/FanController.c **** *  uint16 dutyCycle
 823:Generated_Source\PSoC4/FanController.c **** *   dutyCycle is entered in hundredths of a percent, i.e. 5000=50% duty cycle
 824:Generated_Source\PSoC4/FanController.c **** *   Valid range is 0 to 10000.
 825:Generated_Source\PSoC4/FanController.c **** *
 826:Generated_Source\PSoC4/FanController.c **** * Return:
 827:Generated_Source\PSoC4/FanController.c **** *  None
 828:Generated_Source\PSoC4/FanController.c **** *
 829:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 830:Generated_Source\PSoC4/FanController.c **** *  None
 831:Generated_Source\PSoC4/FanController.c **** *
 832:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 833:Generated_Source\PSoC4/FanController.c **** void FanController_SetDutyCycle(uint8 fanOrBankNumber, uint16 dutyCycle)
 834:Generated_Source\PSoC4/FanController.c ****         
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 23


 835:Generated_Source\PSoC4/FanController.c **** {
 415              		.loc 1 835 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              	.LVL16:
 420 0000 10B5     		push	{r4, lr}
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 4, -8
 423              		.cfi_offset 14, -4
 836:Generated_Source\PSoC4/FanController.c ****     uint32 newCompare;      /* Needs to be 32-bit to allow for overflow during the math calculation
 837:Generated_Source\PSoC4/FanController.c **** 
 838:Generated_Source\PSoC4/FanController.c ****     /* Make sure the Fan/Bank number is valid */
 839:Generated_Source\PSoC4/FanController.c ****     if(fanOrBankNumber <= FanController_NUMBER_OF_FAN_OUTPUTS)
 424              		.loc 1 839 0
 425 0002 0128     		cmp	r0, #1
 426 0004 0BD8     		bhi	.L34
 840:Generated_Source\PSoC4/FanController.c ****     {
 841:Generated_Source\PSoC4/FanController.c ****         newCompare = (FanController_PWM_PERIOD * (uint32) dutyCycle) / FanController_PWM_DUTY_DIVID
 427              		.loc 1 841 0
 428 0006 0B01     		lsls	r3, r1, #4
 429 0008 591A     		subs	r1, r3, r1
 430              	.LVL17:
 431 000a 8801     		lsls	r0, r1, #6
 432              	.LVL18:
 433 000c 0449     		ldr	r1, .L36
 434 000e FFF7FEFF 		bl	__aeabi_uidiv
 435              	.LVL19:
 842:Generated_Source\PSoC4/FanController.c **** 
 843:Generated_Source\PSoC4/FanController.c ****         /* Make sure the Compare value is in range (user entered a valid duty
 844:Generated_Source\PSoC4/FanController.c ****         * cycle value).
 845:Generated_Source\PSoC4/FanController.c ****         */
 846:Generated_Source\PSoC4/FanController.c ****         if(newCompare <= FanController_PWM_PERIOD)
 436              		.loc 1 846 0
 437 0012 F023     		movs	r3, #240
 438 0014 9B00     		lsls	r3, r3, #2
 439 0016 9842     		cmp	r0, r3
 440 0018 01D8     		bhi	.L34
 847:Generated_Source\PSoC4/FanController.c ****         {
 848:Generated_Source\PSoC4/FanController.c ****             #if (!CY_PSOC4)
 849:Generated_Source\PSoC4/FanController.c ****                 #if(FanController_PWMRES == FanController_PWMRES_EIGHTBIT)
 850:Generated_Source\PSoC4/FanController.c ****                     CY_SET_REG8(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSetDutyReg, (u
 851:Generated_Source\PSoC4/FanController.c ****                 #else
 852:Generated_Source\PSoC4/FanController.c ****                     CY_SET_REG16(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSetDutyReg, (
 853:Generated_Source\PSoC4/FanController.c ****                 #endif /* FanController_PWMRES == FanController_PWMRES_EIGHTBIT */
 854:Generated_Source\PSoC4/FanController.c ****             #else
 855:Generated_Source\PSoC4/FanController.c ****                 CY_SET_REG32(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSetDutyReg, newCo
 441              		.loc 1 855 0
 442 001a 024B     		ldr	r3, .L36+4
 443 001c 1860     		str	r0, [r3]
 444              	.LVL20:
 445              	.L34:
 856:Generated_Source\PSoC4/FanController.c ****             #endif /* (!CY_PSOC4) */
 857:Generated_Source\PSoC4/FanController.c ****         }
 858:Generated_Source\PSoC4/FanController.c ****     }
 859:Generated_Source\PSoC4/FanController.c **** }
 446              		.loc 1 859 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 24


 447              		@ sp needed
 448 001e 10BD     		pop	{r4, pc}
 449              	.L37:
 450              		.align	2
 451              	.L36:
 452 0020 10270000 		.word	10000
 453 0024 0C012040 		.word	1075839244
 454              		.cfi_endproc
 455              	.LFE15:
 456              		.size	FanController_SetDutyCycle, .-FanController_SetDutyCycle
 457              		.section	.text.FanController_GetDutyCycle,"ax",%progbits
 458              		.align	2
 459              		.global	FanController_GetDutyCycle
 460              		.code	16
 461              		.thumb_func
 462              		.type	FanController_GetDutyCycle, %function
 463              	FanController_GetDutyCycle:
 464              	.LFB16:
 860:Generated_Source\PSoC4/FanController.c **** 
 861:Generated_Source\PSoC4/FanController.c **** 
 862:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 863:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_GetDutyCycle
 864:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 865:Generated_Source\PSoC4/FanController.c **** *
 866:Generated_Source\PSoC4/FanController.c **** * Summary:
 867:Generated_Source\PSoC4/FanController.c **** *  Returns the current duty cycle of the selected fan or bank in hundredths
 868:Generated_Source\PSoC4/FanController.c **** *  of a percent, i.e. 5000=50% duty cycle.
 869:Generated_Source\PSoC4/FanController.c **** *
 870:Generated_Source\PSoC4/FanController.c **** * Parameters:
 871:Generated_Source\PSoC4/FanController.c **** *  uint8 fanOrBankNumber
 872:Generated_Source\PSoC4/FanController.c **** *  Valid range is 1-16 and should not exceed the number of fans or banks in
 873:Generated_Source\PSoC4/FanController.c **** *  the system.
 874:Generated_Source\PSoC4/FanController.c **** *
 875:Generated_Source\PSoC4/FanController.c **** * Return:
 876:Generated_Source\PSoC4/FanController.c **** *  uint16 duyCycle
 877:Generated_Source\PSoC4/FanController.c **** *  Current duty cycle in hundredths of a percent.
 878:Generated_Source\PSoC4/FanController.c **** *
 879:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 880:Generated_Source\PSoC4/FanController.c **** *  None
 881:Generated_Source\PSoC4/FanController.c **** *
 882:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 883:Generated_Source\PSoC4/FanController.c **** uint16 FanController_GetDutyCycle(uint8 fanOrBankNumber) 
 884:Generated_Source\PSoC4/FanController.c **** {
 465              		.loc 1 884 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469              	.LVL21:
 470 0000 10B5     		push	{r4, lr}
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 4, -8
 473              		.cfi_offset 14, -4
 474              	.LVL22:
 885:Generated_Source\PSoC4/FanController.c ****     uint16 duyCycle = 0u;
 886:Generated_Source\PSoC4/FanController.c **** 
 887:Generated_Source\PSoC4/FanController.c ****     if(fanOrBankNumber <= FanController_NUMBER_OF_FAN_OUTPUTS)
 475              		.loc 1 887 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 25


 476 0002 0128     		cmp	r0, #1
 477 0004 09D8     		bhi	.L40
 888:Generated_Source\PSoC4/FanController.c ****     {
 889:Generated_Source\PSoC4/FanController.c ****         #if (!CY_PSOC4)
 890:Generated_Source\PSoC4/FanController.c ****             #if(FanController_PWMRES == FanController_PWMRES_EIGHTBIT)
 891:Generated_Source\PSoC4/FanController.c ****                 duyCycle = (uint16)
 892:Generated_Source\PSoC4/FanController.c ****                     ((((uint32) CY_GET_REG8(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSe
 893:Generated_Source\PSoC4/FanController.c ****                             * FanController_PWM_DUTY_DIVIDER) / FanController_PWM_PERIOD);
 894:Generated_Source\PSoC4/FanController.c ****             #else
 895:Generated_Source\PSoC4/FanController.c ****                 duyCycle = (uint16)
 896:Generated_Source\PSoC4/FanController.c ****                     (((uint32) CY_GET_REG16(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSe
 897:Generated_Source\PSoC4/FanController.c ****                                 * FanController_PWM_DUTY_DIVIDER) / FanController_PWM_PERIOD);
 898:Generated_Source\PSoC4/FanController.c ****             #endif /* FanController_PWMRES == FanController_PWMRES_EIGHTBIT */
 899:Generated_Source\PSoC4/FanController.c ****         #else
 900:Generated_Source\PSoC4/FanController.c ****             duyCycle = (uint16)
 901:Generated_Source\PSoC4/FanController.c ****                 (((uint32) CY_GET_REG32(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSetDut
 478              		.loc 1 901 0
 479 0006 064B     		ldr	r3, .L41
 480 0008 1868     		ldr	r0, [r3]
 481              	.LVL23:
 902:Generated_Source\PSoC4/FanController.c ****                         * FanController_PWM_DUTY_DIVIDER) / FanController_PWM_PERIOD);
 482              		.loc 1 902 0
 483 000a 064B     		ldr	r3, .L41+4
 484 000c 5843     		muls	r0, r3
 485 000e F021     		movs	r1, #240
 486 0010 8900     		lsls	r1, r1, #2
 487 0012 FFF7FEFF 		bl	__aeabi_uidiv
 488              	.LVL24:
 900:Generated_Source\PSoC4/FanController.c ****                 (((uint32) CY_GET_REG32(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSetDut
 489              		.loc 1 900 0
 490 0016 80B2     		uxth	r0, r0
 491              	.LVL25:
 492 0018 00E0     		b	.L39
 493              	.LVL26:
 494              	.L40:
 885:Generated_Source\PSoC4/FanController.c **** 
 495              		.loc 1 885 0
 496 001a 0020     		movs	r0, #0
 497              	.LVL27:
 498              	.L39:
 903:Generated_Source\PSoC4/FanController.c ****         #endif /* (!CY_PSOC4) */
 904:Generated_Source\PSoC4/FanController.c ****     }
 905:Generated_Source\PSoC4/FanController.c **** 
 906:Generated_Source\PSoC4/FanController.c ****     return(duyCycle);
 907:Generated_Source\PSoC4/FanController.c **** }
 499              		.loc 1 907 0
 500              		@ sp needed
 501 001c 10BD     		pop	{r4, pc}
 502              	.L42:
 503 001e C046     		.align	2
 504              	.L41:
 505 0020 0C012040 		.word	1075839244
 506 0024 10270000 		.word	10000
 507              		.cfi_endproc
 508              	.LFE16:
 509              		.size	FanController_GetDutyCycle, .-FanController_GetDutyCycle
 510              		.section	.text.FanController_SetDesiredSpeed,"ax",%progbits
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 26


 511              		.align	2
 512              		.global	FanController_SetDesiredSpeed
 513              		.code	16
 514              		.thumb_func
 515              		.type	FanController_SetDesiredSpeed, %function
 516              	FanController_SetDesiredSpeed:
 517              	.LFB17:
 908:Generated_Source\PSoC4/FanController.c **** 
 909:Generated_Source\PSoC4/FanController.c **** 
 910:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 911:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_SetDesiredSpeed
 912:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 913:Generated_Source\PSoC4/FanController.c **** *
 914:Generated_Source\PSoC4/FanController.c **** * Summary:
 915:Generated_Source\PSoC4/FanController.c **** *  Sets the desired RPM of specified fan. If the AcousticNoiseReduction
 916:Generated_Source\PSoC4/FanController.c **** *  parameter is true (enabled via the component customizer) in hardware
 917:Generated_Source\PSoC4/FanController.c **** *  controlled fan mode, the desired speed is converted to a fan rotation period
 918:Generated_Source\PSoC4/FanController.c **** *  and written to SRAM for subsequent DMA into the tachometer block. If the
 919:Generated_Source\PSoC4/FanController.c **** *  AcousticNoiseReduction parameter is false, the desired speed is converted to
 920:Generated_Source\PSoC4/FanController.c **** *  a duty cycle and written directly into the PWM register for the selected fan.
 921:Generated_Source\PSoC4/FanController.c **** *
 922:Generated_Source\PSoC4/FanController.c **** * Parameters:
 923:Generated_Source\PSoC4/FanController.c **** *  uint8 fanNumber
 924:Generated_Source\PSoC4/FanController.c **** *  Valid range is 1-16 and should not exceed the number of fans in the system.
 925:Generated_Source\PSoC4/FanController.c **** *
 926:Generated_Source\PSoC4/FanController.c **** * uint16 rpm
 927:Generated_Source\PSoC4/FanController.c **** *  Valid range is 500 to 25,000, but should not exceed the max RPM of the
 928:Generated_Source\PSoC4/FanController.c **** *  selected fan.
 929:Generated_Source\PSoC4/FanController.c **** *
 930:Generated_Source\PSoC4/FanController.c **** * Return:
 931:Generated_Source\PSoC4/FanController.c **** *  None
 932:Generated_Source\PSoC4/FanController.c **** *
 933:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 934:Generated_Source\PSoC4/FanController.c **** *  None
 935:Generated_Source\PSoC4/FanController.c **** *
 936:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 937:Generated_Source\PSoC4/FanController.c **** void FanController_SetDesiredSpeed(uint8 fanNumber, uint16 rpm) 
 938:Generated_Source\PSoC4/FanController.c **** {
 518              		.loc 1 938 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              		@ link register save eliminated.
 523              	.LVL28:
 939:Generated_Source\PSoC4/FanController.c ****     uint32 overrideDuty;        /* Needs to be 32-bit to allow for overflow during the math calcula
 940:Generated_Source\PSoC4/FanController.c ****     uint16 currentSpeed;
 941:Generated_Source\PSoC4/FanController.c **** 
 942:Generated_Source\PSoC4/FanController.c ****     /* Check for valid Fan number */
 943:Generated_Source\PSoC4/FanController.c ****     if(fanNumber <= FanController_NUMBER_OF_FANS)
 524              		.loc 1 943 0
 525 0000 0128     		cmp	r0, #1
 526 0002 03D8     		bhi	.L43
 944:Generated_Source\PSoC4/FanController.c ****     {
 945:Generated_Source\PSoC4/FanController.c ****         /* Get the actual speed */
 946:Generated_Source\PSoC4/FanController.c ****         currentSpeed = FanController_GetActualSpeed(fanNumber);
 947:Generated_Source\PSoC4/FanController.c **** 
 948:Generated_Source\PSoC4/FanController.c ****         /* 3 cases where we will directly write a new duty cycle in firmware: */
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 27


 949:Generated_Source\PSoC4/FanController.c ****             /* Case 1) Manual Control fan mode */
 950:Generated_Source\PSoC4/FanController.c ****         if((FanController_IS_MANUAL_MODE)   ||
 951:Generated_Source\PSoC4/FanController.c ****             /* Case 2) Auto controlled fan mode and noise reduction is off */
 952:Generated_Source\PSoC4/FanController.c ****             ((FanController_IS_AUTO_HARDWARE_MODE) &&
 953:Generated_Source\PSoC4/FanController.c ****                 (FanController_NOISE_REDUCTION_MODE == FanController_NOISE_REDUCTION_OFF)) ||
 954:Generated_Source\PSoC4/FanController.c ****             /* Case 3) hardware controlled fan mode and new rpm is slower than current */
 955:Generated_Source\PSoC4/FanController.c ****             ((FanController_IS_AUTO_HARDWARE_MODE) && (rpm < currentSpeed)))
 956:Generated_Source\PSoC4/FanController.c ****         {
 957:Generated_Source\PSoC4/FanController.c ****             /* Override hardware controlled fan mode temporarily to write new duty cycle */
 958:Generated_Source\PSoC4/FanController.c ****             #if(FanController_IS_AUTO_HARDWARE_MODE)
 959:Generated_Source\PSoC4/FanController.c ****                 FanController_OverrideAutomaticControl(1u);
 960:Generated_Source\PSoC4/FanController.c ****             #endif /* FanController_IS_AUTO_HARDWARE_MODE */
 961:Generated_Source\PSoC4/FanController.c **** 
 962:Generated_Source\PSoC4/FanController.c ****             /* Desired speed is slower than rpmA */
 963:Generated_Source\PSoC4/FanController.c ****             if(rpm < FanController_fanProperties[fanNumber - 1u].rpmA)
 964:Generated_Source\PSoC4/FanController.c ****             {
 965:Generated_Source\PSoC4/FanController.c ****                 overrideDuty =  (uint32)FanController_fanProperties[fanNumber - 1u].dutyA -
 966:Generated_Source\PSoC4/FanController.c ****                                 (((uint32)FanController_fanProperties[fanNumber - 1u].dutyRpmSlope 
 967:Generated_Source\PSoC4/FanController.c ****                                    ((uint32)FanController_fanProperties[fanNumber - 1u].rpmA - (uin
 968:Generated_Source\PSoC4/FanController.c **** 
 969:Generated_Source\PSoC4/FanController.c ****                 /* Check for math underflow */
 970:Generated_Source\PSoC4/FanController.c ****                 if(overrideDuty > 10000u)
 971:Generated_Source\PSoC4/FanController.c ****                 {
 972:Generated_Source\PSoC4/FanController.c ****                     overrideDuty = 0u;
 973:Generated_Source\PSoC4/FanController.c ****                 }
 974:Generated_Source\PSoC4/FanController.c ****             }
 975:Generated_Source\PSoC4/FanController.c **** 
 976:Generated_Source\PSoC4/FanController.c ****             /* Desired speed is faster than rpmA */
 977:Generated_Source\PSoC4/FanController.c ****             else
 978:Generated_Source\PSoC4/FanController.c ****             {
 979:Generated_Source\PSoC4/FanController.c ****                 overrideDuty =  (uint32)FanController_fanProperties[fanNumber - 1u].dutyA +
 980:Generated_Source\PSoC4/FanController.c ****                                 (((uint32)FanController_fanProperties[fanNumber - 1u].dutyRpmSlope 
 981:Generated_Source\PSoC4/FanController.c ****                                    ((uint32)rpm - (uint32)FanController_fanProperties[fanNumber - 1
 982:Generated_Source\PSoC4/FanController.c **** 
 983:Generated_Source\PSoC4/FanController.c ****                 /* Check for math overflow */
 984:Generated_Source\PSoC4/FanController.c ****                 if(overrideDuty > 10000u)
 985:Generated_Source\PSoC4/FanController.c ****                 {
 986:Generated_Source\PSoC4/FanController.c ****                     overrideDuty = 10000u;
 987:Generated_Source\PSoC4/FanController.c ****                 }
 988:Generated_Source\PSoC4/FanController.c ****             }
 989:Generated_Source\PSoC4/FanController.c **** 
 990:Generated_Source\PSoC4/FanController.c ****             /* Set the newly calculated duty cycle */
 991:Generated_Source\PSoC4/FanController.c ****             FanController_SetDutyCycle(fanNumber, (uint16) overrideDuty);
 992:Generated_Source\PSoC4/FanController.c ****         }
 993:Generated_Source\PSoC4/FanController.c **** 
 994:Generated_Source\PSoC4/FanController.c ****         /* Set newly requested desired rpm including tolerance calculation and store
 995:Generated_Source\PSoC4/FanController.c ****         * in SRAM for the tachometer block DMA controller.
 996:Generated_Source\PSoC4/FanController.c ****         */
 997:Generated_Source\PSoC4/FanController.c ****         #if(FanController_IS_AUTO_HARDWARE_MODE)
 998:Generated_Source\PSoC4/FanController.c **** 
 999:Generated_Source\PSoC4/FanController.c ****             FanController_fanControl.desiredPeriod[fanNumber - 1u] =
1000:Generated_Source\PSoC4/FanController.c ****                 (uint16) (FanController_RPM_PERIOD_CONV_FACTOR /
1001:Generated_Source\PSoC4/FanController.c ****                     (uint32) ((uint32) rpm + (((uint32) rpm * FanController_TOLERANCE) /
1002:Generated_Source\PSoC4/FanController.c ****                         FanController_TOLERANCE_DIVIDER)));
1003:Generated_Source\PSoC4/FanController.c **** 
1004:Generated_Source\PSoC4/FanController.c ****             if(rpm > 500u)
1005:Generated_Source\PSoC4/FanController.c ****             {
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 28


1006:Generated_Source\PSoC4/FanController.c ****                 FanController_fanControl.tolerance[fanNumber - 1u] =
1007:Generated_Source\PSoC4/FanController.c ****                     (uint16) (((FanController_RPM_PERIOD_CONV_FACTOR * FanController_TOLERANCE) /
1008:Generated_Source\PSoC4/FanController.c ****                         FanController_TOLERANCE_DIVIDER) / (uint32) rpm);
1009:Generated_Source\PSoC4/FanController.c ****             }
1010:Generated_Source\PSoC4/FanController.c ****             else
1011:Generated_Source\PSoC4/FanController.c ****             {
1012:Generated_Source\PSoC4/FanController.c ****                 FanController_fanControl.tolerance[fanNumber - 1u] = 100u;
1013:Generated_Source\PSoC4/FanController.c ****             }
1014:Generated_Source\PSoC4/FanController.c **** 
1015:Generated_Source\PSoC4/FanController.c ****             /* Go back to hardware controlled fan mode */
1016:Generated_Source\PSoC4/FanController.c ****             FanController_OverrideAutomaticControl(0u);
1017:Generated_Source\PSoC4/FanController.c **** 
1018:Generated_Source\PSoC4/FanController.c ****         #endif /* FanController_IS_AUTO_HARDWARE_MODE */
1019:Generated_Source\PSoC4/FanController.c ****         
1020:Generated_Source\PSoC4/FanController.c ****         /* Store the desired speed to RAM if we are in auto mode. It will be used by 
1021:Generated_Source\PSoC4/FanController.c ****         * FanController_GetDesiredSpeed() and PID algorithm.
1022:Generated_Source\PSoC4/FanController.c ****         */
1023:Generated_Source\PSoC4/FanController.c ****         #if((FanController_IS_AUTO_FIRMWARE_MODE) || (FanController_IS_AUTO_HARDWARE_MODE))
1024:Generated_Source\PSoC4/FanController.c ****             FanController_desiredFansSpeed[fanNumber - 1u] = rpm;
 527              		.loc 1 1024 0
 528 0004 0138     		subs	r0, r0, #1
 529              	.LVL29:
 530 0006 4000     		lsls	r0, r0, #1
 531 0008 014B     		ldr	r3, .L45
 532 000a C152     		strh	r1, [r0, r3]
 533              	.L43:
1025:Generated_Source\PSoC4/FanController.c ****         #endif /* (FanController_IS_AUTO_HARDWARE_MODE) */
1026:Generated_Source\PSoC4/FanController.c ****     }
1027:Generated_Source\PSoC4/FanController.c **** }
 534              		.loc 1 1027 0
 535              		@ sp needed
 536 000c 7047     		bx	lr
 537              	.L46:
 538 000e C046     		.align	2
 539              	.L45:
 540 0010 00000000 		.word	FanController_desiredFansSpeed
 541              		.cfi_endproc
 542              	.LFE17:
 543              		.size	FanController_SetDesiredSpeed, .-FanController_SetDesiredSpeed
 544              		.section	.text.FanController_Init,"ax",%progbits
 545              		.align	2
 546              		.global	FanController_Init
 547              		.code	16
 548              		.thumb_func
 549              		.type	FanController_Init, %function
 550              	FanController_Init:
 551              	.LFB4:
 223:Generated_Source\PSoC4/FanController.c ****     uint8 counti;
 552              		.loc 1 223 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 557              		.cfi_def_cfa_offset 24
 558              		.cfi_offset 3, -24
 559              		.cfi_offset 4, -20
 560              		.cfi_offset 5, -16
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 29


 561              		.cfi_offset 6, -12
 562              		.cfi_offset 7, -8
 563              		.cfi_offset 14, -4
 312:Generated_Source\PSoC4/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 2u)
 564              		.loc 1 312 0
 565 0002 FFF7FEFF 		bl	FanController_FW_PWM1_Init
 566              	.LVL30:
 327:Generated_Source\PSoC4/FanController.c ****         {
 567              		.loc 1 327 0
 568 0006 0024     		movs	r4, #0
 569 0008 16E0     		b	.L48
 570              	.LVL31:
 571              	.L49:
 330:Generated_Source\PSoC4/FanController.c **** 
 572              		.loc 1 330 0 discriminator 3
 573 000a F022     		movs	r2, #240
 574 000c 9200     		lsls	r2, r2, #2
 575 000e 2C4B     		ldr	r3, .L52
 576 0010 1A60     		str	r2, [r3]
 336:Generated_Source\PSoC4/FanController.c ****             #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
 577              		.loc 1 336 0 discriminator 3
 578 0012 651C     		adds	r5, r4, #1
 579 0014 EDB2     		uxtb	r5, r5
 580 0016 2B4F     		ldr	r7, .L52+4
 581 0018 E600     		lsls	r6, r4, #3
 582 001a 321B     		subs	r2, r6, r4
 583 001c 5300     		lsls	r3, r2, #1
 584 001e FB18     		adds	r3, r7, r3
 585 0020 9989     		ldrh	r1, [r3, #12]
 586 0022 2800     		movs	r0, r5
 587 0024 FFF7FEFF 		bl	FanController_SetDutyCycle
 588              	.LVL32:
 340:Generated_Source\PSoC4/FanController.c ****         }
 589              		.loc 1 340 0 discriminator 3
 590 0028 341B     		subs	r4, r6, r4
 591              	.LVL33:
 592 002a 6300     		lsls	r3, r4, #1
 593 002c FB18     		adds	r3, r7, r3
 594 002e 5989     		ldrh	r1, [r3, #10]
 595 0030 2800     		movs	r0, r5
 596 0032 FFF7FEFF 		bl	FanController_SetDesiredSpeed
 597              	.LVL34:
 327:Generated_Source\PSoC4/FanController.c ****         {
 598              		.loc 1 327 0 discriminator 3
 599 0036 2C00     		movs	r4, r5
 600              	.LVL35:
 601              	.L48:
 327:Generated_Source\PSoC4/FanController.c ****         {
 602              		.loc 1 327 0 is_stmt 0 discriminator 1
 603 0038 002C     		cmp	r4, #0
 604 003a E6D0     		beq	.L49
 349:Generated_Source\PSoC4/FanController.c ****     #if (CY_PSOC4)
 605              		.loc 1 349 0 is_stmt 1
 606 003c FFF7FEFF 		bl	CyEnterCriticalSection
 607              	.LVL36:
 352:Generated_Source\PSoC4/FanController.c ****         FanController_TACH_CUNTER_AUX_CTL_REG &= ((uint8) ~FanController_TACH_COUNTER_FIFO_CLR);
 608              		.loc 1 352 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 30


 609 0040 214B     		ldr	r3, .L52+8
 610 0042 1988     		ldrh	r1, [r3]
 611 0044 0222     		movs	r2, #2
 612 0046 FF32     		adds	r2, r2, #255
 613 0048 0A43     		orrs	r2, r1
 614 004a 1A80     		strh	r2, [r3]
 353:Generated_Source\PSoC4/FanController.c ****     #else
 615              		.loc 1 353 0
 616 004c 1988     		ldrh	r1, [r3]
 617 004e FE22     		movs	r2, #254
 618 0050 0A40     		ands	r2, r1
 619 0052 1A80     		strh	r2, [r3]
 358:Generated_Source\PSoC4/FanController.c ****     
 620              		.loc 1 358 0
 621 0054 FFF7FEFF 		bl	CyExitCriticalSection
 622              	.LVL37:
 361:Generated_Source\PSoC4/FanController.c **** 
 623              		.loc 1 361 0
 624 0058 3C22     		movs	r2, #60
 625 005a 1C4B     		ldr	r3, .L52+12
 626 005c 1A70     		strb	r2, [r3]
 366:Generated_Source\PSoC4/FanController.c **** 
 627              		.loc 1 366 0
 628 005e 323A     		subs	r2, r2, #50
 629 0060 1B4B     		ldr	r3, .L52+16
 630 0062 1A70     		strb	r2, [r3]
 369:Generated_Source\PSoC4/FanController.c **** 
 631              		.loc 1 369 0
 632 0064 F032     		adds	r2, r2, #240
 633 0066 1B4B     		ldr	r3, .L52+20
 634 0068 1A70     		strb	r2, [r3]
 372:Generated_Source\PSoC4/FanController.c **** 
 635              		.loc 1 372 0
 636 006a F93A     		subs	r2, r2, #249
 637 006c 1A4B     		ldr	r3, .L52+24
 638 006e 1A70     		strb	r2, [r3]
 379:Generated_Source\PSoC4/FanController.c **** 
 639              		.loc 1 379 0
 640 0070 0120     		movs	r0, #1
 641 0072 FFF7FEFF 		bl	FanController_SetAlertMask
 642              	.LVL38:
 385:Generated_Source\PSoC4/FanController.c ****         {
 643              		.loc 1 385 0
 644 0076 0024     		movs	r4, #0
 645 0078 18E0     		b	.L50
 646              	.LVL39:
 647              	.L51:
 388:Generated_Source\PSoC4/FanController.c **** 
 648              		.loc 1 388 0 discriminator 3
 649 007a FFF7FEFF 		bl	CyEnterCriticalSection
 650              	.LVL40:
 393:Generated_Source\PSoC4/FanController.c ****             FanController_pidA2[counti] = FanController_PID_A2;
 651              		.loc 1 393 0 discriminator 3
 652 007e 6300     		lsls	r3, r4, #1
 653 0080 1649     		ldr	r1, .L52+28
 654 0082 174A     		ldr	r2, .L52+32
 655 0084 9952     		strh	r1, [r3, r2]
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 31


 394:Generated_Source\PSoC4/FanController.c ****             FanController_pidA3[counti] = FanController_PID_A3;
 656              		.loc 1 394 0 discriminator 3
 657 0086 1749     		ldr	r1, .L52+36
 658 0088 174A     		ldr	r2, .L52+40
 659 008a 9952     		strh	r1, [r3, r2]
 395:Generated_Source\PSoC4/FanController.c **** 
 660              		.loc 1 395 0 discriminator 3
 661 008c 1749     		ldr	r1, .L52+44
 662 008e 184A     		ldr	r2, .L52+48
 663 0090 9952     		strh	r1, [r3, r2]
 397:Generated_Source\PSoC4/FanController.c ****             FanController_outputSatH[counti] = FanController_PID_OUTPUT_SAT_H;
 664              		.loc 1 397 0 discriminator 3
 665 0092 A300     		lsls	r3, r4, #2
 666 0094 C021     		movs	r1, #192
 667 0096 4905     		lsls	r1, r1, #21
 668 0098 164A     		ldr	r2, .L52+52
 669 009a 9950     		str	r1, [r3, r2]
 398:Generated_Source\PSoC4/FanController.c ****             CyExitCriticalSection(interruptState);
 670              		.loc 1 398 0 discriminator 3
 671 009c F021     		movs	r1, #240
 672 009e 8905     		lsls	r1, r1, #22
 673 00a0 154A     		ldr	r2, .L52+56
 674 00a2 9950     		str	r1, [r3, r2]
 399:Generated_Source\PSoC4/FanController.c ****         }
 675              		.loc 1 399 0 discriminator 3
 676 00a4 FFF7FEFF 		bl	CyExitCriticalSection
 677              	.LVL41:
 385:Generated_Source\PSoC4/FanController.c ****         {
 678              		.loc 1 385 0 discriminator 3
 679 00a8 0134     		adds	r4, r4, #1
 680              	.LVL42:
 681 00aa E4B2     		uxtb	r4, r4
 682              	.LVL43:
 683              	.L50:
 385:Generated_Source\PSoC4/FanController.c ****         {
 684              		.loc 1 385 0 is_stmt 0 discriminator 1
 685 00ac 002C     		cmp	r4, #0
 686 00ae E4D0     		beq	.L51
 407:Generated_Source\PSoC4/FanController.c ****     #endif /* (CY_PSOC4) */
 687              		.loc 1 407 0 is_stmt 1
 688 00b0 1248     		ldr	r0, .L52+60
 689 00b2 FFF7FEFF 		bl	FanController_DataSend_StartEx
 690              	.LVL44:
 411:Generated_Source\PSoC4/FanController.c ****     #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
 691              		.loc 1 411 0
 692 00b6 1248     		ldr	r0, .L52+64
 693 00b8 FFF7FEFF 		bl	FanController_PID_ISR_StartEx
 694              	.LVL45:
 413:Generated_Source\PSoC4/FanController.c **** 
 695              		.loc 1 413 0
 696              		@ sp needed
 697              	.LVL46:
 698 00bc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 699              	.L53:
 700 00be C046     		.align	2
 701              	.L52:
 702 00c0 14012040 		.word	1075839252
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 32


 703 00c4 00000000 		.word	.LANCHOR1
 704 00c8 24110F40 		.word	1074729252
 705 00cc 20000F40 		.word	1074724896
 706 00d0 30000F40 		.word	1074724912
 707 00d4 21000F40 		.word	1074724897
 708 00d8 31000F40 		.word	1074724913
 709 00dc 331B0000 		.word	6963
 710 00e0 00000000 		.word	FanController_pidA1
 711 00e4 67EEFFFF 		.word	-4505
 712 00e8 00000000 		.word	FanController_pidA2
 713 00ec 66060000 		.word	1638
 714 00f0 00000000 		.word	FanController_pidA3
 715 00f4 00000000 		.word	FanController_outputSatL
 716 00f8 00000000 		.word	FanController_outputSatH
 717 00fc 00000000 		.word	FanController_DATA_SEND_ISR
 718 0100 00000000 		.word	FanController_PID_CONTROL_ISR
 719              		.cfi_endproc
 720              	.LFE4:
 721              		.size	FanController_Init, .-FanController_Init
 722              		.section	.text.FanController_Start,"ax",%progbits
 723              		.align	2
 724              		.global	FanController_Start
 725              		.code	16
 726              		.thumb_func
 727              		.type	FanController_Start, %function
 728              	FanController_Start:
 729              	.LFB2:
 133:Generated_Source\PSoC4/FanController.c ****     /* If not already initialized, then initialize hardware and variables */
 730              		.loc 1 133 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 0
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734 0000 10B5     		push	{r4, lr}
 735              		.cfi_def_cfa_offset 8
 736              		.cfi_offset 4, -8
 737              		.cfi_offset 14, -4
 135:Generated_Source\PSoC4/FanController.c ****     {
 738              		.loc 1 135 0
 739 0002 064B     		ldr	r3, .L56
 740 0004 1B79     		ldrb	r3, [r3, #4]
 741 0006 002B     		cmp	r3, #0
 742 0008 04D1     		bne	.L55
 137:Generated_Source\PSoC4/FanController.c ****         FanController_initVar = 1u;
 743              		.loc 1 137 0
 744 000a FFF7FEFF 		bl	FanController_Init
 745              	.LVL47:
 138:Generated_Source\PSoC4/FanController.c ****     }
 746              		.loc 1 138 0
 747 000e 0122     		movs	r2, #1
 748 0010 024B     		ldr	r3, .L56
 749 0012 1A71     		strb	r2, [r3, #4]
 750              	.L55:
 140:Generated_Source\PSoC4/FanController.c **** }
 751              		.loc 1 140 0
 752 0014 FFF7FEFF 		bl	FanController_Enable
 753              	.LVL48:
 141:Generated_Source\PSoC4/FanController.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 33


 754              		.loc 1 141 0
 755              		@ sp needed
 756 0018 10BD     		pop	{r4, pc}
 757              	.L57:
 758 001a C046     		.align	2
 759              	.L56:
 760 001c 00000000 		.word	.LANCHOR0
 761              		.cfi_endproc
 762              	.LFE2:
 763              		.size	FanController_Start, .-FanController_Start
 764              		.section	.text.FanController_GetDesiredSpeed,"ax",%progbits
 765              		.align	2
 766              		.global	FanController_GetDesiredSpeed
 767              		.code	16
 768              		.thumb_func
 769              		.type	FanController_GetDesiredSpeed, %function
 770              	FanController_GetDesiredSpeed:
 771              	.LFB18:
1028:Generated_Source\PSoC4/FanController.c **** 
1029:Generated_Source\PSoC4/FanController.c **** 
1030:Generated_Source\PSoC4/FanController.c **** #if (!FanController_IS_MANUAL_MODE)
1031:Generated_Source\PSoC4/FanController.c ****     /******************************************************************************
1032:Generated_Source\PSoC4/FanController.c ****     * Function Name: FanController_GetDesiredSpeed
1033:Generated_Source\PSoC4/FanController.c ****     *******************************************************************************
1034:Generated_Source\PSoC4/FanController.c ****     *
1035:Generated_Source\PSoC4/FanController.c ****     * Summary:
1036:Generated_Source\PSoC4/FanController.c ****     *  Returns the currently desired speed of the selected fan in RPMs in hardware
1037:Generated_Source\PSoC4/FanController.c ****     *  controlled fan mode. This API is not available if firmware controlled fan
1038:Generated_Source\PSoC4/FanController.c ****     *  mode is selected.
1039:Generated_Source\PSoC4/FanController.c ****     *
1040:Generated_Source\PSoC4/FanController.c ****     * Parameters:
1041:Generated_Source\PSoC4/FanController.c ****     *  uint8 fanNumber
1042:Generated_Source\PSoC4/FanController.c ****     *  Valid range is 1-16 and should not exceed the number of fans in the system.
1043:Generated_Source\PSoC4/FanController.c ****     *
1044:Generated_Source\PSoC4/FanController.c ****     * Return:
1045:Generated_Source\PSoC4/FanController.c ****     *  uint16 desiredSpeed: Current desired speed for selected fan.
1046:Generated_Source\PSoC4/FanController.c ****     *
1047:Generated_Source\PSoC4/FanController.c ****     * Side Effects:
1048:Generated_Source\PSoC4/FanController.c ****     *  None
1049:Generated_Source\PSoC4/FanController.c ****     *
1050:Generated_Source\PSoC4/FanController.c ****     ******************************************************************************/
1051:Generated_Source\PSoC4/FanController.c ****     uint16 FanController_GetDesiredSpeed(uint8 fanNumber) 
1052:Generated_Source\PSoC4/FanController.c ****     {
 772              		.loc 1 1052 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776              		@ link register save eliminated.
 777              	.LVL49:
1053:Generated_Source\PSoC4/FanController.c ****         return(FanController_desiredFansSpeed[fanNumber - 1u]);
 778              		.loc 1 1053 0
 779 0000 0138     		subs	r0, r0, #1
 780              	.LVL50:
 781 0002 4000     		lsls	r0, r0, #1
 782 0004 014B     		ldr	r3, .L59
 783 0006 185A     		ldrh	r0, [r3, r0]
1054:Generated_Source\PSoC4/FanController.c ****     }
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 34


 784              		.loc 1 1054 0
 785              		@ sp needed
 786 0008 7047     		bx	lr
 787              	.L60:
 788 000a C046     		.align	2
 789              	.L59:
 790 000c 00000000 		.word	FanController_desiredFansSpeed
 791              		.cfi_endproc
 792              	.LFE18:
 793              		.size	FanController_GetDesiredSpeed, .-FanController_GetDesiredSpeed
 794              		.section	.text.FanController_GetActualSpeed,"ax",%progbits
 795              		.align	2
 796              		.global	FanController_GetActualSpeed
 797              		.code	16
 798              		.thumb_func
 799              		.type	FanController_GetActualSpeed, %function
 800              	FanController_GetActualSpeed:
 801              	.LFB19:
1055:Generated_Source\PSoC4/FanController.c **** 
1056:Generated_Source\PSoC4/FanController.c **** #endif /* (!FanController_IS_MANUAL_MODE) */
1057:Generated_Source\PSoC4/FanController.c **** 
1058:Generated_Source\PSoC4/FanController.c **** 
1059:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
1060:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_GetActualSpeed
1061:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
1062:Generated_Source\PSoC4/FanController.c **** *
1063:Generated_Source\PSoC4/FanController.c **** * Summary:
1064:Generated_Source\PSoC4/FanController.c **** *  Returns the actual measured RPM of selected fan. This function should be 
1065:Generated_Source\PSoC4/FanController.c **** *  called first time in the design only after the requested fan is made a full
1066:Generated_Source\PSoC4/FanController.c **** *  rotation. This can be ensured by calling the function after End-of-Cycle 
1067:Generated_Source\PSoC4/FanController.c **** *  (eoc) pulse generation.
1068:Generated_Source\PSoC4/FanController.c **** *
1069:Generated_Source\PSoC4/FanController.c **** * Parameters:
1070:Generated_Source\PSoC4/FanController.c **** *  uint8 fanNumber
1071:Generated_Source\PSoC4/FanController.c **** *  Valid range is 1-16 and should not exceed the number of fans in the system.
1072:Generated_Source\PSoC4/FanController.c **** *
1073:Generated_Source\PSoC4/FanController.c **** * Return:
1074:Generated_Source\PSoC4/FanController.c **** *  uint16 actualSpeed: Actual measured RPM of target fan.
1075:Generated_Source\PSoC4/FanController.c **** *
1076:Generated_Source\PSoC4/FanController.c **** * Side Effects:
1077:Generated_Source\PSoC4/FanController.c **** *  None
1078:Generated_Source\PSoC4/FanController.c **** *
1079:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
1080:Generated_Source\PSoC4/FanController.c **** uint16 FanController_GetActualSpeed(uint8 fanNumber) 
1081:Generated_Source\PSoC4/FanController.c **** {
 802              		.loc 1 1081 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 0
 805              		@ frame_needed = 0, uses_anonymous_args = 0
 806              	.LVL51:
 807 0000 10B5     		push	{r4, lr}
 808              		.cfi_def_cfa_offset 8
 809              		.cfi_offset 4, -8
 810              		.cfi_offset 14, -4
 811              	.LVL52:
1082:Generated_Source\PSoC4/FanController.c ****     uint16 actualSpeed = 0u;
1083:Generated_Source\PSoC4/FanController.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 35


1084:Generated_Source\PSoC4/FanController.c ****     if(fanNumber <= FanController_NUMBER_OF_FANS)
 812              		.loc 1 1084 0
 813 0002 0128     		cmp	r0, #1
 814 0004 0AD8     		bhi	.L63
1085:Generated_Source\PSoC4/FanController.c ****     {
1086:Generated_Source\PSoC4/FanController.c ****         #if(CY_PSOC3)
1087:Generated_Source\PSoC4/FanController.c **** 
1088:Generated_Source\PSoC4/FanController.c ****             if(0u != (FanController_DMA_STATUS_REG & FanController_DMA1))
1089:Generated_Source\PSoC4/FanController.c ****             {
1090:Generated_Source\PSoC4/FanController.c ****                 /* If DMA writes to actualPeriodDma1 (DMA1 state) then read
1091:Generated_Source\PSoC4/FanController.c ****                 * actualPeriodDma2.
1092:Generated_Source\PSoC4/FanController.c ****                 */
1093:Generated_Source\PSoC4/FanController.c ****                 if(FanController_fanControl.actualPeriodDma2[fanNumber - 1u] != 0u)
1094:Generated_Source\PSoC4/FanController.c ****                 {
1095:Generated_Source\PSoC4/FanController.c ****                     /* Calculate RPM from value measured by tachometer counter */
1096:Generated_Source\PSoC4/FanController.c ****                     actualSpeed = (uint16) (FanController_RPM_PERIOD_CONV_FACTOR /
1097:Generated_Source\PSoC4/FanController.c ****                         (uint32) FanController_fanControl.actualPeriodDma2[fanNumber - 1u]);
1098:Generated_Source\PSoC4/FanController.c ****                 }
1099:Generated_Source\PSoC4/FanController.c ****             }
1100:Generated_Source\PSoC4/FanController.c ****             else
1101:Generated_Source\PSoC4/FanController.c ****             {
1102:Generated_Source\PSoC4/FanController.c ****                 /* If DMA writes to actualPeriodDma2 (DMA2 state) then read
1103:Generated_Source\PSoC4/FanController.c ****                 * actualPeriodDma1.
1104:Generated_Source\PSoC4/FanController.c ****                 */
1105:Generated_Source\PSoC4/FanController.c ****                 if(FanController_fanControl.actualPeriodDma1[fanNumber - 1u] != 0u)
1106:Generated_Source\PSoC4/FanController.c ****                 {
1107:Generated_Source\PSoC4/FanController.c ****                     /* Calculate RPM from value measured bu tachometer counter */
1108:Generated_Source\PSoC4/FanController.c ****                     actualSpeed = (uint16) (FanController_RPM_PERIOD_CONV_FACTOR /
1109:Generated_Source\PSoC4/FanController.c ****                         (uint32) FanController_fanControl.actualPeriodDma1[fanNumber - 1u]);
1110:Generated_Source\PSoC4/FanController.c ****                 }
1111:Generated_Source\PSoC4/FanController.c ****             }
1112:Generated_Source\PSoC4/FanController.c **** 
1113:Generated_Source\PSoC4/FanController.c ****         #else
1114:Generated_Source\PSoC4/FanController.c **** 
1115:Generated_Source\PSoC4/FanController.c ****             if(FanController_fanControl.actualPeriod[fanNumber - 1u] != 0u)
 815              		.loc 1 1115 0
 816 0006 0138     		subs	r0, r0, #1
 817              	.LVL53:
 818 0008 4000     		lsls	r0, r0, #1
 819 000a 064B     		ldr	r3, .L65
 820 000c C15A     		ldrh	r1, [r0, r3]
 821 000e 0029     		cmp	r1, #0
 822 0010 06D0     		beq	.L64
1116:Generated_Source\PSoC4/FanController.c ****             {
1117:Generated_Source\PSoC4/FanController.c ****                 /* Calculate RPM from value measured by tachometer counter */
1118:Generated_Source\PSoC4/FanController.c ****                 actualSpeed = (uint16) (FanController_RPM_PERIOD_CONV_FACTOR /
 823              		.loc 1 1118 0
 824 0012 0548     		ldr	r0, .L65+4
 825 0014 FFF7FEFF 		bl	__aeabi_uidiv
 826              	.LVL54:
 827 0018 80B2     		uxth	r0, r0
 828              	.LVL55:
 829 001a 02E0     		b	.L62
 830              	.LVL56:
 831              	.L63:
1082:Generated_Source\PSoC4/FanController.c **** 
 832              		.loc 1 1082 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 36


 833 001c 0020     		movs	r0, #0
 834              	.LVL57:
 835 001e 00E0     		b	.L62
 836              	.L64:
 837 0020 0020     		movs	r0, #0
 838              	.LVL58:
 839              	.L62:
1119:Generated_Source\PSoC4/FanController.c ****                     (uint32) FanController_fanControl.actualPeriod[fanNumber - 1u]);
1120:Generated_Source\PSoC4/FanController.c ****             }
1121:Generated_Source\PSoC4/FanController.c **** 
1122:Generated_Source\PSoC4/FanController.c ****         #endif /* (CY_PSOC3) */
1123:Generated_Source\PSoC4/FanController.c ****     }
1124:Generated_Source\PSoC4/FanController.c **** 
1125:Generated_Source\PSoC4/FanController.c ****     return(actualSpeed);
1126:Generated_Source\PSoC4/FanController.c **** }
 840              		.loc 1 1126 0
 841              		@ sp needed
 842 0022 10BD     		pop	{r4, pc}
 843              	.L66:
 844              		.align	2
 845              	.L65:
 846 0024 00000000 		.word	FanController_fanControl
 847 0028 80C3C901 		.word	30000000
 848              		.cfi_endproc
 849              	.LFE19:
 850              		.size	FanController_GetActualSpeed, .-FanController_GetActualSpeed
 851              		.section	.text.FanController_SetSaturation,"ax",%progbits
 852              		.align	2
 853              		.global	FanController_SetSaturation
 854              		.code	16
 855              		.thumb_func
 856              		.type	FanController_SetSaturation, %function
 857              	FanController_SetSaturation:
 858              	.LFB20:
1127:Generated_Source\PSoC4/FanController.c **** 
1128:Generated_Source\PSoC4/FanController.c **** 
1129:Generated_Source\PSoC4/FanController.c **** #if (FanController_IS_AUTO_HARDWARE_MODE)
1130:Generated_Source\PSoC4/FanController.c ****     /******************************************************************************
1131:Generated_Source\PSoC4/FanController.c ****     * Function Name: FanController_OverrideAutomaticControl
1132:Generated_Source\PSoC4/FanController.c ****     *******************************************************************************
1133:Generated_Source\PSoC4/FanController.c ****     *
1134:Generated_Source\PSoC4/FanController.c ****     * Summary:
1135:Generated_Source\PSoC4/FanController.c ****     *  Allows firmware to take over fan control when hardware controlled fan mode
1136:Generated_Source\PSoC4/FanController.c ****     *  is enabled. That is, directly control fan speed using the SetDutyCycle() API.
1137:Generated_Source\PSoC4/FanController.c ****     *  This API is not available if firmware controlled fan mode is selected.
1138:Generated_Source\PSoC4/FanController.c ****     *
1139:Generated_Source\PSoC4/FanController.c ****     * Parameters:
1140:Generated_Source\PSoC4/FanController.c ****     *  uint8 override
1141:Generated_Source\PSoC4/FanController.c ****     *   non-zero = firmware assumes control of fans
1142:Generated_Source\PSoC4/FanController.c ****     *   zero     = hardware assumes control of fans
1143:Generated_Source\PSoC4/FanController.c ****     *
1144:Generated_Source\PSoC4/FanController.c ****     * Return:
1145:Generated_Source\PSoC4/FanController.c ****     *  None
1146:Generated_Source\PSoC4/FanController.c ****     *
1147:Generated_Source\PSoC4/FanController.c ****     * Side Effects:
1148:Generated_Source\PSoC4/FanController.c ****     *  None
1149:Generated_Source\PSoC4/FanController.c ****     ******************************************************************************/
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 37


1150:Generated_Source\PSoC4/FanController.c **** 
1151:Generated_Source\PSoC4/FanController.c ****     void FanController_OverrideAutomaticControl(uint8 override)
1152:Generated_Source\PSoC4/FanController.c ****                                 
1153:Generated_Source\PSoC4/FanController.c ****     {
1154:Generated_Source\PSoC4/FanController.c ****         uint8 interruptState = CyEnterCriticalSection();
1155:Generated_Source\PSoC4/FanController.c **** 
1156:Generated_Source\PSoC4/FanController.c ****         if(override != 0u)
1157:Generated_Source\PSoC4/FanController.c ****         {
1158:Generated_Source\PSoC4/FanController.c ****             FanController_GLOBAL_CONTROL_REG |= FanController_OVERRIDE;
1159:Generated_Source\PSoC4/FanController.c ****         }
1160:Generated_Source\PSoC4/FanController.c ****         else
1161:Generated_Source\PSoC4/FanController.c ****         {
1162:Generated_Source\PSoC4/FanController.c ****             FanController_GLOBAL_CONTROL_REG &= ((uint8) ~FanController_OVERRIDE);
1163:Generated_Source\PSoC4/FanController.c ****         }
1164:Generated_Source\PSoC4/FanController.c **** 
1165:Generated_Source\PSoC4/FanController.c ****         CyExitCriticalSection(interruptState);
1166:Generated_Source\PSoC4/FanController.c ****     }
1167:Generated_Source\PSoC4/FanController.c **** 
1168:Generated_Source\PSoC4/FanController.c **** #endif /* (FanController_IS_AUTO_HARDWARE_MODE) */
1169:Generated_Source\PSoC4/FanController.c **** 
1170:Generated_Source\PSoC4/FanController.c **** 
1171:Generated_Source\PSoC4/FanController.c **** #if(FanController_IS_AUTO_FIRMWARE_MODE)
1172:Generated_Source\PSoC4/FanController.c ****     /******************************************************************************
1173:Generated_Source\PSoC4/FanController.c ****     * Function Name: FanController_SetSaturation
1174:Generated_Source\PSoC4/FanController.c ****     *******************************************************************************
1175:Generated_Source\PSoC4/FanController.c ****     *
1176:Generated_Source\PSoC4/FanController.c ****     * Summary:
1177:Generated_Source\PSoC4/FanController.c ****     *  Changes the PID controller output saturation. This bounds the output PWM to
1178:Generated_Source\PSoC4/FanController.c ****     *  the fan and prevents what is known as integrator windup.
1179:Generated_Source\PSoC4/FanController.c ****     *
1180:Generated_Source\PSoC4/FanController.c ****     * Parameters:
1181:Generated_Source\PSoC4/FanController.c ****     *  uint8 fanNum : Valid range is 1..16 but should not exceed the number of fans
1182:Generated_Source\PSoC4/FanController.c ****     *                 in the system.
1183:Generated_Source\PSoC4/FanController.c ****     *  uint16 satH  : The upper threshold for saturation. Valid range is 0 to
1184:Generated_Source\PSoC4/FanController.c ****     *                 65535. A value of 0 represents 0% of the duty cycle. A value
1185:Generated_Source\PSoC4/FanController.c ****     *                 of 65535 represents 100% duty cycle.
1186:Generated_Source\PSoC4/FanController.c ****     *
1187:Generated_Source\PSoC4/FanController.c ****     *  uint16 satL  : The lower threshold for saturation. Valid range is 0 to
1188:Generated_Source\PSoC4/FanController.c ****     *                 65535. A value of 0 represents 0% of the duty cycle. A value
1189:Generated_Source\PSoC4/FanController.c ****     *                 of 65535 represents 100% duty cycle.
1190:Generated_Source\PSoC4/FanController.c ****     *
1191:Generated_Source\PSoC4/FanController.c ****     * Return:
1192:Generated_Source\PSoC4/FanController.c ****     *  None
1193:Generated_Source\PSoC4/FanController.c ****     *
1194:Generated_Source\PSoC4/FanController.c ****     * Side Effects:
1195:Generated_Source\PSoC4/FanController.c ****     *  None
1196:Generated_Source\PSoC4/FanController.c ****     *
1197:Generated_Source\PSoC4/FanController.c ****     ****************************************************************************/
1198:Generated_Source\PSoC4/FanController.c ****     void FanController_SetSaturation(uint8 fanNum, uint16 satH, uint16 satL)
1199:Generated_Source\PSoC4/FanController.c ****                                                     
1200:Generated_Source\PSoC4/FanController.c ****     {
 859              		.loc 1 1200 0
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 0
 862              		@ frame_needed = 0, uses_anonymous_args = 0
 863              	.LVL59:
 864 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 38


 865              		.cfi_def_cfa_offset 16
 866              		.cfi_offset 4, -16
 867              		.cfi_offset 5, -12
 868              		.cfi_offset 6, -8
 869              		.cfi_offset 14, -4
 870 0002 0400     		movs	r4, r0
1201:Generated_Source\PSoC4/FanController.c ****         uint8 interruptState;
1202:Generated_Source\PSoC4/FanController.c ****         uint32 tmpOutL;
1203:Generated_Source\PSoC4/FanController.c ****         uint32 tmpOutH;
1204:Generated_Source\PSoC4/FanController.c **** 
1205:Generated_Source\PSoC4/FanController.c ****         if((fanNum - 1u) < FanController_NUMBER_OF_FANS)
 871              		.loc 1 1205 0
 872 0004 0128     		cmp	r0, #1
 873 0006 0FD1     		bne	.L67
1206:Generated_Source\PSoC4/FanController.c ****         {
1207:Generated_Source\PSoC4/FanController.c ****             /* Calculate PID Constants for fan and store them into temporary variables to
1208:Generated_Source\PSoC4/FanController.c ****             * be later written to PID vars. This is done so to not disable interrupt for a
1209:Generated_Source\PSoC4/FanController.c ****             * long time.
1210:Generated_Source\PSoC4/FanController.c ****             */
1211:Generated_Source\PSoC4/FanController.c ****             tmpOutH = ((FanController_PWM_PERIOD * ((uint32) (((uint32) 1u) << FanController_PID_PO
 874              		.loc 1 1211 0
 875 0008 0B01     		lsls	r3, r1, #4
 876 000a 591A     		subs	r1, r3, r1
 877              	.LVL60:
 878 000c 8D02     		lsls	r5, r1, #10
 879              	.LVL61:
1212:Generated_Source\PSoC4/FanController.c ****                                            FanController_MAX_GAIN) * satH;
1213:Generated_Source\PSoC4/FanController.c ****             tmpOutL = ((FanController_PWM_PERIOD * ((uint32) (((uint32) 1u) << FanController_PID_PO
 880              		.loc 1 1213 0
 881 000e 1301     		lsls	r3, r2, #4
 882 0010 9A1A     		subs	r2, r3, r2
 883              	.LVL62:
 884 0012 9602     		lsls	r6, r2, #10
 885              	.LVL63:
1214:Generated_Source\PSoC4/FanController.c ****                                            FanController_MAX_GAIN) * satL;
1215:Generated_Source\PSoC4/FanController.c **** 
1216:Generated_Source\PSoC4/FanController.c ****             /* Disable interrupts while updating PID constants */
1217:Generated_Source\PSoC4/FanController.c ****             interruptState = CyEnterCriticalSection();
 886              		.loc 1 1217 0
 887 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 888              	.LVL64:
1218:Generated_Source\PSoC4/FanController.c **** 
1219:Generated_Source\PSoC4/FanController.c ****             FanController_outputSatH[fanNum - 1u] = tmpOutH;
 889              		.loc 1 1219 0
 890 0018 013C     		subs	r4, r4, #1
 891 001a A400     		lsls	r4, r4, #2
 892 001c 034B     		ldr	r3, .L69
 893 001e E550     		str	r5, [r4, r3]
1220:Generated_Source\PSoC4/FanController.c ****             FanController_outputSatL[fanNum - 1u] = tmpOutL;
 894              		.loc 1 1220 0
 895 0020 034B     		ldr	r3, .L69+4
 896 0022 E650     		str	r6, [r4, r3]
1221:Generated_Source\PSoC4/FanController.c **** 
1222:Generated_Source\PSoC4/FanController.c ****             CyExitCriticalSection(interruptState);
 897              		.loc 1 1222 0
 898 0024 FFF7FEFF 		bl	CyExitCriticalSection
 899              	.LVL65:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 39


 900              	.L67:
1223:Generated_Source\PSoC4/FanController.c ****         }
1224:Generated_Source\PSoC4/FanController.c ****     }
 901              		.loc 1 1224 0
 902              		@ sp needed
 903 0028 70BD     		pop	{r4, r5, r6, pc}
 904              	.L70:
 905 002a C046     		.align	2
 906              	.L69:
 907 002c 00000000 		.word	FanController_outputSatH
 908 0030 00000000 		.word	FanController_outputSatL
 909              		.cfi_endproc
 910              	.LFE20:
 911              		.size	FanController_SetSaturation, .-FanController_SetSaturation
 912              		.global	__aeabi_idiv
 913              		.section	.text.FanController_SetPID,"ax",%progbits
 914              		.align	2
 915              		.global	FanController_SetPID
 916              		.code	16
 917              		.thumb_func
 918              		.type	FanController_SetPID, %function
 919              	FanController_SetPID:
 920              	.LFB21:
1225:Generated_Source\PSoC4/FanController.c **** 
1226:Generated_Source\PSoC4/FanController.c **** 
1227:Generated_Source\PSoC4/FanController.c ****     /******************************************************************************
1228:Generated_Source\PSoC4/FanController.c ****     * Function Name: FanController_SetPID
1229:Generated_Source\PSoC4/FanController.c ****     *******************************************************************************
1230:Generated_Source\PSoC4/FanController.c ****     *
1231:Generated_Source\PSoC4/FanController.c ****     * Summary:
1232:Generated_Source\PSoC4/FanController.c ****     *  Changes the PID controller coefficients for the controlled fan. The
1233:Generated_Source\PSoC4/FanController.c ****     *  coefficients are integers that are proportional to the gain.
1234:Generated_Source\PSoC4/FanController.c ****     *
1235:Generated_Source\PSoC4/FanController.c ****     * Parameters:
1236:Generated_Source\PSoC4/FanController.c ****     *  uint8 fanNum : Valid range is 1..16 but should not exceed the number of fans
1237:Generated_Source\PSoC4/FanController.c ****     *                 in the system.
1238:Generated_Source\PSoC4/FanController.c ****     *  uint16 kp    : Proportional gain. Valid range is 0 to 65535. A value of 0
1239:Generated_Source\PSoC4/FanController.c ****     *                 represents 0% gain. A value of 65535 represents 100% gain.
1240:Generated_Source\PSoC4/FanController.c ****     *
1241:Generated_Source\PSoC4/FanController.c ****     *  uint16 ki    : Integral gain. Valid range is 0 to 65535. A value of 0
1242:Generated_Source\PSoC4/FanController.c ****     *                 represents 0% gain. A value of 65535 represents 100% gain.
1243:Generated_Source\PSoC4/FanController.c ****     *
1244:Generated_Source\PSoC4/FanController.c ****     *  uint16 kd    : Derivative gain. Valid range is 0 to 65535. A value of 0
1245:Generated_Source\PSoC4/FanController.c ****     *                 represents 0% gain. A value of 65535 represents 100% gain.
1246:Generated_Source\PSoC4/FanController.c ****     *
1247:Generated_Source\PSoC4/FanController.c ****     * Return:
1248:Generated_Source\PSoC4/FanController.c ****     *  None
1249:Generated_Source\PSoC4/FanController.c ****     *
1250:Generated_Source\PSoC4/FanController.c ****     * Side Effects:
1251:Generated_Source\PSoC4/FanController.c ****     *  None
1252:Generated_Source\PSoC4/FanController.c ****     *
1253:Generated_Source\PSoC4/FanController.c ****     ****************************************************************************/
1254:Generated_Source\PSoC4/FanController.c ****     void FanController_SetPID(uint8 fanNum, uint16 kp, uint16 ki, uint16 kd)
1255:Generated_Source\PSoC4/FanController.c ****                                                                         
1256:Generated_Source\PSoC4/FanController.c ****     {
 921              		.loc 1 1256 0
 922              		.cfi_startproc
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 40


 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925              	.LVL66:
 926 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 927              		.cfi_def_cfa_offset 24
 928              		.cfi_offset 3, -24
 929              		.cfi_offset 4, -20
 930              		.cfi_offset 5, -16
 931              		.cfi_offset 6, -12
 932              		.cfi_offset 7, -8
 933              		.cfi_offset 14, -4
 934 0002 0400     		movs	r4, r0
 935 0004 0E00     		movs	r6, r1
 936 0006 1D00     		movs	r5, r3
1257:Generated_Source\PSoC4/FanController.c ****         uint8 interruptState;
1258:Generated_Source\PSoC4/FanController.c ****         /* Variables for temporary storing of a calculated PID constants */
1259:Generated_Source\PSoC4/FanController.c ****         int16 tmpA1;
1260:Generated_Source\PSoC4/FanController.c ****         int16 tmpA2;
1261:Generated_Source\PSoC4/FanController.c ****         int16 tmpA3;
1262:Generated_Source\PSoC4/FanController.c **** 
1263:Generated_Source\PSoC4/FanController.c ****         if((fanNum - 1u) < FanController_NUMBER_OF_FANS)
 937              		.loc 1 1263 0
 938 0008 0128     		cmp	r0, #1
 939 000a 20D1     		bne	.L71
1264:Generated_Source\PSoC4/FanController.c ****         {
1265:Generated_Source\PSoC4/FanController.c ****             /* Calculate PID Constants for fan and store them into temporary variables to
1266:Generated_Source\PSoC4/FanController.c ****             * be later written to PID vars. This is done so to not disable interrupt for a
1267:Generated_Source\PSoC4/FanController.c ****             * long time.
1268:Generated_Source\PSoC4/FanController.c ****             */
1269:Generated_Source\PSoC4/FanController.c ****             tmpA1 = (int16) ((((int32) kp + (int32) ki + (int32) kd) * ((int32) FanController_GAIN_
 940              		.loc 1 1269 0
 941 000c 8818     		adds	r0, r1, r2
 942              	.LVL67:
 943 000e C018     		adds	r0, r0, r3
 944 0010 0003     		lsls	r0, r0, #12
 945 0012 0F49     		ldr	r1, .L73
 946              	.LVL68:
 947 0014 FFF7FEFF 		bl	__aeabi_idiv
 948              	.LVL69:
 949 0018 07B2     		sxth	r7, r0
 950              	.LVL70:
1270:Generated_Source\PSoC4/FanController.c ****                     (int32) FanController_MAX_GAIN);
1271:Generated_Source\PSoC4/FanController.c ****             tmpA2 = (int16) (((-((int32) kp + (2 * (int32) kd))) * ((int32) FanController_GAIN_MULT
 951              		.loc 1 1271 0
 952 001a 6B00     		lsls	r3, r5, #1
 953 001c F618     		adds	r6, r6, r3
 954 001e 3305     		lsls	r3, r6, #20
 955 0020 9E1B     		subs	r6, r3, r6
 956 0022 3003     		lsls	r0, r6, #12
 957 0024 0A49     		ldr	r1, .L73
 958 0026 FFF7FEFF 		bl	__aeabi_idiv
 959              	.LVL71:
 960 002a 06B2     		sxth	r6, r0
 961              	.LVL72:
1272:Generated_Source\PSoC4/FanController.c ****                     (int32) FanController_MAX_GAIN);
1273:Generated_Source\PSoC4/FanController.c ****             tmpA3 = (int16) ((((int32) kd) * ((int32) FanController_GAIN_MULTIPLIER )) /
 962              		.loc 1 1273 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 41


 963 002c 2803     		lsls	r0, r5, #12
 964 002e 0849     		ldr	r1, .L73
 965 0030 FFF7FEFF 		bl	__aeabi_idiv
 966              	.LVL73:
 967 0034 05B2     		sxth	r5, r0
 968              	.LVL74:
1274:Generated_Source\PSoC4/FanController.c ****                     (int32) FanController_MAX_GAIN);
1275:Generated_Source\PSoC4/FanController.c **** 
1276:Generated_Source\PSoC4/FanController.c ****             /* Disable interrupts while updating PID constants */
1277:Generated_Source\PSoC4/FanController.c ****             interruptState = CyEnterCriticalSection();
 969              		.loc 1 1277 0
 970 0036 FFF7FEFF 		bl	CyEnterCriticalSection
 971              	.LVL75:
1278:Generated_Source\PSoC4/FanController.c **** 
1279:Generated_Source\PSoC4/FanController.c ****             FanController_pidA1[fanNum - 1u] = tmpA1;
 972              		.loc 1 1279 0
 973 003a 013C     		subs	r4, r4, #1
 974 003c 6400     		lsls	r4, r4, #1
 975 003e 054B     		ldr	r3, .L73+4
 976 0040 E752     		strh	r7, [r4, r3]
1280:Generated_Source\PSoC4/FanController.c ****             FanController_pidA2[fanNum - 1u] = tmpA2;
 977              		.loc 1 1280 0
 978 0042 054B     		ldr	r3, .L73+8
 979 0044 E652     		strh	r6, [r4, r3]
1281:Generated_Source\PSoC4/FanController.c ****             FanController_pidA3[fanNum - 1u] = tmpA3;
 980              		.loc 1 1281 0
 981 0046 054B     		ldr	r3, .L73+12
 982 0048 E552     		strh	r5, [r4, r3]
1282:Generated_Source\PSoC4/FanController.c **** 
1283:Generated_Source\PSoC4/FanController.c ****             CyExitCriticalSection(interruptState);
 983              		.loc 1 1283 0
 984 004a FFF7FEFF 		bl	CyExitCriticalSection
 985              	.LVL76:
 986              	.L71:
1284:Generated_Source\PSoC4/FanController.c ****         }
1285:Generated_Source\PSoC4/FanController.c ****     }
 987              		.loc 1 1285 0
 988              		@ sp needed
 989 004e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 990              	.L74:
 991              		.align	2
 992              	.L73:
 993 0050 FFFF0000 		.word	65535
 994 0054 00000000 		.word	FanController_pidA1
 995 0058 00000000 		.word	FanController_pidA2
 996 005c 00000000 		.word	FanController_pidA3
 997              		.cfi_endproc
 998              	.LFE21:
 999              		.size	FanController_SetPID, .-FanController_SetPID
 1000              		.global	FanController_fanProperties
 1001              		.comm	FanController_fanControl,2,4
 1002              		.global	FanController_fanPwmInitRegs
 1003              		.global	FanController_fanDriverRegs
 1004              		.comm	FanController_desiredFansSpeed,2,4
 1005              		.comm	FanController_outputSatH,4,4
 1006              		.comm	FanController_outputSatL,4,4
 1007              		.comm	FanController_pidA3,2,4
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 42


 1008              		.comm	FanController_pidA2,2,4
 1009              		.comm	FanController_pidA1,2,4
 1010              		.global	FanController_stallStatus
 1011              		.global	FanController_alertMask
 1012              		.global	FanController_initVar
 1013              		.section	.rodata
 1014              		.align	2
 1015              		.type	FanController_fanPwmInitRegs, %object
 1016              		.size	FanController_fanPwmInitRegs, 4
 1017              	FanController_fanPwmInitRegs:
 1018 0000 14012040 		.word	1075839252
 1019              		.type	FanController_fanDriverRegs, %object
 1020              		.size	FanController_fanDriverRegs, 4
 1021              	FanController_fanDriverRegs:
 1022 0004 0C012040 		.word	1075839244
 1023              		.data
 1024              		.align	2
 1025              		.set	.LANCHOR1,. + 0
 1026              		.type	FanController_fanProperties, %object
 1027              		.size	FanController_fanProperties, 14
 1028              	FanController_fanProperties:
 1029 0000 9808     		.short	2200
 1030 0002 C012     		.short	4800
 1031 0004 7C15     		.short	5500
 1032 0006 1027     		.short	10000
 1033 0008 AD00     		.short	173
 1034 000a 9411     		.short	4500
 1035 000c 1C25     		.short	9500
 1036              		.bss
 1037              		.align	1
 1038              		.set	.LANCHOR0,. + 0
 1039              		.type	FanController_alertMask, %object
 1040              		.size	FanController_alertMask, 2
 1041              	FanController_alertMask:
 1042 0000 0000     		.space	2
 1043              		.type	FanController_stallStatus, %object
 1044              		.size	FanController_stallStatus, 2
 1045              	FanController_stallStatus:
 1046 0002 0000     		.space	2
 1047              		.type	FanController_initVar, %object
 1048              		.size	FanController_initVar, 1
 1049              	FanController_initVar:
 1050 0004 00       		.space	1
 1051              		.text
 1052              	.Letext0:
 1053              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1054              		.file 3 "Generated_Source\\PSoC4\\FanController.h"
 1055              		.file 4 "Generated_Source\\PSoC4\\FanController_FW_PWM1.h"
 1056              		.file 5 "Generated_Source\\PSoC4\\CyLib.h"
 1057              		.file 6 "Generated_Source\\PSoC4\\FanController_DataSend.h"
 1058              		.file 7 "Generated_Source\\PSoC4\\FanController_PID_ISR.h"
 1059              		.section	.debug_info,"",%progbits
 1060              	.Ldebug_info0:
 1061 0000 A4080000 		.4byte	0x8a4
 1062 0004 0400     		.2byte	0x4
 1063 0006 00000000 		.4byte	.Ldebug_abbrev0
 1064 000a 04       		.byte	0x4
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 43


 1065 000b 01       		.uleb128 0x1
 1066 000c BE000000 		.4byte	.LASF99
 1067 0010 0C       		.byte	0xc
 1068 0011 1F050000 		.4byte	.LASF100
 1069 0015 30020000 		.4byte	.LASF101
 1070 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1071 001d 00000000 		.4byte	0
 1072 0021 00000000 		.4byte	.Ldebug_line0
 1073 0025 02       		.uleb128 0x2
 1074 0026 01       		.byte	0x1
 1075 0027 06       		.byte	0x6
 1076 0028 C5010000 		.4byte	.LASF0
 1077 002c 02       		.uleb128 0x2
 1078 002d 01       		.byte	0x1
 1079 002e 08       		.byte	0x8
 1080 002f C5050000 		.4byte	.LASF1
 1081 0033 02       		.uleb128 0x2
 1082 0034 02       		.byte	0x2
 1083 0035 05       		.byte	0x5
 1084 0036 D3050000 		.4byte	.LASF2
 1085 003a 02       		.uleb128 0x2
 1086 003b 02       		.byte	0x2
 1087 003c 07       		.byte	0x7
 1088 003d AB030000 		.4byte	.LASF3
 1089 0041 02       		.uleb128 0x2
 1090 0042 04       		.byte	0x4
 1091 0043 05       		.byte	0x5
 1092 0044 F9010000 		.4byte	.LASF4
 1093 0048 02       		.uleb128 0x2
 1094 0049 04       		.byte	0x4
 1095 004a 07       		.byte	0x7
 1096 004b F6020000 		.4byte	.LASF5
 1097 004f 02       		.uleb128 0x2
 1098 0050 08       		.byte	0x8
 1099 0051 05       		.byte	0x5
 1100 0052 B7010000 		.4byte	.LASF6
 1101 0056 02       		.uleb128 0x2
 1102 0057 08       		.byte	0x8
 1103 0058 07       		.byte	0x7
 1104 0059 67010000 		.4byte	.LASF7
 1105 005d 03       		.uleb128 0x3
 1106 005e 04       		.byte	0x4
 1107 005f 05       		.byte	0x5
 1108 0060 696E7400 		.ascii	"int\000"
 1109 0064 02       		.uleb128 0x2
 1110 0065 04       		.byte	0x4
 1111 0066 07       		.byte	0x7
 1112 0067 DC020000 		.4byte	.LASF8
 1113 006b 04       		.uleb128 0x4
 1114 006c 2A020000 		.4byte	.LASF9
 1115 0070 02       		.byte	0x2
 1116 0071 FB01     		.2byte	0x1fb
 1117 0073 2C000000 		.4byte	0x2c
 1118 0077 04       		.uleb128 0x4
 1119 0078 1A000000 		.4byte	.LASF10
 1120 007c 02       		.byte	0x2
 1121 007d FC01     		.2byte	0x1fc
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 44


 1122 007f 3A000000 		.4byte	0x3a
 1123 0083 04       		.uleb128 0x4
 1124 0084 7E020000 		.4byte	.LASF11
 1125 0088 02       		.byte	0x2
 1126 0089 FD01     		.2byte	0x1fd
 1127 008b 48000000 		.4byte	0x48
 1128 008f 04       		.uleb128 0x4
 1129 0090 24070000 		.4byte	.LASF12
 1130 0094 02       		.byte	0x2
 1131 0095 FF01     		.2byte	0x1ff
 1132 0097 33000000 		.4byte	0x33
 1133 009b 04       		.uleb128 0x4
 1134 009c F3010000 		.4byte	.LASF13
 1135 00a0 02       		.byte	0x2
 1136 00a1 0002     		.2byte	0x200
 1137 00a3 41000000 		.4byte	0x41
 1138 00a7 02       		.uleb128 0x2
 1139 00a8 04       		.byte	0x4
 1140 00a9 04       		.byte	0x4
 1141 00aa 9D050000 		.4byte	.LASF14
 1142 00ae 02       		.uleb128 0x2
 1143 00af 08       		.byte	0x8
 1144 00b0 04       		.byte	0x4
 1145 00b1 77070000 		.4byte	.LASF15
 1146 00b5 02       		.uleb128 0x2
 1147 00b6 01       		.byte	0x1
 1148 00b7 08       		.byte	0x8
 1149 00b8 6C060000 		.4byte	.LASF16
 1150 00bc 04       		.uleb128 0x4
 1151 00bd C0050000 		.4byte	.LASF17
 1152 00c1 02       		.byte	0x2
 1153 00c2 A502     		.2byte	0x2a5
 1154 00c4 C8000000 		.4byte	0xc8
 1155 00c8 05       		.uleb128 0x5
 1156 00c9 6B000000 		.4byte	0x6b
 1157 00cd 04       		.uleb128 0x4
 1158 00ce 07020000 		.4byte	.LASF18
 1159 00d2 02       		.byte	0x2
 1160 00d3 A602     		.2byte	0x2a6
 1161 00d5 D9000000 		.4byte	0xd9
 1162 00d9 05       		.uleb128 0x5
 1163 00da 77000000 		.4byte	0x77
 1164 00de 04       		.uleb128 0x4
 1165 00df 30040000 		.4byte	.LASF19
 1166 00e3 02       		.byte	0x2
 1167 00e4 A702     		.2byte	0x2a7
 1168 00e6 EA000000 		.4byte	0xea
 1169 00ea 05       		.uleb128 0x5
 1170 00eb 83000000 		.4byte	0x83
 1171 00ef 06       		.uleb128 0x6
 1172 00f0 02       		.byte	0x2
 1173 00f1 03       		.byte	0x3
 1174 00f2 DD       		.byte	0xdd
 1175 00f3 04010000 		.4byte	0x104
 1176 00f7 07       		.uleb128 0x7
 1177 00f8 0D000000 		.4byte	.LASF22
 1178 00fc 03       		.byte	0x3
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 45


 1179 00fd E8       		.byte	0xe8
 1180 00fe 04010000 		.4byte	0x104
 1181 0102 00       		.byte	0
 1182 0103 00       		.byte	0
 1183 0104 08       		.uleb128 0x8
 1184 0105 77000000 		.4byte	0x77
 1185 0109 14010000 		.4byte	0x114
 1186 010d 09       		.uleb128 0x9
 1187 010e 14010000 		.4byte	0x114
 1188 0112 00       		.byte	0
 1189 0113 00       		.byte	0
 1190 0114 02       		.uleb128 0x2
 1191 0115 04       		.byte	0x4
 1192 0116 07       		.byte	0x7
 1193 0117 61040000 		.4byte	.LASF20
 1194 011b 0A       		.uleb128 0xa
 1195 011c 99040000 		.4byte	.LASF21
 1196 0120 03       		.byte	0x3
 1197 0121 EB       		.byte	0xeb
 1198 0122 EF000000 		.4byte	0xef
 1199 0126 06       		.uleb128 0x6
 1200 0127 0E       		.byte	0xe
 1201 0128 03       		.byte	0x3
 1202 0129 EE       		.byte	0xee
 1203 012a 83010000 		.4byte	0x183
 1204 012e 07       		.uleb128 0x7
 1205 012f 20040000 		.4byte	.LASF23
 1206 0133 03       		.byte	0x3
 1207 0134 F0       		.byte	0xf0
 1208 0135 77000000 		.4byte	0x77
 1209 0139 00       		.byte	0
 1210 013a 07       		.uleb128 0x7
 1211 013b 25040000 		.4byte	.LASF24
 1212 013f 03       		.byte	0x3
 1213 0140 F1       		.byte	0xf1
 1214 0141 77000000 		.4byte	0x77
 1215 0145 02       		.byte	0x2
 1216 0146 07       		.uleb128 0x7
 1217 0147 5B040000 		.4byte	.LASF25
 1218 014b 03       		.byte	0x3
 1219 014c F2       		.byte	0xf2
 1220 014d 77000000 		.4byte	0x77
 1221 0151 04       		.byte	0x4
 1222 0152 07       		.uleb128 0x7
 1223 0153 BE030000 		.4byte	.LASF26
 1224 0157 03       		.byte	0x3
 1225 0158 F3       		.byte	0xf3
 1226 0159 77000000 		.4byte	0x77
 1227 015d 06       		.byte	0x6
 1228 015e 07       		.uleb128 0x7
 1229 015f E9020000 		.4byte	.LASF27
 1230 0163 03       		.byte	0x3
 1231 0164 F4       		.byte	0xf4
 1232 0165 77000000 		.4byte	0x77
 1233 0169 08       		.byte	0x8
 1234 016a 07       		.uleb128 0x7
 1235 016b 21000000 		.4byte	.LASF28
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 46


 1236 016f 03       		.byte	0x3
 1237 0170 F5       		.byte	0xf5
 1238 0171 77000000 		.4byte	0x77
 1239 0175 0A       		.byte	0xa
 1240 0176 07       		.uleb128 0x7
 1241 0177 52040000 		.4byte	.LASF29
 1242 017b 03       		.byte	0x3
 1243 017c F6       		.byte	0xf6
 1244 017d 77000000 		.4byte	0x77
 1245 0181 0C       		.byte	0xc
 1246 0182 00       		.byte	0
 1247 0183 0A       		.uleb128 0xa
 1248 0184 46050000 		.4byte	.LASF30
 1249 0188 03       		.byte	0x3
 1250 0189 F7       		.byte	0xf7
 1251 018a 26010000 		.4byte	0x126
 1252 018e 0B       		.uleb128 0xb
 1253 018f 04       		.byte	0x4
 1254 0190 03       		.byte	0x3
 1255 0191 2301     		.2byte	0x123
 1256 0193 A5010000 		.4byte	0x1a5
 1257 0197 0C       		.uleb128 0xc
 1258 0198 AA000000 		.4byte	.LASF31
 1259 019c 03       		.byte	0x3
 1260 019d 2501     		.2byte	0x125
 1261 019f 83000000 		.4byte	0x83
 1262 01a3 00       		.byte	0
 1263 01a4 00       		.byte	0
 1264 01a5 04       		.uleb128 0x4
 1265 01a6 BA020000 		.4byte	.LASF32
 1266 01aa 03       		.byte	0x3
 1267 01ab 2601     		.2byte	0x126
 1268 01ad 8E010000 		.4byte	0x18e
 1269 01b1 0B       		.uleb128 0xb
 1270 01b2 04       		.byte	0x4
 1271 01b3 03       		.byte	0x3
 1272 01b4 2801     		.2byte	0x128
 1273 01b6 C8010000 		.4byte	0x1c8
 1274 01ba 0C       		.uleb128 0xc
 1275 01bb AA010000 		.4byte	.LASF33
 1276 01bf 03       		.byte	0x3
 1277 01c0 2A01     		.2byte	0x12a
 1278 01c2 83000000 		.4byte	0x83
 1279 01c6 00       		.byte	0
 1280 01c7 00       		.byte	0
 1281 01c8 04       		.uleb128 0x4
 1282 01c9 76040000 		.4byte	.LASF34
 1283 01cd 03       		.byte	0x3
 1284 01ce 2B01     		.2byte	0x12b
 1285 01d0 B1010000 		.4byte	0x1b1
 1286 01d4 02       		.uleb128 0x2
 1287 01d5 08       		.byte	0x8
 1288 01d6 04       		.byte	0x4
 1289 01d7 6A040000 		.4byte	.LASF35
 1290 01db 0D       		.uleb128 0xd
 1291 01dc 66000000 		.4byte	.LASF36
 1292 01e0 01       		.byte	0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 47


 1293 01e1 B101     		.2byte	0x1b1
 1294 01e3 00000000 		.4byte	.LFB5
 1295 01e7 2C000000 		.4byte	.LFE5-.LFB5
 1296 01eb 01       		.uleb128 0x1
 1297 01ec 9C       		.byte	0x9c
 1298 01ed 1D020000 		.4byte	0x21d
 1299 01f1 0E       		.uleb128 0xe
 1300 01f2 E4010000 		.4byte	.LASF38
 1301 01f6 01       		.byte	0x1
 1302 01f7 B301     		.2byte	0x1b3
 1303 01f9 6B000000 		.4byte	0x6b
 1304 01fd 00000000 		.4byte	.LLST0
 1305 0201 0F       		.uleb128 0xf
 1306 0202 06000000 		.4byte	.LVL0
 1307 0206 57080000 		.4byte	0x857
 1308 020a 0F       		.uleb128 0xf
 1309 020b 10000000 		.4byte	.LVL1
 1310 020f 63080000 		.4byte	0x863
 1311 0213 0F       		.uleb128 0xf
 1312 0214 20000000 		.4byte	.LVL2
 1313 0218 6E080000 		.4byte	0x86e
 1314 021c 00       		.byte	0
 1315 021d 0D       		.uleb128 0xd
 1316 021e A0020000 		.4byte	.LASF37
 1317 0222 01       		.byte	0x1
 1318 0223 F501     		.2byte	0x1f5
 1319 0225 00000000 		.4byte	.LFB6
 1320 0229 1C000000 		.4byte	.LFE6-.LFB6
 1321 022d 01       		.uleb128 0x1
 1322 022e 9C       		.byte	0x9c
 1323 022f 56020000 		.4byte	0x256
 1324 0233 0E       		.uleb128 0xe
 1325 0234 E4010000 		.4byte	.LASF38
 1326 0238 01       		.byte	0x1
 1327 0239 F701     		.2byte	0x1f7
 1328 023b 6B000000 		.4byte	0x6b
 1329 023f 13000000 		.4byte	.LLST1
 1330 0243 0F       		.uleb128 0xf
 1331 0244 06000000 		.4byte	.LVL3
 1332 0248 63080000 		.4byte	0x863
 1333 024c 0F       		.uleb128 0xf
 1334 024d 16000000 		.4byte	.LVL4
 1335 0251 6E080000 		.4byte	0x86e
 1336 0255 00       		.byte	0
 1337 0256 0D       		.uleb128 0xd
 1338 0257 08030000 		.4byte	.LASF39
 1339 025b 01       		.byte	0x1
 1340 025c 1102     		.2byte	0x211
 1341 025e 00000000 		.4byte	.LFB7
 1342 0262 1C000000 		.4byte	.LFE7-.LFB7
 1343 0266 01       		.uleb128 0x1
 1344 0267 9C       		.byte	0x9c
 1345 0268 8F020000 		.4byte	0x28f
 1346 026c 0E       		.uleb128 0xe
 1347 026d E4010000 		.4byte	.LASF38
 1348 0271 01       		.byte	0x1
 1349 0272 1302     		.2byte	0x213
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 48


 1350 0274 6B000000 		.4byte	0x6b
 1351 0278 26000000 		.4byte	.LLST2
 1352 027c 0F       		.uleb128 0xf
 1353 027d 06000000 		.4byte	.LVL5
 1354 0281 63080000 		.4byte	0x863
 1355 0285 0F       		.uleb128 0xf
 1356 0286 14000000 		.4byte	.LVL6
 1357 028a 6E080000 		.4byte	0x86e
 1358 028e 00       		.byte	0
 1359 028f 10       		.uleb128 0x10
 1360 0290 B8040000 		.4byte	.LASF40
 1361 0294 01       		.byte	0x1
 1362 0295 A3       		.byte	0xa3
 1363 0296 00000000 		.4byte	.LFB3
 1364 029a 18000000 		.4byte	.LFE3-.LFB3
 1365 029e 01       		.uleb128 0x1
 1366 029f 9C       		.byte	0x9c
 1367 02a0 B7020000 		.4byte	0x2b7
 1368 02a4 0F       		.uleb128 0xf
 1369 02a5 0C000000 		.4byte	.LVL7
 1370 02a9 56020000 		.4byte	0x256
 1371 02ad 0F       		.uleb128 0xf
 1372 02ae 10000000 		.4byte	.LVL8
 1373 02b2 79080000 		.4byte	0x879
 1374 02b6 00       		.byte	0
 1375 02b7 0D       		.uleb128 0xd
 1376 02b8 85020000 		.4byte	.LASF41
 1377 02bc 01       		.byte	0x1
 1378 02bd 2F02     		.2byte	0x22f
 1379 02bf 00000000 		.4byte	.LFB8
 1380 02c3 24000000 		.4byte	.LFE8-.LFB8
 1381 02c7 01       		.uleb128 0x1
 1382 02c8 9C       		.byte	0x9c
 1383 02c9 00030000 		.4byte	0x300
 1384 02cd 11       		.uleb128 0x11
 1385 02ce 64020000 		.4byte	.LASF43
 1386 02d2 01       		.byte	0x1
 1387 02d3 2F02     		.2byte	0x22f
 1388 02d5 6B000000 		.4byte	0x6b
 1389 02d9 39000000 		.4byte	.LLST3
 1390 02dd 0E       		.uleb128 0xe
 1391 02de E4010000 		.4byte	.LASF38
 1392 02e2 01       		.byte	0x1
 1393 02e3 3102     		.2byte	0x231
 1394 02e5 6B000000 		.4byte	0x6b
 1395 02e9 5A000000 		.4byte	.LLST4
 1396 02ed 0F       		.uleb128 0xf
 1397 02ee 08000000 		.4byte	.LVL10
 1398 02f2 63080000 		.4byte	0x863
 1399 02f6 0F       		.uleb128 0xf
 1400 02f7 1C000000 		.4byte	.LVL11
 1401 02fb 6E080000 		.4byte	0x86e
 1402 02ff 00       		.byte	0
 1403 0300 12       		.uleb128 0x12
 1404 0301 CB040000 		.4byte	.LASF45
 1405 0305 01       		.byte	0x1
 1406 0306 4F02     		.2byte	0x24f
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 49


 1407 0308 6B000000 		.4byte	0x6b
 1408 030c 00000000 		.4byte	.LFB9
 1409 0310 10000000 		.4byte	.LFE9-.LFB9
 1410 0314 01       		.uleb128 0x1
 1411 0315 9C       		.byte	0x9c
 1412 0316 0D       		.uleb128 0xd
 1413 0317 AB060000 		.4byte	.LASF42
 1414 031b 01       		.byte	0x1
 1415 031c 6B02     		.2byte	0x26b
 1416 031e 00000000 		.4byte	.LFB10
 1417 0322 0C000000 		.4byte	.LFE10-.LFB10
 1418 0326 01       		.uleb128 0x1
 1419 0327 9C       		.byte	0x9c
 1420 0328 3B030000 		.4byte	0x33b
 1421 032c 13       		.uleb128 0x13
 1422 032d 62060000 		.4byte	.LASF44
 1423 0331 01       		.byte	0x1
 1424 0332 6B02     		.2byte	0x26b
 1425 0334 77000000 		.4byte	0x77
 1426 0338 01       		.uleb128 0x1
 1427 0339 50       		.byte	0x50
 1428 033a 00       		.byte	0
 1429 033b 14       		.uleb128 0x14
 1430 033c 8F000000 		.4byte	.LASF47
 1431 0340 01       		.byte	0x1
 1432 0341 8E02     		.2byte	0x28e
 1433 0343 77000000 		.4byte	0x77
 1434 0347 00000000 		.4byte	.LFB11
 1435 034b 0C000000 		.4byte	.LFE11-.LFB11
 1436 034f 01       		.uleb128 0x1
 1437 0350 9C       		.byte	0x9c
 1438 0351 64030000 		.4byte	0x364
 1439 0355 15       		.uleb128 0x15
 1440 0356 62060000 		.4byte	.LASF44
 1441 035a 01       		.byte	0x1
 1442 035b 9002     		.2byte	0x290
 1443 035d 77000000 		.4byte	0x77
 1444 0361 01       		.uleb128 0x1
 1445 0362 50       		.byte	0x50
 1446 0363 00       		.byte	0
 1447 0364 12       		.uleb128 0x12
 1448 0365 A3050000 		.4byte	.LASF46
 1449 0369 01       		.byte	0x1
 1450 036a B902     		.2byte	0x2b9
 1451 036c 6B000000 		.4byte	0x6b
 1452 0370 00000000 		.4byte	.LFB12
 1453 0374 10000000 		.4byte	.LFE12-.LFB12
 1454 0378 01       		.uleb128 0x1
 1455 0379 9C       		.byte	0x9c
 1456 037a 14       		.uleb128 0x14
 1457 037b 12060000 		.4byte	.LASF48
 1458 037f 01       		.byte	0x1
 1459 0380 D502     		.2byte	0x2d5
 1460 0382 77000000 		.4byte	0x77
 1461 0386 00000000 		.4byte	.LFB13
 1462 038a 1C000000 		.4byte	.LFE13-.LFB13
 1463 038e 01       		.uleb128 0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 50


 1464 038f 9C       		.byte	0x9c
 1465 0390 A3030000 		.4byte	0x3a3
 1466 0394 15       		.uleb128 0x15
 1467 0395 DF030000 		.4byte	.LASF49
 1468 0399 01       		.byte	0x1
 1469 039a D702     		.2byte	0x2d7
 1470 039c 77000000 		.4byte	0x77
 1471 03a0 01       		.uleb128 0x1
 1472 03a1 50       		.byte	0x50
 1473 03a2 00       		.byte	0
 1474 03a3 14       		.uleb128 0x14
 1475 03a4 57070000 		.4byte	.LASF50
 1476 03a8 01       		.byte	0x1
 1477 03a9 0803     		.2byte	0x308
 1478 03ab 77000000 		.4byte	0x77
 1479 03af 00000000 		.4byte	.LFB14
 1480 03b3 10000000 		.4byte	.LFE14-.LFB14
 1481 03b7 01       		.uleb128 0x1
 1482 03b8 9C       		.byte	0x9c
 1483 03b9 CC030000 		.4byte	0x3cc
 1484 03bd 15       		.uleb128 0x15
 1485 03be 32060000 		.4byte	.LASF51
 1486 03c2 01       		.byte	0x1
 1487 03c3 0A03     		.2byte	0x30a
 1488 03c5 77000000 		.4byte	0x77
 1489 03c9 01       		.uleb128 0x1
 1490 03ca 50       		.byte	0x50
 1491 03cb 00       		.byte	0
 1492 03cc 16       		.uleb128 0x16
 1493 03cd C4030000 		.4byte	.LASF52
 1494 03d1 01       		.byte	0x1
 1495 03d2 4103     		.2byte	0x341
 1496 03d4 00000000 		.4byte	.LFB15
 1497 03d8 28000000 		.4byte	.LFE15-.LFB15
 1498 03dc 01       		.uleb128 0x1
 1499 03dd 9C       		.byte	0x9c
 1500 03de 13040000 		.4byte	0x413
 1501 03e2 11       		.uleb128 0x11
 1502 03e3 F2030000 		.4byte	.LASF53
 1503 03e7 01       		.byte	0x1
 1504 03e8 4103     		.2byte	0x341
 1505 03ea 6B000000 		.4byte	0x6b
 1506 03ee 6D000000 		.4byte	.LLST5
 1507 03f2 11       		.uleb128 0x11
 1508 03f3 5C000000 		.4byte	.LASF54
 1509 03f7 01       		.byte	0x1
 1510 03f8 4103     		.2byte	0x341
 1511 03fa 77000000 		.4byte	0x77
 1512 03fe 8E000000 		.4byte	.LLST6
 1513 0402 0E       		.uleb128 0xe
 1514 0403 D1010000 		.4byte	.LASF55
 1515 0407 01       		.byte	0x1
 1516 0408 4403     		.2byte	0x344
 1517 040a 83000000 		.4byte	0x83
 1518 040e AF000000 		.4byte	.LLST7
 1519 0412 00       		.byte	0
 1520 0413 17       		.uleb128 0x17
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 51


 1521 0414 F0060000 		.4byte	.LASF56
 1522 0418 01       		.byte	0x1
 1523 0419 7303     		.2byte	0x373
 1524 041b 77000000 		.4byte	0x77
 1525 041f 00000000 		.4byte	.LFB16
 1526 0423 28000000 		.4byte	.LFE16-.LFB16
 1527 0427 01       		.uleb128 0x1
 1528 0428 9C       		.byte	0x9c
 1529 0429 4E040000 		.4byte	0x44e
 1530 042d 11       		.uleb128 0x11
 1531 042e F2030000 		.4byte	.LASF53
 1532 0432 01       		.byte	0x1
 1533 0433 7303     		.2byte	0x373
 1534 0435 6B000000 		.4byte	0x6b
 1535 0439 C2000000 		.4byte	.LLST8
 1536 043d 0E       		.uleb128 0xe
 1537 043e 71060000 		.4byte	.LASF57
 1538 0442 01       		.byte	0x1
 1539 0443 7503     		.2byte	0x375
 1540 0445 77000000 		.4byte	0x77
 1541 0449 FC000000 		.4byte	.LLST9
 1542 044d 00       		.byte	0
 1543 044e 0D       		.uleb128 0xd
 1544 044f 83070000 		.4byte	.LASF58
 1545 0453 01       		.byte	0x1
 1546 0454 A903     		.2byte	0x3a9
 1547 0456 00000000 		.4byte	.LFB17
 1548 045a 14000000 		.4byte	.LFE17-.LFB17
 1549 045e 01       		.uleb128 0x1
 1550 045f 9C       		.byte	0x9c
 1551 0460 9B040000 		.4byte	0x49b
 1552 0464 11       		.uleb128 0x11
 1553 0465 6E020000 		.4byte	.LASF59
 1554 0469 01       		.byte	0x1
 1555 046a A903     		.2byte	0x3a9
 1556 046c 6B000000 		.4byte	0x6b
 1557 0470 32010000 		.4byte	.LLST10
 1558 0474 18       		.uleb128 0x18
 1559 0475 72706D00 		.ascii	"rpm\000"
 1560 0479 01       		.byte	0x1
 1561 047a A903     		.2byte	0x3a9
 1562 047c 77000000 		.4byte	0x77
 1563 0480 01       		.uleb128 0x1
 1564 0481 51       		.byte	0x51
 1565 0482 19       		.uleb128 0x19
 1566 0483 7E010000 		.4byte	.LASF60
 1567 0487 01       		.byte	0x1
 1568 0488 AB03     		.2byte	0x3ab
 1569 048a 83000000 		.4byte	0x83
 1570 048e 19       		.uleb128 0x19
 1571 048f 00000000 		.4byte	.LASF61
 1572 0493 01       		.byte	0x1
 1573 0494 AC03     		.2byte	0x3ac
 1574 0496 77000000 		.4byte	0x77
 1575 049a 00       		.byte	0
 1576 049b 10       		.uleb128 0x10
 1577 049c 2A070000 		.4byte	.LASF62
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 52


 1578 04a0 01       		.byte	0x1
 1579 04a1 DE       		.byte	0xde
 1580 04a2 00000000 		.4byte	.LFB4
 1581 04a6 04010000 		.4byte	.LFE4-.LFB4
 1582 04aa 01       		.uleb128 0x1
 1583 04ab 9C       		.byte	0x9c
 1584 04ac 49050000 		.4byte	0x549
 1585 04b0 1A       		.uleb128 0x1a
 1586 04b1 EB030000 		.4byte	.LASF63
 1587 04b5 01       		.byte	0x1
 1588 04b6 E0       		.byte	0xe0
 1589 04b7 6B000000 		.4byte	0x6b
 1590 04bb 53010000 		.4byte	.LLST11
 1591 04bf 1A       		.uleb128 0x1a
 1592 04c0 E4010000 		.4byte	.LASF38
 1593 04c4 01       		.byte	0x1
 1594 04c5 E1       		.byte	0xe1
 1595 04c6 6B000000 		.4byte	0x6b
 1596 04ca AA010000 		.4byte	.LLST12
 1597 04ce 0F       		.uleb128 0xf
 1598 04cf 06000000 		.4byte	.LVL30
 1599 04d3 85080000 		.4byte	0x885
 1600 04d7 1B       		.uleb128 0x1b
 1601 04d8 28000000 		.4byte	.LVL32
 1602 04dc CC030000 		.4byte	0x3cc
 1603 04e0 EB040000 		.4byte	0x4eb
 1604 04e4 1C       		.uleb128 0x1c
 1605 04e5 01       		.uleb128 0x1
 1606 04e6 50       		.byte	0x50
 1607 04e7 02       		.uleb128 0x2
 1608 04e8 75       		.byte	0x75
 1609 04e9 00       		.sleb128 0
 1610 04ea 00       		.byte	0
 1611 04eb 1B       		.uleb128 0x1b
 1612 04ec 36000000 		.4byte	.LVL34
 1613 04f0 4E040000 		.4byte	0x44e
 1614 04f4 FF040000 		.4byte	0x4ff
 1615 04f8 1C       		.uleb128 0x1c
 1616 04f9 01       		.uleb128 0x1
 1617 04fa 50       		.byte	0x50
 1618 04fb 02       		.uleb128 0x2
 1619 04fc 75       		.byte	0x75
 1620 04fd 00       		.sleb128 0
 1621 04fe 00       		.byte	0
 1622 04ff 0F       		.uleb128 0xf
 1623 0500 40000000 		.4byte	.LVL36
 1624 0504 63080000 		.4byte	0x863
 1625 0508 0F       		.uleb128 0xf
 1626 0509 58000000 		.4byte	.LVL37
 1627 050d 6E080000 		.4byte	0x86e
 1628 0511 1B       		.uleb128 0x1b
 1629 0512 76000000 		.4byte	.LVL38
 1630 0516 16030000 		.4byte	0x316
 1631 051a 24050000 		.4byte	0x524
 1632 051e 1C       		.uleb128 0x1c
 1633 051f 01       		.uleb128 0x1
 1634 0520 50       		.byte	0x50
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 53


 1635 0521 01       		.uleb128 0x1
 1636 0522 31       		.byte	0x31
 1637 0523 00       		.byte	0
 1638 0524 0F       		.uleb128 0xf
 1639 0525 7E000000 		.4byte	.LVL40
 1640 0529 63080000 		.4byte	0x863
 1641 052d 0F       		.uleb128 0xf
 1642 052e A8000000 		.4byte	.LVL41
 1643 0532 6E080000 		.4byte	0x86e
 1644 0536 0F       		.uleb128 0xf
 1645 0537 B6000000 		.4byte	.LVL44
 1646 053b 91080000 		.4byte	0x891
 1647 053f 0F       		.uleb128 0xf
 1648 0540 BC000000 		.4byte	.LVL45
 1649 0544 9C080000 		.4byte	0x89c
 1650 0548 00       		.byte	0
 1651 0549 10       		.uleb128 0x10
 1652 054a 7B000000 		.4byte	.LASF64
 1653 054e 01       		.byte	0x1
 1654 054f 84       		.byte	0x84
 1655 0550 00000000 		.4byte	.LFB2
 1656 0554 20000000 		.4byte	.LFE2-.LFB2
 1657 0558 01       		.uleb128 0x1
 1658 0559 9C       		.byte	0x9c
 1659 055a 71050000 		.4byte	0x571
 1660 055e 0F       		.uleb128 0xf
 1661 055f 0E000000 		.4byte	.LVL47
 1662 0563 9B040000 		.4byte	0x49b
 1663 0567 0F       		.uleb128 0xf
 1664 0568 18000000 		.4byte	.LVL48
 1665 056c DB010000 		.4byte	0x1db
 1666 0570 00       		.byte	0
 1667 0571 14       		.uleb128 0x14
 1668 0572 02040000 		.4byte	.LASF65
 1669 0576 01       		.byte	0x1
 1670 0577 1B04     		.2byte	0x41b
 1671 0579 77000000 		.4byte	0x77
 1672 057d 00000000 		.4byte	.LFB18
 1673 0581 10000000 		.4byte	.LFE18-.LFB18
 1674 0585 01       		.uleb128 0x1
 1675 0586 9C       		.byte	0x9c
 1676 0587 9C050000 		.4byte	0x59c
 1677 058b 11       		.uleb128 0x11
 1678 058c 6E020000 		.4byte	.LASF59
 1679 0590 01       		.byte	0x1
 1680 0591 1B04     		.2byte	0x41b
 1681 0593 6B000000 		.4byte	0x6b
 1682 0597 C8010000 		.4byte	.LLST13
 1683 059b 00       		.byte	0
 1684 059c 17       		.uleb128 0x17
 1685 059d 29000000 		.4byte	.LASF66
 1686 05a1 01       		.byte	0x1
 1687 05a2 3804     		.2byte	0x438
 1688 05a4 77000000 		.4byte	0x77
 1689 05a8 00000000 		.4byte	.LFB19
 1690 05ac 2C000000 		.4byte	.LFE19-.LFB19
 1691 05b0 01       		.uleb128 0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 54


 1692 05b1 9C       		.byte	0x9c
 1693 05b2 D7050000 		.4byte	0x5d7
 1694 05b6 11       		.uleb128 0x11
 1695 05b7 6E020000 		.4byte	.LASF59
 1696 05bb 01       		.byte	0x1
 1697 05bc 3804     		.2byte	0x438
 1698 05be 6B000000 		.4byte	0x6b
 1699 05c2 E9010000 		.4byte	.LLST14
 1700 05c6 0E       		.uleb128 0xe
 1701 05c7 E4060000 		.4byte	.LASF67
 1702 05cb 01       		.byte	0x1
 1703 05cc 3A04     		.2byte	0x43a
 1704 05ce 77000000 		.4byte	0x77
 1705 05d2 23020000 		.4byte	.LLST15
 1706 05d6 00       		.byte	0
 1707 05d7 0D       		.uleb128 0xd
 1708 05d8 3E060000 		.4byte	.LASF68
 1709 05dc 01       		.byte	0x1
 1710 05dd AE04     		.2byte	0x4ae
 1711 05df 00000000 		.4byte	.LFB20
 1712 05e3 34000000 		.4byte	.LFE20-.LFB20
 1713 05e7 01       		.uleb128 0x1
 1714 05e8 9C       		.byte	0x9c
 1715 05e9 60060000 		.4byte	0x660
 1716 05ed 11       		.uleb128 0x11
 1717 05ee FF040000 		.4byte	.LASF69
 1718 05f2 01       		.byte	0x1
 1719 05f3 AE04     		.2byte	0x4ae
 1720 05f5 6B000000 		.4byte	0x6b
 1721 05f9 59020000 		.4byte	.LLST16
 1722 05fd 11       		.uleb128 0x11
 1723 05fe 7E070000 		.4byte	.LASF70
 1724 0602 01       		.byte	0x1
 1725 0603 AE04     		.2byte	0x4ae
 1726 0605 77000000 		.4byte	0x77
 1727 0609 7A020000 		.4byte	.LLST17
 1728 060d 11       		.uleb128 0x11
 1729 060e 02020000 		.4byte	.LASF71
 1730 0612 01       		.byte	0x1
 1731 0613 AE04     		.2byte	0x4ae
 1732 0615 77000000 		.4byte	0x77
 1733 0619 9B020000 		.4byte	.LLST18
 1734 061d 0E       		.uleb128 0xe
 1735 061e E4010000 		.4byte	.LASF38
 1736 0622 01       		.byte	0x1
 1737 0623 B104     		.2byte	0x4b1
 1738 0625 6B000000 		.4byte	0x6b
 1739 0629 BC020000 		.4byte	.LLST19
 1740 062d 0E       		.uleb128 0xe
 1741 062e 5A060000 		.4byte	.LASF72
 1742 0632 01       		.byte	0x1
 1743 0633 B204     		.2byte	0x4b2
 1744 0635 83000000 		.4byte	0x83
 1745 0639 CF020000 		.4byte	.LLST20
 1746 063d 0E       		.uleb128 0xe
 1747 063e DC010000 		.4byte	.LASF73
 1748 0642 01       		.byte	0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 55


 1749 0643 B304     		.2byte	0x4b3
 1750 0645 83000000 		.4byte	0x83
 1751 0649 E2020000 		.4byte	.LLST21
 1752 064d 0F       		.uleb128 0xf
 1753 064e 18000000 		.4byte	.LVL64
 1754 0652 63080000 		.4byte	0x863
 1755 0656 0F       		.uleb128 0xf
 1756 0657 28000000 		.4byte	.LVL65
 1757 065b 6E080000 		.4byte	0x86e
 1758 065f 00       		.byte	0
 1759 0660 16       		.uleb128 0x16
 1760 0661 7A060000 		.4byte	.LASF74
 1761 0665 01       		.byte	0x1
 1762 0666 E604     		.2byte	0x4e6
 1763 0668 00000000 		.4byte	.LFB21
 1764 066c 60000000 		.4byte	.LFE21-.LFB21
 1765 0670 01       		.uleb128 0x1
 1766 0671 9C       		.byte	0x9c
 1767 0672 06070000 		.4byte	0x706
 1768 0676 11       		.uleb128 0x11
 1769 0677 FF040000 		.4byte	.LASF69
 1770 067b 01       		.byte	0x1
 1771 067c E604     		.2byte	0x4e6
 1772 067e 6B000000 		.4byte	0x6b
 1773 0682 F5020000 		.4byte	.LLST22
 1774 0686 1D       		.uleb128 0x1d
 1775 0687 6B7000   		.ascii	"kp\000"
 1776 068a 01       		.byte	0x1
 1777 068b E604     		.2byte	0x4e6
 1778 068d 77000000 		.4byte	0x77
 1779 0691 16030000 		.4byte	.LLST23
 1780 0695 1D       		.uleb128 0x1d
 1781 0696 6B6900   		.ascii	"ki\000"
 1782 0699 01       		.byte	0x1
 1783 069a E604     		.2byte	0x4e6
 1784 069c 77000000 		.4byte	0x77
 1785 06a0 37030000 		.4byte	.LLST24
 1786 06a4 1D       		.uleb128 0x1d
 1787 06a5 6B6400   		.ascii	"kd\000"
 1788 06a8 01       		.byte	0x1
 1789 06a9 E604     		.2byte	0x4e6
 1790 06ab 77000000 		.4byte	0x77
 1791 06af 58030000 		.4byte	.LLST25
 1792 06b3 0E       		.uleb128 0xe
 1793 06b4 E4010000 		.4byte	.LASF38
 1794 06b8 01       		.byte	0x1
 1795 06b9 E904     		.2byte	0x4e9
 1796 06bb 6B000000 		.4byte	0x6b
 1797 06bf 79030000 		.4byte	.LLST26
 1798 06c3 0E       		.uleb128 0xe
 1799 06c4 78020000 		.4byte	.LASF75
 1800 06c8 01       		.byte	0x1
 1801 06c9 EB04     		.2byte	0x4eb
 1802 06cb 8F000000 		.4byte	0x8f
 1803 06cf 8C030000 		.4byte	.LLST27
 1804 06d3 0E       		.uleb128 0xe
 1805 06d4 2A040000 		.4byte	.LASF76
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 56


 1806 06d8 01       		.byte	0x1
 1807 06d9 EC04     		.2byte	0x4ec
 1808 06db 8F000000 		.4byte	0x8f
 1809 06df 9F030000 		.4byte	.LLST28
 1810 06e3 0E       		.uleb128 0xe
 1811 06e4 B8000000 		.4byte	.LASF77
 1812 06e8 01       		.byte	0x1
 1813 06e9 ED04     		.2byte	0x4ed
 1814 06eb 8F000000 		.4byte	0x8f
 1815 06ef B2030000 		.4byte	.LLST29
 1816 06f3 0F       		.uleb128 0xf
 1817 06f4 3A000000 		.4byte	.LVL75
 1818 06f8 63080000 		.4byte	0x863
 1819 06fc 0F       		.uleb128 0xf
 1820 06fd 4E000000 		.4byte	.LVL76
 1821 0701 6E080000 		.4byte	0x86e
 1822 0705 00       		.byte	0
 1823 0706 08       		.uleb128 0x8
 1824 0707 16070000 		.4byte	0x716
 1825 070b 16070000 		.4byte	0x716
 1826 070f 09       		.uleb128 0x9
 1827 0710 14010000 		.4byte	0x114
 1828 0714 00       		.byte	0
 1829 0715 00       		.byte	0
 1830 0716 1E       		.uleb128 0x1e
 1831 0717 C8010000 		.4byte	0x1c8
 1832 071b 1F       		.uleb128 0x1f
 1833 071c 0D020000 		.4byte	.LASF78
 1834 0720 01       		.byte	0x1
 1835 0721 8609     		.2byte	0x986
 1836 0723 2D070000 		.4byte	0x72d
 1837 0727 05       		.uleb128 0x5
 1838 0728 03       		.byte	0x3
 1839 0729 00000000 		.4byte	FanController_fanPwmInitRegs
 1840 072d 1E       		.uleb128 0x1e
 1841 072e 06070000 		.4byte	0x706
 1842 0732 20       		.uleb128 0x20
 1843 0733 68050000 		.4byte	.LASF79
 1844 0737 01       		.byte	0x1
 1845 0738 3C       		.byte	0x3c
 1846 0739 6B000000 		.4byte	0x6b
 1847 073d 05       		.uleb128 0x5
 1848 073e 03       		.byte	0x3
 1849 073f 00000000 		.4byte	FanController_initVar
 1850 0743 1F       		.uleb128 0x1f
 1851 0744 0B070000 		.4byte	.LASF80
 1852 0748 01       		.byte	0x1
 1853 0749 A609     		.2byte	0x9a6
 1854 074b 1B010000 		.4byte	0x11b
 1855 074f 05       		.uleb128 0x5
 1856 0750 03       		.byte	0x3
 1857 0751 00000000 		.4byte	FanController_fanControl
 1858 0755 20       		.uleb128 0x20
 1859 0756 7E050000 		.4byte	.LASF81
 1860 075a 01       		.byte	0x1
 1861 075b 5B       		.byte	0x5b
 1862 075c 04010000 		.4byte	0x104
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 57


 1863 0760 05       		.uleb128 0x5
 1864 0761 03       		.byte	0x3
 1865 0762 00000000 		.4byte	FanController_desiredFansSpeed
 1866 0766 08       		.uleb128 0x8
 1867 0767 8F000000 		.4byte	0x8f
 1868 076b 76070000 		.4byte	0x776
 1869 076f 09       		.uleb128 0x9
 1870 0770 14010000 		.4byte	0x114
 1871 0774 00       		.byte	0
 1872 0775 00       		.byte	0
 1873 0776 20       		.uleb128 0x20
 1874 0777 6F030000 		.4byte	.LASF82
 1875 077b 01       		.byte	0x1
 1876 077c 51       		.byte	0x51
 1877 077d 66070000 		.4byte	0x766
 1878 0781 05       		.uleb128 0x5
 1879 0782 03       		.byte	0x3
 1880 0783 00000000 		.4byte	FanController_pidA1
 1881 0787 20       		.uleb128 0x20
 1882 0788 83030000 		.4byte	.LASF83
 1883 078c 01       		.byte	0x1
 1884 078d 52       		.byte	0x52
 1885 078e 66070000 		.4byte	0x766
 1886 0792 05       		.uleb128 0x5
 1887 0793 03       		.byte	0x3
 1888 0794 00000000 		.4byte	FanController_pidA2
 1889 0798 20       		.uleb128 0x20
 1890 0799 97030000 		.4byte	.LASF84
 1891 079d 01       		.byte	0x1
 1892 079e 53       		.byte	0x53
 1893 079f 66070000 		.4byte	0x766
 1894 07a3 05       		.uleb128 0x5
 1895 07a4 03       		.byte	0x3
 1896 07a5 00000000 		.4byte	FanController_pidA3
 1897 07a9 08       		.uleb128 0x8
 1898 07aa 83000000 		.4byte	0x83
 1899 07ae B9070000 		.4byte	0x7b9
 1900 07b2 09       		.uleb128 0x9
 1901 07b3 14010000 		.4byte	0x114
 1902 07b7 00       		.byte	0
 1903 07b8 00       		.byte	0
 1904 07b9 20       		.uleb128 0x20
 1905 07ba 06050000 		.4byte	.LASF85
 1906 07be 01       		.byte	0x1
 1907 07bf 55       		.byte	0x55
 1908 07c0 A9070000 		.4byte	0x7a9
 1909 07c4 05       		.uleb128 0x5
 1910 07c5 03       		.byte	0x3
 1911 07c6 00000000 		.4byte	FanController_outputSatL
 1912 07ca 20       		.uleb128 0x20
 1913 07cb E6040000 		.4byte	.LASF86
 1914 07cf 01       		.byte	0x1
 1915 07d0 56       		.byte	0x56
 1916 07d1 A9070000 		.4byte	0x7a9
 1917 07d5 05       		.uleb128 0x5
 1918 07d6 03       		.byte	0x3
 1919 07d7 00000000 		.4byte	FanController_outputSatH
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 58


 1920 07db 21       		.uleb128 0x21
 1921 07dc 3D070000 		.4byte	.LASF87
 1922 07e0 03       		.byte	0x3
 1923 07e1 4401     		.2byte	0x144
 1924 07e3 D9000000 		.4byte	0xd9
 1925 07e7 08       		.uleb128 0x8
 1926 07e8 F7070000 		.4byte	0x7f7
 1927 07ec F7070000 		.4byte	0x7f7
 1928 07f0 09       		.uleb128 0x9
 1929 07f1 14010000 		.4byte	0x114
 1930 07f5 00       		.byte	0
 1931 07f6 00       		.byte	0
 1932 07f7 1E       		.uleb128 0x1e
 1933 07f8 A5010000 		.4byte	0x1a5
 1934 07fc 1F       		.uleb128 0x1f
 1935 07fd 36040000 		.4byte	.LASF88
 1936 0801 01       		.byte	0x1
 1937 0802 6A09     		.2byte	0x96a
 1938 0804 0E080000 		.4byte	0x80e
 1939 0808 05       		.uleb128 0x5
 1940 0809 03       		.byte	0x3
 1941 080a 00000000 		.4byte	FanController_fanDriverRegs
 1942 080e 1E       		.uleb128 0x1e
 1943 080f E7070000 		.4byte	0x7e7
 1944 0813 08       		.uleb128 0x8
 1945 0814 83010000 		.4byte	0x183
 1946 0818 23080000 		.4byte	0x823
 1947 081c 09       		.uleb128 0x9
 1948 081d 14010000 		.4byte	0x114
 1949 0821 00       		.byte	0
 1950 0822 00       		.byte	0
 1951 0823 1F       		.uleb128 0x1f
 1952 0824 8F060000 		.4byte	.LASF89
 1953 0828 01       		.byte	0x1
 1954 0829 550A     		.2byte	0xa55
 1955 082b 13080000 		.4byte	0x813
 1956 082f 05       		.uleb128 0x5
 1957 0830 03       		.byte	0x3
 1958 0831 00000000 		.4byte	FanController_fanProperties
 1959 0835 20       		.uleb128 0x20
 1960 0836 57030000 		.4byte	.LASF90
 1961 083a 01       		.byte	0x1
 1962 083b 3F       		.byte	0x3f
 1963 083c 77000000 		.4byte	0x77
 1964 0840 05       		.uleb128 0x5
 1965 0841 03       		.byte	0x3
 1966 0842 00000000 		.4byte	FanController_alertMask
 1967 0846 20       		.uleb128 0x20
 1968 0847 DD050000 		.4byte	.LASF91
 1969 084b 01       		.byte	0x1
 1970 084c 40       		.byte	0x40
 1971 084d 77000000 		.4byte	0x77
 1972 0851 05       		.uleb128 0x5
 1973 0852 03       		.byte	0x3
 1974 0853 00000000 		.4byte	FanController_stallStatus
 1975 0857 22       		.uleb128 0x22
 1976 0858 23030000 		.4byte	.LASF92
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 59


 1977 085c 23030000 		.4byte	.LASF92
 1978 0860 04       		.byte	0x4
 1979 0861 3101     		.2byte	0x131
 1980 0863 23       		.uleb128 0x23
 1981 0864 40030000 		.4byte	.LASF93
 1982 0868 40030000 		.4byte	.LASF93
 1983 086c 05       		.byte	0x5
 1984 086d F8       		.byte	0xf8
 1985 086e 23       		.uleb128 0x23
 1986 086f 46000000 		.4byte	.LASF94
 1987 0873 46000000 		.4byte	.LASF94
 1988 0877 05       		.byte	0x5
 1989 0878 F9       		.byte	0xf9
 1990 0879 22       		.uleb128 0x22
 1991 087a F7050000 		.4byte	.LASF95
 1992 087e F7050000 		.4byte	.LASF95
 1993 0882 04       		.byte	0x4
 1994 0883 3301     		.2byte	0x133
 1995 0885 22       		.uleb128 0x22
 1996 0886 4C010000 		.4byte	.LASF96
 1997 088a 4C010000 		.4byte	.LASF96
 1998 088e 04       		.byte	0x4
 1999 088f 3001     		.2byte	0x130
 2000 0891 23       		.uleb128 0x23
 2001 0892 8B010000 		.4byte	.LASF97
 2002 0896 8B010000 		.4byte	.LASF97
 2003 089a 06       		.byte	0x6
 2004 089b 18       		.byte	0x18
 2005 089c 23       		.uleb128 0x23
 2006 089d C6060000 		.4byte	.LASF98
 2007 08a1 C6060000 		.4byte	.LASF98
 2008 08a5 07       		.byte	0x7
 2009 08a6 18       		.byte	0x18
 2010 08a7 00       		.byte	0
 2011              		.section	.debug_abbrev,"",%progbits
 2012              	.Ldebug_abbrev0:
 2013 0000 01       		.uleb128 0x1
 2014 0001 11       		.uleb128 0x11
 2015 0002 01       		.byte	0x1
 2016 0003 25       		.uleb128 0x25
 2017 0004 0E       		.uleb128 0xe
 2018 0005 13       		.uleb128 0x13
 2019 0006 0B       		.uleb128 0xb
 2020 0007 03       		.uleb128 0x3
 2021 0008 0E       		.uleb128 0xe
 2022 0009 1B       		.uleb128 0x1b
 2023 000a 0E       		.uleb128 0xe
 2024 000b 55       		.uleb128 0x55
 2025 000c 17       		.uleb128 0x17
 2026 000d 11       		.uleb128 0x11
 2027 000e 01       		.uleb128 0x1
 2028 000f 10       		.uleb128 0x10
 2029 0010 17       		.uleb128 0x17
 2030 0011 00       		.byte	0
 2031 0012 00       		.byte	0
 2032 0013 02       		.uleb128 0x2
 2033 0014 24       		.uleb128 0x24
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 60


 2034 0015 00       		.byte	0
 2035 0016 0B       		.uleb128 0xb
 2036 0017 0B       		.uleb128 0xb
 2037 0018 3E       		.uleb128 0x3e
 2038 0019 0B       		.uleb128 0xb
 2039 001a 03       		.uleb128 0x3
 2040 001b 0E       		.uleb128 0xe
 2041 001c 00       		.byte	0
 2042 001d 00       		.byte	0
 2043 001e 03       		.uleb128 0x3
 2044 001f 24       		.uleb128 0x24
 2045 0020 00       		.byte	0
 2046 0021 0B       		.uleb128 0xb
 2047 0022 0B       		.uleb128 0xb
 2048 0023 3E       		.uleb128 0x3e
 2049 0024 0B       		.uleb128 0xb
 2050 0025 03       		.uleb128 0x3
 2051 0026 08       		.uleb128 0x8
 2052 0027 00       		.byte	0
 2053 0028 00       		.byte	0
 2054 0029 04       		.uleb128 0x4
 2055 002a 16       		.uleb128 0x16
 2056 002b 00       		.byte	0
 2057 002c 03       		.uleb128 0x3
 2058 002d 0E       		.uleb128 0xe
 2059 002e 3A       		.uleb128 0x3a
 2060 002f 0B       		.uleb128 0xb
 2061 0030 3B       		.uleb128 0x3b
 2062 0031 05       		.uleb128 0x5
 2063 0032 49       		.uleb128 0x49
 2064 0033 13       		.uleb128 0x13
 2065 0034 00       		.byte	0
 2066 0035 00       		.byte	0
 2067 0036 05       		.uleb128 0x5
 2068 0037 35       		.uleb128 0x35
 2069 0038 00       		.byte	0
 2070 0039 49       		.uleb128 0x49
 2071 003a 13       		.uleb128 0x13
 2072 003b 00       		.byte	0
 2073 003c 00       		.byte	0
 2074 003d 06       		.uleb128 0x6
 2075 003e 13       		.uleb128 0x13
 2076 003f 01       		.byte	0x1
 2077 0040 0B       		.uleb128 0xb
 2078 0041 0B       		.uleb128 0xb
 2079 0042 3A       		.uleb128 0x3a
 2080 0043 0B       		.uleb128 0xb
 2081 0044 3B       		.uleb128 0x3b
 2082 0045 0B       		.uleb128 0xb
 2083 0046 01       		.uleb128 0x1
 2084 0047 13       		.uleb128 0x13
 2085 0048 00       		.byte	0
 2086 0049 00       		.byte	0
 2087 004a 07       		.uleb128 0x7
 2088 004b 0D       		.uleb128 0xd
 2089 004c 00       		.byte	0
 2090 004d 03       		.uleb128 0x3
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 61


 2091 004e 0E       		.uleb128 0xe
 2092 004f 3A       		.uleb128 0x3a
 2093 0050 0B       		.uleb128 0xb
 2094 0051 3B       		.uleb128 0x3b
 2095 0052 0B       		.uleb128 0xb
 2096 0053 49       		.uleb128 0x49
 2097 0054 13       		.uleb128 0x13
 2098 0055 38       		.uleb128 0x38
 2099 0056 0B       		.uleb128 0xb
 2100 0057 00       		.byte	0
 2101 0058 00       		.byte	0
 2102 0059 08       		.uleb128 0x8
 2103 005a 01       		.uleb128 0x1
 2104 005b 01       		.byte	0x1
 2105 005c 49       		.uleb128 0x49
 2106 005d 13       		.uleb128 0x13
 2107 005e 01       		.uleb128 0x1
 2108 005f 13       		.uleb128 0x13
 2109 0060 00       		.byte	0
 2110 0061 00       		.byte	0
 2111 0062 09       		.uleb128 0x9
 2112 0063 21       		.uleb128 0x21
 2113 0064 00       		.byte	0
 2114 0065 49       		.uleb128 0x49
 2115 0066 13       		.uleb128 0x13
 2116 0067 2F       		.uleb128 0x2f
 2117 0068 0B       		.uleb128 0xb
 2118 0069 00       		.byte	0
 2119 006a 00       		.byte	0
 2120 006b 0A       		.uleb128 0xa
 2121 006c 16       		.uleb128 0x16
 2122 006d 00       		.byte	0
 2123 006e 03       		.uleb128 0x3
 2124 006f 0E       		.uleb128 0xe
 2125 0070 3A       		.uleb128 0x3a
 2126 0071 0B       		.uleb128 0xb
 2127 0072 3B       		.uleb128 0x3b
 2128 0073 0B       		.uleb128 0xb
 2129 0074 49       		.uleb128 0x49
 2130 0075 13       		.uleb128 0x13
 2131 0076 00       		.byte	0
 2132 0077 00       		.byte	0
 2133 0078 0B       		.uleb128 0xb
 2134 0079 13       		.uleb128 0x13
 2135 007a 01       		.byte	0x1
 2136 007b 0B       		.uleb128 0xb
 2137 007c 0B       		.uleb128 0xb
 2138 007d 3A       		.uleb128 0x3a
 2139 007e 0B       		.uleb128 0xb
 2140 007f 3B       		.uleb128 0x3b
 2141 0080 05       		.uleb128 0x5
 2142 0081 01       		.uleb128 0x1
 2143 0082 13       		.uleb128 0x13
 2144 0083 00       		.byte	0
 2145 0084 00       		.byte	0
 2146 0085 0C       		.uleb128 0xc
 2147 0086 0D       		.uleb128 0xd
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 62


 2148 0087 00       		.byte	0
 2149 0088 03       		.uleb128 0x3
 2150 0089 0E       		.uleb128 0xe
 2151 008a 3A       		.uleb128 0x3a
 2152 008b 0B       		.uleb128 0xb
 2153 008c 3B       		.uleb128 0x3b
 2154 008d 05       		.uleb128 0x5
 2155 008e 49       		.uleb128 0x49
 2156 008f 13       		.uleb128 0x13
 2157 0090 38       		.uleb128 0x38
 2158 0091 0B       		.uleb128 0xb
 2159 0092 00       		.byte	0
 2160 0093 00       		.byte	0
 2161 0094 0D       		.uleb128 0xd
 2162 0095 2E       		.uleb128 0x2e
 2163 0096 01       		.byte	0x1
 2164 0097 3F       		.uleb128 0x3f
 2165 0098 19       		.uleb128 0x19
 2166 0099 03       		.uleb128 0x3
 2167 009a 0E       		.uleb128 0xe
 2168 009b 3A       		.uleb128 0x3a
 2169 009c 0B       		.uleb128 0xb
 2170 009d 3B       		.uleb128 0x3b
 2171 009e 05       		.uleb128 0x5
 2172 009f 27       		.uleb128 0x27
 2173 00a0 19       		.uleb128 0x19
 2174 00a1 11       		.uleb128 0x11
 2175 00a2 01       		.uleb128 0x1
 2176 00a3 12       		.uleb128 0x12
 2177 00a4 06       		.uleb128 0x6
 2178 00a5 40       		.uleb128 0x40
 2179 00a6 18       		.uleb128 0x18
 2180 00a7 9742     		.uleb128 0x2117
 2181 00a9 19       		.uleb128 0x19
 2182 00aa 01       		.uleb128 0x1
 2183 00ab 13       		.uleb128 0x13
 2184 00ac 00       		.byte	0
 2185 00ad 00       		.byte	0
 2186 00ae 0E       		.uleb128 0xe
 2187 00af 34       		.uleb128 0x34
 2188 00b0 00       		.byte	0
 2189 00b1 03       		.uleb128 0x3
 2190 00b2 0E       		.uleb128 0xe
 2191 00b3 3A       		.uleb128 0x3a
 2192 00b4 0B       		.uleb128 0xb
 2193 00b5 3B       		.uleb128 0x3b
 2194 00b6 05       		.uleb128 0x5
 2195 00b7 49       		.uleb128 0x49
 2196 00b8 13       		.uleb128 0x13
 2197 00b9 02       		.uleb128 0x2
 2198 00ba 17       		.uleb128 0x17
 2199 00bb 00       		.byte	0
 2200 00bc 00       		.byte	0
 2201 00bd 0F       		.uleb128 0xf
 2202 00be 898201   		.uleb128 0x4109
 2203 00c1 00       		.byte	0
 2204 00c2 11       		.uleb128 0x11
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 63


 2205 00c3 01       		.uleb128 0x1
 2206 00c4 31       		.uleb128 0x31
 2207 00c5 13       		.uleb128 0x13
 2208 00c6 00       		.byte	0
 2209 00c7 00       		.byte	0
 2210 00c8 10       		.uleb128 0x10
 2211 00c9 2E       		.uleb128 0x2e
 2212 00ca 01       		.byte	0x1
 2213 00cb 3F       		.uleb128 0x3f
 2214 00cc 19       		.uleb128 0x19
 2215 00cd 03       		.uleb128 0x3
 2216 00ce 0E       		.uleb128 0xe
 2217 00cf 3A       		.uleb128 0x3a
 2218 00d0 0B       		.uleb128 0xb
 2219 00d1 3B       		.uleb128 0x3b
 2220 00d2 0B       		.uleb128 0xb
 2221 00d3 27       		.uleb128 0x27
 2222 00d4 19       		.uleb128 0x19
 2223 00d5 11       		.uleb128 0x11
 2224 00d6 01       		.uleb128 0x1
 2225 00d7 12       		.uleb128 0x12
 2226 00d8 06       		.uleb128 0x6
 2227 00d9 40       		.uleb128 0x40
 2228 00da 18       		.uleb128 0x18
 2229 00db 9742     		.uleb128 0x2117
 2230 00dd 19       		.uleb128 0x19
 2231 00de 01       		.uleb128 0x1
 2232 00df 13       		.uleb128 0x13
 2233 00e0 00       		.byte	0
 2234 00e1 00       		.byte	0
 2235 00e2 11       		.uleb128 0x11
 2236 00e3 05       		.uleb128 0x5
 2237 00e4 00       		.byte	0
 2238 00e5 03       		.uleb128 0x3
 2239 00e6 0E       		.uleb128 0xe
 2240 00e7 3A       		.uleb128 0x3a
 2241 00e8 0B       		.uleb128 0xb
 2242 00e9 3B       		.uleb128 0x3b
 2243 00ea 05       		.uleb128 0x5
 2244 00eb 49       		.uleb128 0x49
 2245 00ec 13       		.uleb128 0x13
 2246 00ed 02       		.uleb128 0x2
 2247 00ee 17       		.uleb128 0x17
 2248 00ef 00       		.byte	0
 2249 00f0 00       		.byte	0
 2250 00f1 12       		.uleb128 0x12
 2251 00f2 2E       		.uleb128 0x2e
 2252 00f3 00       		.byte	0
 2253 00f4 3F       		.uleb128 0x3f
 2254 00f5 19       		.uleb128 0x19
 2255 00f6 03       		.uleb128 0x3
 2256 00f7 0E       		.uleb128 0xe
 2257 00f8 3A       		.uleb128 0x3a
 2258 00f9 0B       		.uleb128 0xb
 2259 00fa 3B       		.uleb128 0x3b
 2260 00fb 05       		.uleb128 0x5
 2261 00fc 27       		.uleb128 0x27
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 64


 2262 00fd 19       		.uleb128 0x19
 2263 00fe 49       		.uleb128 0x49
 2264 00ff 13       		.uleb128 0x13
 2265 0100 11       		.uleb128 0x11
 2266 0101 01       		.uleb128 0x1
 2267 0102 12       		.uleb128 0x12
 2268 0103 06       		.uleb128 0x6
 2269 0104 40       		.uleb128 0x40
 2270 0105 18       		.uleb128 0x18
 2271 0106 9742     		.uleb128 0x2117
 2272 0108 19       		.uleb128 0x19
 2273 0109 00       		.byte	0
 2274 010a 00       		.byte	0
 2275 010b 13       		.uleb128 0x13
 2276 010c 05       		.uleb128 0x5
 2277 010d 00       		.byte	0
 2278 010e 03       		.uleb128 0x3
 2279 010f 0E       		.uleb128 0xe
 2280 0110 3A       		.uleb128 0x3a
 2281 0111 0B       		.uleb128 0xb
 2282 0112 3B       		.uleb128 0x3b
 2283 0113 05       		.uleb128 0x5
 2284 0114 49       		.uleb128 0x49
 2285 0115 13       		.uleb128 0x13
 2286 0116 02       		.uleb128 0x2
 2287 0117 18       		.uleb128 0x18
 2288 0118 00       		.byte	0
 2289 0119 00       		.byte	0
 2290 011a 14       		.uleb128 0x14
 2291 011b 2E       		.uleb128 0x2e
 2292 011c 01       		.byte	0x1
 2293 011d 3F       		.uleb128 0x3f
 2294 011e 19       		.uleb128 0x19
 2295 011f 03       		.uleb128 0x3
 2296 0120 0E       		.uleb128 0xe
 2297 0121 3A       		.uleb128 0x3a
 2298 0122 0B       		.uleb128 0xb
 2299 0123 3B       		.uleb128 0x3b
 2300 0124 05       		.uleb128 0x5
 2301 0125 27       		.uleb128 0x27
 2302 0126 19       		.uleb128 0x19
 2303 0127 49       		.uleb128 0x49
 2304 0128 13       		.uleb128 0x13
 2305 0129 11       		.uleb128 0x11
 2306 012a 01       		.uleb128 0x1
 2307 012b 12       		.uleb128 0x12
 2308 012c 06       		.uleb128 0x6
 2309 012d 40       		.uleb128 0x40
 2310 012e 18       		.uleb128 0x18
 2311 012f 9742     		.uleb128 0x2117
 2312 0131 19       		.uleb128 0x19
 2313 0132 01       		.uleb128 0x1
 2314 0133 13       		.uleb128 0x13
 2315 0134 00       		.byte	0
 2316 0135 00       		.byte	0
 2317 0136 15       		.uleb128 0x15
 2318 0137 34       		.uleb128 0x34
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 65


 2319 0138 00       		.byte	0
 2320 0139 03       		.uleb128 0x3
 2321 013a 0E       		.uleb128 0xe
 2322 013b 3A       		.uleb128 0x3a
 2323 013c 0B       		.uleb128 0xb
 2324 013d 3B       		.uleb128 0x3b
 2325 013e 05       		.uleb128 0x5
 2326 013f 49       		.uleb128 0x49
 2327 0140 13       		.uleb128 0x13
 2328 0141 02       		.uleb128 0x2
 2329 0142 18       		.uleb128 0x18
 2330 0143 00       		.byte	0
 2331 0144 00       		.byte	0
 2332 0145 16       		.uleb128 0x16
 2333 0146 2E       		.uleb128 0x2e
 2334 0147 01       		.byte	0x1
 2335 0148 3F       		.uleb128 0x3f
 2336 0149 19       		.uleb128 0x19
 2337 014a 03       		.uleb128 0x3
 2338 014b 0E       		.uleb128 0xe
 2339 014c 3A       		.uleb128 0x3a
 2340 014d 0B       		.uleb128 0xb
 2341 014e 3B       		.uleb128 0x3b
 2342 014f 05       		.uleb128 0x5
 2343 0150 27       		.uleb128 0x27
 2344 0151 19       		.uleb128 0x19
 2345 0152 11       		.uleb128 0x11
 2346 0153 01       		.uleb128 0x1
 2347 0154 12       		.uleb128 0x12
 2348 0155 06       		.uleb128 0x6
 2349 0156 40       		.uleb128 0x40
 2350 0157 18       		.uleb128 0x18
 2351 0158 9642     		.uleb128 0x2116
 2352 015a 19       		.uleb128 0x19
 2353 015b 01       		.uleb128 0x1
 2354 015c 13       		.uleb128 0x13
 2355 015d 00       		.byte	0
 2356 015e 00       		.byte	0
 2357 015f 17       		.uleb128 0x17
 2358 0160 2E       		.uleb128 0x2e
 2359 0161 01       		.byte	0x1
 2360 0162 3F       		.uleb128 0x3f
 2361 0163 19       		.uleb128 0x19
 2362 0164 03       		.uleb128 0x3
 2363 0165 0E       		.uleb128 0xe
 2364 0166 3A       		.uleb128 0x3a
 2365 0167 0B       		.uleb128 0xb
 2366 0168 3B       		.uleb128 0x3b
 2367 0169 05       		.uleb128 0x5
 2368 016a 27       		.uleb128 0x27
 2369 016b 19       		.uleb128 0x19
 2370 016c 49       		.uleb128 0x49
 2371 016d 13       		.uleb128 0x13
 2372 016e 11       		.uleb128 0x11
 2373 016f 01       		.uleb128 0x1
 2374 0170 12       		.uleb128 0x12
 2375 0171 06       		.uleb128 0x6
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 66


 2376 0172 40       		.uleb128 0x40
 2377 0173 18       		.uleb128 0x18
 2378 0174 9642     		.uleb128 0x2116
 2379 0176 19       		.uleb128 0x19
 2380 0177 01       		.uleb128 0x1
 2381 0178 13       		.uleb128 0x13
 2382 0179 00       		.byte	0
 2383 017a 00       		.byte	0
 2384 017b 18       		.uleb128 0x18
 2385 017c 05       		.uleb128 0x5
 2386 017d 00       		.byte	0
 2387 017e 03       		.uleb128 0x3
 2388 017f 08       		.uleb128 0x8
 2389 0180 3A       		.uleb128 0x3a
 2390 0181 0B       		.uleb128 0xb
 2391 0182 3B       		.uleb128 0x3b
 2392 0183 05       		.uleb128 0x5
 2393 0184 49       		.uleb128 0x49
 2394 0185 13       		.uleb128 0x13
 2395 0186 02       		.uleb128 0x2
 2396 0187 18       		.uleb128 0x18
 2397 0188 00       		.byte	0
 2398 0189 00       		.byte	0
 2399 018a 19       		.uleb128 0x19
 2400 018b 34       		.uleb128 0x34
 2401 018c 00       		.byte	0
 2402 018d 03       		.uleb128 0x3
 2403 018e 0E       		.uleb128 0xe
 2404 018f 3A       		.uleb128 0x3a
 2405 0190 0B       		.uleb128 0xb
 2406 0191 3B       		.uleb128 0x3b
 2407 0192 05       		.uleb128 0x5
 2408 0193 49       		.uleb128 0x49
 2409 0194 13       		.uleb128 0x13
 2410 0195 00       		.byte	0
 2411 0196 00       		.byte	0
 2412 0197 1A       		.uleb128 0x1a
 2413 0198 34       		.uleb128 0x34
 2414 0199 00       		.byte	0
 2415 019a 03       		.uleb128 0x3
 2416 019b 0E       		.uleb128 0xe
 2417 019c 3A       		.uleb128 0x3a
 2418 019d 0B       		.uleb128 0xb
 2419 019e 3B       		.uleb128 0x3b
 2420 019f 0B       		.uleb128 0xb
 2421 01a0 49       		.uleb128 0x49
 2422 01a1 13       		.uleb128 0x13
 2423 01a2 02       		.uleb128 0x2
 2424 01a3 17       		.uleb128 0x17
 2425 01a4 00       		.byte	0
 2426 01a5 00       		.byte	0
 2427 01a6 1B       		.uleb128 0x1b
 2428 01a7 898201   		.uleb128 0x4109
 2429 01aa 01       		.byte	0x1
 2430 01ab 11       		.uleb128 0x11
 2431 01ac 01       		.uleb128 0x1
 2432 01ad 31       		.uleb128 0x31
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 67


 2433 01ae 13       		.uleb128 0x13
 2434 01af 01       		.uleb128 0x1
 2435 01b0 13       		.uleb128 0x13
 2436 01b1 00       		.byte	0
 2437 01b2 00       		.byte	0
 2438 01b3 1C       		.uleb128 0x1c
 2439 01b4 8A8201   		.uleb128 0x410a
 2440 01b7 00       		.byte	0
 2441 01b8 02       		.uleb128 0x2
 2442 01b9 18       		.uleb128 0x18
 2443 01ba 9142     		.uleb128 0x2111
 2444 01bc 18       		.uleb128 0x18
 2445 01bd 00       		.byte	0
 2446 01be 00       		.byte	0
 2447 01bf 1D       		.uleb128 0x1d
 2448 01c0 05       		.uleb128 0x5
 2449 01c1 00       		.byte	0
 2450 01c2 03       		.uleb128 0x3
 2451 01c3 08       		.uleb128 0x8
 2452 01c4 3A       		.uleb128 0x3a
 2453 01c5 0B       		.uleb128 0xb
 2454 01c6 3B       		.uleb128 0x3b
 2455 01c7 05       		.uleb128 0x5
 2456 01c8 49       		.uleb128 0x49
 2457 01c9 13       		.uleb128 0x13
 2458 01ca 02       		.uleb128 0x2
 2459 01cb 17       		.uleb128 0x17
 2460 01cc 00       		.byte	0
 2461 01cd 00       		.byte	0
 2462 01ce 1E       		.uleb128 0x1e
 2463 01cf 26       		.uleb128 0x26
 2464 01d0 00       		.byte	0
 2465 01d1 49       		.uleb128 0x49
 2466 01d2 13       		.uleb128 0x13
 2467 01d3 00       		.byte	0
 2468 01d4 00       		.byte	0
 2469 01d5 1F       		.uleb128 0x1f
 2470 01d6 34       		.uleb128 0x34
 2471 01d7 00       		.byte	0
 2472 01d8 03       		.uleb128 0x3
 2473 01d9 0E       		.uleb128 0xe
 2474 01da 3A       		.uleb128 0x3a
 2475 01db 0B       		.uleb128 0xb
 2476 01dc 3B       		.uleb128 0x3b
 2477 01dd 05       		.uleb128 0x5
 2478 01de 49       		.uleb128 0x49
 2479 01df 13       		.uleb128 0x13
 2480 01e0 3F       		.uleb128 0x3f
 2481 01e1 19       		.uleb128 0x19
 2482 01e2 02       		.uleb128 0x2
 2483 01e3 18       		.uleb128 0x18
 2484 01e4 00       		.byte	0
 2485 01e5 00       		.byte	0
 2486 01e6 20       		.uleb128 0x20
 2487 01e7 34       		.uleb128 0x34
 2488 01e8 00       		.byte	0
 2489 01e9 03       		.uleb128 0x3
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 68


 2490 01ea 0E       		.uleb128 0xe
 2491 01eb 3A       		.uleb128 0x3a
 2492 01ec 0B       		.uleb128 0xb
 2493 01ed 3B       		.uleb128 0x3b
 2494 01ee 0B       		.uleb128 0xb
 2495 01ef 49       		.uleb128 0x49
 2496 01f0 13       		.uleb128 0x13
 2497 01f1 3F       		.uleb128 0x3f
 2498 01f2 19       		.uleb128 0x19
 2499 01f3 02       		.uleb128 0x2
 2500 01f4 18       		.uleb128 0x18
 2501 01f5 00       		.byte	0
 2502 01f6 00       		.byte	0
 2503 01f7 21       		.uleb128 0x21
 2504 01f8 34       		.uleb128 0x34
 2505 01f9 00       		.byte	0
 2506 01fa 03       		.uleb128 0x3
 2507 01fb 0E       		.uleb128 0xe
 2508 01fc 3A       		.uleb128 0x3a
 2509 01fd 0B       		.uleb128 0xb
 2510 01fe 3B       		.uleb128 0x3b
 2511 01ff 05       		.uleb128 0x5
 2512 0200 49       		.uleb128 0x49
 2513 0201 13       		.uleb128 0x13
 2514 0202 3F       		.uleb128 0x3f
 2515 0203 19       		.uleb128 0x19
 2516 0204 3C       		.uleb128 0x3c
 2517 0205 19       		.uleb128 0x19
 2518 0206 00       		.byte	0
 2519 0207 00       		.byte	0
 2520 0208 22       		.uleb128 0x22
 2521 0209 2E       		.uleb128 0x2e
 2522 020a 00       		.byte	0
 2523 020b 3F       		.uleb128 0x3f
 2524 020c 19       		.uleb128 0x19
 2525 020d 3C       		.uleb128 0x3c
 2526 020e 19       		.uleb128 0x19
 2527 020f 6E       		.uleb128 0x6e
 2528 0210 0E       		.uleb128 0xe
 2529 0211 03       		.uleb128 0x3
 2530 0212 0E       		.uleb128 0xe
 2531 0213 3A       		.uleb128 0x3a
 2532 0214 0B       		.uleb128 0xb
 2533 0215 3B       		.uleb128 0x3b
 2534 0216 05       		.uleb128 0x5
 2535 0217 00       		.byte	0
 2536 0218 00       		.byte	0
 2537 0219 23       		.uleb128 0x23
 2538 021a 2E       		.uleb128 0x2e
 2539 021b 00       		.byte	0
 2540 021c 3F       		.uleb128 0x3f
 2541 021d 19       		.uleb128 0x19
 2542 021e 3C       		.uleb128 0x3c
 2543 021f 19       		.uleb128 0x19
 2544 0220 6E       		.uleb128 0x6e
 2545 0221 0E       		.uleb128 0xe
 2546 0222 03       		.uleb128 0x3
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 69


 2547 0223 0E       		.uleb128 0xe
 2548 0224 3A       		.uleb128 0x3a
 2549 0225 0B       		.uleb128 0xb
 2550 0226 3B       		.uleb128 0x3b
 2551 0227 0B       		.uleb128 0xb
 2552 0228 00       		.byte	0
 2553 0229 00       		.byte	0
 2554 022a 00       		.byte	0
 2555              		.section	.debug_loc,"",%progbits
 2556              	.Ldebug_loc0:
 2557              	.LLST0:
 2558 0000 10000000 		.4byte	.LVL1
 2559 0004 1F000000 		.4byte	.LVL2-1
 2560 0008 0100     		.2byte	0x1
 2561 000a 50       		.byte	0x50
 2562 000b 00000000 		.4byte	0
 2563 000f 00000000 		.4byte	0
 2564              	.LLST1:
 2565 0013 06000000 		.4byte	.LVL3
 2566 0017 15000000 		.4byte	.LVL4-1
 2567 001b 0100     		.2byte	0x1
 2568 001d 50       		.byte	0x50
 2569 001e 00000000 		.4byte	0
 2570 0022 00000000 		.4byte	0
 2571              	.LLST2:
 2572 0026 06000000 		.4byte	.LVL5
 2573 002a 13000000 		.4byte	.LVL6-1
 2574 002e 0100     		.2byte	0x1
 2575 0030 50       		.byte	0x50
 2576 0031 00000000 		.4byte	0
 2577 0035 00000000 		.4byte	0
 2578              	.LLST3:
 2579 0039 00000000 		.4byte	.LVL9
 2580 003d 07000000 		.4byte	.LVL10-1
 2581 0041 0100     		.2byte	0x1
 2582 0043 50       		.byte	0x50
 2583 0044 07000000 		.4byte	.LVL10-1
 2584 0048 24000000 		.4byte	.LFE8
 2585 004c 0400     		.2byte	0x4
 2586 004e F3       		.byte	0xf3
 2587 004f 01       		.uleb128 0x1
 2588 0050 50       		.byte	0x50
 2589 0051 9F       		.byte	0x9f
 2590 0052 00000000 		.4byte	0
 2591 0056 00000000 		.4byte	0
 2592              	.LLST4:
 2593 005a 08000000 		.4byte	.LVL10
 2594 005e 1B000000 		.4byte	.LVL11-1
 2595 0062 0100     		.2byte	0x1
 2596 0064 50       		.byte	0x50
 2597 0065 00000000 		.4byte	0
 2598 0069 00000000 		.4byte	0
 2599              	.LLST5:
 2600 006d 00000000 		.4byte	.LVL16
 2601 0071 0C000000 		.4byte	.LVL18
 2602 0075 0100     		.2byte	0x1
 2603 0077 50       		.byte	0x50
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 70


 2604 0078 0C000000 		.4byte	.LVL18
 2605 007c 28000000 		.4byte	.LFE15
 2606 0080 0400     		.2byte	0x4
 2607 0082 F3       		.byte	0xf3
 2608 0083 01       		.uleb128 0x1
 2609 0084 50       		.byte	0x50
 2610 0085 9F       		.byte	0x9f
 2611 0086 00000000 		.4byte	0
 2612 008a 00000000 		.4byte	0
 2613              	.LLST6:
 2614 008e 00000000 		.4byte	.LVL16
 2615 0092 0A000000 		.4byte	.LVL17
 2616 0096 0100     		.2byte	0x1
 2617 0098 51       		.byte	0x51
 2618 0099 0A000000 		.4byte	.LVL17
 2619 009d 28000000 		.4byte	.LFE15
 2620 00a1 0400     		.2byte	0x4
 2621 00a3 F3       		.byte	0xf3
 2622 00a4 01       		.uleb128 0x1
 2623 00a5 51       		.byte	0x51
 2624 00a6 9F       		.byte	0x9f
 2625 00a7 00000000 		.4byte	0
 2626 00ab 00000000 		.4byte	0
 2627              	.LLST7:
 2628 00af 12000000 		.4byte	.LVL19
 2629 00b3 1E000000 		.4byte	.LVL20
 2630 00b7 0100     		.2byte	0x1
 2631 00b9 50       		.byte	0x50
 2632 00ba 00000000 		.4byte	0
 2633 00be 00000000 		.4byte	0
 2634              	.LLST8:
 2635 00c2 00000000 		.4byte	.LVL21
 2636 00c6 0A000000 		.4byte	.LVL23
 2637 00ca 0100     		.2byte	0x1
 2638 00cc 50       		.byte	0x50
 2639 00cd 0A000000 		.4byte	.LVL23
 2640 00d1 1A000000 		.4byte	.LVL26
 2641 00d5 0400     		.2byte	0x4
 2642 00d7 F3       		.byte	0xf3
 2643 00d8 01       		.uleb128 0x1
 2644 00d9 50       		.byte	0x50
 2645 00da 9F       		.byte	0x9f
 2646 00db 1A000000 		.4byte	.LVL26
 2647 00df 1C000000 		.4byte	.LVL27
 2648 00e3 0100     		.2byte	0x1
 2649 00e5 50       		.byte	0x50
 2650 00e6 1C000000 		.4byte	.LVL27
 2651 00ea 28000000 		.4byte	.LFE16
 2652 00ee 0400     		.2byte	0x4
 2653 00f0 F3       		.byte	0xf3
 2654 00f1 01       		.uleb128 0x1
 2655 00f2 50       		.byte	0x50
 2656 00f3 9F       		.byte	0x9f
 2657 00f4 00000000 		.4byte	0
 2658 00f8 00000000 		.4byte	0
 2659              	.LLST9:
 2660 00fc 02000000 		.4byte	.LVL22
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 71


 2661 0100 18000000 		.4byte	.LVL25
 2662 0104 0200     		.2byte	0x2
 2663 0106 30       		.byte	0x30
 2664 0107 9F       		.byte	0x9f
 2665 0108 18000000 		.4byte	.LVL25
 2666 010c 1A000000 		.4byte	.LVL26
 2667 0110 0100     		.2byte	0x1
 2668 0112 50       		.byte	0x50
 2669 0113 1A000000 		.4byte	.LVL26
 2670 0117 1C000000 		.4byte	.LVL27
 2671 011b 0200     		.2byte	0x2
 2672 011d 30       		.byte	0x30
 2673 011e 9F       		.byte	0x9f
 2674 011f 1C000000 		.4byte	.LVL27
 2675 0123 28000000 		.4byte	.LFE16
 2676 0127 0100     		.2byte	0x1
 2677 0129 50       		.byte	0x50
 2678 012a 00000000 		.4byte	0
 2679 012e 00000000 		.4byte	0
 2680              	.LLST10:
 2681 0132 00000000 		.4byte	.LVL28
 2682 0136 06000000 		.4byte	.LVL29
 2683 013a 0100     		.2byte	0x1
 2684 013c 50       		.byte	0x50
 2685 013d 06000000 		.4byte	.LVL29
 2686 0141 14000000 		.4byte	.LFE17
 2687 0145 0400     		.2byte	0x4
 2688 0147 F3       		.byte	0xf3
 2689 0148 01       		.uleb128 0x1
 2690 0149 50       		.byte	0x50
 2691 014a 9F       		.byte	0x9f
 2692 014b 00000000 		.4byte	0
 2693 014f 00000000 		.4byte	0
 2694              	.LLST11:
 2695 0153 06000000 		.4byte	.LVL30
 2696 0157 0A000000 		.4byte	.LVL31
 2697 015b 0200     		.2byte	0x2
 2698 015d 30       		.byte	0x30
 2699 015e 9F       		.byte	0x9f
 2700 015f 0A000000 		.4byte	.LVL31
 2701 0163 2A000000 		.4byte	.LVL33
 2702 0167 0100     		.2byte	0x1
 2703 0169 54       		.byte	0x54
 2704 016a 36000000 		.4byte	.LVL34
 2705 016e 38000000 		.4byte	.LVL35
 2706 0172 0100     		.2byte	0x1
 2707 0174 55       		.byte	0x55
 2708 0175 38000000 		.4byte	.LVL35
 2709 0179 76000000 		.4byte	.LVL38
 2710 017d 0100     		.2byte	0x1
 2711 017f 54       		.byte	0x54
 2712 0180 76000000 		.4byte	.LVL38
 2713 0184 7A000000 		.4byte	.LVL39
 2714 0188 0200     		.2byte	0x2
 2715 018a 30       		.byte	0x30
 2716 018b 9F       		.byte	0x9f
 2717 018c 7A000000 		.4byte	.LVL39
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 72


 2718 0190 AA000000 		.4byte	.LVL42
 2719 0194 0100     		.2byte	0x1
 2720 0196 54       		.byte	0x54
 2721 0197 AC000000 		.4byte	.LVL43
 2722 019b BC000000 		.4byte	.LVL46
 2723 019f 0100     		.2byte	0x1
 2724 01a1 54       		.byte	0x54
 2725 01a2 00000000 		.4byte	0
 2726 01a6 00000000 		.4byte	0
 2727              	.LLST12:
 2728 01aa 40000000 		.4byte	.LVL36
 2729 01ae 57000000 		.4byte	.LVL37-1
 2730 01b2 0100     		.2byte	0x1
 2731 01b4 50       		.byte	0x50
 2732 01b5 7E000000 		.4byte	.LVL40
 2733 01b9 A7000000 		.4byte	.LVL41-1
 2734 01bd 0100     		.2byte	0x1
 2735 01bf 50       		.byte	0x50
 2736 01c0 00000000 		.4byte	0
 2737 01c4 00000000 		.4byte	0
 2738              	.LLST13:
 2739 01c8 00000000 		.4byte	.LVL49
 2740 01cc 02000000 		.4byte	.LVL50
 2741 01d0 0100     		.2byte	0x1
 2742 01d2 50       		.byte	0x50
 2743 01d3 02000000 		.4byte	.LVL50
 2744 01d7 10000000 		.4byte	.LFE18
 2745 01db 0400     		.2byte	0x4
 2746 01dd F3       		.byte	0xf3
 2747 01de 01       		.uleb128 0x1
 2748 01df 50       		.byte	0x50
 2749 01e0 9F       		.byte	0x9f
 2750 01e1 00000000 		.4byte	0
 2751 01e5 00000000 		.4byte	0
 2752              	.LLST14:
 2753 01e9 00000000 		.4byte	.LVL51
 2754 01ed 08000000 		.4byte	.LVL53
 2755 01f1 0100     		.2byte	0x1
 2756 01f3 50       		.byte	0x50
 2757 01f4 08000000 		.4byte	.LVL53
 2758 01f8 1C000000 		.4byte	.LVL56
 2759 01fc 0400     		.2byte	0x4
 2760 01fe F3       		.byte	0xf3
 2761 01ff 01       		.uleb128 0x1
 2762 0200 50       		.byte	0x50
 2763 0201 9F       		.byte	0x9f
 2764 0202 1C000000 		.4byte	.LVL56
 2765 0206 1E000000 		.4byte	.LVL57
 2766 020a 0100     		.2byte	0x1
 2767 020c 50       		.byte	0x50
 2768 020d 1E000000 		.4byte	.LVL57
 2769 0211 2C000000 		.4byte	.LFE19
 2770 0215 0400     		.2byte	0x4
 2771 0217 F3       		.byte	0xf3
 2772 0218 01       		.uleb128 0x1
 2773 0219 50       		.byte	0x50
 2774 021a 9F       		.byte	0x9f
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 73


 2775 021b 00000000 		.4byte	0
 2776 021f 00000000 		.4byte	0
 2777              	.LLST15:
 2778 0223 02000000 		.4byte	.LVL52
 2779 0227 1A000000 		.4byte	.LVL55
 2780 022b 0200     		.2byte	0x2
 2781 022d 30       		.byte	0x30
 2782 022e 9F       		.byte	0x9f
 2783 022f 1A000000 		.4byte	.LVL55
 2784 0233 1C000000 		.4byte	.LVL56
 2785 0237 0100     		.2byte	0x1
 2786 0239 50       		.byte	0x50
 2787 023a 1C000000 		.4byte	.LVL56
 2788 023e 22000000 		.4byte	.LVL58
 2789 0242 0200     		.2byte	0x2
 2790 0244 30       		.byte	0x30
 2791 0245 9F       		.byte	0x9f
 2792 0246 22000000 		.4byte	.LVL58
 2793 024a 2C000000 		.4byte	.LFE19
 2794 024e 0100     		.2byte	0x1
 2795 0250 50       		.byte	0x50
 2796 0251 00000000 		.4byte	0
 2797 0255 00000000 		.4byte	0
 2798              	.LLST16:
 2799 0259 00000000 		.4byte	.LVL59
 2800 025d 17000000 		.4byte	.LVL64-1
 2801 0261 0100     		.2byte	0x1
 2802 0263 50       		.byte	0x50
 2803 0264 17000000 		.4byte	.LVL64-1
 2804 0268 34000000 		.4byte	.LFE20
 2805 026c 0400     		.2byte	0x4
 2806 026e F3       		.byte	0xf3
 2807 026f 01       		.uleb128 0x1
 2808 0270 50       		.byte	0x50
 2809 0271 9F       		.byte	0x9f
 2810 0272 00000000 		.4byte	0
 2811 0276 00000000 		.4byte	0
 2812              	.LLST17:
 2813 027a 00000000 		.4byte	.LVL59
 2814 027e 0C000000 		.4byte	.LVL60
 2815 0282 0100     		.2byte	0x1
 2816 0284 51       		.byte	0x51
 2817 0285 0C000000 		.4byte	.LVL60
 2818 0289 34000000 		.4byte	.LFE20
 2819 028d 0400     		.2byte	0x4
 2820 028f F3       		.byte	0xf3
 2821 0290 01       		.uleb128 0x1
 2822 0291 51       		.byte	0x51
 2823 0292 9F       		.byte	0x9f
 2824 0293 00000000 		.4byte	0
 2825 0297 00000000 		.4byte	0
 2826              	.LLST18:
 2827 029b 00000000 		.4byte	.LVL59
 2828 029f 12000000 		.4byte	.LVL62
 2829 02a3 0100     		.2byte	0x1
 2830 02a5 52       		.byte	0x52
 2831 02a6 12000000 		.4byte	.LVL62
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 74


 2832 02aa 34000000 		.4byte	.LFE20
 2833 02ae 0400     		.2byte	0x4
 2834 02b0 F3       		.byte	0xf3
 2835 02b1 01       		.uleb128 0x1
 2836 02b2 52       		.byte	0x52
 2837 02b3 9F       		.byte	0x9f
 2838 02b4 00000000 		.4byte	0
 2839 02b8 00000000 		.4byte	0
 2840              	.LLST19:
 2841 02bc 18000000 		.4byte	.LVL64
 2842 02c0 27000000 		.4byte	.LVL65-1
 2843 02c4 0100     		.2byte	0x1
 2844 02c6 50       		.byte	0x50
 2845 02c7 00000000 		.4byte	0
 2846 02cb 00000000 		.4byte	0
 2847              	.LLST20:
 2848 02cf 14000000 		.4byte	.LVL63
 2849 02d3 28000000 		.4byte	.LVL65
 2850 02d7 0100     		.2byte	0x1
 2851 02d9 56       		.byte	0x56
 2852 02da 00000000 		.4byte	0
 2853 02de 00000000 		.4byte	0
 2854              	.LLST21:
 2855 02e2 0E000000 		.4byte	.LVL61
 2856 02e6 28000000 		.4byte	.LVL65
 2857 02ea 0100     		.2byte	0x1
 2858 02ec 55       		.byte	0x55
 2859 02ed 00000000 		.4byte	0
 2860 02f1 00000000 		.4byte	0
 2861              	.LLST22:
 2862 02f5 00000000 		.4byte	.LVL66
 2863 02f9 0E000000 		.4byte	.LVL67
 2864 02fd 0100     		.2byte	0x1
 2865 02ff 50       		.byte	0x50
 2866 0300 0E000000 		.4byte	.LVL67
 2867 0304 60000000 		.4byte	.LFE21
 2868 0308 0400     		.2byte	0x4
 2869 030a F3       		.byte	0xf3
 2870 030b 01       		.uleb128 0x1
 2871 030c 50       		.byte	0x50
 2872 030d 9F       		.byte	0x9f
 2873 030e 00000000 		.4byte	0
 2874 0312 00000000 		.4byte	0
 2875              	.LLST23:
 2876 0316 00000000 		.4byte	.LVL66
 2877 031a 14000000 		.4byte	.LVL68
 2878 031e 0100     		.2byte	0x1
 2879 0320 51       		.byte	0x51
 2880 0321 14000000 		.4byte	.LVL68
 2881 0325 60000000 		.4byte	.LFE21
 2882 0329 0400     		.2byte	0x4
 2883 032b F3       		.byte	0xf3
 2884 032c 01       		.uleb128 0x1
 2885 032d 51       		.byte	0x51
 2886 032e 9F       		.byte	0x9f
 2887 032f 00000000 		.4byte	0
 2888 0333 00000000 		.4byte	0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 75


 2889              	.LLST24:
 2890 0337 00000000 		.4byte	.LVL66
 2891 033b 17000000 		.4byte	.LVL69-1
 2892 033f 0100     		.2byte	0x1
 2893 0341 52       		.byte	0x52
 2894 0342 17000000 		.4byte	.LVL69-1
 2895 0346 60000000 		.4byte	.LFE21
 2896 034a 0400     		.2byte	0x4
 2897 034c F3       		.byte	0xf3
 2898 034d 01       		.uleb128 0x1
 2899 034e 52       		.byte	0x52
 2900 034f 9F       		.byte	0x9f
 2901 0350 00000000 		.4byte	0
 2902 0354 00000000 		.4byte	0
 2903              	.LLST25:
 2904 0358 00000000 		.4byte	.LVL66
 2905 035c 17000000 		.4byte	.LVL69-1
 2906 0360 0100     		.2byte	0x1
 2907 0362 53       		.byte	0x53
 2908 0363 17000000 		.4byte	.LVL69-1
 2909 0367 60000000 		.4byte	.LFE21
 2910 036b 0400     		.2byte	0x4
 2911 036d F3       		.byte	0xf3
 2912 036e 01       		.uleb128 0x1
 2913 036f 53       		.byte	0x53
 2914 0370 9F       		.byte	0x9f
 2915 0371 00000000 		.4byte	0
 2916 0375 00000000 		.4byte	0
 2917              	.LLST26:
 2918 0379 3A000000 		.4byte	.LVL75
 2919 037d 4D000000 		.4byte	.LVL76-1
 2920 0381 0100     		.2byte	0x1
 2921 0383 50       		.byte	0x50
 2922 0384 00000000 		.4byte	0
 2923 0388 00000000 		.4byte	0
 2924              	.LLST27:
 2925 038c 1A000000 		.4byte	.LVL70
 2926 0390 4E000000 		.4byte	.LVL76
 2927 0394 0100     		.2byte	0x1
 2928 0396 57       		.byte	0x57
 2929 0397 00000000 		.4byte	0
 2930 039b 00000000 		.4byte	0
 2931              	.LLST28:
 2932 039f 2C000000 		.4byte	.LVL72
 2933 03a3 4E000000 		.4byte	.LVL76
 2934 03a7 0100     		.2byte	0x1
 2935 03a9 56       		.byte	0x56
 2936 03aa 00000000 		.4byte	0
 2937 03ae 00000000 		.4byte	0
 2938              	.LLST29:
 2939 03b2 36000000 		.4byte	.LVL74
 2940 03b6 4E000000 		.4byte	.LVL76
 2941 03ba 0100     		.2byte	0x1
 2942 03bc 55       		.byte	0x55
 2943 03bd 00000000 		.4byte	0
 2944 03c1 00000000 		.4byte	0
 2945              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 76


 2946 0000 B4000000 		.4byte	0xb4
 2947 0004 0200     		.2byte	0x2
 2948 0006 00000000 		.4byte	.Ldebug_info0
 2949 000a 04       		.byte	0x4
 2950 000b 00       		.byte	0
 2951 000c 0000     		.2byte	0
 2952 000e 0000     		.2byte	0
 2953 0010 00000000 		.4byte	.LFB5
 2954 0014 2C000000 		.4byte	.LFE5-.LFB5
 2955 0018 00000000 		.4byte	.LFB6
 2956 001c 1C000000 		.4byte	.LFE6-.LFB6
 2957 0020 00000000 		.4byte	.LFB7
 2958 0024 1C000000 		.4byte	.LFE7-.LFB7
 2959 0028 00000000 		.4byte	.LFB3
 2960 002c 18000000 		.4byte	.LFE3-.LFB3
 2961 0030 00000000 		.4byte	.LFB8
 2962 0034 24000000 		.4byte	.LFE8-.LFB8
 2963 0038 00000000 		.4byte	.LFB9
 2964 003c 10000000 		.4byte	.LFE9-.LFB9
 2965 0040 00000000 		.4byte	.LFB10
 2966 0044 0C000000 		.4byte	.LFE10-.LFB10
 2967 0048 00000000 		.4byte	.LFB11
 2968 004c 0C000000 		.4byte	.LFE11-.LFB11
 2969 0050 00000000 		.4byte	.LFB12
 2970 0054 10000000 		.4byte	.LFE12-.LFB12
 2971 0058 00000000 		.4byte	.LFB13
 2972 005c 1C000000 		.4byte	.LFE13-.LFB13
 2973 0060 00000000 		.4byte	.LFB14
 2974 0064 10000000 		.4byte	.LFE14-.LFB14
 2975 0068 00000000 		.4byte	.LFB15
 2976 006c 28000000 		.4byte	.LFE15-.LFB15
 2977 0070 00000000 		.4byte	.LFB16
 2978 0074 28000000 		.4byte	.LFE16-.LFB16
 2979 0078 00000000 		.4byte	.LFB17
 2980 007c 14000000 		.4byte	.LFE17-.LFB17
 2981 0080 00000000 		.4byte	.LFB4
 2982 0084 04010000 		.4byte	.LFE4-.LFB4
 2983 0088 00000000 		.4byte	.LFB2
 2984 008c 20000000 		.4byte	.LFE2-.LFB2
 2985 0090 00000000 		.4byte	.LFB18
 2986 0094 10000000 		.4byte	.LFE18-.LFB18
 2987 0098 00000000 		.4byte	.LFB19
 2988 009c 2C000000 		.4byte	.LFE19-.LFB19
 2989 00a0 00000000 		.4byte	.LFB20
 2990 00a4 34000000 		.4byte	.LFE20-.LFB20
 2991 00a8 00000000 		.4byte	.LFB21
 2992 00ac 60000000 		.4byte	.LFE21-.LFB21
 2993 00b0 00000000 		.4byte	0
 2994 00b4 00000000 		.4byte	0
 2995              		.section	.debug_ranges,"",%progbits
 2996              	.Ldebug_ranges0:
 2997 0000 00000000 		.4byte	.LFB5
 2998 0004 2C000000 		.4byte	.LFE5
 2999 0008 00000000 		.4byte	.LFB6
 3000 000c 1C000000 		.4byte	.LFE6
 3001 0010 00000000 		.4byte	.LFB7
 3002 0014 1C000000 		.4byte	.LFE7
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 77


 3003 0018 00000000 		.4byte	.LFB3
 3004 001c 18000000 		.4byte	.LFE3
 3005 0020 00000000 		.4byte	.LFB8
 3006 0024 24000000 		.4byte	.LFE8
 3007 0028 00000000 		.4byte	.LFB9
 3008 002c 10000000 		.4byte	.LFE9
 3009 0030 00000000 		.4byte	.LFB10
 3010 0034 0C000000 		.4byte	.LFE10
 3011 0038 00000000 		.4byte	.LFB11
 3012 003c 0C000000 		.4byte	.LFE11
 3013 0040 00000000 		.4byte	.LFB12
 3014 0044 10000000 		.4byte	.LFE12
 3015 0048 00000000 		.4byte	.LFB13
 3016 004c 1C000000 		.4byte	.LFE13
 3017 0050 00000000 		.4byte	.LFB14
 3018 0054 10000000 		.4byte	.LFE14
 3019 0058 00000000 		.4byte	.LFB15
 3020 005c 28000000 		.4byte	.LFE15
 3021 0060 00000000 		.4byte	.LFB16
 3022 0064 28000000 		.4byte	.LFE16
 3023 0068 00000000 		.4byte	.LFB17
 3024 006c 14000000 		.4byte	.LFE17
 3025 0070 00000000 		.4byte	.LFB4
 3026 0074 04010000 		.4byte	.LFE4
 3027 0078 00000000 		.4byte	.LFB2
 3028 007c 20000000 		.4byte	.LFE2
 3029 0080 00000000 		.4byte	.LFB18
 3030 0084 10000000 		.4byte	.LFE18
 3031 0088 00000000 		.4byte	.LFB19
 3032 008c 2C000000 		.4byte	.LFE19
 3033 0090 00000000 		.4byte	.LFB20
 3034 0094 34000000 		.4byte	.LFE20
 3035 0098 00000000 		.4byte	.LFB21
 3036 009c 60000000 		.4byte	.LFE21
 3037 00a0 00000000 		.4byte	0
 3038 00a4 00000000 		.4byte	0
 3039              		.section	.debug_line,"",%progbits
 3040              	.Ldebug_line0:
 3041 0000 D8020000 		.section	.debug_str,"MS",%progbits,1
 3041      0200BA00 
 3041      00000201 
 3041      FB0E0D00 
 3041      01010101 
 3042              	.LASF61:
 3043 0000 63757272 		.ascii	"currentSpeed\000"
 3043      656E7453 
 3043      70656564 
 3043      00
 3044              	.LASF22:
 3045 000d 61637475 		.ascii	"actualPeriod\000"
 3045      616C5065 
 3045      72696F64 
 3045      00
 3046              	.LASF10:
 3047 001a 75696E74 		.ascii	"uint16\000"
 3047      313600
 3048              	.LASF28:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 78


 3049 0021 696E6974 		.ascii	"initRpm\000"
 3049      52706D00 
 3050              	.LASF66:
 3051 0029 46616E43 		.ascii	"FanController_GetActualSpeed\000"
 3051      6F6E7472 
 3051      6F6C6C65 
 3051      725F4765 
 3051      74416374 
 3052              	.LASF94:
 3053 0046 43794578 		.ascii	"CyExitCriticalSection\000"
 3053      69744372 
 3053      69746963 
 3053      616C5365 
 3053      6374696F 
 3054              	.LASF54:
 3055 005c 64757479 		.ascii	"dutyCycle\000"
 3055      4379636C 
 3055      6500
 3056              	.LASF36:
 3057 0066 46616E43 		.ascii	"FanController_Enable\000"
 3057      6F6E7472 
 3057      6F6C6C65 
 3057      725F456E 
 3057      61626C65 
 3058              	.LASF64:
 3059 007b 46616E43 		.ascii	"FanController_Start\000"
 3059      6F6E7472 
 3059      6F6C6C65 
 3059      725F5374 
 3059      61727400 
 3060              	.LASF47:
 3061 008f 46616E43 		.ascii	"FanController_GetAlertMask\000"
 3061      6F6E7472 
 3061      6F6C6C65 
 3061      725F4765 
 3061      74416C65 
 3062              	.LASF31:
 3063 00aa 70776D53 		.ascii	"pwmSetDutyReg\000"
 3063      65744475 
 3063      74795265 
 3063      6700
 3064              	.LASF77:
 3065 00b8 746D7041 		.ascii	"tmpA3\000"
 3065      3300
 3066              	.LASF99:
 3067 00be 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3067      43313120 
 3067      352E342E 
 3067      31203230 
 3067      31363036 
 3068 00f1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3068      20726576 
 3068      6973696F 
 3068      6E203233 
 3068      37373135 
 3069 0124 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3069      66756E63 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 79


 3069      74696F6E 
 3069      2D736563 
 3069      74696F6E 
 3070              	.LASF96:
 3071 014c 46616E43 		.ascii	"FanController_FW_PWM1_Init\000"
 3071      6F6E7472 
 3071      6F6C6C65 
 3071      725F4657 
 3071      5F50574D 
 3072              	.LASF7:
 3073 0167 6C6F6E67 		.ascii	"long long unsigned int\000"
 3073      206C6F6E 
 3073      6720756E 
 3073      7369676E 
 3073      65642069 
 3074              	.LASF60:
 3075 017e 6F766572 		.ascii	"overrideDuty\000"
 3075      72696465 
 3075      44757479 
 3075      00
 3076              	.LASF97:
 3077 018b 46616E43 		.ascii	"FanController_DataSend_StartEx\000"
 3077      6F6E7472 
 3077      6F6C6C65 
 3077      725F4461 
 3077      74615365 
 3078              	.LASF33:
 3079 01aa 70776D50 		.ascii	"pwmPeriodReg\000"
 3079      6572696F 
 3079      64526567 
 3079      00
 3080              	.LASF6:
 3081 01b7 6C6F6E67 		.ascii	"long long int\000"
 3081      206C6F6E 
 3081      6720696E 
 3081      7400
 3082              	.LASF0:
 3083 01c5 7369676E 		.ascii	"signed char\000"
 3083      65642063 
 3083      68617200 
 3084              	.LASF55:
 3085 01d1 6E657743 		.ascii	"newCompare\000"
 3085      6F6D7061 
 3085      726500
 3086              	.LASF73:
 3087 01dc 746D704F 		.ascii	"tmpOutH\000"
 3087      75744800 
 3088              	.LASF38:
 3089 01e4 696E7465 		.ascii	"interruptState\000"
 3089      72727570 
 3089      74537461 
 3089      746500
 3090              	.LASF13:
 3091 01f3 696E7433 		.ascii	"int32\000"
 3091      3200
 3092              	.LASF4:
 3093 01f9 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 80


 3093      20696E74 
 3093      00
 3094              	.LASF71:
 3095 0202 7361744C 		.ascii	"satL\000"
 3095      00
 3096              	.LASF18:
 3097 0207 72656731 		.ascii	"reg16\000"
 3097      3600
 3098              	.LASF78:
 3099 020d 46616E43 		.ascii	"FanController_fanPwmInitRegs\000"
 3099      6F6E7472 
 3099      6F6C6C65 
 3099      725F6661 
 3099      6E50776D 
 3100              	.LASF9:
 3101 022a 75696E74 		.ascii	"uint8\000"
 3101      3800
 3102              	.LASF101:
 3103 0230 433A5C55 		.ascii	"C:\\Users\\Ade0n\\Desktop\\PR\\CyberPong\\CyberPong"
 3103      73657273 
 3103      5C416465 
 3103      306E5C44 
 3103      65736B74 
 3104 025d 2E637964 		.ascii	".cydsn\000"
 3104      736E00
 3105              	.LASF43:
 3106 0264 616C6572 		.ascii	"alertMode\000"
 3106      744D6F64 
 3106      6500
 3107              	.LASF59:
 3108 026e 66616E4E 		.ascii	"fanNumber\000"
 3108      756D6265 
 3108      7200
 3109              	.LASF75:
 3110 0278 746D7041 		.ascii	"tmpA1\000"
 3110      3100
 3111              	.LASF11:
 3112 027e 75696E74 		.ascii	"uint32\000"
 3112      333200
 3113              	.LASF41:
 3114 0285 46616E43 		.ascii	"FanController_SetAlertMode\000"
 3114      6F6E7472 
 3114      6F6C6C65 
 3114      725F5365 
 3114      74416C65 
 3115              	.LASF37:
 3116 02a0 46616E43 		.ascii	"FanController_EnableAlert\000"
 3116      6F6E7472 
 3116      6F6C6C65 
 3116      725F456E 
 3116      61626C65 
 3117              	.LASF32:
 3118 02ba 46616E43 		.ascii	"FanController_fanDriverRegsStruct\000"
 3118      6F6E7472 
 3118      6F6C6C65 
 3118      725F6661 
 3118      6E447269 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 81


 3119              	.LASF8:
 3120 02dc 756E7369 		.ascii	"unsigned int\000"
 3120      676E6564 
 3120      20696E74 
 3120      00
 3121              	.LASF27:
 3122 02e9 64757479 		.ascii	"dutyRpmSlope\000"
 3122      52706D53 
 3122      6C6F7065 
 3122      00
 3123              	.LASF5:
 3124 02f6 6C6F6E67 		.ascii	"long unsigned int\000"
 3124      20756E73 
 3124      69676E65 
 3124      6420696E 
 3124      7400
 3125              	.LASF39:
 3126 0308 46616E43 		.ascii	"FanController_DisableAlert\000"
 3126      6F6E7472 
 3126      6F6C6C65 
 3126      725F4469 
 3126      7361626C 
 3127              	.LASF92:
 3128 0323 46616E43 		.ascii	"FanController_FW_PWM1_Enable\000"
 3128      6F6E7472 
 3128      6F6C6C65 
 3128      725F4657 
 3128      5F50574D 
 3129              	.LASF93:
 3130 0340 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3130      74657243 
 3130      72697469 
 3130      63616C53 
 3130      65637469 
 3131              	.LASF90:
 3132 0357 46616E43 		.ascii	"FanController_alertMask\000"
 3132      6F6E7472 
 3132      6F6C6C65 
 3132      725F616C 
 3132      6572744D 
 3133              	.LASF82:
 3134 036f 46616E43 		.ascii	"FanController_pidA1\000"
 3134      6F6E7472 
 3134      6F6C6C65 
 3134      725F7069 
 3134      64413100 
 3135              	.LASF83:
 3136 0383 46616E43 		.ascii	"FanController_pidA2\000"
 3136      6F6E7472 
 3136      6F6C6C65 
 3136      725F7069 
 3136      64413200 
 3137              	.LASF84:
 3138 0397 46616E43 		.ascii	"FanController_pidA3\000"
 3138      6F6E7472 
 3138      6F6C6C65 
 3138      725F7069 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 82


 3138      64413300 
 3139              	.LASF3:
 3140 03ab 73686F72 		.ascii	"short unsigned int\000"
 3140      7420756E 
 3140      7369676E 
 3140      65642069 
 3140      6E7400
 3141              	.LASF26:
 3142 03be 64757479 		.ascii	"dutyB\000"
 3142      4200
 3143              	.LASF52:
 3144 03c4 46616E43 		.ascii	"FanController_SetDutyCycle\000"
 3144      6F6E7472 
 3144      6F6C6C65 
 3144      725F5365 
 3144      74447574 
 3145              	.LASF49:
 3146 03df 7374616C 		.ascii	"stallStatus\000"
 3146      6C537461 
 3146      74757300 
 3147              	.LASF63:
 3148 03eb 636F756E 		.ascii	"counti\000"
 3148      746900
 3149              	.LASF53:
 3150 03f2 66616E4F 		.ascii	"fanOrBankNumber\000"
 3150      7242616E 
 3150      6B4E756D 
 3150      62657200 
 3151              	.LASF65:
 3152 0402 46616E43 		.ascii	"FanController_GetDesiredSpeed\000"
 3152      6F6E7472 
 3152      6F6C6C65 
 3152      725F4765 
 3152      74446573 
 3153              	.LASF23:
 3154 0420 72706D41 		.ascii	"rpmA\000"
 3154      00
 3155              	.LASF24:
 3156 0425 72706D42 		.ascii	"rpmB\000"
 3156      00
 3157              	.LASF76:
 3158 042a 746D7041 		.ascii	"tmpA2\000"
 3158      3200
 3159              	.LASF19:
 3160 0430 72656733 		.ascii	"reg32\000"
 3160      3200
 3161              	.LASF88:
 3162 0436 46616E43 		.ascii	"FanController_fanDriverRegs\000"
 3162      6F6E7472 
 3162      6F6C6C65 
 3162      725F6661 
 3162      6E447269 
 3163              	.LASF29:
 3164 0452 696E6974 		.ascii	"initDuty\000"
 3164      44757479 
 3164      00
 3165              	.LASF25:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 83


 3166 045b 64757479 		.ascii	"dutyA\000"
 3166      4100
 3167              	.LASF20:
 3168 0461 73697A65 		.ascii	"sizetype\000"
 3168      74797065 
 3168      00
 3169              	.LASF35:
 3170 046a 6C6F6E67 		.ascii	"long double\000"
 3170      20646F75 
 3170      626C6500 
 3171              	.LASF34:
 3172 0476 46616E43 		.ascii	"FanController_fanPwmInitRegsStruct\000"
 3172      6F6E7472 
 3172      6F6C6C65 
 3172      725F6661 
 3172      6E50776D 
 3173              	.LASF21:
 3174 0499 46616E43 		.ascii	"FanController_fanControlStruct\000"
 3174      6F6E7472 
 3174      6F6C6C65 
 3174      725F6661 
 3174      6E436F6E 
 3175              	.LASF40:
 3176 04b8 46616E43 		.ascii	"FanController_Stop\000"
 3176      6F6E7472 
 3176      6F6C6C65 
 3176      725F5374 
 3176      6F7000
 3177              	.LASF45:
 3178 04cb 46616E43 		.ascii	"FanController_GetAlertMode\000"
 3178      6F6E7472 
 3178      6F6C6C65 
 3178      725F4765 
 3178      74416C65 
 3179              	.LASF86:
 3180 04e6 46616E43 		.ascii	"FanController_outputSatH\000"
 3180      6F6E7472 
 3180      6F6C6C65 
 3180      725F6F75 
 3180      74707574 
 3181              	.LASF69:
 3182 04ff 66616E4E 		.ascii	"fanNum\000"
 3182      756D00
 3183              	.LASF85:
 3184 0506 46616E43 		.ascii	"FanController_outputSatL\000"
 3184      6F6E7472 
 3184      6F6C6C65 
 3184      725F6F75 
 3184      74707574 
 3185              	.LASF100:
 3186 051f 47656E65 		.ascii	"Generated_Source\\PSoC4\\FanController.c\000"
 3186      72617465 
 3186      645F536F 
 3186      75726365 
 3186      5C50536F 
 3187              	.LASF30:
 3188 0546 46616E43 		.ascii	"FanController_fanPropertiesStruct\000"
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 84


 3188      6F6E7472 
 3188      6F6C6C65 
 3188      725F6661 
 3188      6E50726F 
 3189              	.LASF79:
 3190 0568 46616E43 		.ascii	"FanController_initVar\000"
 3190      6F6E7472 
 3190      6F6C6C65 
 3190      725F696E 
 3190      69745661 
 3191              	.LASF81:
 3192 057e 46616E43 		.ascii	"FanController_desiredFansSpeed\000"
 3192      6F6E7472 
 3192      6F6C6C65 
 3192      725F6465 
 3192      73697265 
 3193              	.LASF14:
 3194 059d 666C6F61 		.ascii	"float\000"
 3194      7400
 3195              	.LASF46:
 3196 05a3 46616E43 		.ascii	"FanController_GetAlertSource\000"
 3196      6F6E7472 
 3196      6F6C6C65 
 3196      725F4765 
 3196      74416C65 
 3197              	.LASF17:
 3198 05c0 72656738 		.ascii	"reg8\000"
 3198      00
 3199              	.LASF1:
 3200 05c5 756E7369 		.ascii	"unsigned char\000"
 3200      676E6564 
 3200      20636861 
 3200      7200
 3201              	.LASF2:
 3202 05d3 73686F72 		.ascii	"short int\000"
 3202      7420696E 
 3202      7400
 3203              	.LASF91:
 3204 05dd 46616E43 		.ascii	"FanController_stallStatus\000"
 3204      6F6E7472 
 3204      6F6C6C65 
 3204      725F7374 
 3204      616C6C53 
 3205              	.LASF95:
 3206 05f7 46616E43 		.ascii	"FanController_FW_PWM1_Stop\000"
 3206      6F6E7472 
 3206      6F6C6C65 
 3206      725F4657 
 3206      5F50574D 
 3207              	.LASF48:
 3208 0612 46616E43 		.ascii	"FanController_GetFanStallStatus\000"
 3208      6F6E7472 
 3208      6F6C6C65 
 3208      725F4765 
 3208      7446616E 
 3209              	.LASF51:
 3210 0632 73706565 		.ascii	"speedStatus\000"
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 85


 3210      64537461 
 3210      74757300 
 3211              	.LASF68:
 3212 063e 46616E43 		.ascii	"FanController_SetSaturation\000"
 3212      6F6E7472 
 3212      6F6C6C65 
 3212      725F5365 
 3212      74536174 
 3213              	.LASF72:
 3214 065a 746D704F 		.ascii	"tmpOutL\000"
 3214      75744C00 
 3215              	.LASF44:
 3216 0662 616C6572 		.ascii	"alertMask\000"
 3216      744D6173 
 3216      6B00
 3217              	.LASF16:
 3218 066c 63686172 		.ascii	"char\000"
 3218      00
 3219              	.LASF57:
 3220 0671 64757943 		.ascii	"duyCycle\000"
 3220      79636C65 
 3220      00
 3221              	.LASF74:
 3222 067a 46616E43 		.ascii	"FanController_SetPID\000"
 3222      6F6E7472 
 3222      6F6C6C65 
 3222      725F5365 
 3222      74504944 
 3223              	.LASF89:
 3224 068f 46616E43 		.ascii	"FanController_fanProperties\000"
 3224      6F6E7472 
 3224      6F6C6C65 
 3224      725F6661 
 3224      6E50726F 
 3225              	.LASF42:
 3226 06ab 46616E43 		.ascii	"FanController_SetAlertMask\000"
 3226      6F6E7472 
 3226      6F6C6C65 
 3226      725F5365 
 3226      74416C65 
 3227              	.LASF98:
 3228 06c6 46616E43 		.ascii	"FanController_PID_ISR_StartEx\000"
 3228      6F6E7472 
 3228      6F6C6C65 
 3228      725F5049 
 3228      445F4953 
 3229              	.LASF67:
 3230 06e4 61637475 		.ascii	"actualSpeed\000"
 3230      616C5370 
 3230      65656400 
 3231              	.LASF56:
 3232 06f0 46616E43 		.ascii	"FanController_GetDutyCycle\000"
 3232      6F6E7472 
 3232      6F6C6C65 
 3232      725F4765 
 3232      74447574 
 3233              	.LASF80:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cc0nFASN.s 			page 86


 3234 070b 46616E43 		.ascii	"FanController_fanControl\000"
 3234      6F6E7472 
 3234      6F6C6C65 
 3234      725F6661 
 3234      6E436F6E 
 3235              	.LASF12:
 3236 0724 696E7431 		.ascii	"int16\000"
 3236      3600
 3237              	.LASF62:
 3238 072a 46616E43 		.ascii	"FanController_Init\000"
 3238      6F6E7472 
 3238      6F6C6C65 
 3238      725F496E 
 3238      697400
 3239              	.LASF87:
 3240 073d 46616E43 		.ascii	"FanController_speedStatus\000"
 3240      6F6E7472 
 3240      6F6C6C65 
 3240      725F7370 
 3240      65656453 
 3241              	.LASF50:
 3242 0757 46616E43 		.ascii	"FanController_GetFanSpeedStatus\000"
 3242      6F6E7472 
 3242      6F6C6C65 
 3242      725F4765 
 3242      7446616E 
 3243              	.LASF15:
 3244 0777 646F7562 		.ascii	"double\000"
 3244      6C6500
 3245              	.LASF70:
 3246 077e 73617448 		.ascii	"satH\000"
 3246      00
 3247              	.LASF58:
 3248 0783 46616E43 		.ascii	"FanController_SetDesiredSpeed\000"
 3248      6F6E7472 
 3248      6F6C6C65 
 3248      725F5365 
 3248      74446573 
 3249              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
