ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"FanController.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.FanController_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	FanController_Enable
  22              		.code	16
  23              		.thumb_func
  24              		.type	FanController_Enable, %function
  25              	FanController_Enable:
  26              	.LFB5:
  27              		.file 1 "Generated_Source\\PSoC4\\FanController.c"
   1:Generated_Source\PSoC4/FanController.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/FanController.c **** * File Name: FanController.c
   3:Generated_Source\PSoC4/FanController.c **** * Version 4.10
   4:Generated_Source\PSoC4/FanController.c **** *
   5:Generated_Source\PSoC4/FanController.c **** * Description:
   6:Generated_Source\PSoC4/FanController.c **** *  This file contains the API files for the FanController component.
   7:Generated_Source\PSoC4/FanController.c **** *  The FanController component supports up to 16 pulse width modulator (PWM)
   8:Generated_Source\PSoC4/FanController.c **** *  controlled 4-wire fans and through an intuitive graphical interface,
   9:Generated_Source\PSoC4/FanController.c **** *  enabling designers to quickly configure the number of fans, their electro-
  10:Generated_Source\PSoC4/FanController.c **** *  mechanical properties, organization into banks (if desired) and the control
  11:Generated_Source\PSoC4/FanController.c **** *  algorithm type: firmware or hardware based.
  12:Generated_Source\PSoC4/FanController.c **** *
  13:Generated_Source\PSoC4/FanController.c **** *  Refer to AN66627 "PSoC(R) 3 and PSoC 5 - Intelligent Fan Controller" for
  14:Generated_Source\PSoC4/FanController.c **** *  more details and example projects.
  15:Generated_Source\PSoC4/FanController.c **** *
  16:Generated_Source\PSoC4/FanController.c **** * Note:
  17:Generated_Source\PSoC4/FanController.c **** *
  18:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
  19:Generated_Source\PSoC4/FanController.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  20:Generated_Source\PSoC4/FanController.c **** * You may use this file only in accordance with the license, terms, conditions,
  21:Generated_Source\PSoC4/FanController.c **** * disclaimers, and limitations in the end user license agreement accompanying
  22:Generated_Source\PSoC4/FanController.c **** * the software package with which this file was provided.
  23:Generated_Source\PSoC4/FanController.c **** ********************************************************************************/
  24:Generated_Source\PSoC4/FanController.c **** 
  25:Generated_Source\PSoC4/FanController.c **** #include "FanController.h"
  26:Generated_Source\PSoC4/FanController.c **** #include "CyLib.h"
  27:Generated_Source\PSoC4/FanController.c **** 
  28:Generated_Source\PSoC4/FanController.c **** #if(CY_PSOC4)
  29:Generated_Source\PSoC4/FanController.c ****     #include "FanController_DataSend.h"
  30:Generated_Source\PSoC4/FanController.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 2


  31:Generated_Source\PSoC4/FanController.c ****     #if(FanController_NUMBER_OF_FAN_OUTPUTS == 1u)
  32:Generated_Source\PSoC4/FanController.c ****         #include "FanController_FW_PWM1.h"
  33:Generated_Source\PSoC4/FanController.c ****     #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 2u)
  34:Generated_Source\PSoC4/FanController.c ****         #include "FanController_FW_PWM1.h"
  35:Generated_Source\PSoC4/FanController.c ****         #include "FanController_FW_PWM2.h"
  36:Generated_Source\PSoC4/FanController.c ****     #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 3u)
  37:Generated_Source\PSoC4/FanController.c ****         #include "FanController_FW_PWM1.h"
  38:Generated_Source\PSoC4/FanController.c ****         #include "FanController_FW_PWM2.h"
  39:Generated_Source\PSoC4/FanController.c ****         #include "FanController_FW_PWM3.h"
  40:Generated_Source\PSoC4/FanController.c ****     #else
  41:Generated_Source\PSoC4/FanController.c ****         #include "FanController_FW_PWM1.h"
  42:Generated_Source\PSoC4/FanController.c ****         #include "FanController_FW_PWM2.h"
  43:Generated_Source\PSoC4/FanController.c ****         #include "FanController_FW_PWM3.h"
  44:Generated_Source\PSoC4/FanController.c ****         #include "FanController_FW_PWM4.h"
  45:Generated_Source\PSoC4/FanController.c ****     #endif /* (FanController_NUMBER_OF_FAN_OUTPUTS == 1u) */
  46:Generated_Source\PSoC4/FanController.c **** 
  47:Generated_Source\PSoC4/FanController.c **** #endif /* (CY_PSOC4) */
  48:Generated_Source\PSoC4/FanController.c **** 
  49:Generated_Source\PSoC4/FanController.c **** #if(FanController_IS_AUTO_FIRMWARE_MODE)
  50:Generated_Source\PSoC4/FanController.c ****     #include "FanController_PID_ISR.h"
  51:Generated_Source\PSoC4/FanController.c **** #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
  52:Generated_Source\PSoC4/FanController.c **** 
  53:Generated_Source\PSoC4/FanController.c **** 
  54:Generated_Source\PSoC4/FanController.c **** /*******************************************************************************
  55:Generated_Source\PSoC4/FanController.c **** * Variables
  56:Generated_Source\PSoC4/FanController.c **** *
  57:Generated_Source\PSoC4/FanController.c **** * Fan Control Data Structure declaration and initialization can be found at the
  58:Generated_Source\PSoC4/FanController.c **** * end of this file due to its large size.
  59:Generated_Source\PSoC4/FanController.c **** ********************************************************************************/
  60:Generated_Source\PSoC4/FanController.c **** uint8   FanController_initVar = 0u;
  61:Generated_Source\PSoC4/FanController.c **** 
  62:Generated_Source\PSoC4/FanController.c **** #if (CY_PSOC4)
  63:Generated_Source\PSoC4/FanController.c ****     uint16 FanController_alertMask = 0u;
  64:Generated_Source\PSoC4/FanController.c ****     uint16 FanController_stallStatus = 0u;
  65:Generated_Source\PSoC4/FanController.c **** #else
  66:Generated_Source\PSoC4/FanController.c ****     
  67:Generated_Source\PSoC4/FanController.c ****     /* Stores channel number of Tachometer out DMA */
  68:Generated_Source\PSoC4/FanController.c ****     static uint8 FanController_TachOutDMA_channel = 0u;
  69:Generated_Source\PSoC4/FanController.c **** 
  70:Generated_Source\PSoC4/FanController.c ****     #if(FanController_IS_AUTO_HARDWARE_MODE)
  71:Generated_Source\PSoC4/FanController.c ****         
  72:Generated_Source\PSoC4/FanController.c ****         /* Stores channel number of Tachometer in DMA */
  73:Generated_Source\PSoC4/FanController.c ****         static uint8 FanController_TachInDMA_channel = 0u;
  74:Generated_Source\PSoC4/FanController.c **** 
  75:Generated_Source\PSoC4/FanController.c ****     #endif /* FanController_IS_AUTO_HARDWARE_MODE */
  76:Generated_Source\PSoC4/FanController.c **** 
  77:Generated_Source\PSoC4/FanController.c **** #endif /* (CY_PSOC4) */
  78:Generated_Source\PSoC4/FanController.c **** 
  79:Generated_Source\PSoC4/FanController.c **** /* Arrays for storing PID parameters and saturation ranges */
  80:Generated_Source\PSoC4/FanController.c **** #if(FanController_IS_AUTO_FIRMWARE_MODE)
  81:Generated_Source\PSoC4/FanController.c ****     int16 FanController_pidA1[FanController_NUMBER_OF_FANS];
  82:Generated_Source\PSoC4/FanController.c ****     int16 FanController_pidA2[FanController_NUMBER_OF_FANS];
  83:Generated_Source\PSoC4/FanController.c ****     int16 FanController_pidA3[FanController_NUMBER_OF_FANS];
  84:Generated_Source\PSoC4/FanController.c **** 
  85:Generated_Source\PSoC4/FanController.c ****     uint32 FanController_outputSatL[FanController_NUMBER_OF_FANS];
  86:Generated_Source\PSoC4/FanController.c ****     uint32 FanController_outputSatH[FanController_NUMBER_OF_FANS];
  87:Generated_Source\PSoC4/FanController.c **** #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 3


  88:Generated_Source\PSoC4/FanController.c **** 
  89:Generated_Source\PSoC4/FanController.c **** #if(!FanController_IS_MANUAL_MODE)
  90:Generated_Source\PSoC4/FanController.c ****     /* An array to store desired fans speeds */
  91:Generated_Source\PSoC4/FanController.c ****     uint16 FanController_desiredFansSpeed[FanController_NUMBER_OF_FANS];
  92:Generated_Source\PSoC4/FanController.c **** #endif /* (!FanController_IS_MANUAL_MODE) */
  93:Generated_Source\PSoC4/FanController.c **** 
  94:Generated_Source\PSoC4/FanController.c **** 
  95:Generated_Source\PSoC4/FanController.c **** /*******************************************************************************
  96:Generated_Source\PSoC4/FanController.c **** * Private API Prototypes
  97:Generated_Source\PSoC4/FanController.c **** ********************************************************************************/
  98:Generated_Source\PSoC4/FanController.c **** #if (!CY_PSOC4)
  99:Generated_Source\PSoC4/FanController.c ****     static void  FanController_SetupDMA(void) CYREENTRANT;
 100:Generated_Source\PSoC4/FanController.c ****     static uint8 FanController_TachOutDMA_DmaInitialize(uint8 burstCount, uint8 requestPerBurst,
 101:Generated_Source\PSoC4/FanController.c ****                                                     uint16 upperSrcAddress, uint16 upperDestAddress
 102:Generated_Source\PSoC4/FanController.c ****     static void  FanController_TachOutDMA_DmaRelease(void) CYREENTRANT;
 103:Generated_Source\PSoC4/FanController.c **** 
 104:Generated_Source\PSoC4/FanController.c ****     #if(FanController_IS_AUTO_HARDWARE_MODE)
 105:Generated_Source\PSoC4/FanController.c **** 
 106:Generated_Source\PSoC4/FanController.c ****         static uint8 FanController_TachInDMA_DmaInitialize(uint8 burstCount, uint8 requestPerBurst,
 107:Generated_Source\PSoC4/FanController.c ****                                                         uint16 upperSrcAddress, uint16 upperDestAdd
 108:Generated_Source\PSoC4/FanController.c ****         static void  FanController_TachInDMA_DmaRelease(void) CYREENTRANT;
 109:Generated_Source\PSoC4/FanController.c **** 
 110:Generated_Source\PSoC4/FanController.c ****     #endif /* FanController_IS_AUTO_HARDWARE_MODE */
 111:Generated_Source\PSoC4/FanController.c **** 
 112:Generated_Source\PSoC4/FanController.c **** #endif /* (!CY_PSOC4) */
 113:Generated_Source\PSoC4/FanController.c **** 
 114:Generated_Source\PSoC4/FanController.c **** 
 115:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 116:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_Start
 117:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 118:Generated_Source\PSoC4/FanController.c **** *
 119:Generated_Source\PSoC4/FanController.c **** * Summary:
 120:Generated_Source\PSoC4/FanController.c **** *  Initializes component if not already initialized, then re-enables it.
 121:Generated_Source\PSoC4/FanController.c **** *
 122:Generated_Source\PSoC4/FanController.c **** * Parameters:
 123:Generated_Source\PSoC4/FanController.c **** *  None
 124:Generated_Source\PSoC4/FanController.c **** *
 125:Generated_Source\PSoC4/FanController.c **** * Return:
 126:Generated_Source\PSoC4/FanController.c **** *  None
 127:Generated_Source\PSoC4/FanController.c **** *
 128:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 129:Generated_Source\PSoC4/FanController.c **** *  None
 130:Generated_Source\PSoC4/FanController.c **** *
 131:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 132:Generated_Source\PSoC4/FanController.c **** void FanController_Start(void) 
 133:Generated_Source\PSoC4/FanController.c **** {
 134:Generated_Source\PSoC4/FanController.c ****     /* If not already initialized, then initialize hardware and variables */
 135:Generated_Source\PSoC4/FanController.c ****     if(FanController_initVar == 0u)
 136:Generated_Source\PSoC4/FanController.c ****     {
 137:Generated_Source\PSoC4/FanController.c ****         FanController_Init();
 138:Generated_Source\PSoC4/FanController.c ****         FanController_initVar = 1u;
 139:Generated_Source\PSoC4/FanController.c ****     }
 140:Generated_Source\PSoC4/FanController.c ****     FanController_Enable();
 141:Generated_Source\PSoC4/FanController.c **** }
 142:Generated_Source\PSoC4/FanController.c **** 
 143:Generated_Source\PSoC4/FanController.c **** 
 144:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 4


 145:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_Stop
 146:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 147:Generated_Source\PSoC4/FanController.c **** *
 148:Generated_Source\PSoC4/FanController.c **** * Summary:
 149:Generated_Source\PSoC4/FanController.c **** *  Stop the fan controller component.  Disables all hardware sub-components,
 150:Generated_Source\PSoC4/FanController.c **** *  drives fan outputs high and de-asserts the alert pin.
 151:Generated_Source\PSoC4/FanController.c **** *
 152:Generated_Source\PSoC4/FanController.c **** * Parameters:
 153:Generated_Source\PSoC4/FanController.c **** *  None
 154:Generated_Source\PSoC4/FanController.c **** *
 155:Generated_Source\PSoC4/FanController.c **** * Return:
 156:Generated_Source\PSoC4/FanController.c **** *  None
 157:Generated_Source\PSoC4/FanController.c **** *
 158:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 159:Generated_Source\PSoC4/FanController.c **** *  All PWM outputs to fans will be driven high (100% duty cycle).
 160:Generated_Source\PSoC4/FanController.c **** *  Alert output de-asserted.
 161:Generated_Source\PSoC4/FanController.c **** *
 162:Generated_Source\PSoC4/FanController.c **** ******************************************************************************/
 163:Generated_Source\PSoC4/FanController.c **** void FanController_Stop(void) 
 164:Generated_Source\PSoC4/FanController.c **** {
 165:Generated_Source\PSoC4/FanController.c ****     /* Turn off the hardware sub-components */
 166:Generated_Source\PSoC4/FanController.c ****     FanController_GLOBAL_CONTROL_REG = 0u;
 167:Generated_Source\PSoC4/FanController.c **** 
 168:Generated_Source\PSoC4/FanController.c ****     /* De-assert the alert pin */
 169:Generated_Source\PSoC4/FanController.c ****     FanController_DisableAlert();
 170:Generated_Source\PSoC4/FanController.c **** 
 171:Generated_Source\PSoC4/FanController.c ****     #if (!CY_PSOC4)
 172:Generated_Source\PSoC4/FanController.c **** 
 173:Generated_Source\PSoC4/FanController.c ****         /* Release DMA resources */
 174:Generated_Source\PSoC4/FanController.c ****         FanController_TachOutDMA_DmaRelease();
 175:Generated_Source\PSoC4/FanController.c **** 
 176:Generated_Source\PSoC4/FanController.c ****         #if(FanController_IS_AUTO_HARDWARE_MODE)
 177:Generated_Source\PSoC4/FanController.c ****             FanController_TachInDMA_DmaRelease();
 178:Generated_Source\PSoC4/FanController.c ****         #endif /* FanController_IS_AUTO_HARDWARE_MODE */
 179:Generated_Source\PSoC4/FanController.c **** 
 180:Generated_Source\PSoC4/FanController.c ****     #else
 181:Generated_Source\PSoC4/FanController.c **** 
 182:Generated_Source\PSoC4/FanController.c ****         /* Disable PWMs */
 183:Generated_Source\PSoC4/FanController.c ****         #if(FanController_NUMBER_OF_FAN_OUTPUTS == 1u)
 184:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Stop();
 185:Generated_Source\PSoC4/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 2u)
 186:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Stop();
 187:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM2_Stop();
 188:Generated_Source\PSoC4/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 3u)
 189:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Stop();
 190:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM2_Stop();
 191:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM3_Stop();
 192:Generated_Source\PSoC4/FanController.c ****         #else
 193:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Stop();
 194:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM2_Stop();
 195:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM3_Stop();
 196:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM4_Stop();
 197:Generated_Source\PSoC4/FanController.c ****         #endif /* (FanController_NUMBER_OF_FAN_OUTPUTS == 1u) */
 198:Generated_Source\PSoC4/FanController.c **** 
 199:Generated_Source\PSoC4/FanController.c ****     #endif /* (!CY_PSOC4) */
 200:Generated_Source\PSoC4/FanController.c **** }
 201:Generated_Source\PSoC4/FanController.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 5


 202:Generated_Source\PSoC4/FanController.c **** 
 203:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 204:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_Init
 205:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 206:Generated_Source\PSoC4/FanController.c **** *
 207:Generated_Source\PSoC4/FanController.c **** * Summary:
 208:Generated_Source\PSoC4/FanController.c **** *  Sets up DMA channels and transaction descriptors. Configures PWMs and
 209:Generated_Source\PSoC4/FanController.c **** *  Tachometer hardware blocks. Also it configures interrupts if they are used
 210:Generated_Source\PSoC4/FanController.c **** *  in the component.
 211:Generated_Source\PSoC4/FanController.c **** *
 212:Generated_Source\PSoC4/FanController.c **** * Parameters:
 213:Generated_Source\PSoC4/FanController.c **** *  None
 214:Generated_Source\PSoC4/FanController.c **** *
 215:Generated_Source\PSoC4/FanController.c **** * Return:
 216:Generated_Source\PSoC4/FanController.c **** *  None
 217:Generated_Source\PSoC4/FanController.c **** *
 218:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 219:Generated_Source\PSoC4/FanController.c **** *  Allocates DMA channels and transaction descriptors (TDs).
 220:Generated_Source\PSoC4/FanController.c **** *
 221:Generated_Source\PSoC4/FanController.c **** ******************************************************************************/
 222:Generated_Source\PSoC4/FanController.c **** void FanController_Init(void) 
 223:Generated_Source\PSoC4/FanController.c **** {
 224:Generated_Source\PSoC4/FanController.c ****     uint8 counti;
 225:Generated_Source\PSoC4/FanController.c ****     uint8 interruptState;
 226:Generated_Source\PSoC4/FanController.c **** 
 227:Generated_Source\PSoC4/FanController.c ****     #if (!CY_PSOC4)
 228:Generated_Source\PSoC4/FanController.c ****         
 229:Generated_Source\PSoC4/FanController.c ****         /* Performs configuration of DMA used in the component */
 230:Generated_Source\PSoC4/FanController.c ****         FanController_SetupDMA();
 231:Generated_Source\PSoC4/FanController.c **** 
 232:Generated_Source\PSoC4/FanController.c ****         /***********************************************************************
 233:Generated_Source\PSoC4/FanController.c ****         * Initialize the PWMs
 234:Generated_Source\PSoC4/FanController.c ****         ***********************************************************************/
 235:Generated_Source\PSoC4/FanController.c ****         #if(FanController_IS_AUTO_HARDWARE_MODE)
 236:Generated_Source\PSoC4/FanController.c **** 
 237:Generated_Source\PSoC4/FanController.c ****             /* Configure hardware controlled PWMs */
 238:Generated_Source\PSoC4/FanController.c ****             for (counti = 0u; counti < FanController_NUMBER_OF_FANS; counti++)
 239:Generated_Source\PSoC4/FanController.c ****             {
 240:Generated_Source\PSoC4/FanController.c ****                 /* 8-bit hardware controlled PWM */
 241:Generated_Source\PSoC4/FanController.c ****                 #if(FanController_PWMRES == FanController_PWMRES_EIGHTBIT)
 242:Generated_Source\PSoC4/FanController.c ****                     /* Set max PWM period */
 243:Generated_Source\PSoC4/FanController.c ****                     CY_SET_REG8(FanController_fanDriverRegs[counti].pwmPeriodReg, FanController_PWM
 244:Generated_Source\PSoC4/FanController.c ****                     /* Set max PWM duty cycle (must be <= PWM period) */
 245:Generated_Source\PSoC4/FanController.c ****                     CY_SET_REG8(FanController_fanDriverRegs[counti].pwmMaxDutyReg, FanController_PW
 246:Generated_Source\PSoC4/FanController.c ****                 /* 10-bit hardware controlled PWM */
 247:Generated_Source\PSoC4/FanController.c ****                 #else
 248:Generated_Source\PSoC4/FanController.c ****                     /* Set max PWM period */
 249:Generated_Source\PSoC4/FanController.c ****                     CY_SET_REG16(FanController_fanDriverRegs[counti].pwmPeriodReg, FanController_PW
 250:Generated_Source\PSoC4/FanController.c ****                     /* Set max PWM duty cycle (must be <= PWM period) */
 251:Generated_Source\PSoC4/FanController.c ****                     CY_SET_REG16(FanController_fanDriverRegs[counti].pwmMaxDutyReg, FanController_P
 252:Generated_Source\PSoC4/FanController.c ****                 #endif /* FanController_PWMRES == FanController_PWMRES_EIGHTBIT */
 253:Generated_Source\PSoC4/FanController.c **** 
 254:Generated_Source\PSoC4/FanController.c ****                 /* Set initial duty cycle */
 255:Generated_Source\PSoC4/FanController.c ****                 FanController_SetDutyCycle((counti + 1u), FanController_fanProperties[counti].initD
 256:Generated_Source\PSoC4/FanController.c ****                 /* Set initial speed */
 257:Generated_Source\PSoC4/FanController.c ****                 FanController_SetDesiredSpeed((counti + 1u), FanController_fanProperties[counti].in
 258:Generated_Source\PSoC4/FanController.c **** 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 6


 259:Generated_Source\PSoC4/FanController.c ****                 /* Enable cnt7 to track speed regulation errors */
 260:Generated_Source\PSoC4/FanController.c ****                 CY_SET_REG8(FanController_fanDriverRegs[counti].errorCountReg,
 261:Generated_Source\PSoC4/FanController.c ****                     CY_GET_REG8(FanController_fanDriverRegs[counti].errorCountReg) | FanController_
 262:Generated_Source\PSoC4/FanController.c ****             }
 263:Generated_Source\PSoC4/FanController.c **** 
 264:Generated_Source\PSoC4/FanController.c ****         #else
 265:Generated_Source\PSoC4/FanController.c **** 
 266:Generated_Source\PSoC4/FanController.c ****             /* Configure firmware controlled PWMs */
 267:Generated_Source\PSoC4/FanController.c ****             for (counti = 0u; counti < FanController_FANPWM_COUNT; counti++)
 268:Generated_Source\PSoC4/FanController.c ****             {
 269:Generated_Source\PSoC4/FanController.c ****                 /* 8-bit firmware controlled PWM */
 270:Generated_Source\PSoC4/FanController.c ****                 #if (FanController_PWMRES == FanController_PWMRES_EIGHTBIT)
 271:Generated_Source\PSoC4/FanController.c ****                     CY_SET_REG8(FanController_fanPwmInitRegs[counti].pwmPeriodReg, FanController_PW
 272:Generated_Source\PSoC4/FanController.c **** 
 273:Generated_Source\PSoC4/FanController.c ****                     interruptState = CyEnterCriticalSection();
 274:Generated_Source\PSoC4/FanController.c **** 
 275:Generated_Source\PSoC4/FanController.c ****                     CY_SET_REG8(FanController_fanPwmInitRegs[counti].pwmAuxControlReg,
 276:Generated_Source\PSoC4/FanController.c ****                         CY_GET_REG8(FanController_fanPwmInitRegs[counti].pwmAuxControlReg) |
 277:Generated_Source\PSoC4/FanController.c ****                             FanController_FANPWM_AUX_CTRL_FIFO0_CLR_8);
 278:Generated_Source\PSoC4/FanController.c **** 
 279:Generated_Source\PSoC4/FanController.c ****                     CyExitCriticalSection(interruptState);
 280:Generated_Source\PSoC4/FanController.c **** 
 281:Generated_Source\PSoC4/FanController.c ****                 /* 10-bit firmware controlled PWM */
 282:Generated_Source\PSoC4/FanController.c ****                 #else
 283:Generated_Source\PSoC4/FanController.c ****                     CY_SET_REG16(FanController_fanPwmInitRegs[counti].pwmPeriodReg, FanController_P
 284:Generated_Source\PSoC4/FanController.c **** 
 285:Generated_Source\PSoC4/FanController.c ****                     interruptState = CyEnterCriticalSection();
 286:Generated_Source\PSoC4/FanController.c **** 
 287:Generated_Source\PSoC4/FanController.c ****                     CY_SET_REG16(FanController_fanPwmInitRegs[counti].pwmAuxControlReg,
 288:Generated_Source\PSoC4/FanController.c ****                         CY_GET_REG16(FanController_fanPwmInitRegs[counti].pwmAuxControlReg) |
 289:Generated_Source\PSoC4/FanController.c ****                             FanController_FANPWM_AUX_CTRL_FIFO0_CLR_10);
 290:Generated_Source\PSoC4/FanController.c **** 
 291:Generated_Source\PSoC4/FanController.c ****                     CyExitCriticalSection(interruptState);
 292:Generated_Source\PSoC4/FanController.c **** 
 293:Generated_Source\PSoC4/FanController.c ****                 #endif /* FanController_PWMRES == FanController_PWMRES_EIGHTBIT */
 294:Generated_Source\PSoC4/FanController.c ****             }
 295:Generated_Source\PSoC4/FanController.c **** 
 296:Generated_Source\PSoC4/FanController.c ****             for (counti = 0u; counti < FanController_NUMBER_OF_FAN_OUTPUTS; counti++)
 297:Generated_Source\PSoC4/FanController.c ****             {
 298:Generated_Source\PSoC4/FanController.c ****                 /* Set Desired speed to initial RPM from the customizer */
 299:Generated_Source\PSoC4/FanController.c ****                 FanController_SetDesiredSpeed((counti + 1u), FanController_fanProperties[counti].in
 300:Generated_Source\PSoC4/FanController.c ****             }
 301:Generated_Source\PSoC4/FanController.c **** 
 302:Generated_Source\PSoC4/FanController.c ****         #endif /* ((FanController_IS_AUTO_HARDWARE_MODE) || (FanController_IS_AUTO_FIRMWARE_MODE)) 
 303:Generated_Source\PSoC4/FanController.c **** 
 304:Generated_Source\PSoC4/FanController.c ****     #else
 305:Generated_Source\PSoC4/FanController.c **** 
 306:Generated_Source\PSoC4/FanController.c ****         /***********************************************************************
 307:Generated_Source\PSoC4/FanController.c ****         * Configure the PWMs (TCPWMs)
 308:Generated_Source\PSoC4/FanController.c ****         ***********************************************************************/
 309:Generated_Source\PSoC4/FanController.c **** 
 310:Generated_Source\PSoC4/FanController.c ****         /* Initialize PWMs */
 311:Generated_Source\PSoC4/FanController.c ****         #if(FanController_NUMBER_OF_FAN_OUTPUTS == 1u)
 312:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Init();
 313:Generated_Source\PSoC4/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 2u)
 314:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Init();
 315:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM2_Init();
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 7


 316:Generated_Source\PSoC4/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 3u)
 317:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Init();
 318:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM2_Init();
 319:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM3_Init();
 320:Generated_Source\PSoC4/FanController.c ****         #else
 321:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Init();
 322:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM2_Init();
 323:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM3_Init();
 324:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM4_Init();
 325:Generated_Source\PSoC4/FanController.c ****         #endif /* (FanController_NUMBER_OF_FAN_OUTPUTS == 1u) */
 326:Generated_Source\PSoC4/FanController.c **** 
 327:Generated_Source\PSoC4/FanController.c ****         for (counti = 0u; counti < FanController_NUMBER_OF_FAN_OUTPUTS; counti++)
 328:Generated_Source\PSoC4/FanController.c ****         {
 329:Generated_Source\PSoC4/FanController.c ****             /* Set the hard-coded PWM period */
 330:Generated_Source\PSoC4/FanController.c ****             CY_SET_REG32(FanController_fanPwmInitRegs[counti].pwmPeriodReg, FanController_PWM_PERIO
 331:Generated_Source\PSoC4/FanController.c **** 
 332:Generated_Source\PSoC4/FanController.c ****             #if(FanController_IS_AUTO_FIRMWARE_MODE)
 333:Generated_Source\PSoC4/FanController.c ****                 /* In Auto Firmware Mode it is required to set duty cycle directly on the
 334:Generated_Source\PSoC4/FanController.c ****                 * start.
 335:Generated_Source\PSoC4/FanController.c ****                 */
 336:Generated_Source\PSoC4/FanController.c ****                 FanController_SetDutyCycle((counti + 1u), FanController_fanProperties[counti].initD
 337:Generated_Source\PSoC4/FanController.c ****             #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
 338:Generated_Source\PSoC4/FanController.c **** 
 339:Generated_Source\PSoC4/FanController.c ****             /* Set Desired speed to initial RPM from the customizer */
 340:Generated_Source\PSoC4/FanController.c ****             FanController_SetDesiredSpeed((counti + 1u), FanController_fanProperties[counti].initRp
 341:Generated_Source\PSoC4/FanController.c ****         }
 342:Generated_Source\PSoC4/FanController.c **** 
 343:Generated_Source\PSoC4/FanController.c ****     #endif /* (!CY_PSOC4) */
 344:Generated_Source\PSoC4/FanController.c **** 
 345:Generated_Source\PSoC4/FanController.c ****     /***********************************************************************
 346:Generated_Source\PSoC4/FanController.c ****     * Initialize the Tachometer
 347:Generated_Source\PSoC4/FanController.c ****     ***********************************************************************/
 348:Generated_Source\PSoC4/FanController.c **** 
 349:Generated_Source\PSoC4/FanController.c ****     interruptState = CyEnterCriticalSection();
 350:Generated_Source\PSoC4/FanController.c ****     #if (CY_PSOC4)
 351:Generated_Source\PSoC4/FanController.c ****         /* Clear the tachometer FIFO */
 352:Generated_Source\PSoC4/FanController.c ****         FanController_TACH_CUNTER_AUX_CTL_REG |= FanController_TACH_COUNTER_FIFO_CLR;
 353:Generated_Source\PSoC4/FanController.c ****         FanController_TACH_CUNTER_AUX_CTL_REG &= ((uint8) ~FanController_TACH_COUNTER_FIFO_CLR);
 354:Generated_Source\PSoC4/FanController.c ****     #else
 355:Generated_Source\PSoC4/FanController.c ****         /* Enable count7 hardware block to drive fan address */
 356:Generated_Source\PSoC4/FanController.c ****         FanController_TACH_FAN_COUNTR_AUX_CTL_REG |= FanController_COUNT7_ENABLE;
 357:Generated_Source\PSoC4/FanController.c ****     #endif /* (!CY_PSOC4) */
 358:Generated_Source\PSoC4/FanController.c ****     (void)CyExitCriticalSection(interruptState);
 359:Generated_Source\PSoC4/FanController.c ****     
 360:Generated_Source\PSoC4/FanController.c ****     /* Initialize glitch filter counter */
 361:Generated_Source\PSoC4/FanController.c ****     FanController_TACH_GLITCH_FILTER_PERIOD_REG = FanController_GLITCH_FILTER_VAL;
 362:Generated_Source\PSoC4/FanController.c **** 
 363:Generated_Source\PSoC4/FanController.c ****     #if((!FanController_IS_MANUAL_MODE) && (FanController_DAMPING_FACTOR > 0u))
 364:Generated_Source\PSoC4/FanController.c **** 
 365:Generated_Source\PSoC4/FanController.c ****         /* Set the divider by 10 */
 366:Generated_Source\PSoC4/FanController.c ****         FanController_DAMPING_COUNTER_DIVIDER_REG = FanController_DAMPING_FACTOR_DIVIDER_VAL;
 367:Generated_Source\PSoC4/FanController.c **** 
 368:Generated_Source\PSoC4/FanController.c ****         /* Init lower 8 bits of 16-bit Damping Factor Counter */
 369:Generated_Source\PSoC4/FanController.c ****          FanController_TACH_DAMPING_PERIOD_LOW_LSB_REG = FanController_DAMPING_FACTOR_PERIOD_LOW;
 370:Generated_Source\PSoC4/FanController.c **** 
 371:Generated_Source\PSoC4/FanController.c ****         /* Init high 8 bits of 16-bit Damping Factor Counter */
 372:Generated_Source\PSoC4/FanController.c ****         FanController_TACH_DAMPING_PERIOD_HIGH_LSB_REG = FanController_DAMPING_FACTOR_PERIOD_HIGH;
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 8


 373:Generated_Source\PSoC4/FanController.c **** 
 374:Generated_Source\PSoC4/FanController.c ****     #endif /* ((!FanController_IS_MANUAL_MODE) && (FanController_DAMPING_FACTOR > 0u)) */
 375:Generated_Source\PSoC4/FanController.c **** 
 376:Generated_Source\PSoC4/FanController.c ****     /***********************************************************************
 377:Generated_Source\PSoC4/FanController.c ****     * Initialize the Alert Mask Register based on customizer defaults
 378:Generated_Source\PSoC4/FanController.c ****     ***********************************************************************/
 379:Generated_Source\PSoC4/FanController.c ****     FanController_SetAlertMask(FanController_INIT_ALERT_MASK);
 380:Generated_Source\PSoC4/FanController.c **** 
 381:Generated_Source\PSoC4/FanController.c ****     #if(FanController_IS_AUTO_FIRMWARE_MODE)
 382:Generated_Source\PSoC4/FanController.c ****         /***********************************************************************
 383:Generated_Source\PSoC4/FanController.c ****         * Set PID coefficients for fans
 384:Generated_Source\PSoC4/FanController.c ****         ***********************************************************************/
 385:Generated_Source\PSoC4/FanController.c ****         for(counti = 0u; counti < FanController_NUMBER_OF_FANS; counti++)
 386:Generated_Source\PSoC4/FanController.c ****         {
 387:Generated_Source\PSoC4/FanController.c ****             /* Disable interrupts while updating PID constants */
 388:Generated_Source\PSoC4/FanController.c ****             interruptState = CyEnterCriticalSection();
 389:Generated_Source\PSoC4/FanController.c **** 
 390:Generated_Source\PSoC4/FanController.c ****             /* Initialize both PID parameters and output saturation with
 391:Generated_Source\PSoC4/FanController.c ****             * default values from the customizer.
 392:Generated_Source\PSoC4/FanController.c ****             */
 393:Generated_Source\PSoC4/FanController.c ****             FanController_pidA1[counti] = FanController_PID_A1;
 394:Generated_Source\PSoC4/FanController.c ****             FanController_pidA2[counti] = FanController_PID_A2;
 395:Generated_Source\PSoC4/FanController.c ****             FanController_pidA3[counti] = FanController_PID_A3;
 396:Generated_Source\PSoC4/FanController.c **** 
 397:Generated_Source\PSoC4/FanController.c ****             FanController_outputSatL[counti] = FanController_PID_OUTPUT_SAT_L;
 398:Generated_Source\PSoC4/FanController.c ****             FanController_outputSatH[counti] = FanController_PID_OUTPUT_SAT_H;
 399:Generated_Source\PSoC4/FanController.c ****             CyExitCriticalSection(interruptState);
 400:Generated_Source\PSoC4/FanController.c ****         }
 401:Generated_Source\PSoC4/FanController.c ****     #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
 402:Generated_Source\PSoC4/FanController.c **** 
 403:Generated_Source\PSoC4/FanController.c ****     /***********************************************************************
 404:Generated_Source\PSoC4/FanController.c ****     * Set up required interrupts
 405:Generated_Source\PSoC4/FanController.c ****     ***********************************************************************/
 406:Generated_Source\PSoC4/FanController.c ****     #if(CY_PSOC4)
 407:Generated_Source\PSoC4/FanController.c ****         FanController_DataSend_StartEx(&FanController_DATA_SEND_ISR);
 408:Generated_Source\PSoC4/FanController.c ****     #endif /* (CY_PSOC4) */
 409:Generated_Source\PSoC4/FanController.c **** 
 410:Generated_Source\PSoC4/FanController.c ****     #if(FanController_IS_AUTO_FIRMWARE_MODE)
 411:Generated_Source\PSoC4/FanController.c ****         FanController_PID_ISR_StartEx(&FanController_PID_CONTROL_ISR);
 412:Generated_Source\PSoC4/FanController.c ****     #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
 413:Generated_Source\PSoC4/FanController.c **** }
 414:Generated_Source\PSoC4/FanController.c **** 
 415:Generated_Source\PSoC4/FanController.c **** 
 416:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 417:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_Enable
 418:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 419:Generated_Source\PSoC4/FanController.c **** *
 420:Generated_Source\PSoC4/FanController.c **** * Summary:
 421:Generated_Source\PSoC4/FanController.c **** *  Enables hardware blocks in the component.
 422:Generated_Source\PSoC4/FanController.c **** *
 423:Generated_Source\PSoC4/FanController.c **** * Parameters:
 424:Generated_Source\PSoC4/FanController.c **** *  None
 425:Generated_Source\PSoC4/FanController.c **** *
 426:Generated_Source\PSoC4/FanController.c **** * Return:
 427:Generated_Source\PSoC4/FanController.c **** *  None
 428:Generated_Source\PSoC4/FanController.c **** *
 429:Generated_Source\PSoC4/FanController.c **** * Side Effects:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 9


 430:Generated_Source\PSoC4/FanController.c **** *  None
 431:Generated_Source\PSoC4/FanController.c **** *
 432:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 433:Generated_Source\PSoC4/FanController.c **** void FanController_Enable(void) 
 434:Generated_Source\PSoC4/FanController.c **** {
  28              		.loc 1 434 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 435:Generated_Source\PSoC4/FanController.c ****     uint8 interruptState;
 436:Generated_Source\PSoC4/FanController.c **** 
 437:Generated_Source\PSoC4/FanController.c ****     #if(CY_PSOC4)
 438:Generated_Source\PSoC4/FanController.c ****         /* Ehable PWMs */
 439:Generated_Source\PSoC4/FanController.c ****         #if(FanController_NUMBER_OF_FAN_OUTPUTS == 1u)
 440:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Enable();
  36              		.loc 1 440 0
  37 0002 FFF7FEFF 		bl	FanController_FW_PWM1_Enable
  38              	.LVL0:
 441:Generated_Source\PSoC4/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 2u)
 442:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Enable();
 443:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM2_Enable();
 444:Generated_Source\PSoC4/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 3u)
 445:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Enable();
 446:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM2_Enable();
 447:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM3_Enable();
 448:Generated_Source\PSoC4/FanController.c ****         #else
 449:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM1_Enable();
 450:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM2_Enable();
 451:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM3_Enable();
 452:Generated_Source\PSoC4/FanController.c ****             FanController_FW_PWM4_Enable();
 453:Generated_Source\PSoC4/FanController.c ****         #endif /*(FanController_NUMBER_OF_FAN_OUTPUTS == 1u) */
 454:Generated_Source\PSoC4/FanController.c **** 
 455:Generated_Source\PSoC4/FanController.c ****     #endif /* (CY_PSOC4) */
 456:Generated_Source\PSoC4/FanController.c **** 
 457:Generated_Source\PSoC4/FanController.c ****     /* Write to control register based on customizer defaults */
 458:Generated_Source\PSoC4/FanController.c ****     FanController_GLOBAL_CONTROL_REG = FanController_ENABLE | FanController_ALERT_PIN_ENABLE |
  39              		.loc 1 458 0
  40 0006 2122     		movs	r2, #33
  41 0008 064B     		ldr	r3, .L2
  42 000a 1A70     		strb	r2, [r3]
 459:Generated_Source\PSoC4/FanController.c ****         ((uint8) (FanController_INIT_ALERT_ENABLE << FanController_ALERT_ENABLE_SHIFT));
 460:Generated_Source\PSoC4/FanController.c **** 
 461:Generated_Source\PSoC4/FanController.c ****     interruptState = CyEnterCriticalSection();
  43              		.loc 1 461 0
  44 000c FFF7FEFF 		bl	CyEnterCriticalSection
  45              	.LVL1:
 462:Generated_Source\PSoC4/FanController.c **** 
 463:Generated_Source\PSoC4/FanController.c ****     /* Enable alerts from the Alert Status register */
 464:Generated_Source\PSoC4/FanController.c ****     FanController_STATUS_ALERT_AUX_CTL_REG |= FanController_STATUS_ALERT_ENABLE;
  46              		.loc 1 464 0
  47 0010 054A     		ldr	r2, .L2+4
  48 0012 1178     		ldrb	r1, [r2]
  49 0014 1023     		movs	r3, #16
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 10


  50 0016 0B43     		orrs	r3, r1
  51 0018 DBB2     		uxtb	r3, r3
  52 001a 1370     		strb	r3, [r2]
 465:Generated_Source\PSoC4/FanController.c ****     
 466:Generated_Source\PSoC4/FanController.c ****     #if(!CY_PSOC4)
 467:Generated_Source\PSoC4/FanController.c ****         
 468:Generated_Source\PSoC4/FanController.c ****         /* Enable DMA channels for operation */
 469:Generated_Source\PSoC4/FanController.c ****         (void) CyDmaChEnable(FanController_TachOutDMA_channel, 1u);
 470:Generated_Source\PSoC4/FanController.c ****         
 471:Generated_Source\PSoC4/FanController.c ****         #if(FanController_IS_AUTO_HARDWARE_MODE)
 472:Generated_Source\PSoC4/FanController.c ****             (void) CyDmaChEnable(FanController_TachInDMA_channel, 1u);
 473:Generated_Source\PSoC4/FanController.c **** 
 474:Generated_Source\PSoC4/FanController.c ****         #endif /* FanController_IS_AUTO_HARDWARE_MODE */
 475:Generated_Source\PSoC4/FanController.c ****     #endif /* !CY_PSOC4 */
 476:Generated_Source\PSoC4/FanController.c ****         
 477:Generated_Source\PSoC4/FanController.c ****     (void) CyExitCriticalSection(interruptState);
  53              		.loc 1 477 0
  54 001c FFF7FEFF 		bl	CyExitCriticalSection
  55              	.LVL2:
 478:Generated_Source\PSoC4/FanController.c **** }
  56              		.loc 1 478 0
  57              		@ sp needed
  58 0020 10BD     		pop	{r4, pc}
  59              	.L3:
  60 0022 C046     		.align	2
  61              	.L2:
  62 0024 73000F40 		.word	1074724979
  63 0028 90000F40 		.word	1074725008
  64              		.cfi_endproc
  65              	.LFE5:
  66              		.size	FanController_Enable, .-FanController_Enable
  67              		.section	.text.FanController_EnableAlert,"ax",%progbits
  68              		.align	2
  69              		.global	FanController_EnableAlert
  70              		.code	16
  71              		.thumb_func
  72              		.type	FanController_EnableAlert, %function
  73              	FanController_EnableAlert:
  74              	.LFB6:
 479:Generated_Source\PSoC4/FanController.c **** 
 480:Generated_Source\PSoC4/FanController.c **** 
 481:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 482:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_EnableAlert
 483:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 484:Generated_Source\PSoC4/FanController.c **** *
 485:Generated_Source\PSoC4/FanController.c **** * Summary:
 486:Generated_Source\PSoC4/FanController.c **** *  Enables alerts from this component. Specifically which alert sources are
 487:Generated_Source\PSoC4/FanController.c **** *  enabled is configured using SetAlertMode() API.  This API only
 488:Generated_Source\PSoC4/FanController.c **** *  enables alert conditions to propagate to the Fan Controller component
 489:Generated_Source\PSoC4/FanController.c **** *  Alert output pin.
 490:Generated_Source\PSoC4/FanController.c **** *
 491:Generated_Source\PSoC4/FanController.c **** * Parameters:
 492:Generated_Source\PSoC4/FanController.c **** *  None
 493:Generated_Source\PSoC4/FanController.c **** *
 494:Generated_Source\PSoC4/FanController.c **** * Return:
 495:Generated_Source\PSoC4/FanController.c **** *  None
 496:Generated_Source\PSoC4/FanController.c **** *
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 11


 497:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 498:Generated_Source\PSoC4/FanController.c **** *  None
 499:Generated_Source\PSoC4/FanController.c **** *
 500:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 501:Generated_Source\PSoC4/FanController.c **** void FanController_EnableAlert(void) 
 502:Generated_Source\PSoC4/FanController.c **** {
  75              		.loc 1 502 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79 0000 10B5     		push	{r4, lr}
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 4, -8
  82              		.cfi_offset 14, -4
 503:Generated_Source\PSoC4/FanController.c ****     uint8 interruptState = CyEnterCriticalSection();
  83              		.loc 1 503 0
  84 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  85              	.LVL3:
 504:Generated_Source\PSoC4/FanController.c **** 
 505:Generated_Source\PSoC4/FanController.c ****     FanController_GLOBAL_CONTROL_REG |= FanController_ALERT_PIN_ENABLE;
  86              		.loc 1 505 0
  87 0006 044A     		ldr	r2, .L5
  88 0008 1178     		ldrb	r1, [r2]
  89 000a 0123     		movs	r3, #1
  90 000c 0B43     		orrs	r3, r1
  91 000e DBB2     		uxtb	r3, r3
  92 0010 1370     		strb	r3, [r2]
 506:Generated_Source\PSoC4/FanController.c **** 
 507:Generated_Source\PSoC4/FanController.c ****     (void) CyExitCriticalSection(interruptState);
  93              		.loc 1 507 0
  94 0012 FFF7FEFF 		bl	CyExitCriticalSection
  95              	.LVL4:
 508:Generated_Source\PSoC4/FanController.c **** }
  96              		.loc 1 508 0
  97              		@ sp needed
  98 0016 10BD     		pop	{r4, pc}
  99              	.L6:
 100              		.align	2
 101              	.L5:
 102 0018 73000F40 		.word	1074724979
 103              		.cfi_endproc
 104              	.LFE6:
 105              		.size	FanController_EnableAlert, .-FanController_EnableAlert
 106              		.section	.text.FanController_DisableAlert,"ax",%progbits
 107              		.align	2
 108              		.global	FanController_DisableAlert
 109              		.code	16
 110              		.thumb_func
 111              		.type	FanController_DisableAlert, %function
 112              	FanController_DisableAlert:
 113              	.LFB7:
 509:Generated_Source\PSoC4/FanController.c **** 
 510:Generated_Source\PSoC4/FanController.c **** 
 511:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 512:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_DisableAlert
 513:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 514:Generated_Source\PSoC4/FanController.c **** *
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 12


 515:Generated_Source\PSoC4/FanController.c **** * Summary:
 516:Generated_Source\PSoC4/FanController.c **** *  Disables alerts from this component. This API only disables alert
 517:Generated_Source\PSoC4/FanController.c **** *  conditions from propagating to the fan controller component Alert output/pin
 518:Generated_Source\PSoC4/FanController.c **** *
 519:Generated_Source\PSoC4/FanController.c **** * Parameters:
 520:Generated_Source\PSoC4/FanController.c **** *  None
 521:Generated_Source\PSoC4/FanController.c **** *
 522:Generated_Source\PSoC4/FanController.c **** * Return:
 523:Generated_Source\PSoC4/FanController.c **** *  None
 524:Generated_Source\PSoC4/FanController.c **** *
 525:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 526:Generated_Source\PSoC4/FanController.c **** *  None
 527:Generated_Source\PSoC4/FanController.c **** *
 528:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 529:Generated_Source\PSoC4/FanController.c **** void FanController_DisableAlert(void) 
 530:Generated_Source\PSoC4/FanController.c **** {
 114              		.loc 1 530 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118 0000 10B5     		push	{r4, lr}
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 4, -8
 121              		.cfi_offset 14, -4
 531:Generated_Source\PSoC4/FanController.c ****     uint8 interruptState = CyEnterCriticalSection();
 122              		.loc 1 531 0
 123 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 124              	.LVL5:
 532:Generated_Source\PSoC4/FanController.c **** 
 533:Generated_Source\PSoC4/FanController.c ****     FanController_GLOBAL_CONTROL_REG &= (uint8) ~FanController_ALERT_PIN_ENABLE;
 125              		.loc 1 533 0
 126 0006 044A     		ldr	r2, .L8
 127 0008 1378     		ldrb	r3, [r2]
 128 000a 0121     		movs	r1, #1
 129 000c 8B43     		bics	r3, r1
 130 000e 1370     		strb	r3, [r2]
 534:Generated_Source\PSoC4/FanController.c **** 
 535:Generated_Source\PSoC4/FanController.c ****     (void) CyExitCriticalSection(interruptState);
 131              		.loc 1 535 0
 132 0010 FFF7FEFF 		bl	CyExitCriticalSection
 133              	.LVL6:
 536:Generated_Source\PSoC4/FanController.c **** }
 134              		.loc 1 536 0
 135              		@ sp needed
 136 0014 10BD     		pop	{r4, pc}
 137              	.L9:
 138 0016 C046     		.align	2
 139              	.L8:
 140 0018 73000F40 		.word	1074724979
 141              		.cfi_endproc
 142              	.LFE7:
 143              		.size	FanController_DisableAlert, .-FanController_DisableAlert
 144              		.section	.text.FanController_Stop,"ax",%progbits
 145              		.align	2
 146              		.global	FanController_Stop
 147              		.code	16
 148              		.thumb_func
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 13


 149              		.type	FanController_Stop, %function
 150              	FanController_Stop:
 151              	.LFB3:
 164:Generated_Source\PSoC4/FanController.c ****     /* Turn off the hardware sub-components */
 152              		.loc 1 164 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156 0000 10B5     		push	{r4, lr}
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 4, -8
 159              		.cfi_offset 14, -4
 166:Generated_Source\PSoC4/FanController.c **** 
 160              		.loc 1 166 0
 161 0002 0022     		movs	r2, #0
 162 0004 034B     		ldr	r3, .L11
 163 0006 1A70     		strb	r2, [r3]
 169:Generated_Source\PSoC4/FanController.c **** 
 164              		.loc 1 169 0
 165 0008 FFF7FEFF 		bl	FanController_DisableAlert
 166              	.LVL7:
 184:Generated_Source\PSoC4/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 2u)
 167              		.loc 1 184 0
 168 000c FFF7FEFF 		bl	FanController_FW_PWM1_Stop
 169              	.LVL8:
 200:Generated_Source\PSoC4/FanController.c **** 
 170              		.loc 1 200 0
 171              		@ sp needed
 172 0010 10BD     		pop	{r4, pc}
 173              	.L12:
 174 0012 C046     		.align	2
 175              	.L11:
 176 0014 73000F40 		.word	1074724979
 177              		.cfi_endproc
 178              	.LFE3:
 179              		.size	FanController_Stop, .-FanController_Stop
 180              		.section	.text.FanController_SetAlertMode,"ax",%progbits
 181              		.align	2
 182              		.global	FanController_SetAlertMode
 183              		.code	16
 184              		.thumb_func
 185              		.type	FanController_SetAlertMode, %function
 186              	FanController_SetAlertMode:
 187              	.LFB8:
 537:Generated_Source\PSoC4/FanController.c **** 
 538:Generated_Source\PSoC4/FanController.c **** 
 539:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 540:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_SetAlertMode
 541:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 542:Generated_Source\PSoC4/FanController.c **** *
 543:Generated_Source\PSoC4/FanController.c **** * Summary:
 544:Generated_Source\PSoC4/FanController.c **** *  Enables alert sources from the component.
 545:Generated_Source\PSoC4/FanController.c **** *
 546:Generated_Source\PSoC4/FanController.c **** * Parameters:
 547:Generated_Source\PSoC4/FanController.c **** *  alertMode:
 548:Generated_Source\PSoC4/FanController.c **** *   b0:   STALL_ALERT_ENABLE (1==Enable, 0==Disable)
 549:Generated_Source\PSoC4/FanController.c **** *   b1:   SPEED_ALERT_ENABLE (1==Enable, 0==Disable)
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 14


 550:Generated_Source\PSoC4/FanController.c **** *   b7-2: RESERVED (write with zeroes)
 551:Generated_Source\PSoC4/FanController.c **** *
 552:Generated_Source\PSoC4/FanController.c **** * Return:
 553:Generated_Source\PSoC4/FanController.c **** *  None
 554:Generated_Source\PSoC4/FanController.c **** *
 555:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 556:Generated_Source\PSoC4/FanController.c **** *  None
 557:Generated_Source\PSoC4/FanController.c **** *
 558:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 559:Generated_Source\PSoC4/FanController.c **** void FanController_SetAlertMode(uint8 alertMode) 
 560:Generated_Source\PSoC4/FanController.c **** {
 188              		.loc 1 560 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              	.LVL9:
 193 0000 70B5     		push	{r4, r5, r6, lr}
 194              		.cfi_def_cfa_offset 16
 195              		.cfi_offset 4, -16
 196              		.cfi_offset 5, -12
 197              		.cfi_offset 6, -8
 198              		.cfi_offset 14, -4
 199 0002 0400     		movs	r4, r0
 561:Generated_Source\PSoC4/FanController.c ****     uint8 interruptState = CyEnterCriticalSection();
 200              		.loc 1 561 0
 201 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 202              	.LVL10:
 562:Generated_Source\PSoC4/FanController.c **** 
 563:Generated_Source\PSoC4/FanController.c ****     FanController_GLOBAL_CONTROL_REG = (FanController_GLOBAL_CONTROL_REG &
 203              		.loc 1 563 0
 204 0008 054D     		ldr	r5, .L14
 205 000a 2978     		ldrb	r1, [r5]
 564:Generated_Source\PSoC4/FanController.c ****             (uint8) ~FanController_ALERT_ENABLE_MASK) |
 565:Generated_Source\PSoC4/FanController.c ****                ((uint8) (alertMode << FanController_ALERT_ENABLE_SHIFT) & FanController_ALERT_ENABL
 206              		.loc 1 565 0
 207 000c 6300     		lsls	r3, r4, #1
 563:Generated_Source\PSoC4/FanController.c ****             (uint8) ~FanController_ALERT_ENABLE_MASK) |
 208              		.loc 1 563 0
 209 000e 0622     		movs	r2, #6
 210 0010 9143     		bics	r1, r2
 211 0012 1340     		ands	r3, r2
 212 0014 0B43     		orrs	r3, r1
 213 0016 2B70     		strb	r3, [r5]
 566:Generated_Source\PSoC4/FanController.c **** 
 567:Generated_Source\PSoC4/FanController.c ****     (void) CyExitCriticalSection(interruptState);
 214              		.loc 1 567 0
 215 0018 FFF7FEFF 		bl	CyExitCriticalSection
 216              	.LVL11:
 568:Generated_Source\PSoC4/FanController.c **** }
 217              		.loc 1 568 0
 218              		@ sp needed
 219 001c 70BD     		pop	{r4, r5, r6, pc}
 220              	.L15:
 221 001e C046     		.align	2
 222              	.L14:
 223 0020 73000F40 		.word	1074724979
 224              		.cfi_endproc
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 15


 225              	.LFE8:
 226              		.size	FanController_SetAlertMode, .-FanController_SetAlertMode
 227              		.section	.text.FanController_GetAlertMode,"ax",%progbits
 228              		.align	2
 229              		.global	FanController_GetAlertMode
 230              		.code	16
 231              		.thumb_func
 232              		.type	FanController_GetAlertMode, %function
 233              	FanController_GetAlertMode:
 234              	.LFB9:
 569:Generated_Source\PSoC4/FanController.c **** 
 570:Generated_Source\PSoC4/FanController.c **** 
 571:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 572:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_GetAlertMode
 573:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 574:Generated_Source\PSoC4/FanController.c **** *
 575:Generated_Source\PSoC4/FanController.c **** * Summary:
 576:Generated_Source\PSoC4/FanController.c **** * Returns enabled alert sources from this component.
 577:Generated_Source\PSoC4/FanController.c **** *
 578:Generated_Source\PSoC4/FanController.c **** * Parameters:
 579:Generated_Source\PSoC4/FanController.c **** *  None
 580:Generated_Source\PSoC4/FanController.c **** *
 581:Generated_Source\PSoC4/FanController.c **** * Return:
 582:Generated_Source\PSoC4/FanController.c **** *  alertMode:
 583:Generated_Source\PSoC4/FanController.c **** *   b0:   STALL_ALERT_ENABLE (1==Enable, 0==Disable)
 584:Generated_Source\PSoC4/FanController.c **** *   b1:   SPEED_ALERT_ENABLE (1==Enable, 0==Disable)
 585:Generated_Source\PSoC4/FanController.c **** *   b7-2: RESERVED (write with zeroes)
 586:Generated_Source\PSoC4/FanController.c **** *
 587:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 588:Generated_Source\PSoC4/FanController.c **** *  None
 589:Generated_Source\PSoC4/FanController.c **** *
 590:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 591:Generated_Source\PSoC4/FanController.c **** uint8 FanController_GetAlertMode(void) 
 592:Generated_Source\PSoC4/FanController.c **** {
 235              		.loc 1 592 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 593:Generated_Source\PSoC4/FanController.c ****     return((FanController_GLOBAL_CONTROL_REG & FanController_ALERT_ENABLE_MASK) >>
 240              		.loc 1 593 0
 241 0000 024B     		ldr	r3, .L17
 242 0002 1878     		ldrb	r0, [r3]
 243 0004 0623     		movs	r3, #6
 244 0006 1840     		ands	r0, r3
 245 0008 4008     		lsrs	r0, r0, #1
 594:Generated_Source\PSoC4/FanController.c ****                 FanController_ALERT_ENABLE_SHIFT);
 595:Generated_Source\PSoC4/FanController.c **** }
 246              		.loc 1 595 0
 247              		@ sp needed
 248 000a 7047     		bx	lr
 249              	.L18:
 250              		.align	2
 251              	.L17:
 252 000c 73000F40 		.word	1074724979
 253              		.cfi_endproc
 254              	.LFE9:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 16


 255              		.size	FanController_GetAlertMode, .-FanController_GetAlertMode
 256              		.section	.text.FanController_SetAlertMask,"ax",%progbits
 257              		.align	2
 258              		.global	FanController_SetAlertMask
 259              		.code	16
 260              		.thumb_func
 261              		.type	FanController_SetAlertMask, %function
 262              	FanController_SetAlertMask:
 263              	.LFB10:
 596:Generated_Source\PSoC4/FanController.c **** 
 597:Generated_Source\PSoC4/FanController.c **** 
 598:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 599:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_SetAlertMask
 600:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 601:Generated_Source\PSoC4/FanController.c **** *
 602:Generated_Source\PSoC4/FanController.c **** * Summary:
 603:Generated_Source\PSoC4/FanController.c **** *  Sets the per fan Alert Mask for both Stall and Speed errors.
 604:Generated_Source\PSoC4/FanController.c **** *
 605:Generated_Source\PSoC4/FanController.c **** * Parameters:
 606:Generated_Source\PSoC4/FanController.c **** *  alertMask (1==Enable Alert, 0==Disable Alert)
 607:Generated_Source\PSoC4/FanController.c **** *   b0:   FAN1 ALERT ENABLE/DISABLE
 608:Generated_Source\PSoC4/FanController.c **** *   b1:   FAN2 ALERT ENABLE/DISABLE
 609:Generated_Source\PSoC4/FanController.c **** *   ...
 610:Generated_Source\PSoC4/FanController.c **** *   b15:  FAN16 ALERT ENABLE/DISABLE
 611:Generated_Source\PSoC4/FanController.c **** *
 612:Generated_Source\PSoC4/FanController.c **** * Return:
 613:Generated_Source\PSoC4/FanController.c **** *  None
 614:Generated_Source\PSoC4/FanController.c **** *
 615:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 616:Generated_Source\PSoC4/FanController.c **** *  None
 617:Generated_Source\PSoC4/FanController.c **** *
 618:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 619:Generated_Source\PSoC4/FanController.c **** void FanController_SetAlertMask(uint16 alertMask) 
 620:Generated_Source\PSoC4/FanController.c **** {
 264              		.loc 1 620 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269              	.LVL12:
 621:Generated_Source\PSoC4/FanController.c ****     #if (CY_PSOC4)
 622:Generated_Source\PSoC4/FanController.c ****         FanController_alertMask = alertMask;
 270              		.loc 1 622 0
 271 0000 014B     		ldr	r3, .L20
 272 0002 1880     		strh	r0, [r3]
 623:Generated_Source\PSoC4/FanController.c ****     #else
 624:Generated_Source\PSoC4/FanController.c ****         FanController_ALERT_MASK_LSB_CONTROL_REG = LO8(alertMask);
 625:Generated_Source\PSoC4/FanController.c **** 
 626:Generated_Source\PSoC4/FanController.c ****         #if(FanController_NUMBER_OF_FANS > 8u)
 627:Generated_Source\PSoC4/FanController.c ****             FanController_ALERT_MASK_MSB_CONTROL_REG = HI8(alertMask);
 628:Generated_Source\PSoC4/FanController.c ****         #endif /* FanController_NUMBER_OF_FANS > 8u */
 629:Generated_Source\PSoC4/FanController.c ****     #endif /* (CY_PSOC4) */
 630:Generated_Source\PSoC4/FanController.c **** }
 273              		.loc 1 630 0
 274              		@ sp needed
 275 0004 7047     		bx	lr
 276              	.L21:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 17


 277 0006 C046     		.align	2
 278              	.L20:
 279 0008 00000000 		.word	.LANCHOR0
 280              		.cfi_endproc
 281              	.LFE10:
 282              		.size	FanController_SetAlertMask, .-FanController_SetAlertMask
 283              		.section	.text.FanController_GetAlertMask,"ax",%progbits
 284              		.align	2
 285              		.global	FanController_GetAlertMask
 286              		.code	16
 287              		.thumb_func
 288              		.type	FanController_GetAlertMask, %function
 289              	FanController_GetAlertMask:
 290              	.LFB11:
 631:Generated_Source\PSoC4/FanController.c **** 
 632:Generated_Source\PSoC4/FanController.c **** 
 633:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 634:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_GetAlertMask
 635:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 636:Generated_Source\PSoC4/FanController.c **** *
 637:Generated_Source\PSoC4/FanController.c **** * Summary:
 638:Generated_Source\PSoC4/FanController.c **** *  Gets the current per fan Alert Mask for both Stall and Speed errors.
 639:Generated_Source\PSoC4/FanController.c **** *
 640:Generated_Source\PSoC4/FanController.c **** * Parameters:
 641:Generated_Source\PSoC4/FanController.c **** *  None
 642:Generated_Source\PSoC4/FanController.c **** *
 643:Generated_Source\PSoC4/FanController.c **** * Return:
 644:Generated_Source\PSoC4/FanController.c **** *  alertMask (1==Alert Enabled, 0==Alert Disabled)
 645:Generated_Source\PSoC4/FanController.c **** *   b0:   FAN1 ALERT ENABLE/DISABLE
 646:Generated_Source\PSoC4/FanController.c **** *   b1:   FAN2 ALERT ENABLE/DISABLE
 647:Generated_Source\PSoC4/FanController.c **** *   ...
 648:Generated_Source\PSoC4/FanController.c **** *   b15:  FAN16 ALERT ENABLE/DISABLE
 649:Generated_Source\PSoC4/FanController.c **** *
 650:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 651:Generated_Source\PSoC4/FanController.c **** *  None
 652:Generated_Source\PSoC4/FanController.c **** *
 653:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 654:Generated_Source\PSoC4/FanController.c **** uint16 FanController_GetAlertMask(void) 
 655:Generated_Source\PSoC4/FanController.c **** {
 291              		.loc 1 655 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              		@ link register save eliminated.
 656:Generated_Source\PSoC4/FanController.c ****     uint16 alertMask;
 657:Generated_Source\PSoC4/FanController.c **** 
 658:Generated_Source\PSoC4/FanController.c ****     #if (CY_PSOC4)
 659:Generated_Source\PSoC4/FanController.c ****         alertMask = FanController_alertMask;
 296              		.loc 1 659 0
 297 0000 014B     		ldr	r3, .L23
 298 0002 1888     		ldrh	r0, [r3]
 299              	.LVL13:
 660:Generated_Source\PSoC4/FanController.c ****     #else
 661:Generated_Source\PSoC4/FanController.c ****         #if(FanController_NUMBER_OF_FANS > 8u)
 662:Generated_Source\PSoC4/FanController.c ****             alertMask = (uint16)FanController_ALERT_MASK_LSB_CONTROL_REG |
 663:Generated_Source\PSoC4/FanController.c ****                 (uint16)((uint16)FanController_ALERT_MASK_MSB_CONTROL_REG << 8u);
 664:Generated_Source\PSoC4/FanController.c ****         #else
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 18


 665:Generated_Source\PSoC4/FanController.c ****             alertMask = (uint16)FanController_ALERT_MASK_LSB_CONTROL_REG;
 666:Generated_Source\PSoC4/FanController.c ****         #endif /* FanController_NUMBER_OF_FANS > 8u */
 667:Generated_Source\PSoC4/FanController.c ****     #endif /* (CY_PSOC4) */
 668:Generated_Source\PSoC4/FanController.c **** 
 669:Generated_Source\PSoC4/FanController.c ****     return(alertMask);
 670:Generated_Source\PSoC4/FanController.c **** }
 300              		.loc 1 670 0
 301              		@ sp needed
 302 0004 7047     		bx	lr
 303              	.L24:
 304 0006 C046     		.align	2
 305              	.L23:
 306 0008 00000000 		.word	.LANCHOR0
 307              		.cfi_endproc
 308              	.LFE11:
 309              		.size	FanController_GetAlertMask, .-FanController_GetAlertMask
 310              		.section	.text.FanController_GetAlertSource,"ax",%progbits
 311              		.align	2
 312              		.global	FanController_GetAlertSource
 313              		.code	16
 314              		.thumb_func
 315              		.type	FanController_GetAlertSource, %function
 316              	FanController_GetAlertSource:
 317              	.LFB12:
 671:Generated_Source\PSoC4/FanController.c **** 
 672:Generated_Source\PSoC4/FanController.c **** 
 673:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 674:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_GetAlertSource
 675:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 676:Generated_Source\PSoC4/FanController.c **** *
 677:Generated_Source\PSoC4/FanController.c **** * Summary:
 678:Generated_Source\PSoC4/FanController.c **** *  Returns pending alert sources. The alert pin is not de-asserted through
 679:Generated_Source\PSoC4/FanController.c **** *  this API call. If this API call returns a non-zero value, call the
 680:Generated_Source\PSoC4/FanController.c **** *  GetFanStallStatus() or GetFanSpeedStatus() APIs to determine the exact
 681:Generated_Source\PSoC4/FanController.c **** *  source of the alert and simultaneously de-assert the pending alert and
 682:Generated_Source\PSoC4/FanController.c **** *  alert pin.
 683:Generated_Source\PSoC4/FanController.c **** *
 684:Generated_Source\PSoC4/FanController.c **** * Parameters:
 685:Generated_Source\PSoC4/FanController.c **** *  None
 686:Generated_Source\PSoC4/FanController.c **** *
 687:Generated_Source\PSoC4/FanController.c **** * Return:
 688:Generated_Source\PSoC4/FanController.c **** *  alertSource:
 689:Generated_Source\PSoC4/FanController.c **** *   b0:   STALL_ALERT (1==Present, 0==Not Present)
 690:Generated_Source\PSoC4/FanController.c **** *   b1:   SPEED_ALERT (1==Present, 0==Not Present)
 691:Generated_Source\PSoC4/FanController.c **** *   b7-2: RESERVED (returns all zeroes)
 692:Generated_Source\PSoC4/FanController.c **** *
 693:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 694:Generated_Source\PSoC4/FanController.c **** *  None
 695:Generated_Source\PSoC4/FanController.c **** *
 696:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 697:Generated_Source\PSoC4/FanController.c **** uint8 FanController_GetAlertSource(void) 
 698:Generated_Source\PSoC4/FanController.c **** {
 318              		.loc 1 698 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322              		@ link register save eliminated.
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 19


 699:Generated_Source\PSoC4/FanController.c ****     return ((FanController_ALERT_STATUS_REG & FanController_ALERT_STATUS_MASK));
 323              		.loc 1 699 0
 324 0000 024B     		ldr	r3, .L26
 325 0002 1878     		ldrb	r0, [r3]
 326 0004 0323     		movs	r3, #3
 327 0006 1840     		ands	r0, r3
 700:Generated_Source\PSoC4/FanController.c **** }
 328              		.loc 1 700 0
 329              		@ sp needed
 330 0008 7047     		bx	lr
 331              	.L27:
 332 000a C046     		.align	2
 333              	.L26:
 334 000c 60000F40 		.word	1074724960
 335              		.cfi_endproc
 336              	.LFE12:
 337              		.size	FanController_GetAlertSource, .-FanController_GetAlertSource
 338              		.section	.text.FanController_GetFanStallStatus,"ax",%progbits
 339              		.align	2
 340              		.global	FanController_GetFanStallStatus
 341              		.code	16
 342              		.thumb_func
 343              		.type	FanController_GetFanStallStatus, %function
 344              	FanController_GetFanStallStatus:
 345              	.LFB13:
 701:Generated_Source\PSoC4/FanController.c **** 
 702:Generated_Source\PSoC4/FanController.c **** 
 703:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 704:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_GetFanStallStatus
 705:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 706:Generated_Source\PSoC4/FanController.c **** *
 707:Generated_Source\PSoC4/FanController.c **** * Summary:
 708:Generated_Source\PSoC4/FanController.c **** *  Returns the stall status of all fans
 709:Generated_Source\PSoC4/FanController.c **** *
 710:Generated_Source\PSoC4/FanController.c **** * Parameters:
 711:Generated_Source\PSoC4/FanController.c **** *  None
 712:Generated_Source\PSoC4/FanController.c **** *
 713:Generated_Source\PSoC4/FanController.c **** * Return:
 714:Generated_Source\PSoC4/FanController.c **** *  stallStatus (1==Fan Stalled, 0=Fan OK)
 715:Generated_Source\PSoC4/FanController.c **** *   b0:   FAN1 STALL
 716:Generated_Source\PSoC4/FanController.c **** *   b1:   FAN2 STALL
 717:Generated_Source\PSoC4/FanController.c **** *   ...
 718:Generated_Source\PSoC4/FanController.c **** *   b15:  FAN16 STALL
 719:Generated_Source\PSoC4/FanController.c **** *
 720:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 721:Generated_Source\PSoC4/FanController.c **** *  Calling this API de-asserts the alert pin and clears all pending stall
 722:Generated_Source\PSoC4/FanController.c **** *  status alerts.
 723:Generated_Source\PSoC4/FanController.c **** *
 724:Generated_Source\PSoC4/FanController.c **** ******************************************************************************/
 725:Generated_Source\PSoC4/FanController.c **** uint16 FanController_GetFanStallStatus(void) 
 726:Generated_Source\PSoC4/FanController.c **** {
 346              		.loc 1 726 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              		@ link register save eliminated.
 727:Generated_Source\PSoC4/FanController.c ****     uint16 stallStatus;
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 20


 728:Generated_Source\PSoC4/FanController.c **** 
 729:Generated_Source\PSoC4/FanController.c ****     #if (CY_PSOC4)
 730:Generated_Source\PSoC4/FanController.c ****         stallStatus = FanController_stallStatus;
 351              		.loc 1 730 0
 352 0000 044B     		ldr	r3, .L29
 353 0002 5888     		ldrh	r0, [r3, #2]
 354              	.LVL14:
 731:Generated_Source\PSoC4/FanController.c **** 
 732:Generated_Source\PSoC4/FanController.c ****         /* Clear stall status for individual fans */
 733:Generated_Source\PSoC4/FanController.c ****         FanController_stallStatus = 0u;
 355              		.loc 1 733 0
 356 0004 0022     		movs	r2, #0
 357 0006 5A80     		strh	r2, [r3, #2]
 734:Generated_Source\PSoC4/FanController.c **** 
 735:Generated_Source\PSoC4/FanController.c ****         /* Clear the common SW stall signal on the control register */
 736:Generated_Source\PSoC4/FanController.c ****         FanController_GLOBAL_CONTROL_REG &= ((uint8) ~FanController_SW_STALL);
 358              		.loc 1 736 0
 359 0008 034A     		ldr	r2, .L29+4
 360 000a 1178     		ldrb	r1, [r2]
 361 000c 7F23     		movs	r3, #127
 362 000e 0B40     		ands	r3, r1
 363 0010 1370     		strb	r3, [r2]
 737:Generated_Source\PSoC4/FanController.c ****     #else
 738:Generated_Source\PSoC4/FanController.c ****         
 739:Generated_Source\PSoC4/FanController.c ****         #if(FanController_NUMBER_OF_FANS > 8u)
 740:Generated_Source\PSoC4/FanController.c ****             stallStatus = (uint16)FanController_STALL_ERROR_LSB_STATUS_REG |
 741:Generated_Source\PSoC4/FanController.c ****                 (uint16)((uint16)FanController_STALL_ERROR_MSB_STATUS_REG << 8u);
 742:Generated_Source\PSoC4/FanController.c ****         #else
 743:Generated_Source\PSoC4/FanController.c ****             stallStatus = (uint16)FanController_STALL_ERROR_LSB_STATUS_REG;
 744:Generated_Source\PSoC4/FanController.c ****         #endif /* FanController_NUMBER_OF_FANS > 8u */
 745:Generated_Source\PSoC4/FanController.c ****     #endif /* (CY_PSOC4) */
 746:Generated_Source\PSoC4/FanController.c ****         
 747:Generated_Source\PSoC4/FanController.c ****     return(stallStatus);
 748:Generated_Source\PSoC4/FanController.c **** }
 364              		.loc 1 748 0
 365              		@ sp needed
 366 0012 7047     		bx	lr
 367              	.L30:
 368              		.align	2
 369              	.L29:
 370 0014 00000000 		.word	.LANCHOR0
 371 0018 73000F40 		.word	1074724979
 372              		.cfi_endproc
 373              	.LFE13:
 374              		.size	FanController_GetFanStallStatus, .-FanController_GetFanStallStatus
 375              		.section	.text.FanController_GetFanSpeedStatus,"ax",%progbits
 376              		.align	2
 377              		.global	FanController_GetFanSpeedStatus
 378              		.code	16
 379              		.thumb_func
 380              		.type	FanController_GetFanSpeedStatus, %function
 381              	FanController_GetFanSpeedStatus:
 382              	.LFB14:
 749:Generated_Source\PSoC4/FanController.c **** 
 750:Generated_Source\PSoC4/FanController.c **** 
 751:Generated_Source\PSoC4/FanController.c **** #if (!FanController_IS_MANUAL_MODE)
 752:Generated_Source\PSoC4/FanController.c ****     /******************************************************************************
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 21


 753:Generated_Source\PSoC4/FanController.c ****     * Function Name: FanController_GetFanSpeedStatus
 754:Generated_Source\PSoC4/FanController.c ****     *******************************************************************************
 755:Generated_Source\PSoC4/FanController.c ****     *
 756:Generated_Source\PSoC4/FanController.c ****     * Summary:
 757:Generated_Source\PSoC4/FanController.c ****     *  Returns the speed regulation status of all fans.
 758:Generated_Source\PSoC4/FanController.c ****     *  This API is not available if Firmware Controller fan control method is
 759:Generated_Source\PSoC4/FanController.c ****     *  selected.
 760:Generated_Source\PSoC4/FanController.c ****     *
 761:Generated_Source\PSoC4/FanController.c ****     * Parameters:
 762:Generated_Source\PSoC4/FanController.c ****     *  None
 763:Generated_Source\PSoC4/FanController.c ****     *
 764:Generated_Source\PSoC4/FanController.c ****     * Return:
 765:Generated_Source\PSoC4/FanController.c ****     *  speedStatus (1==Fan Speed Failure, 0=Fan OK)
 766:Generated_Source\PSoC4/FanController.c ****     *   b0:   FAN1 SPEED REGULATION FAIL
 767:Generated_Source\PSoC4/FanController.c ****     *   b1:   FAN2 SPEED REGULATION FAIL
 768:Generated_Source\PSoC4/FanController.c ****     *   ...
 769:Generated_Source\PSoC4/FanController.c ****     *   b15:  FAN16 SPEED REGULATION FAIL
 770:Generated_Source\PSoC4/FanController.c ****     *
 771:Generated_Source\PSoC4/FanController.c ****     * Side Effects:
 772:Generated_Source\PSoC4/FanController.c ****     *  Calling this API de-asserts the alert pin and clears all pending speed
 773:Generated_Source\PSoC4/FanController.c ****     *  regulation failure status alerts.
 774:Generated_Source\PSoC4/FanController.c ****     *
 775:Generated_Source\PSoC4/FanController.c ****     ******************************************************************************/
 776:Generated_Source\PSoC4/FanController.c ****     uint16 FanController_GetFanSpeedStatus(void) 
 777:Generated_Source\PSoC4/FanController.c ****     {
 383              		.loc 1 777 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 778:Generated_Source\PSoC4/FanController.c ****         uint16 speedStatus;
 779:Generated_Source\PSoC4/FanController.c **** 
 780:Generated_Source\PSoC4/FanController.c ****         /* In case of Auto Hardware mode speed status is received from hardware
 781:Generated_Source\PSoC4/FanController.c ****         * status register...
 782:Generated_Source\PSoC4/FanController.c ****         */
 783:Generated_Source\PSoC4/FanController.c ****         #if (FanController_IS_AUTO_HARDWARE_MODE)
 784:Generated_Source\PSoC4/FanController.c ****             #if (FanController_NUMBER_OF_FANS > 8u)
 785:Generated_Source\PSoC4/FanController.c ****                 speedStatus = (uint16)FanController_SPEED_ERROR_LSB_STATUS_REG |
 786:Generated_Source\PSoC4/FanController.c ****                     (uint16)((uint16)FanController_SPEED_ERROR_MSB_STATUS_REG << 8u);
 787:Generated_Source\PSoC4/FanController.c ****             #else
 788:Generated_Source\PSoC4/FanController.c ****                 speedStatus = (uint16)FanController_SPEED_ERROR_LSB_STATUS_REG;
 789:Generated_Source\PSoC4/FanController.c ****             #endif /* FanController_NUMBER_OF_FANS > 8u */
 790:Generated_Source\PSoC4/FanController.c ****         #endif /* FanController_IS_AUTO_HARDWARE_MODE */
 791:Generated_Source\PSoC4/FanController.c **** 
 792:Generated_Source\PSoC4/FanController.c ****         /* ... in case of Auto Firmware mode the software status is used. */
 793:Generated_Source\PSoC4/FanController.c ****         #if (FanController_IS_AUTO_FIRMWARE_MODE)
 794:Generated_Source\PSoC4/FanController.c **** 
 795:Generated_Source\PSoC4/FanController.c ****             speedStatus = FanController_speedStatus;
 388              		.loc 1 795 0
 389 0000 024B     		ldr	r3, .L32
 390 0002 1888     		ldrh	r0, [r3]
 391 0004 80B2     		uxth	r0, r0
 392              	.LVL15:
 796:Generated_Source\PSoC4/FanController.c **** 
 797:Generated_Source\PSoC4/FanController.c ****             /* Simulate clear-on-read status */
 798:Generated_Source\PSoC4/FanController.c ****             FanController_speedStatus = 0u;
 393              		.loc 1 798 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 22


 394 0006 0022     		movs	r2, #0
 395 0008 1A80     		strh	r2, [r3]
 799:Generated_Source\PSoC4/FanController.c ****         #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
 800:Generated_Source\PSoC4/FanController.c **** 
 801:Generated_Source\PSoC4/FanController.c ****         return(speedStatus);
 802:Generated_Source\PSoC4/FanController.c ****     }
 396              		.loc 1 802 0
 397              		@ sp needed
 398 000a 7047     		bx	lr
 399              	.L33:
 400              		.align	2
 401              	.L32:
 402 000c 00000000 		.word	FanController_speedStatus
 403              		.cfi_endproc
 404              	.LFE14:
 405              		.size	FanController_GetFanSpeedStatus, .-FanController_GetFanSpeedStatus
 406              		.global	__aeabi_uidiv
 407              		.section	.text.FanController_SetDutyCycle,"ax",%progbits
 408              		.align	2
 409              		.global	FanController_SetDutyCycle
 410              		.code	16
 411              		.thumb_func
 412              		.type	FanController_SetDutyCycle, %function
 413              	FanController_SetDutyCycle:
 414              	.LFB15:
 803:Generated_Source\PSoC4/FanController.c **** 
 804:Generated_Source\PSoC4/FanController.c **** #endif /* (!FanController_IS_MANUAL_MODE) */
 805:Generated_Source\PSoC4/FanController.c **** 
 806:Generated_Source\PSoC4/FanController.c **** 
 807:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 808:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_SetDutyCycle
 809:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 810:Generated_Source\PSoC4/FanController.c **** *
 811:Generated_Source\PSoC4/FanController.c **** * Summary:
 812:Generated_Source\PSoC4/FanController.c **** *  Sets the duty cycle of selected fan or bank in hundredths of a percent,
 813:Generated_Source\PSoC4/FanController.c **** *  i.e. 5000=50% duty cycle. In hardware controlled fan mode, if manual duty
 814:Generated_Source\PSoC4/FanController.c **** *  cycle control is desirable, call the OverrideAutomaticControl(true) API 
 815:Generated_Source\PSoC4/FanController.c **** *  prior to calling this API.
 816:Generated_Source\PSoC4/FanController.c **** *
 817:Generated_Source\PSoC4/FanController.c **** * Parameters:
 818:Generated_Source\PSoC4/FanController.c **** *  uint8 fanOrBankNumber
 819:Generated_Source\PSoC4/FanController.c **** *   Valid range is 1-16 and should not exceed the number of fans or banks in the
 820:Generated_Source\PSoC4/FanController.c **** *   system.
 821:Generated_Source\PSoC4/FanController.c **** *
 822:Generated_Source\PSoC4/FanController.c **** *  uint16 dutyCycle
 823:Generated_Source\PSoC4/FanController.c **** *   dutyCycle is entered in hundredths of a percent, i.e. 5000=50% duty cycle
 824:Generated_Source\PSoC4/FanController.c **** *   Valid range is 0 to 10000.
 825:Generated_Source\PSoC4/FanController.c **** *
 826:Generated_Source\PSoC4/FanController.c **** * Return:
 827:Generated_Source\PSoC4/FanController.c **** *  None
 828:Generated_Source\PSoC4/FanController.c **** *
 829:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 830:Generated_Source\PSoC4/FanController.c **** *  None
 831:Generated_Source\PSoC4/FanController.c **** *
 832:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 833:Generated_Source\PSoC4/FanController.c **** void FanController_SetDutyCycle(uint8 fanOrBankNumber, uint16 dutyCycle)
 834:Generated_Source\PSoC4/FanController.c ****         
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 23


 835:Generated_Source\PSoC4/FanController.c **** {
 415              		.loc 1 835 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              	.LVL16:
 420 0000 10B5     		push	{r4, lr}
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 4, -8
 423              		.cfi_offset 14, -4
 836:Generated_Source\PSoC4/FanController.c ****     uint32 newCompare;      /* Needs to be 32-bit to allow for overflow during the math calculation
 837:Generated_Source\PSoC4/FanController.c **** 
 838:Generated_Source\PSoC4/FanController.c ****     /* Make sure the Fan/Bank number is valid */
 839:Generated_Source\PSoC4/FanController.c ****     if(fanOrBankNumber <= FanController_NUMBER_OF_FAN_OUTPUTS)
 424              		.loc 1 839 0
 425 0002 0128     		cmp	r0, #1
 426 0004 0BD8     		bhi	.L34
 840:Generated_Source\PSoC4/FanController.c ****     {
 841:Generated_Source\PSoC4/FanController.c ****         newCompare = (FanController_PWM_PERIOD * (uint32) dutyCycle) / FanController_PWM_DUTY_DIVID
 427              		.loc 1 841 0
 428 0006 0B01     		lsls	r3, r1, #4
 429 0008 591A     		subs	r1, r3, r1
 430              	.LVL17:
 431 000a 8801     		lsls	r0, r1, #6
 432              	.LVL18:
 433 000c 0449     		ldr	r1, .L36
 434 000e FFF7FEFF 		bl	__aeabi_uidiv
 435              	.LVL19:
 842:Generated_Source\PSoC4/FanController.c **** 
 843:Generated_Source\PSoC4/FanController.c ****         /* Make sure the Compare value is in range (user entered a valid duty
 844:Generated_Source\PSoC4/FanController.c ****         * cycle value).
 845:Generated_Source\PSoC4/FanController.c ****         */
 846:Generated_Source\PSoC4/FanController.c ****         if(newCompare <= FanController_PWM_PERIOD)
 436              		.loc 1 846 0
 437 0012 F023     		movs	r3, #240
 438 0014 9B00     		lsls	r3, r3, #2
 439 0016 9842     		cmp	r0, r3
 440 0018 01D8     		bhi	.L34
 847:Generated_Source\PSoC4/FanController.c ****         {
 848:Generated_Source\PSoC4/FanController.c ****             #if (!CY_PSOC4)
 849:Generated_Source\PSoC4/FanController.c ****                 #if(FanController_PWMRES == FanController_PWMRES_EIGHTBIT)
 850:Generated_Source\PSoC4/FanController.c ****                     CY_SET_REG8(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSetDutyReg, (u
 851:Generated_Source\PSoC4/FanController.c ****                 #else
 852:Generated_Source\PSoC4/FanController.c ****                     CY_SET_REG16(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSetDutyReg, (
 853:Generated_Source\PSoC4/FanController.c ****                 #endif /* FanController_PWMRES == FanController_PWMRES_EIGHTBIT */
 854:Generated_Source\PSoC4/FanController.c ****             #else
 855:Generated_Source\PSoC4/FanController.c ****                 CY_SET_REG32(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSetDutyReg, newCo
 441              		.loc 1 855 0
 442 001a 024B     		ldr	r3, .L36+4
 443 001c 1860     		str	r0, [r3]
 444              	.LVL20:
 445              	.L34:
 856:Generated_Source\PSoC4/FanController.c ****             #endif /* (!CY_PSOC4) */
 857:Generated_Source\PSoC4/FanController.c ****         }
 858:Generated_Source\PSoC4/FanController.c ****     }
 859:Generated_Source\PSoC4/FanController.c **** }
 446              		.loc 1 859 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 24


 447              		@ sp needed
 448 001e 10BD     		pop	{r4, pc}
 449              	.L37:
 450              		.align	2
 451              	.L36:
 452 0020 10270000 		.word	10000
 453 0024 0C012040 		.word	1075839244
 454              		.cfi_endproc
 455              	.LFE15:
 456              		.size	FanController_SetDutyCycle, .-FanController_SetDutyCycle
 457              		.section	.text.FanController_GetDutyCycle,"ax",%progbits
 458              		.align	2
 459              		.global	FanController_GetDutyCycle
 460              		.code	16
 461              		.thumb_func
 462              		.type	FanController_GetDutyCycle, %function
 463              	FanController_GetDutyCycle:
 464              	.LFB16:
 860:Generated_Source\PSoC4/FanController.c **** 
 861:Generated_Source\PSoC4/FanController.c **** 
 862:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 863:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_GetDutyCycle
 864:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 865:Generated_Source\PSoC4/FanController.c **** *
 866:Generated_Source\PSoC4/FanController.c **** * Summary:
 867:Generated_Source\PSoC4/FanController.c **** *  Returns the current duty cycle of the selected fan or bank in hundredths
 868:Generated_Source\PSoC4/FanController.c **** *  of a percent, i.e. 5000=50% duty cycle.
 869:Generated_Source\PSoC4/FanController.c **** *
 870:Generated_Source\PSoC4/FanController.c **** * Parameters:
 871:Generated_Source\PSoC4/FanController.c **** *  uint8 fanOrBankNumber
 872:Generated_Source\PSoC4/FanController.c **** *  Valid range is 1-16 and should not exceed the number of fans or banks in
 873:Generated_Source\PSoC4/FanController.c **** *  the system.
 874:Generated_Source\PSoC4/FanController.c **** *
 875:Generated_Source\PSoC4/FanController.c **** * Return:
 876:Generated_Source\PSoC4/FanController.c **** *  uint16 duyCycle
 877:Generated_Source\PSoC4/FanController.c **** *  Current duty cycle in hundredths of a percent.
 878:Generated_Source\PSoC4/FanController.c **** *
 879:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 880:Generated_Source\PSoC4/FanController.c **** *  None
 881:Generated_Source\PSoC4/FanController.c **** *
 882:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 883:Generated_Source\PSoC4/FanController.c **** uint16 FanController_GetDutyCycle(uint8 fanOrBankNumber) 
 884:Generated_Source\PSoC4/FanController.c **** {
 465              		.loc 1 884 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469              	.LVL21:
 470 0000 10B5     		push	{r4, lr}
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 4, -8
 473              		.cfi_offset 14, -4
 474              	.LVL22:
 885:Generated_Source\PSoC4/FanController.c ****     uint16 duyCycle = 0u;
 886:Generated_Source\PSoC4/FanController.c **** 
 887:Generated_Source\PSoC4/FanController.c ****     if(fanOrBankNumber <= FanController_NUMBER_OF_FAN_OUTPUTS)
 475              		.loc 1 887 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 25


 476 0002 0128     		cmp	r0, #1
 477 0004 09D8     		bhi	.L40
 888:Generated_Source\PSoC4/FanController.c ****     {
 889:Generated_Source\PSoC4/FanController.c ****         #if (!CY_PSOC4)
 890:Generated_Source\PSoC4/FanController.c ****             #if(FanController_PWMRES == FanController_PWMRES_EIGHTBIT)
 891:Generated_Source\PSoC4/FanController.c ****                 duyCycle = (uint16)
 892:Generated_Source\PSoC4/FanController.c ****                     ((((uint32) CY_GET_REG8(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSe
 893:Generated_Source\PSoC4/FanController.c ****                             * FanController_PWM_DUTY_DIVIDER) / FanController_PWM_PERIOD);
 894:Generated_Source\PSoC4/FanController.c ****             #else
 895:Generated_Source\PSoC4/FanController.c ****                 duyCycle = (uint16)
 896:Generated_Source\PSoC4/FanController.c ****                     (((uint32) CY_GET_REG16(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSe
 897:Generated_Source\PSoC4/FanController.c ****                                 * FanController_PWM_DUTY_DIVIDER) / FanController_PWM_PERIOD);
 898:Generated_Source\PSoC4/FanController.c ****             #endif /* FanController_PWMRES == FanController_PWMRES_EIGHTBIT */
 899:Generated_Source\PSoC4/FanController.c ****         #else
 900:Generated_Source\PSoC4/FanController.c ****             duyCycle = (uint16)
 901:Generated_Source\PSoC4/FanController.c ****                 (((uint32) CY_GET_REG32(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSetDut
 478              		.loc 1 901 0
 479 0006 064B     		ldr	r3, .L41
 480 0008 1868     		ldr	r0, [r3]
 481              	.LVL23:
 902:Generated_Source\PSoC4/FanController.c ****                         * FanController_PWM_DUTY_DIVIDER) / FanController_PWM_PERIOD);
 482              		.loc 1 902 0
 483 000a 064B     		ldr	r3, .L41+4
 484 000c 5843     		muls	r0, r3
 485 000e F021     		movs	r1, #240
 486 0010 8900     		lsls	r1, r1, #2
 487 0012 FFF7FEFF 		bl	__aeabi_uidiv
 488              	.LVL24:
 900:Generated_Source\PSoC4/FanController.c ****                 (((uint32) CY_GET_REG32(FanController_fanDriverRegs[fanOrBankNumber - 1u].pwmSetDut
 489              		.loc 1 900 0
 490 0016 80B2     		uxth	r0, r0
 491              	.LVL25:
 492 0018 00E0     		b	.L39
 493              	.LVL26:
 494              	.L40:
 885:Generated_Source\PSoC4/FanController.c **** 
 495              		.loc 1 885 0
 496 001a 0020     		movs	r0, #0
 497              	.LVL27:
 498              	.L39:
 903:Generated_Source\PSoC4/FanController.c ****         #endif /* (!CY_PSOC4) */
 904:Generated_Source\PSoC4/FanController.c ****     }
 905:Generated_Source\PSoC4/FanController.c **** 
 906:Generated_Source\PSoC4/FanController.c ****     return(duyCycle);
 907:Generated_Source\PSoC4/FanController.c **** }
 499              		.loc 1 907 0
 500              		@ sp needed
 501 001c 10BD     		pop	{r4, pc}
 502              	.L42:
 503 001e C046     		.align	2
 504              	.L41:
 505 0020 0C012040 		.word	1075839244
 506 0024 10270000 		.word	10000
 507              		.cfi_endproc
 508              	.LFE16:
 509              		.size	FanController_GetDutyCycle, .-FanController_GetDutyCycle
 510              		.section	.text.FanController_SetDesiredSpeed,"ax",%progbits
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 26


 511              		.align	2
 512              		.global	FanController_SetDesiredSpeed
 513              		.code	16
 514              		.thumb_func
 515              		.type	FanController_SetDesiredSpeed, %function
 516              	FanController_SetDesiredSpeed:
 517              	.LFB17:
 908:Generated_Source\PSoC4/FanController.c **** 
 909:Generated_Source\PSoC4/FanController.c **** 
 910:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
 911:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_SetDesiredSpeed
 912:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
 913:Generated_Source\PSoC4/FanController.c **** *
 914:Generated_Source\PSoC4/FanController.c **** * Summary:
 915:Generated_Source\PSoC4/FanController.c **** *  Sets the desired RPM of specified fan. If the AcousticNoiseReduction
 916:Generated_Source\PSoC4/FanController.c **** *  parameter is true (enabled via the component customizer) in hardware
 917:Generated_Source\PSoC4/FanController.c **** *  controlled fan mode, the desired speed is converted to a fan rotation period
 918:Generated_Source\PSoC4/FanController.c **** *  and written to SRAM for subsequent DMA into the tachometer block. If the
 919:Generated_Source\PSoC4/FanController.c **** *  AcousticNoiseReduction parameter is false, the desired speed is converted to
 920:Generated_Source\PSoC4/FanController.c **** *  a duty cycle and written directly into the PWM register for the selected fan.
 921:Generated_Source\PSoC4/FanController.c **** *
 922:Generated_Source\PSoC4/FanController.c **** * Parameters:
 923:Generated_Source\PSoC4/FanController.c **** *  uint8 fanNumber
 924:Generated_Source\PSoC4/FanController.c **** *  Valid range is 1-16 and should not exceed the number of fans in the system.
 925:Generated_Source\PSoC4/FanController.c **** *
 926:Generated_Source\PSoC4/FanController.c **** * uint16 rpm
 927:Generated_Source\PSoC4/FanController.c **** *  Valid range is 500 to 25,000, but should not exceed the max RPM of the
 928:Generated_Source\PSoC4/FanController.c **** *  selected fan.
 929:Generated_Source\PSoC4/FanController.c **** *
 930:Generated_Source\PSoC4/FanController.c **** * Return:
 931:Generated_Source\PSoC4/FanController.c **** *  None
 932:Generated_Source\PSoC4/FanController.c **** *
 933:Generated_Source\PSoC4/FanController.c **** * Side Effects:
 934:Generated_Source\PSoC4/FanController.c **** *  None
 935:Generated_Source\PSoC4/FanController.c **** *
 936:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
 937:Generated_Source\PSoC4/FanController.c **** void FanController_SetDesiredSpeed(uint8 fanNumber, uint16 rpm) 
 938:Generated_Source\PSoC4/FanController.c **** {
 518              		.loc 1 938 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              		@ link register save eliminated.
 523              	.LVL28:
 939:Generated_Source\PSoC4/FanController.c ****     uint32 overrideDuty;        /* Needs to be 32-bit to allow for overflow during the math calcula
 940:Generated_Source\PSoC4/FanController.c ****     uint16 currentSpeed;
 941:Generated_Source\PSoC4/FanController.c **** 
 942:Generated_Source\PSoC4/FanController.c ****     /* Check for valid Fan number */
 943:Generated_Source\PSoC4/FanController.c ****     if(fanNumber <= FanController_NUMBER_OF_FANS)
 524              		.loc 1 943 0
 525 0000 0128     		cmp	r0, #1
 526 0002 03D8     		bhi	.L43
 944:Generated_Source\PSoC4/FanController.c ****     {
 945:Generated_Source\PSoC4/FanController.c ****         /* Get the actual speed */
 946:Generated_Source\PSoC4/FanController.c ****         currentSpeed = FanController_GetActualSpeed(fanNumber);
 947:Generated_Source\PSoC4/FanController.c **** 
 948:Generated_Source\PSoC4/FanController.c ****         /* 3 cases where we will directly write a new duty cycle in firmware: */
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 27


 949:Generated_Source\PSoC4/FanController.c ****             /* Case 1) Manual Control fan mode */
 950:Generated_Source\PSoC4/FanController.c ****         if((FanController_IS_MANUAL_MODE)   ||
 951:Generated_Source\PSoC4/FanController.c ****             /* Case 2) Auto controlled fan mode and noise reduction is off */
 952:Generated_Source\PSoC4/FanController.c ****             ((FanController_IS_AUTO_HARDWARE_MODE) &&
 953:Generated_Source\PSoC4/FanController.c ****                 (FanController_NOISE_REDUCTION_MODE == FanController_NOISE_REDUCTION_OFF)) ||
 954:Generated_Source\PSoC4/FanController.c ****             /* Case 3) hardware controlled fan mode and new rpm is slower than current */
 955:Generated_Source\PSoC4/FanController.c ****             ((FanController_IS_AUTO_HARDWARE_MODE) && (rpm < currentSpeed)))
 956:Generated_Source\PSoC4/FanController.c ****         {
 957:Generated_Source\PSoC4/FanController.c ****             /* Override hardware controlled fan mode temporarily to write new duty cycle */
 958:Generated_Source\PSoC4/FanController.c ****             #if(FanController_IS_AUTO_HARDWARE_MODE)
 959:Generated_Source\PSoC4/FanController.c ****                 FanController_OverrideAutomaticControl(1u);
 960:Generated_Source\PSoC4/FanController.c ****             #endif /* FanController_IS_AUTO_HARDWARE_MODE */
 961:Generated_Source\PSoC4/FanController.c **** 
 962:Generated_Source\PSoC4/FanController.c ****             /* Desired speed is slower than rpmA */
 963:Generated_Source\PSoC4/FanController.c ****             if(rpm < FanController_fanProperties[fanNumber - 1u].rpmA)
 964:Generated_Source\PSoC4/FanController.c ****             {
 965:Generated_Source\PSoC4/FanController.c ****                 overrideDuty =  (uint32)FanController_fanProperties[fanNumber - 1u].dutyA -
 966:Generated_Source\PSoC4/FanController.c ****                                 (((uint32)FanController_fanProperties[fanNumber - 1u].dutyRpmSlope 
 967:Generated_Source\PSoC4/FanController.c ****                                    ((uint32)FanController_fanProperties[fanNumber - 1u].rpmA - (uin
 968:Generated_Source\PSoC4/FanController.c **** 
 969:Generated_Source\PSoC4/FanController.c ****                 /* Check for math underflow */
 970:Generated_Source\PSoC4/FanController.c ****                 if(overrideDuty > 10000u)
 971:Generated_Source\PSoC4/FanController.c ****                 {
 972:Generated_Source\PSoC4/FanController.c ****                     overrideDuty = 0u;
 973:Generated_Source\PSoC4/FanController.c ****                 }
 974:Generated_Source\PSoC4/FanController.c ****             }
 975:Generated_Source\PSoC4/FanController.c **** 
 976:Generated_Source\PSoC4/FanController.c ****             /* Desired speed is faster than rpmA */
 977:Generated_Source\PSoC4/FanController.c ****             else
 978:Generated_Source\PSoC4/FanController.c ****             {
 979:Generated_Source\PSoC4/FanController.c ****                 overrideDuty =  (uint32)FanController_fanProperties[fanNumber - 1u].dutyA +
 980:Generated_Source\PSoC4/FanController.c ****                                 (((uint32)FanController_fanProperties[fanNumber - 1u].dutyRpmSlope 
 981:Generated_Source\PSoC4/FanController.c ****                                    ((uint32)rpm - (uint32)FanController_fanProperties[fanNumber - 1
 982:Generated_Source\PSoC4/FanController.c **** 
 983:Generated_Source\PSoC4/FanController.c ****                 /* Check for math overflow */
 984:Generated_Source\PSoC4/FanController.c ****                 if(overrideDuty > 10000u)
 985:Generated_Source\PSoC4/FanController.c ****                 {
 986:Generated_Source\PSoC4/FanController.c ****                     overrideDuty = 10000u;
 987:Generated_Source\PSoC4/FanController.c ****                 }
 988:Generated_Source\PSoC4/FanController.c ****             }
 989:Generated_Source\PSoC4/FanController.c **** 
 990:Generated_Source\PSoC4/FanController.c ****             /* Set the newly calculated duty cycle */
 991:Generated_Source\PSoC4/FanController.c ****             FanController_SetDutyCycle(fanNumber, (uint16) overrideDuty);
 992:Generated_Source\PSoC4/FanController.c ****         }
 993:Generated_Source\PSoC4/FanController.c **** 
 994:Generated_Source\PSoC4/FanController.c ****         /* Set newly requested desired rpm including tolerance calculation and store
 995:Generated_Source\PSoC4/FanController.c ****         * in SRAM for the tachometer block DMA controller.
 996:Generated_Source\PSoC4/FanController.c ****         */
 997:Generated_Source\PSoC4/FanController.c ****         #if(FanController_IS_AUTO_HARDWARE_MODE)
 998:Generated_Source\PSoC4/FanController.c **** 
 999:Generated_Source\PSoC4/FanController.c ****             FanController_fanControl.desiredPeriod[fanNumber - 1u] =
1000:Generated_Source\PSoC4/FanController.c ****                 (uint16) (FanController_RPM_PERIOD_CONV_FACTOR /
1001:Generated_Source\PSoC4/FanController.c ****                     (uint32) ((uint32) rpm + (((uint32) rpm * FanController_TOLERANCE) /
1002:Generated_Source\PSoC4/FanController.c ****                         FanController_TOLERANCE_DIVIDER)));
1003:Generated_Source\PSoC4/FanController.c **** 
1004:Generated_Source\PSoC4/FanController.c ****             if(rpm > 500u)
1005:Generated_Source\PSoC4/FanController.c ****             {
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 28


1006:Generated_Source\PSoC4/FanController.c ****                 FanController_fanControl.tolerance[fanNumber - 1u] =
1007:Generated_Source\PSoC4/FanController.c ****                     (uint16) (((FanController_RPM_PERIOD_CONV_FACTOR * FanController_TOLERANCE) /
1008:Generated_Source\PSoC4/FanController.c ****                         FanController_TOLERANCE_DIVIDER) / (uint32) rpm);
1009:Generated_Source\PSoC4/FanController.c ****             }
1010:Generated_Source\PSoC4/FanController.c ****             else
1011:Generated_Source\PSoC4/FanController.c ****             {
1012:Generated_Source\PSoC4/FanController.c ****                 FanController_fanControl.tolerance[fanNumber - 1u] = 100u;
1013:Generated_Source\PSoC4/FanController.c ****             }
1014:Generated_Source\PSoC4/FanController.c **** 
1015:Generated_Source\PSoC4/FanController.c ****             /* Go back to hardware controlled fan mode */
1016:Generated_Source\PSoC4/FanController.c ****             FanController_OverrideAutomaticControl(0u);
1017:Generated_Source\PSoC4/FanController.c **** 
1018:Generated_Source\PSoC4/FanController.c ****         #endif /* FanController_IS_AUTO_HARDWARE_MODE */
1019:Generated_Source\PSoC4/FanController.c ****         
1020:Generated_Source\PSoC4/FanController.c ****         /* Store the desired speed to RAM if we are in auto mode. It will be used by 
1021:Generated_Source\PSoC4/FanController.c ****         * FanController_GetDesiredSpeed() and PID algorithm.
1022:Generated_Source\PSoC4/FanController.c ****         */
1023:Generated_Source\PSoC4/FanController.c ****         #if((FanController_IS_AUTO_FIRMWARE_MODE) || (FanController_IS_AUTO_HARDWARE_MODE))
1024:Generated_Source\PSoC4/FanController.c ****             FanController_desiredFansSpeed[fanNumber - 1u] = rpm;
 527              		.loc 1 1024 0
 528 0004 0138     		subs	r0, r0, #1
 529              	.LVL29:
 530 0006 4000     		lsls	r0, r0, #1
 531 0008 014B     		ldr	r3, .L45
 532 000a C152     		strh	r1, [r0, r3]
 533              	.L43:
1025:Generated_Source\PSoC4/FanController.c ****         #endif /* (FanController_IS_AUTO_HARDWARE_MODE) */
1026:Generated_Source\PSoC4/FanController.c ****     }
1027:Generated_Source\PSoC4/FanController.c **** }
 534              		.loc 1 1027 0
 535              		@ sp needed
 536 000c 7047     		bx	lr
 537              	.L46:
 538 000e C046     		.align	2
 539              	.L45:
 540 0010 00000000 		.word	FanController_desiredFansSpeed
 541              		.cfi_endproc
 542              	.LFE17:
 543              		.size	FanController_SetDesiredSpeed, .-FanController_SetDesiredSpeed
 544              		.section	.text.FanController_Init,"ax",%progbits
 545              		.align	2
 546              		.global	FanController_Init
 547              		.code	16
 548              		.thumb_func
 549              		.type	FanController_Init, %function
 550              	FanController_Init:
 551              	.LFB4:
 223:Generated_Source\PSoC4/FanController.c ****     uint8 counti;
 552              		.loc 1 223 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 557              		.cfi_def_cfa_offset 24
 558              		.cfi_offset 3, -24
 559              		.cfi_offset 4, -20
 560              		.cfi_offset 5, -16
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 29


 561              		.cfi_offset 6, -12
 562              		.cfi_offset 7, -8
 563              		.cfi_offset 14, -4
 312:Generated_Source\PSoC4/FanController.c ****         #elif(FanController_NUMBER_OF_FAN_OUTPUTS == 2u)
 564              		.loc 1 312 0
 565 0002 FFF7FEFF 		bl	FanController_FW_PWM1_Init
 566              	.LVL30:
 327:Generated_Source\PSoC4/FanController.c ****         {
 567              		.loc 1 327 0
 568 0006 0024     		movs	r4, #0
 569 0008 16E0     		b	.L48
 570              	.LVL31:
 571              	.L49:
 330:Generated_Source\PSoC4/FanController.c **** 
 572              		.loc 1 330 0 discriminator 3
 573 000a F022     		movs	r2, #240
 574 000c 9200     		lsls	r2, r2, #2
 575 000e 2B4B     		ldr	r3, .L52
 576 0010 1A60     		str	r2, [r3]
 336:Generated_Source\PSoC4/FanController.c ****             #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
 577              		.loc 1 336 0 discriminator 3
 578 0012 651C     		adds	r5, r4, #1
 579 0014 EDB2     		uxtb	r5, r5
 580 0016 2A4F     		ldr	r7, .L52+4
 581 0018 E600     		lsls	r6, r4, #3
 582 001a 321B     		subs	r2, r6, r4
 583 001c 5300     		lsls	r3, r2, #1
 584 001e FB18     		adds	r3, r7, r3
 585 0020 9989     		ldrh	r1, [r3, #12]
 586 0022 2800     		movs	r0, r5
 587 0024 FFF7FEFF 		bl	FanController_SetDutyCycle
 588              	.LVL32:
 340:Generated_Source\PSoC4/FanController.c ****         }
 589              		.loc 1 340 0 discriminator 3
 590 0028 341B     		subs	r4, r6, r4
 591              	.LVL33:
 592 002a 6300     		lsls	r3, r4, #1
 593 002c FB18     		adds	r3, r7, r3
 594 002e 5989     		ldrh	r1, [r3, #10]
 595 0030 2800     		movs	r0, r5
 596 0032 FFF7FEFF 		bl	FanController_SetDesiredSpeed
 597              	.LVL34:
 327:Generated_Source\PSoC4/FanController.c ****         {
 598              		.loc 1 327 0 discriminator 3
 599 0036 2C00     		movs	r4, r5
 600              	.LVL35:
 601              	.L48:
 327:Generated_Source\PSoC4/FanController.c ****         {
 602              		.loc 1 327 0 is_stmt 0 discriminator 1
 603 0038 002C     		cmp	r4, #0
 604 003a E6D0     		beq	.L49
 349:Generated_Source\PSoC4/FanController.c ****     #if (CY_PSOC4)
 605              		.loc 1 349 0 is_stmt 1
 606 003c FFF7FEFF 		bl	CyEnterCriticalSection
 607              	.LVL36:
 352:Generated_Source\PSoC4/FanController.c ****         FanController_TACH_CUNTER_AUX_CTL_REG &= ((uint8) ~FanController_TACH_COUNTER_FIFO_CLR);
 608              		.loc 1 352 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 30


 609 0040 204B     		ldr	r3, .L52+8
 610 0042 1988     		ldrh	r1, [r3]
 611 0044 0222     		movs	r2, #2
 612 0046 FF32     		adds	r2, r2, #255
 613 0048 0A43     		orrs	r2, r1
 614 004a 1A80     		strh	r2, [r3]
 353:Generated_Source\PSoC4/FanController.c ****     #else
 615              		.loc 1 353 0
 616 004c 1988     		ldrh	r1, [r3]
 617 004e FE22     		movs	r2, #254
 618 0050 0A40     		ands	r2, r1
 619 0052 1A80     		strh	r2, [r3]
 358:Generated_Source\PSoC4/FanController.c ****     
 620              		.loc 1 358 0
 621 0054 FFF7FEFF 		bl	CyExitCriticalSection
 622              	.LVL37:
 361:Generated_Source\PSoC4/FanController.c **** 
 623              		.loc 1 361 0
 624 0058 3C22     		movs	r2, #60
 625 005a 1B4B     		ldr	r3, .L52+12
 626 005c 1A70     		strb	r2, [r3]
 366:Generated_Source\PSoC4/FanController.c **** 
 627              		.loc 1 366 0
 628 005e 0A23     		movs	r3, #10
 629 0060 1A4A     		ldr	r2, .L52+16
 630 0062 1370     		strb	r3, [r2]
 369:Generated_Source\PSoC4/FanController.c **** 
 631              		.loc 1 369 0
 632 0064 FA21     		movs	r1, #250
 633 0066 1A4A     		ldr	r2, .L52+20
 634 0068 1170     		strb	r1, [r2]
 372:Generated_Source\PSoC4/FanController.c **** 
 635              		.loc 1 372 0
 636 006a 1A4A     		ldr	r2, .L52+24
 637 006c 1370     		strb	r3, [r2]
 379:Generated_Source\PSoC4/FanController.c **** 
 638              		.loc 1 379 0
 639 006e 0120     		movs	r0, #1
 640 0070 FFF7FEFF 		bl	FanController_SetAlertMask
 641              	.LVL38:
 385:Generated_Source\PSoC4/FanController.c ****         {
 642              		.loc 1 385 0
 643 0074 0024     		movs	r4, #0
 644 0076 18E0     		b	.L50
 645              	.LVL39:
 646              	.L51:
 388:Generated_Source\PSoC4/FanController.c **** 
 647              		.loc 1 388 0 discriminator 3
 648 0078 FFF7FEFF 		bl	CyEnterCriticalSection
 649              	.LVL40:
 393:Generated_Source\PSoC4/FanController.c ****             FanController_pidA2[counti] = FanController_PID_A2;
 650              		.loc 1 393 0 discriminator 3
 651 007c 6300     		lsls	r3, r4, #1
 652 007e 1649     		ldr	r1, .L52+28
 653 0080 164A     		ldr	r2, .L52+32
 654 0082 9952     		strh	r1, [r3, r2]
 394:Generated_Source\PSoC4/FanController.c ****             FanController_pidA3[counti] = FanController_PID_A3;
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 31


 655              		.loc 1 394 0 discriminator 3
 656 0084 1649     		ldr	r1, .L52+36
 657 0086 174A     		ldr	r2, .L52+40
 658 0088 9952     		strh	r1, [r3, r2]
 395:Generated_Source\PSoC4/FanController.c **** 
 659              		.loc 1 395 0 discriminator 3
 660 008a 0021     		movs	r1, #0
 661 008c 164A     		ldr	r2, .L52+44
 662 008e 9952     		strh	r1, [r3, r2]
 397:Generated_Source\PSoC4/FanController.c ****             FanController_outputSatH[counti] = FanController_PID_OUTPUT_SAT_H;
 663              		.loc 1 397 0 discriminator 3
 664 0090 A300     		lsls	r3, r4, #2
 665 0092 8421     		movs	r1, #132
 666 0094 8905     		lsls	r1, r1, #22
 667 0096 154A     		ldr	r2, .L52+48
 668 0098 9950     		str	r1, [r3, r2]
 398:Generated_Source\PSoC4/FanController.c ****             CyExitCriticalSection(interruptState);
 669              		.loc 1 398 0 discriminator 3
 670 009a F021     		movs	r1, #240
 671 009c 8905     		lsls	r1, r1, #22
 672 009e 144A     		ldr	r2, .L52+52
 673 00a0 9950     		str	r1, [r3, r2]
 399:Generated_Source\PSoC4/FanController.c ****         }
 674              		.loc 1 399 0 discriminator 3
 675 00a2 FFF7FEFF 		bl	CyExitCriticalSection
 676              	.LVL41:
 385:Generated_Source\PSoC4/FanController.c ****         {
 677              		.loc 1 385 0 discriminator 3
 678 00a6 0134     		adds	r4, r4, #1
 679              	.LVL42:
 680 00a8 E4B2     		uxtb	r4, r4
 681              	.LVL43:
 682              	.L50:
 385:Generated_Source\PSoC4/FanController.c ****         {
 683              		.loc 1 385 0 is_stmt 0 discriminator 1
 684 00aa 002C     		cmp	r4, #0
 685 00ac E4D0     		beq	.L51
 407:Generated_Source\PSoC4/FanController.c ****     #endif /* (CY_PSOC4) */
 686              		.loc 1 407 0 is_stmt 1
 687 00ae 1148     		ldr	r0, .L52+56
 688 00b0 FFF7FEFF 		bl	FanController_DataSend_StartEx
 689              	.LVL44:
 411:Generated_Source\PSoC4/FanController.c ****     #endif /* (FanController_IS_AUTO_FIRMWARE_MODE) */
 690              		.loc 1 411 0
 691 00b4 1048     		ldr	r0, .L52+60
 692 00b6 FFF7FEFF 		bl	FanController_PID_ISR_StartEx
 693              	.LVL45:
 413:Generated_Source\PSoC4/FanController.c **** 
 694              		.loc 1 413 0
 695              		@ sp needed
 696              	.LVL46:
 697 00ba F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 698              	.L53:
 699              		.align	2
 700              	.L52:
 701 00bc 14012040 		.word	1075839252
 702 00c0 00000000 		.word	.LANCHOR1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 32


 703 00c4 24110F40 		.word	1074729252
 704 00c8 21000F40 		.word	1074724897
 705 00cc 31000F40 		.word	1074724913
 706 00d0 20000F40 		.word	1074724896
 707 00d4 30000F40 		.word	1074724912
 708 00d8 66120000 		.word	4710
 709 00dc 00000000 		.word	FanController_pidA1
 710 00e0 00F0FFFF 		.word	-4096
 711 00e4 00000000 		.word	FanController_pidA2
 712 00e8 00000000 		.word	FanController_pidA3
 713 00ec 00000000 		.word	FanController_outputSatL
 714 00f0 00000000 		.word	FanController_outputSatH
 715 00f4 00000000 		.word	FanController_DATA_SEND_ISR
 716 00f8 00000000 		.word	FanController_PID_CONTROL_ISR
 717              		.cfi_endproc
 718              	.LFE4:
 719              		.size	FanController_Init, .-FanController_Init
 720              		.section	.text.FanController_Start,"ax",%progbits
 721              		.align	2
 722              		.global	FanController_Start
 723              		.code	16
 724              		.thumb_func
 725              		.type	FanController_Start, %function
 726              	FanController_Start:
 727              	.LFB2:
 133:Generated_Source\PSoC4/FanController.c ****     /* If not already initialized, then initialize hardware and variables */
 728              		.loc 1 133 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732 0000 10B5     		push	{r4, lr}
 733              		.cfi_def_cfa_offset 8
 734              		.cfi_offset 4, -8
 735              		.cfi_offset 14, -4
 135:Generated_Source\PSoC4/FanController.c ****     {
 736              		.loc 1 135 0
 737 0002 064B     		ldr	r3, .L56
 738 0004 1B79     		ldrb	r3, [r3, #4]
 739 0006 002B     		cmp	r3, #0
 740 0008 04D1     		bne	.L55
 137:Generated_Source\PSoC4/FanController.c ****         FanController_initVar = 1u;
 741              		.loc 1 137 0
 742 000a FFF7FEFF 		bl	FanController_Init
 743              	.LVL47:
 138:Generated_Source\PSoC4/FanController.c ****     }
 744              		.loc 1 138 0
 745 000e 0122     		movs	r2, #1
 746 0010 024B     		ldr	r3, .L56
 747 0012 1A71     		strb	r2, [r3, #4]
 748              	.L55:
 140:Generated_Source\PSoC4/FanController.c **** }
 749              		.loc 1 140 0
 750 0014 FFF7FEFF 		bl	FanController_Enable
 751              	.LVL48:
 141:Generated_Source\PSoC4/FanController.c **** 
 752              		.loc 1 141 0
 753              		@ sp needed
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 33


 754 0018 10BD     		pop	{r4, pc}
 755              	.L57:
 756 001a C046     		.align	2
 757              	.L56:
 758 001c 00000000 		.word	.LANCHOR0
 759              		.cfi_endproc
 760              	.LFE2:
 761              		.size	FanController_Start, .-FanController_Start
 762              		.section	.text.FanController_GetDesiredSpeed,"ax",%progbits
 763              		.align	2
 764              		.global	FanController_GetDesiredSpeed
 765              		.code	16
 766              		.thumb_func
 767              		.type	FanController_GetDesiredSpeed, %function
 768              	FanController_GetDesiredSpeed:
 769              	.LFB18:
1028:Generated_Source\PSoC4/FanController.c **** 
1029:Generated_Source\PSoC4/FanController.c **** 
1030:Generated_Source\PSoC4/FanController.c **** #if (!FanController_IS_MANUAL_MODE)
1031:Generated_Source\PSoC4/FanController.c ****     /******************************************************************************
1032:Generated_Source\PSoC4/FanController.c ****     * Function Name: FanController_GetDesiredSpeed
1033:Generated_Source\PSoC4/FanController.c ****     *******************************************************************************
1034:Generated_Source\PSoC4/FanController.c ****     *
1035:Generated_Source\PSoC4/FanController.c ****     * Summary:
1036:Generated_Source\PSoC4/FanController.c ****     *  Returns the currently desired speed of the selected fan in RPMs in hardware
1037:Generated_Source\PSoC4/FanController.c ****     *  controlled fan mode. This API is not available if firmware controlled fan
1038:Generated_Source\PSoC4/FanController.c ****     *  mode is selected.
1039:Generated_Source\PSoC4/FanController.c ****     *
1040:Generated_Source\PSoC4/FanController.c ****     * Parameters:
1041:Generated_Source\PSoC4/FanController.c ****     *  uint8 fanNumber
1042:Generated_Source\PSoC4/FanController.c ****     *  Valid range is 1-16 and should not exceed the number of fans in the system.
1043:Generated_Source\PSoC4/FanController.c ****     *
1044:Generated_Source\PSoC4/FanController.c ****     * Return:
1045:Generated_Source\PSoC4/FanController.c ****     *  uint16 desiredSpeed: Current desired speed for selected fan.
1046:Generated_Source\PSoC4/FanController.c ****     *
1047:Generated_Source\PSoC4/FanController.c ****     * Side Effects:
1048:Generated_Source\PSoC4/FanController.c ****     *  None
1049:Generated_Source\PSoC4/FanController.c ****     *
1050:Generated_Source\PSoC4/FanController.c ****     ******************************************************************************/
1051:Generated_Source\PSoC4/FanController.c ****     uint16 FanController_GetDesiredSpeed(uint8 fanNumber) 
1052:Generated_Source\PSoC4/FanController.c ****     {
 770              		.loc 1 1052 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		@ link register save eliminated.
 775              	.LVL49:
1053:Generated_Source\PSoC4/FanController.c ****         return(FanController_desiredFansSpeed[fanNumber - 1u]);
 776              		.loc 1 1053 0
 777 0000 0138     		subs	r0, r0, #1
 778              	.LVL50:
 779 0002 4000     		lsls	r0, r0, #1
 780 0004 014B     		ldr	r3, .L59
 781 0006 185A     		ldrh	r0, [r3, r0]
1054:Generated_Source\PSoC4/FanController.c ****     }
 782              		.loc 1 1054 0
 783              		@ sp needed
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 34


 784 0008 7047     		bx	lr
 785              	.L60:
 786 000a C046     		.align	2
 787              	.L59:
 788 000c 00000000 		.word	FanController_desiredFansSpeed
 789              		.cfi_endproc
 790              	.LFE18:
 791              		.size	FanController_GetDesiredSpeed, .-FanController_GetDesiredSpeed
 792              		.section	.text.FanController_GetActualSpeed,"ax",%progbits
 793              		.align	2
 794              		.global	FanController_GetActualSpeed
 795              		.code	16
 796              		.thumb_func
 797              		.type	FanController_GetActualSpeed, %function
 798              	FanController_GetActualSpeed:
 799              	.LFB19:
1055:Generated_Source\PSoC4/FanController.c **** 
1056:Generated_Source\PSoC4/FanController.c **** #endif /* (!FanController_IS_MANUAL_MODE) */
1057:Generated_Source\PSoC4/FanController.c **** 
1058:Generated_Source\PSoC4/FanController.c **** 
1059:Generated_Source\PSoC4/FanController.c **** /******************************************************************************
1060:Generated_Source\PSoC4/FanController.c **** * Function Name: FanController_GetActualSpeed
1061:Generated_Source\PSoC4/FanController.c **** *******************************************************************************
1062:Generated_Source\PSoC4/FanController.c **** *
1063:Generated_Source\PSoC4/FanController.c **** * Summary:
1064:Generated_Source\PSoC4/FanController.c **** *  Returns the actual measured RPM of selected fan. This function should be 
1065:Generated_Source\PSoC4/FanController.c **** *  called first time in the design only after the requested fan is made a full
1066:Generated_Source\PSoC4/FanController.c **** *  rotation. This can be ensured by calling the function after End-of-Cycle 
1067:Generated_Source\PSoC4/FanController.c **** *  (eoc) pulse generation.
1068:Generated_Source\PSoC4/FanController.c **** *
1069:Generated_Source\PSoC4/FanController.c **** * Parameters:
1070:Generated_Source\PSoC4/FanController.c **** *  uint8 fanNumber
1071:Generated_Source\PSoC4/FanController.c **** *  Valid range is 1-16 and should not exceed the number of fans in the system.
1072:Generated_Source\PSoC4/FanController.c **** *
1073:Generated_Source\PSoC4/FanController.c **** * Return:
1074:Generated_Source\PSoC4/FanController.c **** *  uint16 actualSpeed: Actual measured RPM of target fan.
1075:Generated_Source\PSoC4/FanController.c **** *
1076:Generated_Source\PSoC4/FanController.c **** * Side Effects:
1077:Generated_Source\PSoC4/FanController.c **** *  None
1078:Generated_Source\PSoC4/FanController.c **** *
1079:Generated_Source\PSoC4/FanController.c **** ****************************************************************************/
1080:Generated_Source\PSoC4/FanController.c **** uint16 FanController_GetActualSpeed(uint8 fanNumber) 
1081:Generated_Source\PSoC4/FanController.c **** {
 800              		.loc 1 1081 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804              	.LVL51:
 805 0000 10B5     		push	{r4, lr}
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 4, -8
 808              		.cfi_offset 14, -4
 809              	.LVL52:
1082:Generated_Source\PSoC4/FanController.c ****     uint16 actualSpeed = 0u;
1083:Generated_Source\PSoC4/FanController.c **** 
1084:Generated_Source\PSoC4/FanController.c ****     if(fanNumber <= FanController_NUMBER_OF_FANS)
 810              		.loc 1 1084 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 35


 811 0002 0128     		cmp	r0, #1
 812 0004 0AD8     		bhi	.L63
1085:Generated_Source\PSoC4/FanController.c ****     {
1086:Generated_Source\PSoC4/FanController.c ****         #if(CY_PSOC3)
1087:Generated_Source\PSoC4/FanController.c **** 
1088:Generated_Source\PSoC4/FanController.c ****             if(0u != (FanController_DMA_STATUS_REG & FanController_DMA1))
1089:Generated_Source\PSoC4/FanController.c ****             {
1090:Generated_Source\PSoC4/FanController.c ****                 /* If DMA writes to actualPeriodDma1 (DMA1 state) then read
1091:Generated_Source\PSoC4/FanController.c ****                 * actualPeriodDma2.
1092:Generated_Source\PSoC4/FanController.c ****                 */
1093:Generated_Source\PSoC4/FanController.c ****                 if(FanController_fanControl.actualPeriodDma2[fanNumber - 1u] != 0u)
1094:Generated_Source\PSoC4/FanController.c ****                 {
1095:Generated_Source\PSoC4/FanController.c ****                     /* Calculate RPM from value measured by tachometer counter */
1096:Generated_Source\PSoC4/FanController.c ****                     actualSpeed = (uint16) (FanController_RPM_PERIOD_CONV_FACTOR /
1097:Generated_Source\PSoC4/FanController.c ****                         (uint32) FanController_fanControl.actualPeriodDma2[fanNumber - 1u]);
1098:Generated_Source\PSoC4/FanController.c ****                 }
1099:Generated_Source\PSoC4/FanController.c ****             }
1100:Generated_Source\PSoC4/FanController.c ****             else
1101:Generated_Source\PSoC4/FanController.c ****             {
1102:Generated_Source\PSoC4/FanController.c ****                 /* If DMA writes to actualPeriodDma2 (DMA2 state) then read
1103:Generated_Source\PSoC4/FanController.c ****                 * actualPeriodDma1.
1104:Generated_Source\PSoC4/FanController.c ****                 */
1105:Generated_Source\PSoC4/FanController.c ****                 if(FanController_fanControl.actualPeriodDma1[fanNumber - 1u] != 0u)
1106:Generated_Source\PSoC4/FanController.c ****                 {
1107:Generated_Source\PSoC4/FanController.c ****                     /* Calculate RPM from value measured bu tachometer counter */
1108:Generated_Source\PSoC4/FanController.c ****                     actualSpeed = (uint16) (FanController_RPM_PERIOD_CONV_FACTOR /
1109:Generated_Source\PSoC4/FanController.c ****                         (uint32) FanController_fanControl.actualPeriodDma1[fanNumber - 1u]);
1110:Generated_Source\PSoC4/FanController.c ****                 }
1111:Generated_Source\PSoC4/FanController.c ****             }
1112:Generated_Source\PSoC4/FanController.c **** 
1113:Generated_Source\PSoC4/FanController.c ****         #else
1114:Generated_Source\PSoC4/FanController.c **** 
1115:Generated_Source\PSoC4/FanController.c ****             if(FanController_fanControl.actualPeriod[fanNumber - 1u] != 0u)
 813              		.loc 1 1115 0
 814 0006 0138     		subs	r0, r0, #1
 815              	.LVL53:
 816 0008 4000     		lsls	r0, r0, #1
 817 000a 064B     		ldr	r3, .L65
 818 000c C15A     		ldrh	r1, [r0, r3]
 819 000e 0029     		cmp	r1, #0
 820 0010 06D0     		beq	.L64
1116:Generated_Source\PSoC4/FanController.c ****             {
1117:Generated_Source\PSoC4/FanController.c ****                 /* Calculate RPM from value measured by tachometer counter */
1118:Generated_Source\PSoC4/FanController.c ****                 actualSpeed = (uint16) (FanController_RPM_PERIOD_CONV_FACTOR /
 821              		.loc 1 1118 0
 822 0012 0548     		ldr	r0, .L65+4
 823 0014 FFF7FEFF 		bl	__aeabi_uidiv
 824              	.LVL54:
 825 0018 80B2     		uxth	r0, r0
 826              	.LVL55:
 827 001a 02E0     		b	.L62
 828              	.LVL56:
 829              	.L63:
1082:Generated_Source\PSoC4/FanController.c **** 
 830              		.loc 1 1082 0
 831 001c 0020     		movs	r0, #0
 832              	.LVL57:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 36


 833 001e 00E0     		b	.L62
 834              	.L64:
 835 0020 0020     		movs	r0, #0
 836              	.LVL58:
 837              	.L62:
1119:Generated_Source\PSoC4/FanController.c ****                     (uint32) FanController_fanControl.actualPeriod[fanNumber - 1u]);
1120:Generated_Source\PSoC4/FanController.c ****             }
1121:Generated_Source\PSoC4/FanController.c **** 
1122:Generated_Source\PSoC4/FanController.c ****         #endif /* (CY_PSOC3) */
1123:Generated_Source\PSoC4/FanController.c ****     }
1124:Generated_Source\PSoC4/FanController.c **** 
1125:Generated_Source\PSoC4/FanController.c ****     return(actualSpeed);
1126:Generated_Source\PSoC4/FanController.c **** }
 838              		.loc 1 1126 0
 839              		@ sp needed
 840 0022 10BD     		pop	{r4, pc}
 841              	.L66:
 842              		.align	2
 843              	.L65:
 844 0024 00000000 		.word	FanController_fanControl
 845 0028 80C3C901 		.word	30000000
 846              		.cfi_endproc
 847              	.LFE19:
 848              		.size	FanController_GetActualSpeed, .-FanController_GetActualSpeed
 849              		.section	.text.FanController_SetSaturation,"ax",%progbits
 850              		.align	2
 851              		.global	FanController_SetSaturation
 852              		.code	16
 853              		.thumb_func
 854              		.type	FanController_SetSaturation, %function
 855              	FanController_SetSaturation:
 856              	.LFB20:
1127:Generated_Source\PSoC4/FanController.c **** 
1128:Generated_Source\PSoC4/FanController.c **** 
1129:Generated_Source\PSoC4/FanController.c **** #if (FanController_IS_AUTO_HARDWARE_MODE)
1130:Generated_Source\PSoC4/FanController.c ****     /******************************************************************************
1131:Generated_Source\PSoC4/FanController.c ****     * Function Name: FanController_OverrideAutomaticControl
1132:Generated_Source\PSoC4/FanController.c ****     *******************************************************************************
1133:Generated_Source\PSoC4/FanController.c ****     *
1134:Generated_Source\PSoC4/FanController.c ****     * Summary:
1135:Generated_Source\PSoC4/FanController.c ****     *  Allows firmware to take over fan control when hardware controlled fan mode
1136:Generated_Source\PSoC4/FanController.c ****     *  is enabled. That is, directly control fan speed using the SetDutyCycle() API.
1137:Generated_Source\PSoC4/FanController.c ****     *  This API is not available if firmware controlled fan mode is selected.
1138:Generated_Source\PSoC4/FanController.c ****     *
1139:Generated_Source\PSoC4/FanController.c ****     * Parameters:
1140:Generated_Source\PSoC4/FanController.c ****     *  uint8 override
1141:Generated_Source\PSoC4/FanController.c ****     *   non-zero = firmware assumes control of fans
1142:Generated_Source\PSoC4/FanController.c ****     *   zero     = hardware assumes control of fans
1143:Generated_Source\PSoC4/FanController.c ****     *
1144:Generated_Source\PSoC4/FanController.c ****     * Return:
1145:Generated_Source\PSoC4/FanController.c ****     *  None
1146:Generated_Source\PSoC4/FanController.c ****     *
1147:Generated_Source\PSoC4/FanController.c ****     * Side Effects:
1148:Generated_Source\PSoC4/FanController.c ****     *  None
1149:Generated_Source\PSoC4/FanController.c ****     ******************************************************************************/
1150:Generated_Source\PSoC4/FanController.c **** 
1151:Generated_Source\PSoC4/FanController.c ****     void FanController_OverrideAutomaticControl(uint8 override)
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 37


1152:Generated_Source\PSoC4/FanController.c ****                                 
1153:Generated_Source\PSoC4/FanController.c ****     {
1154:Generated_Source\PSoC4/FanController.c ****         uint8 interruptState = CyEnterCriticalSection();
1155:Generated_Source\PSoC4/FanController.c **** 
1156:Generated_Source\PSoC4/FanController.c ****         if(override != 0u)
1157:Generated_Source\PSoC4/FanController.c ****         {
1158:Generated_Source\PSoC4/FanController.c ****             FanController_GLOBAL_CONTROL_REG |= FanController_OVERRIDE;
1159:Generated_Source\PSoC4/FanController.c ****         }
1160:Generated_Source\PSoC4/FanController.c ****         else
1161:Generated_Source\PSoC4/FanController.c ****         {
1162:Generated_Source\PSoC4/FanController.c ****             FanController_GLOBAL_CONTROL_REG &= ((uint8) ~FanController_OVERRIDE);
1163:Generated_Source\PSoC4/FanController.c ****         }
1164:Generated_Source\PSoC4/FanController.c **** 
1165:Generated_Source\PSoC4/FanController.c ****         CyExitCriticalSection(interruptState);
1166:Generated_Source\PSoC4/FanController.c ****     }
1167:Generated_Source\PSoC4/FanController.c **** 
1168:Generated_Source\PSoC4/FanController.c **** #endif /* (FanController_IS_AUTO_HARDWARE_MODE) */
1169:Generated_Source\PSoC4/FanController.c **** 
1170:Generated_Source\PSoC4/FanController.c **** 
1171:Generated_Source\PSoC4/FanController.c **** #if(FanController_IS_AUTO_FIRMWARE_MODE)
1172:Generated_Source\PSoC4/FanController.c ****     /******************************************************************************
1173:Generated_Source\PSoC4/FanController.c ****     * Function Name: FanController_SetSaturation
1174:Generated_Source\PSoC4/FanController.c ****     *******************************************************************************
1175:Generated_Source\PSoC4/FanController.c ****     *
1176:Generated_Source\PSoC4/FanController.c ****     * Summary:
1177:Generated_Source\PSoC4/FanController.c ****     *  Changes the PID controller output saturation. This bounds the output PWM to
1178:Generated_Source\PSoC4/FanController.c ****     *  the fan and prevents what is known as integrator windup.
1179:Generated_Source\PSoC4/FanController.c ****     *
1180:Generated_Source\PSoC4/FanController.c ****     * Parameters:
1181:Generated_Source\PSoC4/FanController.c ****     *  uint8 fanNum : Valid range is 1..16 but should not exceed the number of fans
1182:Generated_Source\PSoC4/FanController.c ****     *                 in the system.
1183:Generated_Source\PSoC4/FanController.c ****     *  uint16 satH  : The upper threshold for saturation. Valid range is 0 to
1184:Generated_Source\PSoC4/FanController.c ****     *                 65535. A value of 0 represents 0% of the duty cycle. A value
1185:Generated_Source\PSoC4/FanController.c ****     *                 of 65535 represents 100% duty cycle.
1186:Generated_Source\PSoC4/FanController.c ****     *
1187:Generated_Source\PSoC4/FanController.c ****     *  uint16 satL  : The lower threshold for saturation. Valid range is 0 to
1188:Generated_Source\PSoC4/FanController.c ****     *                 65535. A value of 0 represents 0% of the duty cycle. A value
1189:Generated_Source\PSoC4/FanController.c ****     *                 of 65535 represents 100% duty cycle.
1190:Generated_Source\PSoC4/FanController.c ****     *
1191:Generated_Source\PSoC4/FanController.c ****     * Return:
1192:Generated_Source\PSoC4/FanController.c ****     *  None
1193:Generated_Source\PSoC4/FanController.c ****     *
1194:Generated_Source\PSoC4/FanController.c ****     * Side Effects:
1195:Generated_Source\PSoC4/FanController.c ****     *  None
1196:Generated_Source\PSoC4/FanController.c ****     *
1197:Generated_Source\PSoC4/FanController.c ****     ****************************************************************************/
1198:Generated_Source\PSoC4/FanController.c ****     void FanController_SetSaturation(uint8 fanNum, uint16 satH, uint16 satL)
1199:Generated_Source\PSoC4/FanController.c ****                                                     
1200:Generated_Source\PSoC4/FanController.c ****     {
 857              		.loc 1 1200 0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 0
 860              		@ frame_needed = 0, uses_anonymous_args = 0
 861              	.LVL59:
 862 0000 70B5     		push	{r4, r5, r6, lr}
 863              		.cfi_def_cfa_offset 16
 864              		.cfi_offset 4, -16
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 38


 865              		.cfi_offset 5, -12
 866              		.cfi_offset 6, -8
 867              		.cfi_offset 14, -4
 868 0002 0400     		movs	r4, r0
1201:Generated_Source\PSoC4/FanController.c ****         uint8 interruptState;
1202:Generated_Source\PSoC4/FanController.c ****         uint32 tmpOutL;
1203:Generated_Source\PSoC4/FanController.c ****         uint32 tmpOutH;
1204:Generated_Source\PSoC4/FanController.c **** 
1205:Generated_Source\PSoC4/FanController.c ****         if((fanNum - 1u) < FanController_NUMBER_OF_FANS)
 869              		.loc 1 1205 0
 870 0004 0128     		cmp	r0, #1
 871 0006 0FD1     		bne	.L67
1206:Generated_Source\PSoC4/FanController.c ****         {
1207:Generated_Source\PSoC4/FanController.c ****             /* Calculate PID Constants for fan and store them into temporary variables to
1208:Generated_Source\PSoC4/FanController.c ****             * be later written to PID vars. This is done so to not disable interrupt for a
1209:Generated_Source\PSoC4/FanController.c ****             * long time.
1210:Generated_Source\PSoC4/FanController.c ****             */
1211:Generated_Source\PSoC4/FanController.c ****             tmpOutH = ((FanController_PWM_PERIOD * ((uint32) (((uint32) 1u) << FanController_PID_PO
 872              		.loc 1 1211 0
 873 0008 0B01     		lsls	r3, r1, #4
 874 000a 591A     		subs	r1, r3, r1
 875              	.LVL60:
 876 000c 8D02     		lsls	r5, r1, #10
 877              	.LVL61:
1212:Generated_Source\PSoC4/FanController.c ****                                            FanController_MAX_GAIN) * satH;
1213:Generated_Source\PSoC4/FanController.c ****             tmpOutL = ((FanController_PWM_PERIOD * ((uint32) (((uint32) 1u) << FanController_PID_PO
 878              		.loc 1 1213 0
 879 000e 1301     		lsls	r3, r2, #4
 880 0010 9A1A     		subs	r2, r3, r2
 881              	.LVL62:
 882 0012 9602     		lsls	r6, r2, #10
 883              	.LVL63:
1214:Generated_Source\PSoC4/FanController.c ****                                            FanController_MAX_GAIN) * satL;
1215:Generated_Source\PSoC4/FanController.c **** 
1216:Generated_Source\PSoC4/FanController.c ****             /* Disable interrupts while updating PID constants */
1217:Generated_Source\PSoC4/FanController.c ****             interruptState = CyEnterCriticalSection();
 884              		.loc 1 1217 0
 885 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 886              	.LVL64:
1218:Generated_Source\PSoC4/FanController.c **** 
1219:Generated_Source\PSoC4/FanController.c ****             FanController_outputSatH[fanNum - 1u] = tmpOutH;
 887              		.loc 1 1219 0
 888 0018 013C     		subs	r4, r4, #1
 889 001a A400     		lsls	r4, r4, #2
 890 001c 034B     		ldr	r3, .L69
 891 001e E550     		str	r5, [r4, r3]
1220:Generated_Source\PSoC4/FanController.c ****             FanController_outputSatL[fanNum - 1u] = tmpOutL;
 892              		.loc 1 1220 0
 893 0020 034B     		ldr	r3, .L69+4
 894 0022 E650     		str	r6, [r4, r3]
1221:Generated_Source\PSoC4/FanController.c **** 
1222:Generated_Source\PSoC4/FanController.c ****             CyExitCriticalSection(interruptState);
 895              		.loc 1 1222 0
 896 0024 FFF7FEFF 		bl	CyExitCriticalSection
 897              	.LVL65:
 898              	.L67:
1223:Generated_Source\PSoC4/FanController.c ****         }
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 39


1224:Generated_Source\PSoC4/FanController.c ****     }
 899              		.loc 1 1224 0
 900              		@ sp needed
 901 0028 70BD     		pop	{r4, r5, r6, pc}
 902              	.L70:
 903 002a C046     		.align	2
 904              	.L69:
 905 002c 00000000 		.word	FanController_outputSatH
 906 0030 00000000 		.word	FanController_outputSatL
 907              		.cfi_endproc
 908              	.LFE20:
 909              		.size	FanController_SetSaturation, .-FanController_SetSaturation
 910              		.global	__aeabi_idiv
 911              		.section	.text.FanController_SetPID,"ax",%progbits
 912              		.align	2
 913              		.global	FanController_SetPID
 914              		.code	16
 915              		.thumb_func
 916              		.type	FanController_SetPID, %function
 917              	FanController_SetPID:
 918              	.LFB21:
1225:Generated_Source\PSoC4/FanController.c **** 
1226:Generated_Source\PSoC4/FanController.c **** 
1227:Generated_Source\PSoC4/FanController.c ****     /******************************************************************************
1228:Generated_Source\PSoC4/FanController.c ****     * Function Name: FanController_SetPID
1229:Generated_Source\PSoC4/FanController.c ****     *******************************************************************************
1230:Generated_Source\PSoC4/FanController.c ****     *
1231:Generated_Source\PSoC4/FanController.c ****     * Summary:
1232:Generated_Source\PSoC4/FanController.c ****     *  Changes the PID controller coefficients for the controlled fan. The
1233:Generated_Source\PSoC4/FanController.c ****     *  coefficients are integers that are proportional to the gain.
1234:Generated_Source\PSoC4/FanController.c ****     *
1235:Generated_Source\PSoC4/FanController.c ****     * Parameters:
1236:Generated_Source\PSoC4/FanController.c ****     *  uint8 fanNum : Valid range is 1..16 but should not exceed the number of fans
1237:Generated_Source\PSoC4/FanController.c ****     *                 in the system.
1238:Generated_Source\PSoC4/FanController.c ****     *  uint16 kp    : Proportional gain. Valid range is 0 to 65535. A value of 0
1239:Generated_Source\PSoC4/FanController.c ****     *                 represents 0% gain. A value of 65535 represents 100% gain.
1240:Generated_Source\PSoC4/FanController.c ****     *
1241:Generated_Source\PSoC4/FanController.c ****     *  uint16 ki    : Integral gain. Valid range is 0 to 65535. A value of 0
1242:Generated_Source\PSoC4/FanController.c ****     *                 represents 0% gain. A value of 65535 represents 100% gain.
1243:Generated_Source\PSoC4/FanController.c ****     *
1244:Generated_Source\PSoC4/FanController.c ****     *  uint16 kd    : Derivative gain. Valid range is 0 to 65535. A value of 0
1245:Generated_Source\PSoC4/FanController.c ****     *                 represents 0% gain. A value of 65535 represents 100% gain.
1246:Generated_Source\PSoC4/FanController.c ****     *
1247:Generated_Source\PSoC4/FanController.c ****     * Return:
1248:Generated_Source\PSoC4/FanController.c ****     *  None
1249:Generated_Source\PSoC4/FanController.c ****     *
1250:Generated_Source\PSoC4/FanController.c ****     * Side Effects:
1251:Generated_Source\PSoC4/FanController.c ****     *  None
1252:Generated_Source\PSoC4/FanController.c ****     *
1253:Generated_Source\PSoC4/FanController.c ****     ****************************************************************************/
1254:Generated_Source\PSoC4/FanController.c ****     void FanController_SetPID(uint8 fanNum, uint16 kp, uint16 ki, uint16 kd)
1255:Generated_Source\PSoC4/FanController.c ****                                                                         
1256:Generated_Source\PSoC4/FanController.c ****     {
 919              		.loc 1 1256 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 0
 922              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 40


 923              	.LVL66:
 924 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 925              		.cfi_def_cfa_offset 24
 926              		.cfi_offset 3, -24
 927              		.cfi_offset 4, -20
 928              		.cfi_offset 5, -16
 929              		.cfi_offset 6, -12
 930              		.cfi_offset 7, -8
 931              		.cfi_offset 14, -4
 932 0002 0400     		movs	r4, r0
 933 0004 0E00     		movs	r6, r1
 934 0006 1D00     		movs	r5, r3
1257:Generated_Source\PSoC4/FanController.c ****         uint8 interruptState;
1258:Generated_Source\PSoC4/FanController.c ****         /* Variables for temporary storing of a calculated PID constants */
1259:Generated_Source\PSoC4/FanController.c ****         int16 tmpA1;
1260:Generated_Source\PSoC4/FanController.c ****         int16 tmpA2;
1261:Generated_Source\PSoC4/FanController.c ****         int16 tmpA3;
1262:Generated_Source\PSoC4/FanController.c **** 
1263:Generated_Source\PSoC4/FanController.c ****         if((fanNum - 1u) < FanController_NUMBER_OF_FANS)
 935              		.loc 1 1263 0
 936 0008 0128     		cmp	r0, #1
 937 000a 20D1     		bne	.L71
1264:Generated_Source\PSoC4/FanController.c ****         {
1265:Generated_Source\PSoC4/FanController.c ****             /* Calculate PID Constants for fan and store them into temporary variables to
1266:Generated_Source\PSoC4/FanController.c ****             * be later written to PID vars. This is done so to not disable interrupt for a
1267:Generated_Source\PSoC4/FanController.c ****             * long time.
1268:Generated_Source\PSoC4/FanController.c ****             */
1269:Generated_Source\PSoC4/FanController.c ****             tmpA1 = (int16) ((((int32) kp + (int32) ki + (int32) kd) * ((int32) FanController_GAIN_
 938              		.loc 1 1269 0
 939 000c 8818     		adds	r0, r1, r2
 940              	.LVL67:
 941 000e C018     		adds	r0, r0, r3
 942 0010 0003     		lsls	r0, r0, #12
 943 0012 0F49     		ldr	r1, .L73
 944              	.LVL68:
 945 0014 FFF7FEFF 		bl	__aeabi_idiv
 946              	.LVL69:
 947 0018 07B2     		sxth	r7, r0
 948              	.LVL70:
1270:Generated_Source\PSoC4/FanController.c ****                     (int32) FanController_MAX_GAIN);
1271:Generated_Source\PSoC4/FanController.c ****             tmpA2 = (int16) (((-((int32) kp + (2 * (int32) kd))) * ((int32) FanController_GAIN_MULT
 949              		.loc 1 1271 0
 950 001a 6B00     		lsls	r3, r5, #1
 951 001c F618     		adds	r6, r6, r3
 952 001e 3305     		lsls	r3, r6, #20
 953 0020 9E1B     		subs	r6, r3, r6
 954 0022 3003     		lsls	r0, r6, #12
 955 0024 0A49     		ldr	r1, .L73
 956 0026 FFF7FEFF 		bl	__aeabi_idiv
 957              	.LVL71:
 958 002a 06B2     		sxth	r6, r0
 959              	.LVL72:
1272:Generated_Source\PSoC4/FanController.c ****                     (int32) FanController_MAX_GAIN);
1273:Generated_Source\PSoC4/FanController.c ****             tmpA3 = (int16) ((((int32) kd) * ((int32) FanController_GAIN_MULTIPLIER )) /
 960              		.loc 1 1273 0
 961 002c 2803     		lsls	r0, r5, #12
 962 002e 0849     		ldr	r1, .L73
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 41


 963 0030 FFF7FEFF 		bl	__aeabi_idiv
 964              	.LVL73:
 965 0034 05B2     		sxth	r5, r0
 966              	.LVL74:
1274:Generated_Source\PSoC4/FanController.c ****                     (int32) FanController_MAX_GAIN);
1275:Generated_Source\PSoC4/FanController.c **** 
1276:Generated_Source\PSoC4/FanController.c ****             /* Disable interrupts while updating PID constants */
1277:Generated_Source\PSoC4/FanController.c ****             interruptState = CyEnterCriticalSection();
 967              		.loc 1 1277 0
 968 0036 FFF7FEFF 		bl	CyEnterCriticalSection
 969              	.LVL75:
1278:Generated_Source\PSoC4/FanController.c **** 
1279:Generated_Source\PSoC4/FanController.c ****             FanController_pidA1[fanNum - 1u] = tmpA1;
 970              		.loc 1 1279 0
 971 003a 013C     		subs	r4, r4, #1
 972 003c 6400     		lsls	r4, r4, #1
 973 003e 054B     		ldr	r3, .L73+4
 974 0040 E752     		strh	r7, [r4, r3]
1280:Generated_Source\PSoC4/FanController.c ****             FanController_pidA2[fanNum - 1u] = tmpA2;
 975              		.loc 1 1280 0
 976 0042 054B     		ldr	r3, .L73+8
 977 0044 E652     		strh	r6, [r4, r3]
1281:Generated_Source\PSoC4/FanController.c ****             FanController_pidA3[fanNum - 1u] = tmpA3;
 978              		.loc 1 1281 0
 979 0046 054B     		ldr	r3, .L73+12
 980 0048 E552     		strh	r5, [r4, r3]
1282:Generated_Source\PSoC4/FanController.c **** 
1283:Generated_Source\PSoC4/FanController.c ****             CyExitCriticalSection(interruptState);
 981              		.loc 1 1283 0
 982 004a FFF7FEFF 		bl	CyExitCriticalSection
 983              	.LVL76:
 984              	.L71:
1284:Generated_Source\PSoC4/FanController.c ****         }
1285:Generated_Source\PSoC4/FanController.c ****     }
 985              		.loc 1 1285 0
 986              		@ sp needed
 987 004e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 988              	.L74:
 989              		.align	2
 990              	.L73:
 991 0050 FFFF0000 		.word	65535
 992 0054 00000000 		.word	FanController_pidA1
 993 0058 00000000 		.word	FanController_pidA2
 994 005c 00000000 		.word	FanController_pidA3
 995              		.cfi_endproc
 996              	.LFE21:
 997              		.size	FanController_SetPID, .-FanController_SetPID
 998              		.global	FanController_fanProperties
 999              		.comm	FanController_fanControl,2,4
 1000              		.global	FanController_fanPwmInitRegs
 1001              		.global	FanController_fanDriverRegs
 1002              		.comm	FanController_desiredFansSpeed,2,4
 1003              		.comm	FanController_outputSatH,4,4
 1004              		.comm	FanController_outputSatL,4,4
 1005              		.comm	FanController_pidA3,2,4
 1006              		.comm	FanController_pidA2,2,4
 1007              		.comm	FanController_pidA1,2,4
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 42


 1008              		.global	FanController_stallStatus
 1009              		.global	FanController_alertMask
 1010              		.global	FanController_initVar
 1011              		.section	.rodata
 1012              		.align	2
 1013              		.type	FanController_fanPwmInitRegs, %object
 1014              		.size	FanController_fanPwmInitRegs, 4
 1015              	FanController_fanPwmInitRegs:
 1016 0000 14012040 		.word	1075839252
 1017              		.type	FanController_fanDriverRegs, %object
 1018              		.size	FanController_fanDriverRegs, 4
 1019              	FanController_fanDriverRegs:
 1020 0004 0C012040 		.word	1075839244
 1021              		.data
 1022              		.align	2
 1023              		.set	.LANCHOR1,. + 0
 1024              		.type	FanController_fanProperties, %object
 1025              		.size	FanController_fanProperties, 14
 1026              	FanController_fanProperties:
 1027 0000 9808     		.short	2200
 1028 0002 C012     		.short	4800
 1029 0004 7C15     		.short	5500
 1030 0006 1027     		.short	10000
 1031 0008 AD00     		.short	173
 1032 000a 5C12     		.short	4700
 1033 000c 4826     		.short	9800
 1034              		.bss
 1035              		.align	1
 1036              		.set	.LANCHOR0,. + 0
 1037              		.type	FanController_alertMask, %object
 1038              		.size	FanController_alertMask, 2
 1039              	FanController_alertMask:
 1040 0000 0000     		.space	2
 1041              		.type	FanController_stallStatus, %object
 1042              		.size	FanController_stallStatus, 2
 1043              	FanController_stallStatus:
 1044 0002 0000     		.space	2
 1045              		.type	FanController_initVar, %object
 1046              		.size	FanController_initVar, 1
 1047              	FanController_initVar:
 1048 0004 00       		.space	1
 1049              		.text
 1050              	.Letext0:
 1051              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1052              		.file 3 "Generated_Source\\PSoC4\\FanController.h"
 1053              		.file 4 "Generated_Source\\PSoC4\\FanController_FW_PWM1.h"
 1054              		.file 5 "Generated_Source\\PSoC4\\CyLib.h"
 1055              		.file 6 "Generated_Source\\PSoC4\\FanController_DataSend.h"
 1056              		.file 7 "Generated_Source\\PSoC4\\FanController_PID_ISR.h"
 1057              		.section	.debug_info,"",%progbits
 1058              	.Ldebug_info0:
 1059 0000 A4080000 		.4byte	0x8a4
 1060 0004 0400     		.2byte	0x4
 1061 0006 00000000 		.4byte	.Ldebug_abbrev0
 1062 000a 04       		.byte	0x4
 1063 000b 01       		.uleb128 0x1
 1064 000c BE000000 		.4byte	.LASF99
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 43


 1065 0010 0C       		.byte	0xc
 1066 0011 1F050000 		.4byte	.LASF100
 1067 0015 30020000 		.4byte	.LASF101
 1068 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1069 001d 00000000 		.4byte	0
 1070 0021 00000000 		.4byte	.Ldebug_line0
 1071 0025 02       		.uleb128 0x2
 1072 0026 01       		.byte	0x1
 1073 0027 06       		.byte	0x6
 1074 0028 C5010000 		.4byte	.LASF0
 1075 002c 02       		.uleb128 0x2
 1076 002d 01       		.byte	0x1
 1077 002e 08       		.byte	0x8
 1078 002f C5050000 		.4byte	.LASF1
 1079 0033 02       		.uleb128 0x2
 1080 0034 02       		.byte	0x2
 1081 0035 05       		.byte	0x5
 1082 0036 D3050000 		.4byte	.LASF2
 1083 003a 02       		.uleb128 0x2
 1084 003b 02       		.byte	0x2
 1085 003c 07       		.byte	0x7
 1086 003d AB030000 		.4byte	.LASF3
 1087 0041 02       		.uleb128 0x2
 1088 0042 04       		.byte	0x4
 1089 0043 05       		.byte	0x5
 1090 0044 F9010000 		.4byte	.LASF4
 1091 0048 02       		.uleb128 0x2
 1092 0049 04       		.byte	0x4
 1093 004a 07       		.byte	0x7
 1094 004b F6020000 		.4byte	.LASF5
 1095 004f 02       		.uleb128 0x2
 1096 0050 08       		.byte	0x8
 1097 0051 05       		.byte	0x5
 1098 0052 B7010000 		.4byte	.LASF6
 1099 0056 02       		.uleb128 0x2
 1100 0057 08       		.byte	0x8
 1101 0058 07       		.byte	0x7
 1102 0059 67010000 		.4byte	.LASF7
 1103 005d 03       		.uleb128 0x3
 1104 005e 04       		.byte	0x4
 1105 005f 05       		.byte	0x5
 1106 0060 696E7400 		.ascii	"int\000"
 1107 0064 02       		.uleb128 0x2
 1108 0065 04       		.byte	0x4
 1109 0066 07       		.byte	0x7
 1110 0067 DC020000 		.4byte	.LASF8
 1111 006b 04       		.uleb128 0x4
 1112 006c 2A020000 		.4byte	.LASF9
 1113 0070 02       		.byte	0x2
 1114 0071 FB01     		.2byte	0x1fb
 1115 0073 2C000000 		.4byte	0x2c
 1116 0077 04       		.uleb128 0x4
 1117 0078 1A000000 		.4byte	.LASF10
 1118 007c 02       		.byte	0x2
 1119 007d FC01     		.2byte	0x1fc
 1120 007f 3A000000 		.4byte	0x3a
 1121 0083 04       		.uleb128 0x4
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 44


 1122 0084 7E020000 		.4byte	.LASF11
 1123 0088 02       		.byte	0x2
 1124 0089 FD01     		.2byte	0x1fd
 1125 008b 48000000 		.4byte	0x48
 1126 008f 04       		.uleb128 0x4
 1127 0090 24070000 		.4byte	.LASF12
 1128 0094 02       		.byte	0x2
 1129 0095 FF01     		.2byte	0x1ff
 1130 0097 33000000 		.4byte	0x33
 1131 009b 04       		.uleb128 0x4
 1132 009c F3010000 		.4byte	.LASF13
 1133 00a0 02       		.byte	0x2
 1134 00a1 0002     		.2byte	0x200
 1135 00a3 41000000 		.4byte	0x41
 1136 00a7 02       		.uleb128 0x2
 1137 00a8 04       		.byte	0x4
 1138 00a9 04       		.byte	0x4
 1139 00aa 9D050000 		.4byte	.LASF14
 1140 00ae 02       		.uleb128 0x2
 1141 00af 08       		.byte	0x8
 1142 00b0 04       		.byte	0x4
 1143 00b1 77070000 		.4byte	.LASF15
 1144 00b5 02       		.uleb128 0x2
 1145 00b6 01       		.byte	0x1
 1146 00b7 08       		.byte	0x8
 1147 00b8 6C060000 		.4byte	.LASF16
 1148 00bc 04       		.uleb128 0x4
 1149 00bd C0050000 		.4byte	.LASF17
 1150 00c1 02       		.byte	0x2
 1151 00c2 A502     		.2byte	0x2a5
 1152 00c4 C8000000 		.4byte	0xc8
 1153 00c8 05       		.uleb128 0x5
 1154 00c9 6B000000 		.4byte	0x6b
 1155 00cd 04       		.uleb128 0x4
 1156 00ce 07020000 		.4byte	.LASF18
 1157 00d2 02       		.byte	0x2
 1158 00d3 A602     		.2byte	0x2a6
 1159 00d5 D9000000 		.4byte	0xd9
 1160 00d9 05       		.uleb128 0x5
 1161 00da 77000000 		.4byte	0x77
 1162 00de 04       		.uleb128 0x4
 1163 00df 30040000 		.4byte	.LASF19
 1164 00e3 02       		.byte	0x2
 1165 00e4 A702     		.2byte	0x2a7
 1166 00e6 EA000000 		.4byte	0xea
 1167 00ea 05       		.uleb128 0x5
 1168 00eb 83000000 		.4byte	0x83
 1169 00ef 06       		.uleb128 0x6
 1170 00f0 02       		.byte	0x2
 1171 00f1 03       		.byte	0x3
 1172 00f2 DD       		.byte	0xdd
 1173 00f3 04010000 		.4byte	0x104
 1174 00f7 07       		.uleb128 0x7
 1175 00f8 0D000000 		.4byte	.LASF22
 1176 00fc 03       		.byte	0x3
 1177 00fd E8       		.byte	0xe8
 1178 00fe 04010000 		.4byte	0x104
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 45


 1179 0102 00       		.byte	0
 1180 0103 00       		.byte	0
 1181 0104 08       		.uleb128 0x8
 1182 0105 77000000 		.4byte	0x77
 1183 0109 14010000 		.4byte	0x114
 1184 010d 09       		.uleb128 0x9
 1185 010e 14010000 		.4byte	0x114
 1186 0112 00       		.byte	0
 1187 0113 00       		.byte	0
 1188 0114 02       		.uleb128 0x2
 1189 0115 04       		.byte	0x4
 1190 0116 07       		.byte	0x7
 1191 0117 61040000 		.4byte	.LASF20
 1192 011b 0A       		.uleb128 0xa
 1193 011c 99040000 		.4byte	.LASF21
 1194 0120 03       		.byte	0x3
 1195 0121 EB       		.byte	0xeb
 1196 0122 EF000000 		.4byte	0xef
 1197 0126 06       		.uleb128 0x6
 1198 0127 0E       		.byte	0xe
 1199 0128 03       		.byte	0x3
 1200 0129 EE       		.byte	0xee
 1201 012a 83010000 		.4byte	0x183
 1202 012e 07       		.uleb128 0x7
 1203 012f 20040000 		.4byte	.LASF23
 1204 0133 03       		.byte	0x3
 1205 0134 F0       		.byte	0xf0
 1206 0135 77000000 		.4byte	0x77
 1207 0139 00       		.byte	0
 1208 013a 07       		.uleb128 0x7
 1209 013b 25040000 		.4byte	.LASF24
 1210 013f 03       		.byte	0x3
 1211 0140 F1       		.byte	0xf1
 1212 0141 77000000 		.4byte	0x77
 1213 0145 02       		.byte	0x2
 1214 0146 07       		.uleb128 0x7
 1215 0147 5B040000 		.4byte	.LASF25
 1216 014b 03       		.byte	0x3
 1217 014c F2       		.byte	0xf2
 1218 014d 77000000 		.4byte	0x77
 1219 0151 04       		.byte	0x4
 1220 0152 07       		.uleb128 0x7
 1221 0153 BE030000 		.4byte	.LASF26
 1222 0157 03       		.byte	0x3
 1223 0158 F3       		.byte	0xf3
 1224 0159 77000000 		.4byte	0x77
 1225 015d 06       		.byte	0x6
 1226 015e 07       		.uleb128 0x7
 1227 015f E9020000 		.4byte	.LASF27
 1228 0163 03       		.byte	0x3
 1229 0164 F4       		.byte	0xf4
 1230 0165 77000000 		.4byte	0x77
 1231 0169 08       		.byte	0x8
 1232 016a 07       		.uleb128 0x7
 1233 016b 21000000 		.4byte	.LASF28
 1234 016f 03       		.byte	0x3
 1235 0170 F5       		.byte	0xf5
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 46


 1236 0171 77000000 		.4byte	0x77
 1237 0175 0A       		.byte	0xa
 1238 0176 07       		.uleb128 0x7
 1239 0177 52040000 		.4byte	.LASF29
 1240 017b 03       		.byte	0x3
 1241 017c F6       		.byte	0xf6
 1242 017d 77000000 		.4byte	0x77
 1243 0181 0C       		.byte	0xc
 1244 0182 00       		.byte	0
 1245 0183 0A       		.uleb128 0xa
 1246 0184 46050000 		.4byte	.LASF30
 1247 0188 03       		.byte	0x3
 1248 0189 F7       		.byte	0xf7
 1249 018a 26010000 		.4byte	0x126
 1250 018e 0B       		.uleb128 0xb
 1251 018f 04       		.byte	0x4
 1252 0190 03       		.byte	0x3
 1253 0191 2301     		.2byte	0x123
 1254 0193 A5010000 		.4byte	0x1a5
 1255 0197 0C       		.uleb128 0xc
 1256 0198 AA000000 		.4byte	.LASF31
 1257 019c 03       		.byte	0x3
 1258 019d 2501     		.2byte	0x125
 1259 019f 83000000 		.4byte	0x83
 1260 01a3 00       		.byte	0
 1261 01a4 00       		.byte	0
 1262 01a5 04       		.uleb128 0x4
 1263 01a6 BA020000 		.4byte	.LASF32
 1264 01aa 03       		.byte	0x3
 1265 01ab 2601     		.2byte	0x126
 1266 01ad 8E010000 		.4byte	0x18e
 1267 01b1 0B       		.uleb128 0xb
 1268 01b2 04       		.byte	0x4
 1269 01b3 03       		.byte	0x3
 1270 01b4 2801     		.2byte	0x128
 1271 01b6 C8010000 		.4byte	0x1c8
 1272 01ba 0C       		.uleb128 0xc
 1273 01bb AA010000 		.4byte	.LASF33
 1274 01bf 03       		.byte	0x3
 1275 01c0 2A01     		.2byte	0x12a
 1276 01c2 83000000 		.4byte	0x83
 1277 01c6 00       		.byte	0
 1278 01c7 00       		.byte	0
 1279 01c8 04       		.uleb128 0x4
 1280 01c9 76040000 		.4byte	.LASF34
 1281 01cd 03       		.byte	0x3
 1282 01ce 2B01     		.2byte	0x12b
 1283 01d0 B1010000 		.4byte	0x1b1
 1284 01d4 02       		.uleb128 0x2
 1285 01d5 08       		.byte	0x8
 1286 01d6 04       		.byte	0x4
 1287 01d7 6A040000 		.4byte	.LASF35
 1288 01db 0D       		.uleb128 0xd
 1289 01dc 66000000 		.4byte	.LASF36
 1290 01e0 01       		.byte	0x1
 1291 01e1 B101     		.2byte	0x1b1
 1292 01e3 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 47


 1293 01e7 2C000000 		.4byte	.LFE5-.LFB5
 1294 01eb 01       		.uleb128 0x1
 1295 01ec 9C       		.byte	0x9c
 1296 01ed 1D020000 		.4byte	0x21d
 1297 01f1 0E       		.uleb128 0xe
 1298 01f2 E4010000 		.4byte	.LASF38
 1299 01f6 01       		.byte	0x1
 1300 01f7 B301     		.2byte	0x1b3
 1301 01f9 6B000000 		.4byte	0x6b
 1302 01fd 00000000 		.4byte	.LLST0
 1303 0201 0F       		.uleb128 0xf
 1304 0202 06000000 		.4byte	.LVL0
 1305 0206 57080000 		.4byte	0x857
 1306 020a 0F       		.uleb128 0xf
 1307 020b 10000000 		.4byte	.LVL1
 1308 020f 63080000 		.4byte	0x863
 1309 0213 0F       		.uleb128 0xf
 1310 0214 20000000 		.4byte	.LVL2
 1311 0218 6E080000 		.4byte	0x86e
 1312 021c 00       		.byte	0
 1313 021d 0D       		.uleb128 0xd
 1314 021e A0020000 		.4byte	.LASF37
 1315 0222 01       		.byte	0x1
 1316 0223 F501     		.2byte	0x1f5
 1317 0225 00000000 		.4byte	.LFB6
 1318 0229 1C000000 		.4byte	.LFE6-.LFB6
 1319 022d 01       		.uleb128 0x1
 1320 022e 9C       		.byte	0x9c
 1321 022f 56020000 		.4byte	0x256
 1322 0233 0E       		.uleb128 0xe
 1323 0234 E4010000 		.4byte	.LASF38
 1324 0238 01       		.byte	0x1
 1325 0239 F701     		.2byte	0x1f7
 1326 023b 6B000000 		.4byte	0x6b
 1327 023f 13000000 		.4byte	.LLST1
 1328 0243 0F       		.uleb128 0xf
 1329 0244 06000000 		.4byte	.LVL3
 1330 0248 63080000 		.4byte	0x863
 1331 024c 0F       		.uleb128 0xf
 1332 024d 16000000 		.4byte	.LVL4
 1333 0251 6E080000 		.4byte	0x86e
 1334 0255 00       		.byte	0
 1335 0256 0D       		.uleb128 0xd
 1336 0257 08030000 		.4byte	.LASF39
 1337 025b 01       		.byte	0x1
 1338 025c 1102     		.2byte	0x211
 1339 025e 00000000 		.4byte	.LFB7
 1340 0262 1C000000 		.4byte	.LFE7-.LFB7
 1341 0266 01       		.uleb128 0x1
 1342 0267 9C       		.byte	0x9c
 1343 0268 8F020000 		.4byte	0x28f
 1344 026c 0E       		.uleb128 0xe
 1345 026d E4010000 		.4byte	.LASF38
 1346 0271 01       		.byte	0x1
 1347 0272 1302     		.2byte	0x213
 1348 0274 6B000000 		.4byte	0x6b
 1349 0278 26000000 		.4byte	.LLST2
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 48


 1350 027c 0F       		.uleb128 0xf
 1351 027d 06000000 		.4byte	.LVL5
 1352 0281 63080000 		.4byte	0x863
 1353 0285 0F       		.uleb128 0xf
 1354 0286 14000000 		.4byte	.LVL6
 1355 028a 6E080000 		.4byte	0x86e
 1356 028e 00       		.byte	0
 1357 028f 10       		.uleb128 0x10
 1358 0290 B8040000 		.4byte	.LASF40
 1359 0294 01       		.byte	0x1
 1360 0295 A3       		.byte	0xa3
 1361 0296 00000000 		.4byte	.LFB3
 1362 029a 18000000 		.4byte	.LFE3-.LFB3
 1363 029e 01       		.uleb128 0x1
 1364 029f 9C       		.byte	0x9c
 1365 02a0 B7020000 		.4byte	0x2b7
 1366 02a4 0F       		.uleb128 0xf
 1367 02a5 0C000000 		.4byte	.LVL7
 1368 02a9 56020000 		.4byte	0x256
 1369 02ad 0F       		.uleb128 0xf
 1370 02ae 10000000 		.4byte	.LVL8
 1371 02b2 79080000 		.4byte	0x879
 1372 02b6 00       		.byte	0
 1373 02b7 0D       		.uleb128 0xd
 1374 02b8 85020000 		.4byte	.LASF41
 1375 02bc 01       		.byte	0x1
 1376 02bd 2F02     		.2byte	0x22f
 1377 02bf 00000000 		.4byte	.LFB8
 1378 02c3 24000000 		.4byte	.LFE8-.LFB8
 1379 02c7 01       		.uleb128 0x1
 1380 02c8 9C       		.byte	0x9c
 1381 02c9 00030000 		.4byte	0x300
 1382 02cd 11       		.uleb128 0x11
 1383 02ce 64020000 		.4byte	.LASF43
 1384 02d2 01       		.byte	0x1
 1385 02d3 2F02     		.2byte	0x22f
 1386 02d5 6B000000 		.4byte	0x6b
 1387 02d9 39000000 		.4byte	.LLST3
 1388 02dd 0E       		.uleb128 0xe
 1389 02de E4010000 		.4byte	.LASF38
 1390 02e2 01       		.byte	0x1
 1391 02e3 3102     		.2byte	0x231
 1392 02e5 6B000000 		.4byte	0x6b
 1393 02e9 5A000000 		.4byte	.LLST4
 1394 02ed 0F       		.uleb128 0xf
 1395 02ee 08000000 		.4byte	.LVL10
 1396 02f2 63080000 		.4byte	0x863
 1397 02f6 0F       		.uleb128 0xf
 1398 02f7 1C000000 		.4byte	.LVL11
 1399 02fb 6E080000 		.4byte	0x86e
 1400 02ff 00       		.byte	0
 1401 0300 12       		.uleb128 0x12
 1402 0301 CB040000 		.4byte	.LASF45
 1403 0305 01       		.byte	0x1
 1404 0306 4F02     		.2byte	0x24f
 1405 0308 6B000000 		.4byte	0x6b
 1406 030c 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 49


 1407 0310 10000000 		.4byte	.LFE9-.LFB9
 1408 0314 01       		.uleb128 0x1
 1409 0315 9C       		.byte	0x9c
 1410 0316 0D       		.uleb128 0xd
 1411 0317 AB060000 		.4byte	.LASF42
 1412 031b 01       		.byte	0x1
 1413 031c 6B02     		.2byte	0x26b
 1414 031e 00000000 		.4byte	.LFB10
 1415 0322 0C000000 		.4byte	.LFE10-.LFB10
 1416 0326 01       		.uleb128 0x1
 1417 0327 9C       		.byte	0x9c
 1418 0328 3B030000 		.4byte	0x33b
 1419 032c 13       		.uleb128 0x13
 1420 032d 62060000 		.4byte	.LASF44
 1421 0331 01       		.byte	0x1
 1422 0332 6B02     		.2byte	0x26b
 1423 0334 77000000 		.4byte	0x77
 1424 0338 01       		.uleb128 0x1
 1425 0339 50       		.byte	0x50
 1426 033a 00       		.byte	0
 1427 033b 14       		.uleb128 0x14
 1428 033c 8F000000 		.4byte	.LASF47
 1429 0340 01       		.byte	0x1
 1430 0341 8E02     		.2byte	0x28e
 1431 0343 77000000 		.4byte	0x77
 1432 0347 00000000 		.4byte	.LFB11
 1433 034b 0C000000 		.4byte	.LFE11-.LFB11
 1434 034f 01       		.uleb128 0x1
 1435 0350 9C       		.byte	0x9c
 1436 0351 64030000 		.4byte	0x364
 1437 0355 15       		.uleb128 0x15
 1438 0356 62060000 		.4byte	.LASF44
 1439 035a 01       		.byte	0x1
 1440 035b 9002     		.2byte	0x290
 1441 035d 77000000 		.4byte	0x77
 1442 0361 01       		.uleb128 0x1
 1443 0362 50       		.byte	0x50
 1444 0363 00       		.byte	0
 1445 0364 12       		.uleb128 0x12
 1446 0365 A3050000 		.4byte	.LASF46
 1447 0369 01       		.byte	0x1
 1448 036a B902     		.2byte	0x2b9
 1449 036c 6B000000 		.4byte	0x6b
 1450 0370 00000000 		.4byte	.LFB12
 1451 0374 10000000 		.4byte	.LFE12-.LFB12
 1452 0378 01       		.uleb128 0x1
 1453 0379 9C       		.byte	0x9c
 1454 037a 14       		.uleb128 0x14
 1455 037b 12060000 		.4byte	.LASF48
 1456 037f 01       		.byte	0x1
 1457 0380 D502     		.2byte	0x2d5
 1458 0382 77000000 		.4byte	0x77
 1459 0386 00000000 		.4byte	.LFB13
 1460 038a 1C000000 		.4byte	.LFE13-.LFB13
 1461 038e 01       		.uleb128 0x1
 1462 038f 9C       		.byte	0x9c
 1463 0390 A3030000 		.4byte	0x3a3
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 50


 1464 0394 15       		.uleb128 0x15
 1465 0395 DF030000 		.4byte	.LASF49
 1466 0399 01       		.byte	0x1
 1467 039a D702     		.2byte	0x2d7
 1468 039c 77000000 		.4byte	0x77
 1469 03a0 01       		.uleb128 0x1
 1470 03a1 50       		.byte	0x50
 1471 03a2 00       		.byte	0
 1472 03a3 14       		.uleb128 0x14
 1473 03a4 57070000 		.4byte	.LASF50
 1474 03a8 01       		.byte	0x1
 1475 03a9 0803     		.2byte	0x308
 1476 03ab 77000000 		.4byte	0x77
 1477 03af 00000000 		.4byte	.LFB14
 1478 03b3 10000000 		.4byte	.LFE14-.LFB14
 1479 03b7 01       		.uleb128 0x1
 1480 03b8 9C       		.byte	0x9c
 1481 03b9 CC030000 		.4byte	0x3cc
 1482 03bd 15       		.uleb128 0x15
 1483 03be 32060000 		.4byte	.LASF51
 1484 03c2 01       		.byte	0x1
 1485 03c3 0A03     		.2byte	0x30a
 1486 03c5 77000000 		.4byte	0x77
 1487 03c9 01       		.uleb128 0x1
 1488 03ca 50       		.byte	0x50
 1489 03cb 00       		.byte	0
 1490 03cc 16       		.uleb128 0x16
 1491 03cd C4030000 		.4byte	.LASF52
 1492 03d1 01       		.byte	0x1
 1493 03d2 4103     		.2byte	0x341
 1494 03d4 00000000 		.4byte	.LFB15
 1495 03d8 28000000 		.4byte	.LFE15-.LFB15
 1496 03dc 01       		.uleb128 0x1
 1497 03dd 9C       		.byte	0x9c
 1498 03de 13040000 		.4byte	0x413
 1499 03e2 11       		.uleb128 0x11
 1500 03e3 F2030000 		.4byte	.LASF53
 1501 03e7 01       		.byte	0x1
 1502 03e8 4103     		.2byte	0x341
 1503 03ea 6B000000 		.4byte	0x6b
 1504 03ee 6D000000 		.4byte	.LLST5
 1505 03f2 11       		.uleb128 0x11
 1506 03f3 5C000000 		.4byte	.LASF54
 1507 03f7 01       		.byte	0x1
 1508 03f8 4103     		.2byte	0x341
 1509 03fa 77000000 		.4byte	0x77
 1510 03fe 8E000000 		.4byte	.LLST6
 1511 0402 0E       		.uleb128 0xe
 1512 0403 D1010000 		.4byte	.LASF55
 1513 0407 01       		.byte	0x1
 1514 0408 4403     		.2byte	0x344
 1515 040a 83000000 		.4byte	0x83
 1516 040e AF000000 		.4byte	.LLST7
 1517 0412 00       		.byte	0
 1518 0413 17       		.uleb128 0x17
 1519 0414 F0060000 		.4byte	.LASF56
 1520 0418 01       		.byte	0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 51


 1521 0419 7303     		.2byte	0x373
 1522 041b 77000000 		.4byte	0x77
 1523 041f 00000000 		.4byte	.LFB16
 1524 0423 28000000 		.4byte	.LFE16-.LFB16
 1525 0427 01       		.uleb128 0x1
 1526 0428 9C       		.byte	0x9c
 1527 0429 4E040000 		.4byte	0x44e
 1528 042d 11       		.uleb128 0x11
 1529 042e F2030000 		.4byte	.LASF53
 1530 0432 01       		.byte	0x1
 1531 0433 7303     		.2byte	0x373
 1532 0435 6B000000 		.4byte	0x6b
 1533 0439 C2000000 		.4byte	.LLST8
 1534 043d 0E       		.uleb128 0xe
 1535 043e 71060000 		.4byte	.LASF57
 1536 0442 01       		.byte	0x1
 1537 0443 7503     		.2byte	0x375
 1538 0445 77000000 		.4byte	0x77
 1539 0449 FC000000 		.4byte	.LLST9
 1540 044d 00       		.byte	0
 1541 044e 0D       		.uleb128 0xd
 1542 044f 83070000 		.4byte	.LASF58
 1543 0453 01       		.byte	0x1
 1544 0454 A903     		.2byte	0x3a9
 1545 0456 00000000 		.4byte	.LFB17
 1546 045a 14000000 		.4byte	.LFE17-.LFB17
 1547 045e 01       		.uleb128 0x1
 1548 045f 9C       		.byte	0x9c
 1549 0460 9B040000 		.4byte	0x49b
 1550 0464 11       		.uleb128 0x11
 1551 0465 6E020000 		.4byte	.LASF59
 1552 0469 01       		.byte	0x1
 1553 046a A903     		.2byte	0x3a9
 1554 046c 6B000000 		.4byte	0x6b
 1555 0470 32010000 		.4byte	.LLST10
 1556 0474 18       		.uleb128 0x18
 1557 0475 72706D00 		.ascii	"rpm\000"
 1558 0479 01       		.byte	0x1
 1559 047a A903     		.2byte	0x3a9
 1560 047c 77000000 		.4byte	0x77
 1561 0480 01       		.uleb128 0x1
 1562 0481 51       		.byte	0x51
 1563 0482 19       		.uleb128 0x19
 1564 0483 7E010000 		.4byte	.LASF60
 1565 0487 01       		.byte	0x1
 1566 0488 AB03     		.2byte	0x3ab
 1567 048a 83000000 		.4byte	0x83
 1568 048e 19       		.uleb128 0x19
 1569 048f 00000000 		.4byte	.LASF61
 1570 0493 01       		.byte	0x1
 1571 0494 AC03     		.2byte	0x3ac
 1572 0496 77000000 		.4byte	0x77
 1573 049a 00       		.byte	0
 1574 049b 10       		.uleb128 0x10
 1575 049c 2A070000 		.4byte	.LASF62
 1576 04a0 01       		.byte	0x1
 1577 04a1 DE       		.byte	0xde
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 52


 1578 04a2 00000000 		.4byte	.LFB4
 1579 04a6 FC000000 		.4byte	.LFE4-.LFB4
 1580 04aa 01       		.uleb128 0x1
 1581 04ab 9C       		.byte	0x9c
 1582 04ac 49050000 		.4byte	0x549
 1583 04b0 1A       		.uleb128 0x1a
 1584 04b1 EB030000 		.4byte	.LASF63
 1585 04b5 01       		.byte	0x1
 1586 04b6 E0       		.byte	0xe0
 1587 04b7 6B000000 		.4byte	0x6b
 1588 04bb 53010000 		.4byte	.LLST11
 1589 04bf 1A       		.uleb128 0x1a
 1590 04c0 E4010000 		.4byte	.LASF38
 1591 04c4 01       		.byte	0x1
 1592 04c5 E1       		.byte	0xe1
 1593 04c6 6B000000 		.4byte	0x6b
 1594 04ca AA010000 		.4byte	.LLST12
 1595 04ce 0F       		.uleb128 0xf
 1596 04cf 06000000 		.4byte	.LVL30
 1597 04d3 85080000 		.4byte	0x885
 1598 04d7 1B       		.uleb128 0x1b
 1599 04d8 28000000 		.4byte	.LVL32
 1600 04dc CC030000 		.4byte	0x3cc
 1601 04e0 EB040000 		.4byte	0x4eb
 1602 04e4 1C       		.uleb128 0x1c
 1603 04e5 01       		.uleb128 0x1
 1604 04e6 50       		.byte	0x50
 1605 04e7 02       		.uleb128 0x2
 1606 04e8 75       		.byte	0x75
 1607 04e9 00       		.sleb128 0
 1608 04ea 00       		.byte	0
 1609 04eb 1B       		.uleb128 0x1b
 1610 04ec 36000000 		.4byte	.LVL34
 1611 04f0 4E040000 		.4byte	0x44e
 1612 04f4 FF040000 		.4byte	0x4ff
 1613 04f8 1C       		.uleb128 0x1c
 1614 04f9 01       		.uleb128 0x1
 1615 04fa 50       		.byte	0x50
 1616 04fb 02       		.uleb128 0x2
 1617 04fc 75       		.byte	0x75
 1618 04fd 00       		.sleb128 0
 1619 04fe 00       		.byte	0
 1620 04ff 0F       		.uleb128 0xf
 1621 0500 40000000 		.4byte	.LVL36
 1622 0504 63080000 		.4byte	0x863
 1623 0508 0F       		.uleb128 0xf
 1624 0509 58000000 		.4byte	.LVL37
 1625 050d 6E080000 		.4byte	0x86e
 1626 0511 1B       		.uleb128 0x1b
 1627 0512 74000000 		.4byte	.LVL38
 1628 0516 16030000 		.4byte	0x316
 1629 051a 24050000 		.4byte	0x524
 1630 051e 1C       		.uleb128 0x1c
 1631 051f 01       		.uleb128 0x1
 1632 0520 50       		.byte	0x50
 1633 0521 01       		.uleb128 0x1
 1634 0522 31       		.byte	0x31
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 53


 1635 0523 00       		.byte	0
 1636 0524 0F       		.uleb128 0xf
 1637 0525 7C000000 		.4byte	.LVL40
 1638 0529 63080000 		.4byte	0x863
 1639 052d 0F       		.uleb128 0xf
 1640 052e A6000000 		.4byte	.LVL41
 1641 0532 6E080000 		.4byte	0x86e
 1642 0536 0F       		.uleb128 0xf
 1643 0537 B4000000 		.4byte	.LVL44
 1644 053b 91080000 		.4byte	0x891
 1645 053f 0F       		.uleb128 0xf
 1646 0540 BA000000 		.4byte	.LVL45
 1647 0544 9C080000 		.4byte	0x89c
 1648 0548 00       		.byte	0
 1649 0549 10       		.uleb128 0x10
 1650 054a 7B000000 		.4byte	.LASF64
 1651 054e 01       		.byte	0x1
 1652 054f 84       		.byte	0x84
 1653 0550 00000000 		.4byte	.LFB2
 1654 0554 20000000 		.4byte	.LFE2-.LFB2
 1655 0558 01       		.uleb128 0x1
 1656 0559 9C       		.byte	0x9c
 1657 055a 71050000 		.4byte	0x571
 1658 055e 0F       		.uleb128 0xf
 1659 055f 0E000000 		.4byte	.LVL47
 1660 0563 9B040000 		.4byte	0x49b
 1661 0567 0F       		.uleb128 0xf
 1662 0568 18000000 		.4byte	.LVL48
 1663 056c DB010000 		.4byte	0x1db
 1664 0570 00       		.byte	0
 1665 0571 14       		.uleb128 0x14
 1666 0572 02040000 		.4byte	.LASF65
 1667 0576 01       		.byte	0x1
 1668 0577 1B04     		.2byte	0x41b
 1669 0579 77000000 		.4byte	0x77
 1670 057d 00000000 		.4byte	.LFB18
 1671 0581 10000000 		.4byte	.LFE18-.LFB18
 1672 0585 01       		.uleb128 0x1
 1673 0586 9C       		.byte	0x9c
 1674 0587 9C050000 		.4byte	0x59c
 1675 058b 11       		.uleb128 0x11
 1676 058c 6E020000 		.4byte	.LASF59
 1677 0590 01       		.byte	0x1
 1678 0591 1B04     		.2byte	0x41b
 1679 0593 6B000000 		.4byte	0x6b
 1680 0597 C8010000 		.4byte	.LLST13
 1681 059b 00       		.byte	0
 1682 059c 17       		.uleb128 0x17
 1683 059d 29000000 		.4byte	.LASF66
 1684 05a1 01       		.byte	0x1
 1685 05a2 3804     		.2byte	0x438
 1686 05a4 77000000 		.4byte	0x77
 1687 05a8 00000000 		.4byte	.LFB19
 1688 05ac 2C000000 		.4byte	.LFE19-.LFB19
 1689 05b0 01       		.uleb128 0x1
 1690 05b1 9C       		.byte	0x9c
 1691 05b2 D7050000 		.4byte	0x5d7
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 54


 1692 05b6 11       		.uleb128 0x11
 1693 05b7 6E020000 		.4byte	.LASF59
 1694 05bb 01       		.byte	0x1
 1695 05bc 3804     		.2byte	0x438
 1696 05be 6B000000 		.4byte	0x6b
 1697 05c2 E9010000 		.4byte	.LLST14
 1698 05c6 0E       		.uleb128 0xe
 1699 05c7 E4060000 		.4byte	.LASF67
 1700 05cb 01       		.byte	0x1
 1701 05cc 3A04     		.2byte	0x43a
 1702 05ce 77000000 		.4byte	0x77
 1703 05d2 23020000 		.4byte	.LLST15
 1704 05d6 00       		.byte	0
 1705 05d7 0D       		.uleb128 0xd
 1706 05d8 3E060000 		.4byte	.LASF68
 1707 05dc 01       		.byte	0x1
 1708 05dd AE04     		.2byte	0x4ae
 1709 05df 00000000 		.4byte	.LFB20
 1710 05e3 34000000 		.4byte	.LFE20-.LFB20
 1711 05e7 01       		.uleb128 0x1
 1712 05e8 9C       		.byte	0x9c
 1713 05e9 60060000 		.4byte	0x660
 1714 05ed 11       		.uleb128 0x11
 1715 05ee FF040000 		.4byte	.LASF69
 1716 05f2 01       		.byte	0x1
 1717 05f3 AE04     		.2byte	0x4ae
 1718 05f5 6B000000 		.4byte	0x6b
 1719 05f9 59020000 		.4byte	.LLST16
 1720 05fd 11       		.uleb128 0x11
 1721 05fe 7E070000 		.4byte	.LASF70
 1722 0602 01       		.byte	0x1
 1723 0603 AE04     		.2byte	0x4ae
 1724 0605 77000000 		.4byte	0x77
 1725 0609 7A020000 		.4byte	.LLST17
 1726 060d 11       		.uleb128 0x11
 1727 060e 02020000 		.4byte	.LASF71
 1728 0612 01       		.byte	0x1
 1729 0613 AE04     		.2byte	0x4ae
 1730 0615 77000000 		.4byte	0x77
 1731 0619 9B020000 		.4byte	.LLST18
 1732 061d 0E       		.uleb128 0xe
 1733 061e E4010000 		.4byte	.LASF38
 1734 0622 01       		.byte	0x1
 1735 0623 B104     		.2byte	0x4b1
 1736 0625 6B000000 		.4byte	0x6b
 1737 0629 BC020000 		.4byte	.LLST19
 1738 062d 0E       		.uleb128 0xe
 1739 062e 5A060000 		.4byte	.LASF72
 1740 0632 01       		.byte	0x1
 1741 0633 B204     		.2byte	0x4b2
 1742 0635 83000000 		.4byte	0x83
 1743 0639 CF020000 		.4byte	.LLST20
 1744 063d 0E       		.uleb128 0xe
 1745 063e DC010000 		.4byte	.LASF73
 1746 0642 01       		.byte	0x1
 1747 0643 B304     		.2byte	0x4b3
 1748 0645 83000000 		.4byte	0x83
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 55


 1749 0649 E2020000 		.4byte	.LLST21
 1750 064d 0F       		.uleb128 0xf
 1751 064e 18000000 		.4byte	.LVL64
 1752 0652 63080000 		.4byte	0x863
 1753 0656 0F       		.uleb128 0xf
 1754 0657 28000000 		.4byte	.LVL65
 1755 065b 6E080000 		.4byte	0x86e
 1756 065f 00       		.byte	0
 1757 0660 16       		.uleb128 0x16
 1758 0661 7A060000 		.4byte	.LASF74
 1759 0665 01       		.byte	0x1
 1760 0666 E604     		.2byte	0x4e6
 1761 0668 00000000 		.4byte	.LFB21
 1762 066c 60000000 		.4byte	.LFE21-.LFB21
 1763 0670 01       		.uleb128 0x1
 1764 0671 9C       		.byte	0x9c
 1765 0672 06070000 		.4byte	0x706
 1766 0676 11       		.uleb128 0x11
 1767 0677 FF040000 		.4byte	.LASF69
 1768 067b 01       		.byte	0x1
 1769 067c E604     		.2byte	0x4e6
 1770 067e 6B000000 		.4byte	0x6b
 1771 0682 F5020000 		.4byte	.LLST22
 1772 0686 1D       		.uleb128 0x1d
 1773 0687 6B7000   		.ascii	"kp\000"
 1774 068a 01       		.byte	0x1
 1775 068b E604     		.2byte	0x4e6
 1776 068d 77000000 		.4byte	0x77
 1777 0691 16030000 		.4byte	.LLST23
 1778 0695 1D       		.uleb128 0x1d
 1779 0696 6B6900   		.ascii	"ki\000"
 1780 0699 01       		.byte	0x1
 1781 069a E604     		.2byte	0x4e6
 1782 069c 77000000 		.4byte	0x77
 1783 06a0 37030000 		.4byte	.LLST24
 1784 06a4 1D       		.uleb128 0x1d
 1785 06a5 6B6400   		.ascii	"kd\000"
 1786 06a8 01       		.byte	0x1
 1787 06a9 E604     		.2byte	0x4e6
 1788 06ab 77000000 		.4byte	0x77
 1789 06af 58030000 		.4byte	.LLST25
 1790 06b3 0E       		.uleb128 0xe
 1791 06b4 E4010000 		.4byte	.LASF38
 1792 06b8 01       		.byte	0x1
 1793 06b9 E904     		.2byte	0x4e9
 1794 06bb 6B000000 		.4byte	0x6b
 1795 06bf 79030000 		.4byte	.LLST26
 1796 06c3 0E       		.uleb128 0xe
 1797 06c4 78020000 		.4byte	.LASF75
 1798 06c8 01       		.byte	0x1
 1799 06c9 EB04     		.2byte	0x4eb
 1800 06cb 8F000000 		.4byte	0x8f
 1801 06cf 8C030000 		.4byte	.LLST27
 1802 06d3 0E       		.uleb128 0xe
 1803 06d4 2A040000 		.4byte	.LASF76
 1804 06d8 01       		.byte	0x1
 1805 06d9 EC04     		.2byte	0x4ec
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 56


 1806 06db 8F000000 		.4byte	0x8f
 1807 06df 9F030000 		.4byte	.LLST28
 1808 06e3 0E       		.uleb128 0xe
 1809 06e4 B8000000 		.4byte	.LASF77
 1810 06e8 01       		.byte	0x1
 1811 06e9 ED04     		.2byte	0x4ed
 1812 06eb 8F000000 		.4byte	0x8f
 1813 06ef B2030000 		.4byte	.LLST29
 1814 06f3 0F       		.uleb128 0xf
 1815 06f4 3A000000 		.4byte	.LVL75
 1816 06f8 63080000 		.4byte	0x863
 1817 06fc 0F       		.uleb128 0xf
 1818 06fd 4E000000 		.4byte	.LVL76
 1819 0701 6E080000 		.4byte	0x86e
 1820 0705 00       		.byte	0
 1821 0706 08       		.uleb128 0x8
 1822 0707 16070000 		.4byte	0x716
 1823 070b 16070000 		.4byte	0x716
 1824 070f 09       		.uleb128 0x9
 1825 0710 14010000 		.4byte	0x114
 1826 0714 00       		.byte	0
 1827 0715 00       		.byte	0
 1828 0716 1E       		.uleb128 0x1e
 1829 0717 C8010000 		.4byte	0x1c8
 1830 071b 1F       		.uleb128 0x1f
 1831 071c 0D020000 		.4byte	.LASF78
 1832 0720 01       		.byte	0x1
 1833 0721 8609     		.2byte	0x986
 1834 0723 2D070000 		.4byte	0x72d
 1835 0727 05       		.uleb128 0x5
 1836 0728 03       		.byte	0x3
 1837 0729 00000000 		.4byte	FanController_fanPwmInitRegs
 1838 072d 1E       		.uleb128 0x1e
 1839 072e 06070000 		.4byte	0x706
 1840 0732 20       		.uleb128 0x20
 1841 0733 68050000 		.4byte	.LASF79
 1842 0737 01       		.byte	0x1
 1843 0738 3C       		.byte	0x3c
 1844 0739 6B000000 		.4byte	0x6b
 1845 073d 05       		.uleb128 0x5
 1846 073e 03       		.byte	0x3
 1847 073f 00000000 		.4byte	FanController_initVar
 1848 0743 1F       		.uleb128 0x1f
 1849 0744 0B070000 		.4byte	.LASF80
 1850 0748 01       		.byte	0x1
 1851 0749 A609     		.2byte	0x9a6
 1852 074b 1B010000 		.4byte	0x11b
 1853 074f 05       		.uleb128 0x5
 1854 0750 03       		.byte	0x3
 1855 0751 00000000 		.4byte	FanController_fanControl
 1856 0755 20       		.uleb128 0x20
 1857 0756 7E050000 		.4byte	.LASF81
 1858 075a 01       		.byte	0x1
 1859 075b 5B       		.byte	0x5b
 1860 075c 04010000 		.4byte	0x104
 1861 0760 05       		.uleb128 0x5
 1862 0761 03       		.byte	0x3
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 57


 1863 0762 00000000 		.4byte	FanController_desiredFansSpeed
 1864 0766 08       		.uleb128 0x8
 1865 0767 8F000000 		.4byte	0x8f
 1866 076b 76070000 		.4byte	0x776
 1867 076f 09       		.uleb128 0x9
 1868 0770 14010000 		.4byte	0x114
 1869 0774 00       		.byte	0
 1870 0775 00       		.byte	0
 1871 0776 20       		.uleb128 0x20
 1872 0777 6F030000 		.4byte	.LASF82
 1873 077b 01       		.byte	0x1
 1874 077c 51       		.byte	0x51
 1875 077d 66070000 		.4byte	0x766
 1876 0781 05       		.uleb128 0x5
 1877 0782 03       		.byte	0x3
 1878 0783 00000000 		.4byte	FanController_pidA1
 1879 0787 20       		.uleb128 0x20
 1880 0788 83030000 		.4byte	.LASF83
 1881 078c 01       		.byte	0x1
 1882 078d 52       		.byte	0x52
 1883 078e 66070000 		.4byte	0x766
 1884 0792 05       		.uleb128 0x5
 1885 0793 03       		.byte	0x3
 1886 0794 00000000 		.4byte	FanController_pidA2
 1887 0798 20       		.uleb128 0x20
 1888 0799 97030000 		.4byte	.LASF84
 1889 079d 01       		.byte	0x1
 1890 079e 53       		.byte	0x53
 1891 079f 66070000 		.4byte	0x766
 1892 07a3 05       		.uleb128 0x5
 1893 07a4 03       		.byte	0x3
 1894 07a5 00000000 		.4byte	FanController_pidA3
 1895 07a9 08       		.uleb128 0x8
 1896 07aa 83000000 		.4byte	0x83
 1897 07ae B9070000 		.4byte	0x7b9
 1898 07b2 09       		.uleb128 0x9
 1899 07b3 14010000 		.4byte	0x114
 1900 07b7 00       		.byte	0
 1901 07b8 00       		.byte	0
 1902 07b9 20       		.uleb128 0x20
 1903 07ba 06050000 		.4byte	.LASF85
 1904 07be 01       		.byte	0x1
 1905 07bf 55       		.byte	0x55
 1906 07c0 A9070000 		.4byte	0x7a9
 1907 07c4 05       		.uleb128 0x5
 1908 07c5 03       		.byte	0x3
 1909 07c6 00000000 		.4byte	FanController_outputSatL
 1910 07ca 20       		.uleb128 0x20
 1911 07cb E6040000 		.4byte	.LASF86
 1912 07cf 01       		.byte	0x1
 1913 07d0 56       		.byte	0x56
 1914 07d1 A9070000 		.4byte	0x7a9
 1915 07d5 05       		.uleb128 0x5
 1916 07d6 03       		.byte	0x3
 1917 07d7 00000000 		.4byte	FanController_outputSatH
 1918 07db 21       		.uleb128 0x21
 1919 07dc 3D070000 		.4byte	.LASF87
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 58


 1920 07e0 03       		.byte	0x3
 1921 07e1 4401     		.2byte	0x144
 1922 07e3 D9000000 		.4byte	0xd9
 1923 07e7 08       		.uleb128 0x8
 1924 07e8 F7070000 		.4byte	0x7f7
 1925 07ec F7070000 		.4byte	0x7f7
 1926 07f0 09       		.uleb128 0x9
 1927 07f1 14010000 		.4byte	0x114
 1928 07f5 00       		.byte	0
 1929 07f6 00       		.byte	0
 1930 07f7 1E       		.uleb128 0x1e
 1931 07f8 A5010000 		.4byte	0x1a5
 1932 07fc 1F       		.uleb128 0x1f
 1933 07fd 36040000 		.4byte	.LASF88
 1934 0801 01       		.byte	0x1
 1935 0802 6A09     		.2byte	0x96a
 1936 0804 0E080000 		.4byte	0x80e
 1937 0808 05       		.uleb128 0x5
 1938 0809 03       		.byte	0x3
 1939 080a 00000000 		.4byte	FanController_fanDriverRegs
 1940 080e 1E       		.uleb128 0x1e
 1941 080f E7070000 		.4byte	0x7e7
 1942 0813 08       		.uleb128 0x8
 1943 0814 83010000 		.4byte	0x183
 1944 0818 23080000 		.4byte	0x823
 1945 081c 09       		.uleb128 0x9
 1946 081d 14010000 		.4byte	0x114
 1947 0821 00       		.byte	0
 1948 0822 00       		.byte	0
 1949 0823 1F       		.uleb128 0x1f
 1950 0824 8F060000 		.4byte	.LASF89
 1951 0828 01       		.byte	0x1
 1952 0829 550A     		.2byte	0xa55
 1953 082b 13080000 		.4byte	0x813
 1954 082f 05       		.uleb128 0x5
 1955 0830 03       		.byte	0x3
 1956 0831 00000000 		.4byte	FanController_fanProperties
 1957 0835 20       		.uleb128 0x20
 1958 0836 57030000 		.4byte	.LASF90
 1959 083a 01       		.byte	0x1
 1960 083b 3F       		.byte	0x3f
 1961 083c 77000000 		.4byte	0x77
 1962 0840 05       		.uleb128 0x5
 1963 0841 03       		.byte	0x3
 1964 0842 00000000 		.4byte	FanController_alertMask
 1965 0846 20       		.uleb128 0x20
 1966 0847 DD050000 		.4byte	.LASF91
 1967 084b 01       		.byte	0x1
 1968 084c 40       		.byte	0x40
 1969 084d 77000000 		.4byte	0x77
 1970 0851 05       		.uleb128 0x5
 1971 0852 03       		.byte	0x3
 1972 0853 00000000 		.4byte	FanController_stallStatus
 1973 0857 22       		.uleb128 0x22
 1974 0858 23030000 		.4byte	.LASF92
 1975 085c 23030000 		.4byte	.LASF92
 1976 0860 04       		.byte	0x4
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 59


 1977 0861 3101     		.2byte	0x131
 1978 0863 23       		.uleb128 0x23
 1979 0864 40030000 		.4byte	.LASF93
 1980 0868 40030000 		.4byte	.LASF93
 1981 086c 05       		.byte	0x5
 1982 086d F8       		.byte	0xf8
 1983 086e 23       		.uleb128 0x23
 1984 086f 46000000 		.4byte	.LASF94
 1985 0873 46000000 		.4byte	.LASF94
 1986 0877 05       		.byte	0x5
 1987 0878 F9       		.byte	0xf9
 1988 0879 22       		.uleb128 0x22
 1989 087a F7050000 		.4byte	.LASF95
 1990 087e F7050000 		.4byte	.LASF95
 1991 0882 04       		.byte	0x4
 1992 0883 3301     		.2byte	0x133
 1993 0885 22       		.uleb128 0x22
 1994 0886 4C010000 		.4byte	.LASF96
 1995 088a 4C010000 		.4byte	.LASF96
 1996 088e 04       		.byte	0x4
 1997 088f 3001     		.2byte	0x130
 1998 0891 23       		.uleb128 0x23
 1999 0892 8B010000 		.4byte	.LASF97
 2000 0896 8B010000 		.4byte	.LASF97
 2001 089a 06       		.byte	0x6
 2002 089b 18       		.byte	0x18
 2003 089c 23       		.uleb128 0x23
 2004 089d C6060000 		.4byte	.LASF98
 2005 08a1 C6060000 		.4byte	.LASF98
 2006 08a5 07       		.byte	0x7
 2007 08a6 18       		.byte	0x18
 2008 08a7 00       		.byte	0
 2009              		.section	.debug_abbrev,"",%progbits
 2010              	.Ldebug_abbrev0:
 2011 0000 01       		.uleb128 0x1
 2012 0001 11       		.uleb128 0x11
 2013 0002 01       		.byte	0x1
 2014 0003 25       		.uleb128 0x25
 2015 0004 0E       		.uleb128 0xe
 2016 0005 13       		.uleb128 0x13
 2017 0006 0B       		.uleb128 0xb
 2018 0007 03       		.uleb128 0x3
 2019 0008 0E       		.uleb128 0xe
 2020 0009 1B       		.uleb128 0x1b
 2021 000a 0E       		.uleb128 0xe
 2022 000b 55       		.uleb128 0x55
 2023 000c 17       		.uleb128 0x17
 2024 000d 11       		.uleb128 0x11
 2025 000e 01       		.uleb128 0x1
 2026 000f 10       		.uleb128 0x10
 2027 0010 17       		.uleb128 0x17
 2028 0011 00       		.byte	0
 2029 0012 00       		.byte	0
 2030 0013 02       		.uleb128 0x2
 2031 0014 24       		.uleb128 0x24
 2032 0015 00       		.byte	0
 2033 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 60


 2034 0017 0B       		.uleb128 0xb
 2035 0018 3E       		.uleb128 0x3e
 2036 0019 0B       		.uleb128 0xb
 2037 001a 03       		.uleb128 0x3
 2038 001b 0E       		.uleb128 0xe
 2039 001c 00       		.byte	0
 2040 001d 00       		.byte	0
 2041 001e 03       		.uleb128 0x3
 2042 001f 24       		.uleb128 0x24
 2043 0020 00       		.byte	0
 2044 0021 0B       		.uleb128 0xb
 2045 0022 0B       		.uleb128 0xb
 2046 0023 3E       		.uleb128 0x3e
 2047 0024 0B       		.uleb128 0xb
 2048 0025 03       		.uleb128 0x3
 2049 0026 08       		.uleb128 0x8
 2050 0027 00       		.byte	0
 2051 0028 00       		.byte	0
 2052 0029 04       		.uleb128 0x4
 2053 002a 16       		.uleb128 0x16
 2054 002b 00       		.byte	0
 2055 002c 03       		.uleb128 0x3
 2056 002d 0E       		.uleb128 0xe
 2057 002e 3A       		.uleb128 0x3a
 2058 002f 0B       		.uleb128 0xb
 2059 0030 3B       		.uleb128 0x3b
 2060 0031 05       		.uleb128 0x5
 2061 0032 49       		.uleb128 0x49
 2062 0033 13       		.uleb128 0x13
 2063 0034 00       		.byte	0
 2064 0035 00       		.byte	0
 2065 0036 05       		.uleb128 0x5
 2066 0037 35       		.uleb128 0x35
 2067 0038 00       		.byte	0
 2068 0039 49       		.uleb128 0x49
 2069 003a 13       		.uleb128 0x13
 2070 003b 00       		.byte	0
 2071 003c 00       		.byte	0
 2072 003d 06       		.uleb128 0x6
 2073 003e 13       		.uleb128 0x13
 2074 003f 01       		.byte	0x1
 2075 0040 0B       		.uleb128 0xb
 2076 0041 0B       		.uleb128 0xb
 2077 0042 3A       		.uleb128 0x3a
 2078 0043 0B       		.uleb128 0xb
 2079 0044 3B       		.uleb128 0x3b
 2080 0045 0B       		.uleb128 0xb
 2081 0046 01       		.uleb128 0x1
 2082 0047 13       		.uleb128 0x13
 2083 0048 00       		.byte	0
 2084 0049 00       		.byte	0
 2085 004a 07       		.uleb128 0x7
 2086 004b 0D       		.uleb128 0xd
 2087 004c 00       		.byte	0
 2088 004d 03       		.uleb128 0x3
 2089 004e 0E       		.uleb128 0xe
 2090 004f 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 61


 2091 0050 0B       		.uleb128 0xb
 2092 0051 3B       		.uleb128 0x3b
 2093 0052 0B       		.uleb128 0xb
 2094 0053 49       		.uleb128 0x49
 2095 0054 13       		.uleb128 0x13
 2096 0055 38       		.uleb128 0x38
 2097 0056 0B       		.uleb128 0xb
 2098 0057 00       		.byte	0
 2099 0058 00       		.byte	0
 2100 0059 08       		.uleb128 0x8
 2101 005a 01       		.uleb128 0x1
 2102 005b 01       		.byte	0x1
 2103 005c 49       		.uleb128 0x49
 2104 005d 13       		.uleb128 0x13
 2105 005e 01       		.uleb128 0x1
 2106 005f 13       		.uleb128 0x13
 2107 0060 00       		.byte	0
 2108 0061 00       		.byte	0
 2109 0062 09       		.uleb128 0x9
 2110 0063 21       		.uleb128 0x21
 2111 0064 00       		.byte	0
 2112 0065 49       		.uleb128 0x49
 2113 0066 13       		.uleb128 0x13
 2114 0067 2F       		.uleb128 0x2f
 2115 0068 0B       		.uleb128 0xb
 2116 0069 00       		.byte	0
 2117 006a 00       		.byte	0
 2118 006b 0A       		.uleb128 0xa
 2119 006c 16       		.uleb128 0x16
 2120 006d 00       		.byte	0
 2121 006e 03       		.uleb128 0x3
 2122 006f 0E       		.uleb128 0xe
 2123 0070 3A       		.uleb128 0x3a
 2124 0071 0B       		.uleb128 0xb
 2125 0072 3B       		.uleb128 0x3b
 2126 0073 0B       		.uleb128 0xb
 2127 0074 49       		.uleb128 0x49
 2128 0075 13       		.uleb128 0x13
 2129 0076 00       		.byte	0
 2130 0077 00       		.byte	0
 2131 0078 0B       		.uleb128 0xb
 2132 0079 13       		.uleb128 0x13
 2133 007a 01       		.byte	0x1
 2134 007b 0B       		.uleb128 0xb
 2135 007c 0B       		.uleb128 0xb
 2136 007d 3A       		.uleb128 0x3a
 2137 007e 0B       		.uleb128 0xb
 2138 007f 3B       		.uleb128 0x3b
 2139 0080 05       		.uleb128 0x5
 2140 0081 01       		.uleb128 0x1
 2141 0082 13       		.uleb128 0x13
 2142 0083 00       		.byte	0
 2143 0084 00       		.byte	0
 2144 0085 0C       		.uleb128 0xc
 2145 0086 0D       		.uleb128 0xd
 2146 0087 00       		.byte	0
 2147 0088 03       		.uleb128 0x3
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 62


 2148 0089 0E       		.uleb128 0xe
 2149 008a 3A       		.uleb128 0x3a
 2150 008b 0B       		.uleb128 0xb
 2151 008c 3B       		.uleb128 0x3b
 2152 008d 05       		.uleb128 0x5
 2153 008e 49       		.uleb128 0x49
 2154 008f 13       		.uleb128 0x13
 2155 0090 38       		.uleb128 0x38
 2156 0091 0B       		.uleb128 0xb
 2157 0092 00       		.byte	0
 2158 0093 00       		.byte	0
 2159 0094 0D       		.uleb128 0xd
 2160 0095 2E       		.uleb128 0x2e
 2161 0096 01       		.byte	0x1
 2162 0097 3F       		.uleb128 0x3f
 2163 0098 19       		.uleb128 0x19
 2164 0099 03       		.uleb128 0x3
 2165 009a 0E       		.uleb128 0xe
 2166 009b 3A       		.uleb128 0x3a
 2167 009c 0B       		.uleb128 0xb
 2168 009d 3B       		.uleb128 0x3b
 2169 009e 05       		.uleb128 0x5
 2170 009f 27       		.uleb128 0x27
 2171 00a0 19       		.uleb128 0x19
 2172 00a1 11       		.uleb128 0x11
 2173 00a2 01       		.uleb128 0x1
 2174 00a3 12       		.uleb128 0x12
 2175 00a4 06       		.uleb128 0x6
 2176 00a5 40       		.uleb128 0x40
 2177 00a6 18       		.uleb128 0x18
 2178 00a7 9742     		.uleb128 0x2117
 2179 00a9 19       		.uleb128 0x19
 2180 00aa 01       		.uleb128 0x1
 2181 00ab 13       		.uleb128 0x13
 2182 00ac 00       		.byte	0
 2183 00ad 00       		.byte	0
 2184 00ae 0E       		.uleb128 0xe
 2185 00af 34       		.uleb128 0x34
 2186 00b0 00       		.byte	0
 2187 00b1 03       		.uleb128 0x3
 2188 00b2 0E       		.uleb128 0xe
 2189 00b3 3A       		.uleb128 0x3a
 2190 00b4 0B       		.uleb128 0xb
 2191 00b5 3B       		.uleb128 0x3b
 2192 00b6 05       		.uleb128 0x5
 2193 00b7 49       		.uleb128 0x49
 2194 00b8 13       		.uleb128 0x13
 2195 00b9 02       		.uleb128 0x2
 2196 00ba 17       		.uleb128 0x17
 2197 00bb 00       		.byte	0
 2198 00bc 00       		.byte	0
 2199 00bd 0F       		.uleb128 0xf
 2200 00be 898201   		.uleb128 0x4109
 2201 00c1 00       		.byte	0
 2202 00c2 11       		.uleb128 0x11
 2203 00c3 01       		.uleb128 0x1
 2204 00c4 31       		.uleb128 0x31
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 63


 2205 00c5 13       		.uleb128 0x13
 2206 00c6 00       		.byte	0
 2207 00c7 00       		.byte	0
 2208 00c8 10       		.uleb128 0x10
 2209 00c9 2E       		.uleb128 0x2e
 2210 00ca 01       		.byte	0x1
 2211 00cb 3F       		.uleb128 0x3f
 2212 00cc 19       		.uleb128 0x19
 2213 00cd 03       		.uleb128 0x3
 2214 00ce 0E       		.uleb128 0xe
 2215 00cf 3A       		.uleb128 0x3a
 2216 00d0 0B       		.uleb128 0xb
 2217 00d1 3B       		.uleb128 0x3b
 2218 00d2 0B       		.uleb128 0xb
 2219 00d3 27       		.uleb128 0x27
 2220 00d4 19       		.uleb128 0x19
 2221 00d5 11       		.uleb128 0x11
 2222 00d6 01       		.uleb128 0x1
 2223 00d7 12       		.uleb128 0x12
 2224 00d8 06       		.uleb128 0x6
 2225 00d9 40       		.uleb128 0x40
 2226 00da 18       		.uleb128 0x18
 2227 00db 9742     		.uleb128 0x2117
 2228 00dd 19       		.uleb128 0x19
 2229 00de 01       		.uleb128 0x1
 2230 00df 13       		.uleb128 0x13
 2231 00e0 00       		.byte	0
 2232 00e1 00       		.byte	0
 2233 00e2 11       		.uleb128 0x11
 2234 00e3 05       		.uleb128 0x5
 2235 00e4 00       		.byte	0
 2236 00e5 03       		.uleb128 0x3
 2237 00e6 0E       		.uleb128 0xe
 2238 00e7 3A       		.uleb128 0x3a
 2239 00e8 0B       		.uleb128 0xb
 2240 00e9 3B       		.uleb128 0x3b
 2241 00ea 05       		.uleb128 0x5
 2242 00eb 49       		.uleb128 0x49
 2243 00ec 13       		.uleb128 0x13
 2244 00ed 02       		.uleb128 0x2
 2245 00ee 17       		.uleb128 0x17
 2246 00ef 00       		.byte	0
 2247 00f0 00       		.byte	0
 2248 00f1 12       		.uleb128 0x12
 2249 00f2 2E       		.uleb128 0x2e
 2250 00f3 00       		.byte	0
 2251 00f4 3F       		.uleb128 0x3f
 2252 00f5 19       		.uleb128 0x19
 2253 00f6 03       		.uleb128 0x3
 2254 00f7 0E       		.uleb128 0xe
 2255 00f8 3A       		.uleb128 0x3a
 2256 00f9 0B       		.uleb128 0xb
 2257 00fa 3B       		.uleb128 0x3b
 2258 00fb 05       		.uleb128 0x5
 2259 00fc 27       		.uleb128 0x27
 2260 00fd 19       		.uleb128 0x19
 2261 00fe 49       		.uleb128 0x49
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 64


 2262 00ff 13       		.uleb128 0x13
 2263 0100 11       		.uleb128 0x11
 2264 0101 01       		.uleb128 0x1
 2265 0102 12       		.uleb128 0x12
 2266 0103 06       		.uleb128 0x6
 2267 0104 40       		.uleb128 0x40
 2268 0105 18       		.uleb128 0x18
 2269 0106 9742     		.uleb128 0x2117
 2270 0108 19       		.uleb128 0x19
 2271 0109 00       		.byte	0
 2272 010a 00       		.byte	0
 2273 010b 13       		.uleb128 0x13
 2274 010c 05       		.uleb128 0x5
 2275 010d 00       		.byte	0
 2276 010e 03       		.uleb128 0x3
 2277 010f 0E       		.uleb128 0xe
 2278 0110 3A       		.uleb128 0x3a
 2279 0111 0B       		.uleb128 0xb
 2280 0112 3B       		.uleb128 0x3b
 2281 0113 05       		.uleb128 0x5
 2282 0114 49       		.uleb128 0x49
 2283 0115 13       		.uleb128 0x13
 2284 0116 02       		.uleb128 0x2
 2285 0117 18       		.uleb128 0x18
 2286 0118 00       		.byte	0
 2287 0119 00       		.byte	0
 2288 011a 14       		.uleb128 0x14
 2289 011b 2E       		.uleb128 0x2e
 2290 011c 01       		.byte	0x1
 2291 011d 3F       		.uleb128 0x3f
 2292 011e 19       		.uleb128 0x19
 2293 011f 03       		.uleb128 0x3
 2294 0120 0E       		.uleb128 0xe
 2295 0121 3A       		.uleb128 0x3a
 2296 0122 0B       		.uleb128 0xb
 2297 0123 3B       		.uleb128 0x3b
 2298 0124 05       		.uleb128 0x5
 2299 0125 27       		.uleb128 0x27
 2300 0126 19       		.uleb128 0x19
 2301 0127 49       		.uleb128 0x49
 2302 0128 13       		.uleb128 0x13
 2303 0129 11       		.uleb128 0x11
 2304 012a 01       		.uleb128 0x1
 2305 012b 12       		.uleb128 0x12
 2306 012c 06       		.uleb128 0x6
 2307 012d 40       		.uleb128 0x40
 2308 012e 18       		.uleb128 0x18
 2309 012f 9742     		.uleb128 0x2117
 2310 0131 19       		.uleb128 0x19
 2311 0132 01       		.uleb128 0x1
 2312 0133 13       		.uleb128 0x13
 2313 0134 00       		.byte	0
 2314 0135 00       		.byte	0
 2315 0136 15       		.uleb128 0x15
 2316 0137 34       		.uleb128 0x34
 2317 0138 00       		.byte	0
 2318 0139 03       		.uleb128 0x3
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 65


 2319 013a 0E       		.uleb128 0xe
 2320 013b 3A       		.uleb128 0x3a
 2321 013c 0B       		.uleb128 0xb
 2322 013d 3B       		.uleb128 0x3b
 2323 013e 05       		.uleb128 0x5
 2324 013f 49       		.uleb128 0x49
 2325 0140 13       		.uleb128 0x13
 2326 0141 02       		.uleb128 0x2
 2327 0142 18       		.uleb128 0x18
 2328 0143 00       		.byte	0
 2329 0144 00       		.byte	0
 2330 0145 16       		.uleb128 0x16
 2331 0146 2E       		.uleb128 0x2e
 2332 0147 01       		.byte	0x1
 2333 0148 3F       		.uleb128 0x3f
 2334 0149 19       		.uleb128 0x19
 2335 014a 03       		.uleb128 0x3
 2336 014b 0E       		.uleb128 0xe
 2337 014c 3A       		.uleb128 0x3a
 2338 014d 0B       		.uleb128 0xb
 2339 014e 3B       		.uleb128 0x3b
 2340 014f 05       		.uleb128 0x5
 2341 0150 27       		.uleb128 0x27
 2342 0151 19       		.uleb128 0x19
 2343 0152 11       		.uleb128 0x11
 2344 0153 01       		.uleb128 0x1
 2345 0154 12       		.uleb128 0x12
 2346 0155 06       		.uleb128 0x6
 2347 0156 40       		.uleb128 0x40
 2348 0157 18       		.uleb128 0x18
 2349 0158 9642     		.uleb128 0x2116
 2350 015a 19       		.uleb128 0x19
 2351 015b 01       		.uleb128 0x1
 2352 015c 13       		.uleb128 0x13
 2353 015d 00       		.byte	0
 2354 015e 00       		.byte	0
 2355 015f 17       		.uleb128 0x17
 2356 0160 2E       		.uleb128 0x2e
 2357 0161 01       		.byte	0x1
 2358 0162 3F       		.uleb128 0x3f
 2359 0163 19       		.uleb128 0x19
 2360 0164 03       		.uleb128 0x3
 2361 0165 0E       		.uleb128 0xe
 2362 0166 3A       		.uleb128 0x3a
 2363 0167 0B       		.uleb128 0xb
 2364 0168 3B       		.uleb128 0x3b
 2365 0169 05       		.uleb128 0x5
 2366 016a 27       		.uleb128 0x27
 2367 016b 19       		.uleb128 0x19
 2368 016c 49       		.uleb128 0x49
 2369 016d 13       		.uleb128 0x13
 2370 016e 11       		.uleb128 0x11
 2371 016f 01       		.uleb128 0x1
 2372 0170 12       		.uleb128 0x12
 2373 0171 06       		.uleb128 0x6
 2374 0172 40       		.uleb128 0x40
 2375 0173 18       		.uleb128 0x18
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 66


 2376 0174 9642     		.uleb128 0x2116
 2377 0176 19       		.uleb128 0x19
 2378 0177 01       		.uleb128 0x1
 2379 0178 13       		.uleb128 0x13
 2380 0179 00       		.byte	0
 2381 017a 00       		.byte	0
 2382 017b 18       		.uleb128 0x18
 2383 017c 05       		.uleb128 0x5
 2384 017d 00       		.byte	0
 2385 017e 03       		.uleb128 0x3
 2386 017f 08       		.uleb128 0x8
 2387 0180 3A       		.uleb128 0x3a
 2388 0181 0B       		.uleb128 0xb
 2389 0182 3B       		.uleb128 0x3b
 2390 0183 05       		.uleb128 0x5
 2391 0184 49       		.uleb128 0x49
 2392 0185 13       		.uleb128 0x13
 2393 0186 02       		.uleb128 0x2
 2394 0187 18       		.uleb128 0x18
 2395 0188 00       		.byte	0
 2396 0189 00       		.byte	0
 2397 018a 19       		.uleb128 0x19
 2398 018b 34       		.uleb128 0x34
 2399 018c 00       		.byte	0
 2400 018d 03       		.uleb128 0x3
 2401 018e 0E       		.uleb128 0xe
 2402 018f 3A       		.uleb128 0x3a
 2403 0190 0B       		.uleb128 0xb
 2404 0191 3B       		.uleb128 0x3b
 2405 0192 05       		.uleb128 0x5
 2406 0193 49       		.uleb128 0x49
 2407 0194 13       		.uleb128 0x13
 2408 0195 00       		.byte	0
 2409 0196 00       		.byte	0
 2410 0197 1A       		.uleb128 0x1a
 2411 0198 34       		.uleb128 0x34
 2412 0199 00       		.byte	0
 2413 019a 03       		.uleb128 0x3
 2414 019b 0E       		.uleb128 0xe
 2415 019c 3A       		.uleb128 0x3a
 2416 019d 0B       		.uleb128 0xb
 2417 019e 3B       		.uleb128 0x3b
 2418 019f 0B       		.uleb128 0xb
 2419 01a0 49       		.uleb128 0x49
 2420 01a1 13       		.uleb128 0x13
 2421 01a2 02       		.uleb128 0x2
 2422 01a3 17       		.uleb128 0x17
 2423 01a4 00       		.byte	0
 2424 01a5 00       		.byte	0
 2425 01a6 1B       		.uleb128 0x1b
 2426 01a7 898201   		.uleb128 0x4109
 2427 01aa 01       		.byte	0x1
 2428 01ab 11       		.uleb128 0x11
 2429 01ac 01       		.uleb128 0x1
 2430 01ad 31       		.uleb128 0x31
 2431 01ae 13       		.uleb128 0x13
 2432 01af 01       		.uleb128 0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 67


 2433 01b0 13       		.uleb128 0x13
 2434 01b1 00       		.byte	0
 2435 01b2 00       		.byte	0
 2436 01b3 1C       		.uleb128 0x1c
 2437 01b4 8A8201   		.uleb128 0x410a
 2438 01b7 00       		.byte	0
 2439 01b8 02       		.uleb128 0x2
 2440 01b9 18       		.uleb128 0x18
 2441 01ba 9142     		.uleb128 0x2111
 2442 01bc 18       		.uleb128 0x18
 2443 01bd 00       		.byte	0
 2444 01be 00       		.byte	0
 2445 01bf 1D       		.uleb128 0x1d
 2446 01c0 05       		.uleb128 0x5
 2447 01c1 00       		.byte	0
 2448 01c2 03       		.uleb128 0x3
 2449 01c3 08       		.uleb128 0x8
 2450 01c4 3A       		.uleb128 0x3a
 2451 01c5 0B       		.uleb128 0xb
 2452 01c6 3B       		.uleb128 0x3b
 2453 01c7 05       		.uleb128 0x5
 2454 01c8 49       		.uleb128 0x49
 2455 01c9 13       		.uleb128 0x13
 2456 01ca 02       		.uleb128 0x2
 2457 01cb 17       		.uleb128 0x17
 2458 01cc 00       		.byte	0
 2459 01cd 00       		.byte	0
 2460 01ce 1E       		.uleb128 0x1e
 2461 01cf 26       		.uleb128 0x26
 2462 01d0 00       		.byte	0
 2463 01d1 49       		.uleb128 0x49
 2464 01d2 13       		.uleb128 0x13
 2465 01d3 00       		.byte	0
 2466 01d4 00       		.byte	0
 2467 01d5 1F       		.uleb128 0x1f
 2468 01d6 34       		.uleb128 0x34
 2469 01d7 00       		.byte	0
 2470 01d8 03       		.uleb128 0x3
 2471 01d9 0E       		.uleb128 0xe
 2472 01da 3A       		.uleb128 0x3a
 2473 01db 0B       		.uleb128 0xb
 2474 01dc 3B       		.uleb128 0x3b
 2475 01dd 05       		.uleb128 0x5
 2476 01de 49       		.uleb128 0x49
 2477 01df 13       		.uleb128 0x13
 2478 01e0 3F       		.uleb128 0x3f
 2479 01e1 19       		.uleb128 0x19
 2480 01e2 02       		.uleb128 0x2
 2481 01e3 18       		.uleb128 0x18
 2482 01e4 00       		.byte	0
 2483 01e5 00       		.byte	0
 2484 01e6 20       		.uleb128 0x20
 2485 01e7 34       		.uleb128 0x34
 2486 01e8 00       		.byte	0
 2487 01e9 03       		.uleb128 0x3
 2488 01ea 0E       		.uleb128 0xe
 2489 01eb 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 68


 2490 01ec 0B       		.uleb128 0xb
 2491 01ed 3B       		.uleb128 0x3b
 2492 01ee 0B       		.uleb128 0xb
 2493 01ef 49       		.uleb128 0x49
 2494 01f0 13       		.uleb128 0x13
 2495 01f1 3F       		.uleb128 0x3f
 2496 01f2 19       		.uleb128 0x19
 2497 01f3 02       		.uleb128 0x2
 2498 01f4 18       		.uleb128 0x18
 2499 01f5 00       		.byte	0
 2500 01f6 00       		.byte	0
 2501 01f7 21       		.uleb128 0x21
 2502 01f8 34       		.uleb128 0x34
 2503 01f9 00       		.byte	0
 2504 01fa 03       		.uleb128 0x3
 2505 01fb 0E       		.uleb128 0xe
 2506 01fc 3A       		.uleb128 0x3a
 2507 01fd 0B       		.uleb128 0xb
 2508 01fe 3B       		.uleb128 0x3b
 2509 01ff 05       		.uleb128 0x5
 2510 0200 49       		.uleb128 0x49
 2511 0201 13       		.uleb128 0x13
 2512 0202 3F       		.uleb128 0x3f
 2513 0203 19       		.uleb128 0x19
 2514 0204 3C       		.uleb128 0x3c
 2515 0205 19       		.uleb128 0x19
 2516 0206 00       		.byte	0
 2517 0207 00       		.byte	0
 2518 0208 22       		.uleb128 0x22
 2519 0209 2E       		.uleb128 0x2e
 2520 020a 00       		.byte	0
 2521 020b 3F       		.uleb128 0x3f
 2522 020c 19       		.uleb128 0x19
 2523 020d 3C       		.uleb128 0x3c
 2524 020e 19       		.uleb128 0x19
 2525 020f 6E       		.uleb128 0x6e
 2526 0210 0E       		.uleb128 0xe
 2527 0211 03       		.uleb128 0x3
 2528 0212 0E       		.uleb128 0xe
 2529 0213 3A       		.uleb128 0x3a
 2530 0214 0B       		.uleb128 0xb
 2531 0215 3B       		.uleb128 0x3b
 2532 0216 05       		.uleb128 0x5
 2533 0217 00       		.byte	0
 2534 0218 00       		.byte	0
 2535 0219 23       		.uleb128 0x23
 2536 021a 2E       		.uleb128 0x2e
 2537 021b 00       		.byte	0
 2538 021c 3F       		.uleb128 0x3f
 2539 021d 19       		.uleb128 0x19
 2540 021e 3C       		.uleb128 0x3c
 2541 021f 19       		.uleb128 0x19
 2542 0220 6E       		.uleb128 0x6e
 2543 0221 0E       		.uleb128 0xe
 2544 0222 03       		.uleb128 0x3
 2545 0223 0E       		.uleb128 0xe
 2546 0224 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 69


 2547 0225 0B       		.uleb128 0xb
 2548 0226 3B       		.uleb128 0x3b
 2549 0227 0B       		.uleb128 0xb
 2550 0228 00       		.byte	0
 2551 0229 00       		.byte	0
 2552 022a 00       		.byte	0
 2553              		.section	.debug_loc,"",%progbits
 2554              	.Ldebug_loc0:
 2555              	.LLST0:
 2556 0000 10000000 		.4byte	.LVL1
 2557 0004 1F000000 		.4byte	.LVL2-1
 2558 0008 0100     		.2byte	0x1
 2559 000a 50       		.byte	0x50
 2560 000b 00000000 		.4byte	0
 2561 000f 00000000 		.4byte	0
 2562              	.LLST1:
 2563 0013 06000000 		.4byte	.LVL3
 2564 0017 15000000 		.4byte	.LVL4-1
 2565 001b 0100     		.2byte	0x1
 2566 001d 50       		.byte	0x50
 2567 001e 00000000 		.4byte	0
 2568 0022 00000000 		.4byte	0
 2569              	.LLST2:
 2570 0026 06000000 		.4byte	.LVL5
 2571 002a 13000000 		.4byte	.LVL6-1
 2572 002e 0100     		.2byte	0x1
 2573 0030 50       		.byte	0x50
 2574 0031 00000000 		.4byte	0
 2575 0035 00000000 		.4byte	0
 2576              	.LLST3:
 2577 0039 00000000 		.4byte	.LVL9
 2578 003d 07000000 		.4byte	.LVL10-1
 2579 0041 0100     		.2byte	0x1
 2580 0043 50       		.byte	0x50
 2581 0044 07000000 		.4byte	.LVL10-1
 2582 0048 24000000 		.4byte	.LFE8
 2583 004c 0400     		.2byte	0x4
 2584 004e F3       		.byte	0xf3
 2585 004f 01       		.uleb128 0x1
 2586 0050 50       		.byte	0x50
 2587 0051 9F       		.byte	0x9f
 2588 0052 00000000 		.4byte	0
 2589 0056 00000000 		.4byte	0
 2590              	.LLST4:
 2591 005a 08000000 		.4byte	.LVL10
 2592 005e 1B000000 		.4byte	.LVL11-1
 2593 0062 0100     		.2byte	0x1
 2594 0064 50       		.byte	0x50
 2595 0065 00000000 		.4byte	0
 2596 0069 00000000 		.4byte	0
 2597              	.LLST5:
 2598 006d 00000000 		.4byte	.LVL16
 2599 0071 0C000000 		.4byte	.LVL18
 2600 0075 0100     		.2byte	0x1
 2601 0077 50       		.byte	0x50
 2602 0078 0C000000 		.4byte	.LVL18
 2603 007c 28000000 		.4byte	.LFE15
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 70


 2604 0080 0400     		.2byte	0x4
 2605 0082 F3       		.byte	0xf3
 2606 0083 01       		.uleb128 0x1
 2607 0084 50       		.byte	0x50
 2608 0085 9F       		.byte	0x9f
 2609 0086 00000000 		.4byte	0
 2610 008a 00000000 		.4byte	0
 2611              	.LLST6:
 2612 008e 00000000 		.4byte	.LVL16
 2613 0092 0A000000 		.4byte	.LVL17
 2614 0096 0100     		.2byte	0x1
 2615 0098 51       		.byte	0x51
 2616 0099 0A000000 		.4byte	.LVL17
 2617 009d 28000000 		.4byte	.LFE15
 2618 00a1 0400     		.2byte	0x4
 2619 00a3 F3       		.byte	0xf3
 2620 00a4 01       		.uleb128 0x1
 2621 00a5 51       		.byte	0x51
 2622 00a6 9F       		.byte	0x9f
 2623 00a7 00000000 		.4byte	0
 2624 00ab 00000000 		.4byte	0
 2625              	.LLST7:
 2626 00af 12000000 		.4byte	.LVL19
 2627 00b3 1E000000 		.4byte	.LVL20
 2628 00b7 0100     		.2byte	0x1
 2629 00b9 50       		.byte	0x50
 2630 00ba 00000000 		.4byte	0
 2631 00be 00000000 		.4byte	0
 2632              	.LLST8:
 2633 00c2 00000000 		.4byte	.LVL21
 2634 00c6 0A000000 		.4byte	.LVL23
 2635 00ca 0100     		.2byte	0x1
 2636 00cc 50       		.byte	0x50
 2637 00cd 0A000000 		.4byte	.LVL23
 2638 00d1 1A000000 		.4byte	.LVL26
 2639 00d5 0400     		.2byte	0x4
 2640 00d7 F3       		.byte	0xf3
 2641 00d8 01       		.uleb128 0x1
 2642 00d9 50       		.byte	0x50
 2643 00da 9F       		.byte	0x9f
 2644 00db 1A000000 		.4byte	.LVL26
 2645 00df 1C000000 		.4byte	.LVL27
 2646 00e3 0100     		.2byte	0x1
 2647 00e5 50       		.byte	0x50
 2648 00e6 1C000000 		.4byte	.LVL27
 2649 00ea 28000000 		.4byte	.LFE16
 2650 00ee 0400     		.2byte	0x4
 2651 00f0 F3       		.byte	0xf3
 2652 00f1 01       		.uleb128 0x1
 2653 00f2 50       		.byte	0x50
 2654 00f3 9F       		.byte	0x9f
 2655 00f4 00000000 		.4byte	0
 2656 00f8 00000000 		.4byte	0
 2657              	.LLST9:
 2658 00fc 02000000 		.4byte	.LVL22
 2659 0100 18000000 		.4byte	.LVL25
 2660 0104 0200     		.2byte	0x2
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 71


 2661 0106 30       		.byte	0x30
 2662 0107 9F       		.byte	0x9f
 2663 0108 18000000 		.4byte	.LVL25
 2664 010c 1A000000 		.4byte	.LVL26
 2665 0110 0100     		.2byte	0x1
 2666 0112 50       		.byte	0x50
 2667 0113 1A000000 		.4byte	.LVL26
 2668 0117 1C000000 		.4byte	.LVL27
 2669 011b 0200     		.2byte	0x2
 2670 011d 30       		.byte	0x30
 2671 011e 9F       		.byte	0x9f
 2672 011f 1C000000 		.4byte	.LVL27
 2673 0123 28000000 		.4byte	.LFE16
 2674 0127 0100     		.2byte	0x1
 2675 0129 50       		.byte	0x50
 2676 012a 00000000 		.4byte	0
 2677 012e 00000000 		.4byte	0
 2678              	.LLST10:
 2679 0132 00000000 		.4byte	.LVL28
 2680 0136 06000000 		.4byte	.LVL29
 2681 013a 0100     		.2byte	0x1
 2682 013c 50       		.byte	0x50
 2683 013d 06000000 		.4byte	.LVL29
 2684 0141 14000000 		.4byte	.LFE17
 2685 0145 0400     		.2byte	0x4
 2686 0147 F3       		.byte	0xf3
 2687 0148 01       		.uleb128 0x1
 2688 0149 50       		.byte	0x50
 2689 014a 9F       		.byte	0x9f
 2690 014b 00000000 		.4byte	0
 2691 014f 00000000 		.4byte	0
 2692              	.LLST11:
 2693 0153 06000000 		.4byte	.LVL30
 2694 0157 0A000000 		.4byte	.LVL31
 2695 015b 0200     		.2byte	0x2
 2696 015d 30       		.byte	0x30
 2697 015e 9F       		.byte	0x9f
 2698 015f 0A000000 		.4byte	.LVL31
 2699 0163 2A000000 		.4byte	.LVL33
 2700 0167 0100     		.2byte	0x1
 2701 0169 54       		.byte	0x54
 2702 016a 36000000 		.4byte	.LVL34
 2703 016e 38000000 		.4byte	.LVL35
 2704 0172 0100     		.2byte	0x1
 2705 0174 55       		.byte	0x55
 2706 0175 38000000 		.4byte	.LVL35
 2707 0179 74000000 		.4byte	.LVL38
 2708 017d 0100     		.2byte	0x1
 2709 017f 54       		.byte	0x54
 2710 0180 74000000 		.4byte	.LVL38
 2711 0184 78000000 		.4byte	.LVL39
 2712 0188 0200     		.2byte	0x2
 2713 018a 30       		.byte	0x30
 2714 018b 9F       		.byte	0x9f
 2715 018c 78000000 		.4byte	.LVL39
 2716 0190 A8000000 		.4byte	.LVL42
 2717 0194 0100     		.2byte	0x1
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 72


 2718 0196 54       		.byte	0x54
 2719 0197 AA000000 		.4byte	.LVL43
 2720 019b BA000000 		.4byte	.LVL46
 2721 019f 0100     		.2byte	0x1
 2722 01a1 54       		.byte	0x54
 2723 01a2 00000000 		.4byte	0
 2724 01a6 00000000 		.4byte	0
 2725              	.LLST12:
 2726 01aa 40000000 		.4byte	.LVL36
 2727 01ae 57000000 		.4byte	.LVL37-1
 2728 01b2 0100     		.2byte	0x1
 2729 01b4 50       		.byte	0x50
 2730 01b5 7C000000 		.4byte	.LVL40
 2731 01b9 A5000000 		.4byte	.LVL41-1
 2732 01bd 0100     		.2byte	0x1
 2733 01bf 50       		.byte	0x50
 2734 01c0 00000000 		.4byte	0
 2735 01c4 00000000 		.4byte	0
 2736              	.LLST13:
 2737 01c8 00000000 		.4byte	.LVL49
 2738 01cc 02000000 		.4byte	.LVL50
 2739 01d0 0100     		.2byte	0x1
 2740 01d2 50       		.byte	0x50
 2741 01d3 02000000 		.4byte	.LVL50
 2742 01d7 10000000 		.4byte	.LFE18
 2743 01db 0400     		.2byte	0x4
 2744 01dd F3       		.byte	0xf3
 2745 01de 01       		.uleb128 0x1
 2746 01df 50       		.byte	0x50
 2747 01e0 9F       		.byte	0x9f
 2748 01e1 00000000 		.4byte	0
 2749 01e5 00000000 		.4byte	0
 2750              	.LLST14:
 2751 01e9 00000000 		.4byte	.LVL51
 2752 01ed 08000000 		.4byte	.LVL53
 2753 01f1 0100     		.2byte	0x1
 2754 01f3 50       		.byte	0x50
 2755 01f4 08000000 		.4byte	.LVL53
 2756 01f8 1C000000 		.4byte	.LVL56
 2757 01fc 0400     		.2byte	0x4
 2758 01fe F3       		.byte	0xf3
 2759 01ff 01       		.uleb128 0x1
 2760 0200 50       		.byte	0x50
 2761 0201 9F       		.byte	0x9f
 2762 0202 1C000000 		.4byte	.LVL56
 2763 0206 1E000000 		.4byte	.LVL57
 2764 020a 0100     		.2byte	0x1
 2765 020c 50       		.byte	0x50
 2766 020d 1E000000 		.4byte	.LVL57
 2767 0211 2C000000 		.4byte	.LFE19
 2768 0215 0400     		.2byte	0x4
 2769 0217 F3       		.byte	0xf3
 2770 0218 01       		.uleb128 0x1
 2771 0219 50       		.byte	0x50
 2772 021a 9F       		.byte	0x9f
 2773 021b 00000000 		.4byte	0
 2774 021f 00000000 		.4byte	0
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 73


 2775              	.LLST15:
 2776 0223 02000000 		.4byte	.LVL52
 2777 0227 1A000000 		.4byte	.LVL55
 2778 022b 0200     		.2byte	0x2
 2779 022d 30       		.byte	0x30
 2780 022e 9F       		.byte	0x9f
 2781 022f 1A000000 		.4byte	.LVL55
 2782 0233 1C000000 		.4byte	.LVL56
 2783 0237 0100     		.2byte	0x1
 2784 0239 50       		.byte	0x50
 2785 023a 1C000000 		.4byte	.LVL56
 2786 023e 22000000 		.4byte	.LVL58
 2787 0242 0200     		.2byte	0x2
 2788 0244 30       		.byte	0x30
 2789 0245 9F       		.byte	0x9f
 2790 0246 22000000 		.4byte	.LVL58
 2791 024a 2C000000 		.4byte	.LFE19
 2792 024e 0100     		.2byte	0x1
 2793 0250 50       		.byte	0x50
 2794 0251 00000000 		.4byte	0
 2795 0255 00000000 		.4byte	0
 2796              	.LLST16:
 2797 0259 00000000 		.4byte	.LVL59
 2798 025d 17000000 		.4byte	.LVL64-1
 2799 0261 0100     		.2byte	0x1
 2800 0263 50       		.byte	0x50
 2801 0264 17000000 		.4byte	.LVL64-1
 2802 0268 34000000 		.4byte	.LFE20
 2803 026c 0400     		.2byte	0x4
 2804 026e F3       		.byte	0xf3
 2805 026f 01       		.uleb128 0x1
 2806 0270 50       		.byte	0x50
 2807 0271 9F       		.byte	0x9f
 2808 0272 00000000 		.4byte	0
 2809 0276 00000000 		.4byte	0
 2810              	.LLST17:
 2811 027a 00000000 		.4byte	.LVL59
 2812 027e 0C000000 		.4byte	.LVL60
 2813 0282 0100     		.2byte	0x1
 2814 0284 51       		.byte	0x51
 2815 0285 0C000000 		.4byte	.LVL60
 2816 0289 34000000 		.4byte	.LFE20
 2817 028d 0400     		.2byte	0x4
 2818 028f F3       		.byte	0xf3
 2819 0290 01       		.uleb128 0x1
 2820 0291 51       		.byte	0x51
 2821 0292 9F       		.byte	0x9f
 2822 0293 00000000 		.4byte	0
 2823 0297 00000000 		.4byte	0
 2824              	.LLST18:
 2825 029b 00000000 		.4byte	.LVL59
 2826 029f 12000000 		.4byte	.LVL62
 2827 02a3 0100     		.2byte	0x1
 2828 02a5 52       		.byte	0x52
 2829 02a6 12000000 		.4byte	.LVL62
 2830 02aa 34000000 		.4byte	.LFE20
 2831 02ae 0400     		.2byte	0x4
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 74


 2832 02b0 F3       		.byte	0xf3
 2833 02b1 01       		.uleb128 0x1
 2834 02b2 52       		.byte	0x52
 2835 02b3 9F       		.byte	0x9f
 2836 02b4 00000000 		.4byte	0
 2837 02b8 00000000 		.4byte	0
 2838              	.LLST19:
 2839 02bc 18000000 		.4byte	.LVL64
 2840 02c0 27000000 		.4byte	.LVL65-1
 2841 02c4 0100     		.2byte	0x1
 2842 02c6 50       		.byte	0x50
 2843 02c7 00000000 		.4byte	0
 2844 02cb 00000000 		.4byte	0
 2845              	.LLST20:
 2846 02cf 14000000 		.4byte	.LVL63
 2847 02d3 28000000 		.4byte	.LVL65
 2848 02d7 0100     		.2byte	0x1
 2849 02d9 56       		.byte	0x56
 2850 02da 00000000 		.4byte	0
 2851 02de 00000000 		.4byte	0
 2852              	.LLST21:
 2853 02e2 0E000000 		.4byte	.LVL61
 2854 02e6 28000000 		.4byte	.LVL65
 2855 02ea 0100     		.2byte	0x1
 2856 02ec 55       		.byte	0x55
 2857 02ed 00000000 		.4byte	0
 2858 02f1 00000000 		.4byte	0
 2859              	.LLST22:
 2860 02f5 00000000 		.4byte	.LVL66
 2861 02f9 0E000000 		.4byte	.LVL67
 2862 02fd 0100     		.2byte	0x1
 2863 02ff 50       		.byte	0x50
 2864 0300 0E000000 		.4byte	.LVL67
 2865 0304 60000000 		.4byte	.LFE21
 2866 0308 0400     		.2byte	0x4
 2867 030a F3       		.byte	0xf3
 2868 030b 01       		.uleb128 0x1
 2869 030c 50       		.byte	0x50
 2870 030d 9F       		.byte	0x9f
 2871 030e 00000000 		.4byte	0
 2872 0312 00000000 		.4byte	0
 2873              	.LLST23:
 2874 0316 00000000 		.4byte	.LVL66
 2875 031a 14000000 		.4byte	.LVL68
 2876 031e 0100     		.2byte	0x1
 2877 0320 51       		.byte	0x51
 2878 0321 14000000 		.4byte	.LVL68
 2879 0325 60000000 		.4byte	.LFE21
 2880 0329 0400     		.2byte	0x4
 2881 032b F3       		.byte	0xf3
 2882 032c 01       		.uleb128 0x1
 2883 032d 51       		.byte	0x51
 2884 032e 9F       		.byte	0x9f
 2885 032f 00000000 		.4byte	0
 2886 0333 00000000 		.4byte	0
 2887              	.LLST24:
 2888 0337 00000000 		.4byte	.LVL66
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 75


 2889 033b 17000000 		.4byte	.LVL69-1
 2890 033f 0100     		.2byte	0x1
 2891 0341 52       		.byte	0x52
 2892 0342 17000000 		.4byte	.LVL69-1
 2893 0346 60000000 		.4byte	.LFE21
 2894 034a 0400     		.2byte	0x4
 2895 034c F3       		.byte	0xf3
 2896 034d 01       		.uleb128 0x1
 2897 034e 52       		.byte	0x52
 2898 034f 9F       		.byte	0x9f
 2899 0350 00000000 		.4byte	0
 2900 0354 00000000 		.4byte	0
 2901              	.LLST25:
 2902 0358 00000000 		.4byte	.LVL66
 2903 035c 17000000 		.4byte	.LVL69-1
 2904 0360 0100     		.2byte	0x1
 2905 0362 53       		.byte	0x53
 2906 0363 17000000 		.4byte	.LVL69-1
 2907 0367 60000000 		.4byte	.LFE21
 2908 036b 0400     		.2byte	0x4
 2909 036d F3       		.byte	0xf3
 2910 036e 01       		.uleb128 0x1
 2911 036f 53       		.byte	0x53
 2912 0370 9F       		.byte	0x9f
 2913 0371 00000000 		.4byte	0
 2914 0375 00000000 		.4byte	0
 2915              	.LLST26:
 2916 0379 3A000000 		.4byte	.LVL75
 2917 037d 4D000000 		.4byte	.LVL76-1
 2918 0381 0100     		.2byte	0x1
 2919 0383 50       		.byte	0x50
 2920 0384 00000000 		.4byte	0
 2921 0388 00000000 		.4byte	0
 2922              	.LLST27:
 2923 038c 1A000000 		.4byte	.LVL70
 2924 0390 4E000000 		.4byte	.LVL76
 2925 0394 0100     		.2byte	0x1
 2926 0396 57       		.byte	0x57
 2927 0397 00000000 		.4byte	0
 2928 039b 00000000 		.4byte	0
 2929              	.LLST28:
 2930 039f 2C000000 		.4byte	.LVL72
 2931 03a3 4E000000 		.4byte	.LVL76
 2932 03a7 0100     		.2byte	0x1
 2933 03a9 56       		.byte	0x56
 2934 03aa 00000000 		.4byte	0
 2935 03ae 00000000 		.4byte	0
 2936              	.LLST29:
 2937 03b2 36000000 		.4byte	.LVL74
 2938 03b6 4E000000 		.4byte	.LVL76
 2939 03ba 0100     		.2byte	0x1
 2940 03bc 55       		.byte	0x55
 2941 03bd 00000000 		.4byte	0
 2942 03c1 00000000 		.4byte	0
 2943              		.section	.debug_aranges,"",%progbits
 2944 0000 B4000000 		.4byte	0xb4
 2945 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 76


 2946 0006 00000000 		.4byte	.Ldebug_info0
 2947 000a 04       		.byte	0x4
 2948 000b 00       		.byte	0
 2949 000c 0000     		.2byte	0
 2950 000e 0000     		.2byte	0
 2951 0010 00000000 		.4byte	.LFB5
 2952 0014 2C000000 		.4byte	.LFE5-.LFB5
 2953 0018 00000000 		.4byte	.LFB6
 2954 001c 1C000000 		.4byte	.LFE6-.LFB6
 2955 0020 00000000 		.4byte	.LFB7
 2956 0024 1C000000 		.4byte	.LFE7-.LFB7
 2957 0028 00000000 		.4byte	.LFB3
 2958 002c 18000000 		.4byte	.LFE3-.LFB3
 2959 0030 00000000 		.4byte	.LFB8
 2960 0034 24000000 		.4byte	.LFE8-.LFB8
 2961 0038 00000000 		.4byte	.LFB9
 2962 003c 10000000 		.4byte	.LFE9-.LFB9
 2963 0040 00000000 		.4byte	.LFB10
 2964 0044 0C000000 		.4byte	.LFE10-.LFB10
 2965 0048 00000000 		.4byte	.LFB11
 2966 004c 0C000000 		.4byte	.LFE11-.LFB11
 2967 0050 00000000 		.4byte	.LFB12
 2968 0054 10000000 		.4byte	.LFE12-.LFB12
 2969 0058 00000000 		.4byte	.LFB13
 2970 005c 1C000000 		.4byte	.LFE13-.LFB13
 2971 0060 00000000 		.4byte	.LFB14
 2972 0064 10000000 		.4byte	.LFE14-.LFB14
 2973 0068 00000000 		.4byte	.LFB15
 2974 006c 28000000 		.4byte	.LFE15-.LFB15
 2975 0070 00000000 		.4byte	.LFB16
 2976 0074 28000000 		.4byte	.LFE16-.LFB16
 2977 0078 00000000 		.4byte	.LFB17
 2978 007c 14000000 		.4byte	.LFE17-.LFB17
 2979 0080 00000000 		.4byte	.LFB4
 2980 0084 FC000000 		.4byte	.LFE4-.LFB4
 2981 0088 00000000 		.4byte	.LFB2
 2982 008c 20000000 		.4byte	.LFE2-.LFB2
 2983 0090 00000000 		.4byte	.LFB18
 2984 0094 10000000 		.4byte	.LFE18-.LFB18
 2985 0098 00000000 		.4byte	.LFB19
 2986 009c 2C000000 		.4byte	.LFE19-.LFB19
 2987 00a0 00000000 		.4byte	.LFB20
 2988 00a4 34000000 		.4byte	.LFE20-.LFB20
 2989 00a8 00000000 		.4byte	.LFB21
 2990 00ac 60000000 		.4byte	.LFE21-.LFB21
 2991 00b0 00000000 		.4byte	0
 2992 00b4 00000000 		.4byte	0
 2993              		.section	.debug_ranges,"",%progbits
 2994              	.Ldebug_ranges0:
 2995 0000 00000000 		.4byte	.LFB5
 2996 0004 2C000000 		.4byte	.LFE5
 2997 0008 00000000 		.4byte	.LFB6
 2998 000c 1C000000 		.4byte	.LFE6
 2999 0010 00000000 		.4byte	.LFB7
 3000 0014 1C000000 		.4byte	.LFE7
 3001 0018 00000000 		.4byte	.LFB3
 3002 001c 18000000 		.4byte	.LFE3
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 77


 3003 0020 00000000 		.4byte	.LFB8
 3004 0024 24000000 		.4byte	.LFE8
 3005 0028 00000000 		.4byte	.LFB9
 3006 002c 10000000 		.4byte	.LFE9
 3007 0030 00000000 		.4byte	.LFB10
 3008 0034 0C000000 		.4byte	.LFE10
 3009 0038 00000000 		.4byte	.LFB11
 3010 003c 0C000000 		.4byte	.LFE11
 3011 0040 00000000 		.4byte	.LFB12
 3012 0044 10000000 		.4byte	.LFE12
 3013 0048 00000000 		.4byte	.LFB13
 3014 004c 1C000000 		.4byte	.LFE13
 3015 0050 00000000 		.4byte	.LFB14
 3016 0054 10000000 		.4byte	.LFE14
 3017 0058 00000000 		.4byte	.LFB15
 3018 005c 28000000 		.4byte	.LFE15
 3019 0060 00000000 		.4byte	.LFB16
 3020 0064 28000000 		.4byte	.LFE16
 3021 0068 00000000 		.4byte	.LFB17
 3022 006c 14000000 		.4byte	.LFE17
 3023 0070 00000000 		.4byte	.LFB4
 3024 0074 FC000000 		.4byte	.LFE4
 3025 0078 00000000 		.4byte	.LFB2
 3026 007c 20000000 		.4byte	.LFE2
 3027 0080 00000000 		.4byte	.LFB18
 3028 0084 10000000 		.4byte	.LFE18
 3029 0088 00000000 		.4byte	.LFB19
 3030 008c 2C000000 		.4byte	.LFE19
 3031 0090 00000000 		.4byte	.LFB20
 3032 0094 34000000 		.4byte	.LFE20
 3033 0098 00000000 		.4byte	.LFB21
 3034 009c 60000000 		.4byte	.LFE21
 3035 00a0 00000000 		.4byte	0
 3036 00a4 00000000 		.4byte	0
 3037              		.section	.debug_line,"",%progbits
 3038              	.Ldebug_line0:
 3039 0000 D8020000 		.section	.debug_str,"MS",%progbits,1
 3039      0200BA00 
 3039      00000201 
 3039      FB0E0D00 
 3039      01010101 
 3040              	.LASF61:
 3041 0000 63757272 		.ascii	"currentSpeed\000"
 3041      656E7453 
 3041      70656564 
 3041      00
 3042              	.LASF22:
 3043 000d 61637475 		.ascii	"actualPeriod\000"
 3043      616C5065 
 3043      72696F64 
 3043      00
 3044              	.LASF10:
 3045 001a 75696E74 		.ascii	"uint16\000"
 3045      313600
 3046              	.LASF28:
 3047 0021 696E6974 		.ascii	"initRpm\000"
 3047      52706D00 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 78


 3048              	.LASF66:
 3049 0029 46616E43 		.ascii	"FanController_GetActualSpeed\000"
 3049      6F6E7472 
 3049      6F6C6C65 
 3049      725F4765 
 3049      74416374 
 3050              	.LASF94:
 3051 0046 43794578 		.ascii	"CyExitCriticalSection\000"
 3051      69744372 
 3051      69746963 
 3051      616C5365 
 3051      6374696F 
 3052              	.LASF54:
 3053 005c 64757479 		.ascii	"dutyCycle\000"
 3053      4379636C 
 3053      6500
 3054              	.LASF36:
 3055 0066 46616E43 		.ascii	"FanController_Enable\000"
 3055      6F6E7472 
 3055      6F6C6C65 
 3055      725F456E 
 3055      61626C65 
 3056              	.LASF64:
 3057 007b 46616E43 		.ascii	"FanController_Start\000"
 3057      6F6E7472 
 3057      6F6C6C65 
 3057      725F5374 
 3057      61727400 
 3058              	.LASF47:
 3059 008f 46616E43 		.ascii	"FanController_GetAlertMask\000"
 3059      6F6E7472 
 3059      6F6C6C65 
 3059      725F4765 
 3059      74416C65 
 3060              	.LASF31:
 3061 00aa 70776D53 		.ascii	"pwmSetDutyReg\000"
 3061      65744475 
 3061      74795265 
 3061      6700
 3062              	.LASF77:
 3063 00b8 746D7041 		.ascii	"tmpA3\000"
 3063      3300
 3064              	.LASF99:
 3065 00be 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3065      43313120 
 3065      352E342E 
 3065      31203230 
 3065      31363036 
 3066 00f1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3066      20726576 
 3066      6973696F 
 3066      6E203233 
 3066      37373135 
 3067 0124 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3067      66756E63 
 3067      74696F6E 
 3067      2D736563 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 79


 3067      74696F6E 
 3068              	.LASF96:
 3069 014c 46616E43 		.ascii	"FanController_FW_PWM1_Init\000"
 3069      6F6E7472 
 3069      6F6C6C65 
 3069      725F4657 
 3069      5F50574D 
 3070              	.LASF7:
 3071 0167 6C6F6E67 		.ascii	"long long unsigned int\000"
 3071      206C6F6E 
 3071      6720756E 
 3071      7369676E 
 3071      65642069 
 3072              	.LASF60:
 3073 017e 6F766572 		.ascii	"overrideDuty\000"
 3073      72696465 
 3073      44757479 
 3073      00
 3074              	.LASF97:
 3075 018b 46616E43 		.ascii	"FanController_DataSend_StartEx\000"
 3075      6F6E7472 
 3075      6F6C6C65 
 3075      725F4461 
 3075      74615365 
 3076              	.LASF33:
 3077 01aa 70776D50 		.ascii	"pwmPeriodReg\000"
 3077      6572696F 
 3077      64526567 
 3077      00
 3078              	.LASF6:
 3079 01b7 6C6F6E67 		.ascii	"long long int\000"
 3079      206C6F6E 
 3079      6720696E 
 3079      7400
 3080              	.LASF0:
 3081 01c5 7369676E 		.ascii	"signed char\000"
 3081      65642063 
 3081      68617200 
 3082              	.LASF55:
 3083 01d1 6E657743 		.ascii	"newCompare\000"
 3083      6F6D7061 
 3083      726500
 3084              	.LASF73:
 3085 01dc 746D704F 		.ascii	"tmpOutH\000"
 3085      75744800 
 3086              	.LASF38:
 3087 01e4 696E7465 		.ascii	"interruptState\000"
 3087      72727570 
 3087      74537461 
 3087      746500
 3088              	.LASF13:
 3089 01f3 696E7433 		.ascii	"int32\000"
 3089      3200
 3090              	.LASF4:
 3091 01f9 6C6F6E67 		.ascii	"long int\000"
 3091      20696E74 
 3091      00
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 80


 3092              	.LASF71:
 3093 0202 7361744C 		.ascii	"satL\000"
 3093      00
 3094              	.LASF18:
 3095 0207 72656731 		.ascii	"reg16\000"
 3095      3600
 3096              	.LASF78:
 3097 020d 46616E43 		.ascii	"FanController_fanPwmInitRegs\000"
 3097      6F6E7472 
 3097      6F6C6C65 
 3097      725F6661 
 3097      6E50776D 
 3098              	.LASF9:
 3099 022a 75696E74 		.ascii	"uint8\000"
 3099      3800
 3100              	.LASF101:
 3101 0230 433A5C55 		.ascii	"C:\\Users\\Ade0n\\Desktop\\PR\\CyberPong\\CyberPong"
 3101      73657273 
 3101      5C416465 
 3101      306E5C44 
 3101      65736B74 
 3102 025d 2E637964 		.ascii	".cydsn\000"
 3102      736E00
 3103              	.LASF43:
 3104 0264 616C6572 		.ascii	"alertMode\000"
 3104      744D6F64 
 3104      6500
 3105              	.LASF59:
 3106 026e 66616E4E 		.ascii	"fanNumber\000"
 3106      756D6265 
 3106      7200
 3107              	.LASF75:
 3108 0278 746D7041 		.ascii	"tmpA1\000"
 3108      3100
 3109              	.LASF11:
 3110 027e 75696E74 		.ascii	"uint32\000"
 3110      333200
 3111              	.LASF41:
 3112 0285 46616E43 		.ascii	"FanController_SetAlertMode\000"
 3112      6F6E7472 
 3112      6F6C6C65 
 3112      725F5365 
 3112      74416C65 
 3113              	.LASF37:
 3114 02a0 46616E43 		.ascii	"FanController_EnableAlert\000"
 3114      6F6E7472 
 3114      6F6C6C65 
 3114      725F456E 
 3114      61626C65 
 3115              	.LASF32:
 3116 02ba 46616E43 		.ascii	"FanController_fanDriverRegsStruct\000"
 3116      6F6E7472 
 3116      6F6C6C65 
 3116      725F6661 
 3116      6E447269 
 3117              	.LASF8:
 3118 02dc 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 81


 3118      676E6564 
 3118      20696E74 
 3118      00
 3119              	.LASF27:
 3120 02e9 64757479 		.ascii	"dutyRpmSlope\000"
 3120      52706D53 
 3120      6C6F7065 
 3120      00
 3121              	.LASF5:
 3122 02f6 6C6F6E67 		.ascii	"long unsigned int\000"
 3122      20756E73 
 3122      69676E65 
 3122      6420696E 
 3122      7400
 3123              	.LASF39:
 3124 0308 46616E43 		.ascii	"FanController_DisableAlert\000"
 3124      6F6E7472 
 3124      6F6C6C65 
 3124      725F4469 
 3124      7361626C 
 3125              	.LASF92:
 3126 0323 46616E43 		.ascii	"FanController_FW_PWM1_Enable\000"
 3126      6F6E7472 
 3126      6F6C6C65 
 3126      725F4657 
 3126      5F50574D 
 3127              	.LASF93:
 3128 0340 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3128      74657243 
 3128      72697469 
 3128      63616C53 
 3128      65637469 
 3129              	.LASF90:
 3130 0357 46616E43 		.ascii	"FanController_alertMask\000"
 3130      6F6E7472 
 3130      6F6C6C65 
 3130      725F616C 
 3130      6572744D 
 3131              	.LASF82:
 3132 036f 46616E43 		.ascii	"FanController_pidA1\000"
 3132      6F6E7472 
 3132      6F6C6C65 
 3132      725F7069 
 3132      64413100 
 3133              	.LASF83:
 3134 0383 46616E43 		.ascii	"FanController_pidA2\000"
 3134      6F6E7472 
 3134      6F6C6C65 
 3134      725F7069 
 3134      64413200 
 3135              	.LASF84:
 3136 0397 46616E43 		.ascii	"FanController_pidA3\000"
 3136      6F6E7472 
 3136      6F6C6C65 
 3136      725F7069 
 3136      64413300 
 3137              	.LASF3:
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 82


 3138 03ab 73686F72 		.ascii	"short unsigned int\000"
 3138      7420756E 
 3138      7369676E 
 3138      65642069 
 3138      6E7400
 3139              	.LASF26:
 3140 03be 64757479 		.ascii	"dutyB\000"
 3140      4200
 3141              	.LASF52:
 3142 03c4 46616E43 		.ascii	"FanController_SetDutyCycle\000"
 3142      6F6E7472 
 3142      6F6C6C65 
 3142      725F5365 
 3142      74447574 
 3143              	.LASF49:
 3144 03df 7374616C 		.ascii	"stallStatus\000"
 3144      6C537461 
 3144      74757300 
 3145              	.LASF63:
 3146 03eb 636F756E 		.ascii	"counti\000"
 3146      746900
 3147              	.LASF53:
 3148 03f2 66616E4F 		.ascii	"fanOrBankNumber\000"
 3148      7242616E 
 3148      6B4E756D 
 3148      62657200 
 3149              	.LASF65:
 3150 0402 46616E43 		.ascii	"FanController_GetDesiredSpeed\000"
 3150      6F6E7472 
 3150      6F6C6C65 
 3150      725F4765 
 3150      74446573 
 3151              	.LASF23:
 3152 0420 72706D41 		.ascii	"rpmA\000"
 3152      00
 3153              	.LASF24:
 3154 0425 72706D42 		.ascii	"rpmB\000"
 3154      00
 3155              	.LASF76:
 3156 042a 746D7041 		.ascii	"tmpA2\000"
 3156      3200
 3157              	.LASF19:
 3158 0430 72656733 		.ascii	"reg32\000"
 3158      3200
 3159              	.LASF88:
 3160 0436 46616E43 		.ascii	"FanController_fanDriverRegs\000"
 3160      6F6E7472 
 3160      6F6C6C65 
 3160      725F6661 
 3160      6E447269 
 3161              	.LASF29:
 3162 0452 696E6974 		.ascii	"initDuty\000"
 3162      44757479 
 3162      00
 3163              	.LASF25:
 3164 045b 64757479 		.ascii	"dutyA\000"
 3164      4100
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 83


 3165              	.LASF20:
 3166 0461 73697A65 		.ascii	"sizetype\000"
 3166      74797065 
 3166      00
 3167              	.LASF35:
 3168 046a 6C6F6E67 		.ascii	"long double\000"
 3168      20646F75 
 3168      626C6500 
 3169              	.LASF34:
 3170 0476 46616E43 		.ascii	"FanController_fanPwmInitRegsStruct\000"
 3170      6F6E7472 
 3170      6F6C6C65 
 3170      725F6661 
 3170      6E50776D 
 3171              	.LASF21:
 3172 0499 46616E43 		.ascii	"FanController_fanControlStruct\000"
 3172      6F6E7472 
 3172      6F6C6C65 
 3172      725F6661 
 3172      6E436F6E 
 3173              	.LASF40:
 3174 04b8 46616E43 		.ascii	"FanController_Stop\000"
 3174      6F6E7472 
 3174      6F6C6C65 
 3174      725F5374 
 3174      6F7000
 3175              	.LASF45:
 3176 04cb 46616E43 		.ascii	"FanController_GetAlertMode\000"
 3176      6F6E7472 
 3176      6F6C6C65 
 3176      725F4765 
 3176      74416C65 
 3177              	.LASF86:
 3178 04e6 46616E43 		.ascii	"FanController_outputSatH\000"
 3178      6F6E7472 
 3178      6F6C6C65 
 3178      725F6F75 
 3178      74707574 
 3179              	.LASF69:
 3180 04ff 66616E4E 		.ascii	"fanNum\000"
 3180      756D00
 3181              	.LASF85:
 3182 0506 46616E43 		.ascii	"FanController_outputSatL\000"
 3182      6F6E7472 
 3182      6F6C6C65 
 3182      725F6F75 
 3182      74707574 
 3183              	.LASF100:
 3184 051f 47656E65 		.ascii	"Generated_Source\\PSoC4\\FanController.c\000"
 3184      72617465 
 3184      645F536F 
 3184      75726365 
 3184      5C50536F 
 3185              	.LASF30:
 3186 0546 46616E43 		.ascii	"FanController_fanPropertiesStruct\000"
 3186      6F6E7472 
 3186      6F6C6C65 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 84


 3186      725F6661 
 3186      6E50726F 
 3187              	.LASF79:
 3188 0568 46616E43 		.ascii	"FanController_initVar\000"
 3188      6F6E7472 
 3188      6F6C6C65 
 3188      725F696E 
 3188      69745661 
 3189              	.LASF81:
 3190 057e 46616E43 		.ascii	"FanController_desiredFansSpeed\000"
 3190      6F6E7472 
 3190      6F6C6C65 
 3190      725F6465 
 3190      73697265 
 3191              	.LASF14:
 3192 059d 666C6F61 		.ascii	"float\000"
 3192      7400
 3193              	.LASF46:
 3194 05a3 46616E43 		.ascii	"FanController_GetAlertSource\000"
 3194      6F6E7472 
 3194      6F6C6C65 
 3194      725F4765 
 3194      74416C65 
 3195              	.LASF17:
 3196 05c0 72656738 		.ascii	"reg8\000"
 3196      00
 3197              	.LASF1:
 3198 05c5 756E7369 		.ascii	"unsigned char\000"
 3198      676E6564 
 3198      20636861 
 3198      7200
 3199              	.LASF2:
 3200 05d3 73686F72 		.ascii	"short int\000"
 3200      7420696E 
 3200      7400
 3201              	.LASF91:
 3202 05dd 46616E43 		.ascii	"FanController_stallStatus\000"
 3202      6F6E7472 
 3202      6F6C6C65 
 3202      725F7374 
 3202      616C6C53 
 3203              	.LASF95:
 3204 05f7 46616E43 		.ascii	"FanController_FW_PWM1_Stop\000"
 3204      6F6E7472 
 3204      6F6C6C65 
 3204      725F4657 
 3204      5F50574D 
 3205              	.LASF48:
 3206 0612 46616E43 		.ascii	"FanController_GetFanStallStatus\000"
 3206      6F6E7472 
 3206      6F6C6C65 
 3206      725F4765 
 3206      7446616E 
 3207              	.LASF51:
 3208 0632 73706565 		.ascii	"speedStatus\000"
 3208      64537461 
 3208      74757300 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 85


 3209              	.LASF68:
 3210 063e 46616E43 		.ascii	"FanController_SetSaturation\000"
 3210      6F6E7472 
 3210      6F6C6C65 
 3210      725F5365 
 3210      74536174 
 3211              	.LASF72:
 3212 065a 746D704F 		.ascii	"tmpOutL\000"
 3212      75744C00 
 3213              	.LASF44:
 3214 0662 616C6572 		.ascii	"alertMask\000"
 3214      744D6173 
 3214      6B00
 3215              	.LASF16:
 3216 066c 63686172 		.ascii	"char\000"
 3216      00
 3217              	.LASF57:
 3218 0671 64757943 		.ascii	"duyCycle\000"
 3218      79636C65 
 3218      00
 3219              	.LASF74:
 3220 067a 46616E43 		.ascii	"FanController_SetPID\000"
 3220      6F6E7472 
 3220      6F6C6C65 
 3220      725F5365 
 3220      74504944 
 3221              	.LASF89:
 3222 068f 46616E43 		.ascii	"FanController_fanProperties\000"
 3222      6F6E7472 
 3222      6F6C6C65 
 3222      725F6661 
 3222      6E50726F 
 3223              	.LASF42:
 3224 06ab 46616E43 		.ascii	"FanController_SetAlertMask\000"
 3224      6F6E7472 
 3224      6F6C6C65 
 3224      725F5365 
 3224      74416C65 
 3225              	.LASF98:
 3226 06c6 46616E43 		.ascii	"FanController_PID_ISR_StartEx\000"
 3226      6F6E7472 
 3226      6F6C6C65 
 3226      725F5049 
 3226      445F4953 
 3227              	.LASF67:
 3228 06e4 61637475 		.ascii	"actualSpeed\000"
 3228      616C5370 
 3228      65656400 
 3229              	.LASF56:
 3230 06f0 46616E43 		.ascii	"FanController_GetDutyCycle\000"
 3230      6F6E7472 
 3230      6F6C6C65 
 3230      725F4765 
 3230      74447574 
 3231              	.LASF80:
 3232 070b 46616E43 		.ascii	"FanController_fanControl\000"
 3232      6F6E7472 
ARM GAS  C:\Users\Ade0n\AppData\Local\Temp\cclUVx53.s 			page 86


 3232      6F6C6C65 
 3232      725F6661 
 3232      6E436F6E 
 3233              	.LASF12:
 3234 0724 696E7431 		.ascii	"int16\000"
 3234      3600
 3235              	.LASF62:
 3236 072a 46616E43 		.ascii	"FanController_Init\000"
 3236      6F6E7472 
 3236      6F6C6C65 
 3236      725F496E 
 3236      697400
 3237              	.LASF87:
 3238 073d 46616E43 		.ascii	"FanController_speedStatus\000"
 3238      6F6E7472 
 3238      6F6C6C65 
 3238      725F7370 
 3238      65656453 
 3239              	.LASF50:
 3240 0757 46616E43 		.ascii	"FanController_GetFanSpeedStatus\000"
 3240      6F6E7472 
 3240      6F6C6C65 
 3240      725F4765 
 3240      7446616E 
 3241              	.LASF15:
 3242 0777 646F7562 		.ascii	"double\000"
 3242      6C6500
 3243              	.LASF70:
 3244 077e 73617448 		.ascii	"satH\000"
 3244      00
 3245              	.LASF58:
 3246 0783 46616E43 		.ascii	"FanController_SetDesiredSpeed\000"
 3246      6F6E7472 
 3246      6F6C6C65 
 3246      725F5365 
 3246      74446573 
 3247              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
